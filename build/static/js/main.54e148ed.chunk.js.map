{"version":3,"sources":["components/GoogleLogin/index.js","components/FbLogin.js","components/AddYoursLogin/index.js","components/Footer.js","components/Login.js","components/NavLogin.js","components/Search.js","components/OrderIcon.js","components/CNotif.js","components/NavLoginPost.js","components/Navbar.js","pages/Landing/index.js","pages/Homepage/index.js","images/artworks/art1.png","pages/SingleArtist/index.js","pages/ArtistReg/index.js","components/RegisterFB/index.js","components/RegisterGmail/index.js","pages/ArtGalReg/index.js","pages/UserReg/index.js","components/UploadMult.js","pages/UploadWork/index.js","components/Notif.js","components/Cart.js","components/AddToBag.js","components/ViewRoom.js","components/ATLogin/index.js","components/CartLogin/index.js","components/FollowLogin/index.js","pages/SingleArt/index.js","components/ArtworkFilter.js","pages/Artworks/index.js","pages/Artists/index.js","pages/CProfile/index.js","components/OrderDetails.js","components/Feedback/index.js","components/OrderTab.js","pages/CProfileEdit/index.js","pages/Order/index.js","pages/RegVerify/index.js","pages/SubmitArt/index.js","pages/ShopByPrice/index.js","pages/ShopByCategory/index.js","pages/MyLists/index.js","pages/Onsale/index.js","admin/AdminLogin.js","admin/sections/AddArtist.js","admin/sections/ArtistTable.js","admin/sections/DeactivatedArtist/index.js","admin/sections/PendingArtistTable.js","admin/sections/ArtistsTab/index.js","admin/ArtistTab.js","admin/sections/AddArtwork.js","admin/sections/ArchivedArtworks/index.js","admin/sections/ArtworkTable.js","admin/sections/PendingArtworkTable.js","admin/sections/ArtworkTab/index.js","admin/ArtworkTab.js","admin/sections/AddCat.js","admin/sections/EditCat.js","admin/sections/EditPrintSize/index.js","admin/sections/EditStyle.js","admin/sections/CatTable.js","admin/CategoryTab.js","admin/DashCards/index.js","admin/sections/DownloadImage.js","admin/sections/PendingOrderTable.js","admin/Dashboard.js","admin/sections/UserFeedback/index.js","admin/FeedbackTab.js","admin/sections/CancelledOrders/index.js","admin/sections/CompletedOrder.js","admin/sections/OrderTable.js","admin/sections/OrderTab/index.js","admin/OrdersTab.js","admin/sections/AccountSettings/index.js","admin/sections/Notif.js","admin/sections/SocialShares/index.js","admin/SharesTab.js","admin/sections/AddUser.js","admin/sections/CustomerTable.js","admin/sections/DeactivatedAccount/index.js","admin/sections/UsersTab/index.js","admin/UserTab.js","admin/Admin.js","printingpartner/PartnerLogin.js","printingpartner/sections/CCancelOrder.js","printingpartner/CancelOrdertab.js","printingpartner/sections/CCompletedOrder.js","printingpartner/CompletedOrderTab.js","printingpartner/DashCards/index.js","printingpartner/sections/COrderDeli.js","printingpartner/sections/CPendingOrders.js","printingpartner/sections/OngoingOrders/index.js","printingpartner/Dashboard.js","printingpartner/MessageTab.js","printingpartner/OrderDeliverytab.js","printingpartner/sections/Printing/index.js","printingpartner/PrintingTab/index.js","printingpartner/sections/AccountSetting/index.js","printingpartner/sections/Notif.js","printingpartner/PrintingPartner.js","ArtistPage/AccountSetting/index.js","ArtistPage/ArtworkManagement/ActiveArtworks/index.js","ArtistPage/ArtworkManagement/AddArtwork/index.js","ArtistPage/ArtworkManagement/ArchivedArtworks/index.js","ArtistPage/ArtworkManagement/PendingArtwork/index.js","ArtistPage/ArtworkManagement/index.js","ArtistPage/Earnings/DownloadImage/index.js","ArtistPage/Earnings/index.js","ArtistPage/Notification/index.js","ArtistPage/DCards/index.js","ArtistPage/Profile/index.js","ArtistPage/index.js","components/ForgotPass/index.js","models/Model.js","models/Account.js","models/Artwork.js","models/Cart.js","models/Categories.js","models/Order.js","models/Style.js","models/User.js","models/PrintSize.js","models/Notif.js","models/MyLists.js","models/Feedback.js","models/UserFollow.js","models/ArtShares.js","stores/StartingStore.js","stores/Api.js","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["GmailLogin","state","isLoggedIn","googleID","name","email","picture","responseGoogle","response","props","startingStore","account","loginGoogle","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","undefined","setState","profileObj","googleId","givenName","imageUrl","setProperty","then","res","mydata","JSON","parse","sessionStorage","getItem","setTimeout","message","loading","error","history","push","accEmailAddress","getAccounts","this","googleContent","clientId","buttonText","onSuccess","onFailure","cookiePolicy","icon","Component","withRouter","inject","observer","FbLogin","userID","responseFacebook","loginFB","data","url","success","componentClicked","console","log","fbContent","style","width","margin","background","padding","textAlign","marginBottom","src","alt","fontSize","appId","autoLoad","cssClass","fields","onClick","disableMobileRedirect","callback","className","color","Transition","React","forwardRef","ref","Slide","direction","Login","modal1","open","verify","newpass","confpass","toggle","nr","modalNumber","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","loginAccount","changeHandler","value","editAccount","listOfUsers","btn","login","isOpen","centered","onSubmit","type","label","required","onChange","password","float","id","htmlFor","marginTop","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","contact","filter","acc","accContact","length","disabled","e","DialogActions","Button","getuser","map","_id","modal14","ChangePass","backgroundColor","Footer","href","moment","format","getFollow","NavLogin","Search","modal","suggestions","getAllArtworks","listOfArtworks","pArtworks","art","artworkStatus","artworks","artworkDB","artworkID","title","artName","artist","artistName","img","artworkImg","year","artworkDateCreated","theme","artTheme","languages","row","thme","getSuggestions","inputValue","trim","toLowerCase","inputLength","lang","slice","toLocaleLowerCase","split","join","inputProps","placeholder","newValue","filArt","filArtist","searchnow","window","location","reload","md","border","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","height","marginRight","paddingBottom","size","OrderIcon","listOfUserCart","CNotif","to","Notifications","listOfNotif","notifCount","ntf","notifRecipient","accID","notifStatus","mynotif","notifInfo","notifMsg","notifDT","far","basic","paddingLeft","fontWeight","Navbar","collapse1","collapseID","toggleCollapse","prevState","toggleSingleCollapse","collapseId","userData","filterArtwork","filterOn","setItem","dark","expand","navbar","display","caret","NavLoginPost","accFname","accLname","clear","pageId","shouldShowDialog","loggedInGreeting","Landing","condition","isToggleOn","handleClick","bind","scrollTo","getPrintSize","listOfEmergingArtist","listOfArtists","AOMid","fil","accessType","AOM","acc_Status","pop","usr","sameSite","Secure","cookieSecurity","cookieName","pathname","artistid","image","artID","artType","item","artid","fontStyle","reverse","Homepage","getNotif","getToCart","getOrders","getMyLists","logged","followArtist","listofArtistInfo","listofFilteredUserArtworkCategories","listOfArtistFollowed","mylists","addMyLists","listOfMyLists","addFollow","userfollow","listOfFollowing","deleteFollow","addNotif","notif","ArtistOftheMonth","addtoList","rtwrk","floor","artStyle","artPrice","follow","following","followingID","followerID","input","hash","len","charCodeAt","getHash","MatchRouteUserCategories","floating","rounded","MatchRouteEmergingArtist","MatchRouteArtistFollowed","getFollowing","borderRadius","outline","SingleArtist","checkFollower","follower","content","duration","followStatus","followed","setFollowed","getSingleArtists","getArtistArtwork","match","params","listofArtistArtwork","listofArtistCategories","getFollowers","profile_Img","active","marginLeft","accAddress","birthYear","artistDescription","_","uniqBy","cat","ArtistReg","confPassword","handleChange","addAccount","upload","onFileChange","onFileChangeP","profileImg","selectedFile","formData","FormData","append","files","URL","createObjectURL","formData2","accept","rows","maxlength","accInstitution","FbReg","getEmail","stat","user","textButton","withStyles","root","button","spacing","unit","instructions","facebookIcon","GmailRegister","familyName","ArtGalReg","textTransform","UserReg","getStyles","getCategories","listOfCategories","listOfStyles","options","showCheckbox","displayValue","onSelect","list","listitem","categorySelected","catType","styleSelected","styleType","confirmPassword","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UploadMult","previewVisible","previewImage","fileList","handleCancel","handlePreview","a","preview","originFileObj","uploadButton","action","listType","onPreview","visible","footer","onCancel","UploadWork","artImg","ArtByMe","imageFile","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","catch","artwork","listOfPrintSize","paddingTop","artThemeSelected","artStyleSelected","artSizeSelected","printSize","artDescription","notify","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warn","OrderTab","selected","selectedCheckBox","totalPrice","partnerPercentage","setStatus","status","selectedValue","index","checked","total","parseFloat","artworkPaymentAmount","selectedArray","indexer","deleteItem","editToCart","addOrder","perctodec","order","totalValue","Notification","selectedCheck","listOfOrder","reduce","indexes","artworkQuantity","accImg","artistImg","accDescription","accFollowers","artworkName","artworkMaterial","artworkSize","artworkFramingOptions","artworkPrice","Number","toLocaleString","AddToBag","addTocart","cart","addToCart","cartData","date","getFullYear","disable","ViewRoom","selectedsize","Awidth","Aheight","ATLogin","GoogleLogin","SingleArt","artistInfoList","artistData","artworkInfo","artworkList","isMounted","selectedSize","getSingleArtworkInfo","listOfSingleArtwork","listRelatedWorkByCategory","addArtShare","artshare","getmyList","artSize","FollowLogin","FacebookShareButton","subject","hashtag","onShareWindowClose","FacebookIcon","round","EmailShareButton","EmailIcon","Asize","sizes","option","ArtworkFilter","minValue","maxValue","deleteMyLists","removeToLists","mylistsID","toJS","price","defaultCurrent","defaultPageSize","Artworks","setPrice","amt","arts","parseInt","setCategories","selectedCheckboxes","has","delete","add","newCategories","Array","from","includes","setPrintSize","categories","Set","categoryList","printSizeList","Artists","buffer","binary","call","Uint8Array","forEach","b","String","fromCharCode","btoa","isExpanded","dataSource","CProfile","listofUsers","Step","Steps","OrderDetails","pendingOrders","steps","checkSteps","orderID","progressDot","current","orderItems","currency","feedback","addFeedback","orderInfo","submitFeedback","feedbackNote","activeItem","tab","getOrderUser","listofUserOrder","editOrder","listOfOrders","items","orderStatus","listOfOrderReceived","Received","listOfOrderDelivered","listOfOrderCancelled","Rejected","cancelOrder","myorder","ord","link","role","tabId","CProfileEdit","pass","confPass","getSingleEnthusiast","getOrder","AccountInfo","resp","valueDefault","confpassword","removeItem","Order","RegVerify","AdminLogin","AddArtist","accSuffix","close","users","userDB","fname","address","deactivate","itm","ArtistsTable","columns","field","sort","maxWidth","acc_Documents","striped","bordered","small","Deactivated","restore","DeactivatedTable","lname","approve","PendingTable","ArtistTab","ArtistsTab","AddArtwork","getArtNames","overflow","textOverflow","PendingArtwork","editArtwork","arworks","dateAdded","PendingArtworkTable","no","artCategory","artDimension","Grid","container","xs","archive","ArtwrkTab","ArtworkTab","AddCat","modal2","addCategory","submitHandlerStyle","addStyle","submitHandlerSize","addPrintSize","printsize","EditCat","editCategory","catID","EditStyle","editPrintSize","sizeID","editStyle","styleID","CategoryTable","hover","EditPrintSize","CategoryTab","CatTable","DashCards","activeArtists","artEnthu","Orders","CancelledOrders","CompletedOrders","salesYTD","product","amount","paymentStatus","sum","record","totalAmount","sales","useStyles","makeStyles","paper","cont","palette","text","secondary","cont2","cont3","menuButton","hide","toolbar","alignItems","justifyContent","mixins","flexGrow","bullet","transform","pos","card","card2","flex","iconButton","search","DCards","classes","sm","Card","CardContent","Typography","variant","DownloadImage","PendingOrder","Corder","Delivery","orders","orderDB","orderBy","orderDate","paymentStat","PendingOrderTable","responsive","DashboardSection","Paper","PendingArtistTable","UserFeedback","getFeedback","listOfFeedback","filtFeedback","fb","fbID","feedbackID","acID","ordID","note","FeedbackTable","sender","FeedbackTab","CancelledOrder","CancelledOrderTable","CompletedOrder","CompletedOrderTable","orderStat","OrdersTab","AccountSettings","editProfile","SettingGrid","useState","setPass","setConfPass","edit","accData","getMyData","byear","institution","createData","justify","TextField","defaultValue","editNotif","notifNum","notifData","dateNotif","notifID","Notif","ArtShares","getArtShare","filtartshare","listOfArtShare","as","sharer","social","dateTime","ArtShareTable","AddUser","Customer","CustomerTable","UsrsTab","User","Admin","default","togglePills","getAllNotif","Dashboard","UserTab","PartnerLogin","CCancelOrder","CCompletedOrder","partnerEarnings","ForDelivery","done","ForDeliveryTable","PendingPrint","PendingPrintTable","OngoingOrder","OngoingOrderTable","pDashboardSection","CPendingOrders","COrderDeli","Printing","PrintingTable","PrintingPartner","PrintingTab","OrderDeliverytab","CompletedOrderTab","CancelOrdertab","MessageTab","minWidth","Earnings","Artwoks","gutterBottom","component","ArtistProfile","myprofile","pp","contactno","document","description","myFollowers","Profile","Model","validate","Joi","constructor","schema","skipFunctions","abortEarly","allowUnknown","property","handleProperties","deepProperty","Error","properties","prop","shift","Object","assign","propertiesClone","keys","isObservableArray","isObservableObject","isBoxedObservable","details","decorate","Account","defaults","accPoints","username","accCategories","accStyles","regType","observable","Artwork","artworkPath","artRating","Cart","dateOfTransaction","Categories","modeOfPayment","Style","firstName","lastName","phone","street","city","postalCode","dateRegistered","string","hex","object","number","iso","PrintSize","notifSender","notifSubject","MyLists","artistID","Feedback","UserFollow","followID","shareID","StartingStore","api","ArtShare","welcomeMessage","listOfFilteredArtwork","currentUser","listOfUserDocs","listofUserCategoriesArtwork","listofUserStyleArtwork","addaccount","getaccounts","removeUndefinedProps","us","stringify","doc","editprofile","loginaccount","loginEmail","loginemail","loginfb","logingoogle","addArtwork","addartwork","documents","getArtwork","getartwork","arrayBufferToBase64","getEmergingArtist","getartworkInfo","artCategories","getsingleartworkinfo","styles","themes","union","concat","getRelatedWorkByCategory","followAccount","addprintsize","getprintsize","editprintsize","currData","addnotif","getId","getnotif","getallnotif","editnotif","addmylists","getmylists","mytoken","deletemylists","addfeedback","getfeedback","addfollow","follow_ID","deletefollow","getfollow","getallartworks","addartshare","getartshare","obj","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName","Api","axios","create","baseURL","post","mode","get","docID","put","category","followid","getUsers","stores","Routes","newestOnTop","rtl","pauseOnFocusLoss","exact","path","SubmitArt","ShopByPrice","ShopByCategory","OnSale","AdminHome","ForgotPass","ArtistHome","App","basename","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","routes","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54e148ed.chunk.js","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport GoogleLoginBtn from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\n\r\nimport {\r\n  \r\n  MDBIcon\r\n\r\n} from 'mdbreact';\r\nimport './../../css/style.css';\r\nimport './../../css/normalize.css';\r\nimport './../../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass GmailLogin extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    googleID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseGoogle = (response) => {\r\n\r\n let { startingStore: {  account ,loginGoogle ,getArtists,\r\n  getArtworkInfo,\r\n  getEmergingArtistArtwork,\r\n  getArtistFollowArtwork} } = this.props;\r\n\r\n    if(response !== undefined || response !== null){\r\n\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        googleID: response.profileObj.googleId,\r\n        name: response.profileObj.givenName,\r\n        email: response.profileObj.email,\r\n        picture: response.profileObj.imageUrl,\r\n      });\r\n     \r\n\r\n     \r\n\r\n\r\n        account.setProperty(\"accEmailAddress\", this.state.email)\r\n        account.setProperty(\"accFname\", this.state.name)\r\n\r\n        if (this.state.isLoggedIn === true){\r\n        loginGoogle().then((res) => {\r\n          let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n          getArtworkInfo();\r\n          getEmergingArtistArtwork();\r\n          getArtists();\r\n   \r\n          if (res === 1) {\r\n          \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/ArtistHome');\r\n          } \r\n          else if (res === 2){\r\n            getArtistFollowArtwork(mydata.accEmailAddress);\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n       \r\n              success();\r\n              setTimeout(() => {\r\n            this.props.history.push('/Home');\r\n          }, 50);\r\n          } \r\n          else if (res === 3){\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.error('Admin is validating your account', 2));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          \r\n          }\r\n          \r\n          else {\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('No account registered', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          }\r\n        });\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n  \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n\r\n    let googleContent = (\r\n      <GoogleLoginBtn\r\n      clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n      buttonText='Log in with Google'\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n    \r\n      icon={true}\r\n    />\r\n    );\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        \r\n   {googleContent}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailLogin)));\r\n","import React, {Component} from 'react';\r\nimport FacebookLoginBtn from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass FbLogin extends Component {\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n   \r\n    let { startingStore: {  account ,loginFB ,getArtists,\r\n      getArtworkInfo,\r\n      getEmergingArtistArtwork,\r\n      getArtistFollowArtwork} } = this.props;\r\n    \r\n   \r\n    if (response.email === undefined || response.email === null ){\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n      }\r\n  else{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n\r\n    account.setProperty('accFname',this.state.name)\r\n    account.setProperty('accEmailAddress',this.state.email)\r\n\r\nif (this.state.isLoggedIn === true){\r\n\r\n    loginFB().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === 1) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/ArtistHome');\r\n      } else if (res === 2) {\r\n         getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 3) {\r\n        \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Please wait for your account approval', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 4) {\r\n       \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Account rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (res === false) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('No facebook account registered', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n    \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n    });\r\n  }else{\r\n    const success = () => {\r\n      message\r\n        .loading('Signing in..', 1.2)\r\n        .then(() => message.error('Please try again', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 500);\r\n  }\r\n  }\r\n    \r\n  };\r\n\r\n  componentClicked = () => console.log('clicked');\r\n\r\n  render() {\r\n    let fbContent;\r\n\r\n    if (this.state.isLoggedIn) {\r\n      fbContent = (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            margin: 'auto',\r\n            background: '#f4f4f4',\r\n            padding: '20px',\r\n         \r\n          }}\r\n        >\r\n         <div style={{textAlign:'center',marginBottom:'8px'}}><img src={this.state.picture} alt={this.state.name} alt='profileimg'/></div> \r\n         <div style={{textAlign:'center',marginBottom:'8px'}}>\r\n          <h6>Welcome to Art, Basically</h6>\r\n          <p style={{fontSize:'18px'}}>{ this.state.name}</p>\r\n          <p style={{fontSize:'15px'}}>{this.state.email}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      fbContent = (\r\n        <FacebookLoginBtn\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          cssClass=\"LoginFb\"\r\n          fields='name,email,picture'\r\n          onClick={this.componentClicked}\r\n          disableMobileRedirect={true}\r\n          callback={this.responseFacebook}\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (<div>{fbContent}</div>)\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(FbLogin)))","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GgLogin from '../../components/GoogleLogin/';\r\nimport FbLogin from '../FbLogin';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        \r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account,editAccount,listOfUsers},\r\n    } = this.props;\r\nlet btn = this.props.login;\r\n\r\n\r\n\r\nlet handleClickOpen = () => {\r\n  this.setState({\r\n    modal1: false,\r\n    open: true,\r\n  });\r\n};\r\n\r\nlet ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n  if (this.state.newpass === this.state.confpass){\r\n    account.setProperty('_id',getuser)\r\n    account.setProperty('password',this.state.newpass)\r\n      editAccount()\r\n\r\n      const success = () => {\r\n        message\r\n          .loading(\"\", 1)\r\n          .then(() =>\r\n            message.error(\"Password successfully modified\", 2)\r\n          );\r\n      };\r\n      success()\r\n      setTimeout(() => {\r\n        this.setState({\r\n          modal14: false,\r\n          open: false,\r\n        });\r\n      },400)\r\n  }else{\r\n    const error = () => {\r\n      message\r\n        .loading(\"\", 1)\r\n        .then(() =>\r\n          message.error(\"Please check your password\", 2)\r\n        );\r\n    };\r\n    error()\r\n  }\r\n\r\n\r\n\r\n  // this.setState({\r\n  //   open: false,\r\n  // });\r\n};\r\n\r\nlet handleClose= () => {\r\n\r\n  this.setState({\r\n    open: false,\r\n  });\r\n};\r\n\r\n\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        {btn === 'ay'  ? (\r\n <MDBBtn\r\n onClick={this.toggle(1)}\r\n color='#FAE933'\r\n className='btnYellow'\r\n>\r\n Add Yours\r\n</MDBBtn>\r\n        )\r\n        :(  <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='#FAE933'\r\n          className='btnBlack'\r\n         >\r\n          Add your work now\r\n         </MDBBtn>)\r\n        }\r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n          <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n\r\n\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import React, {Component} from 'react';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport moment from 'moment'\r\n class Footer extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className='footer clearfix'>\r\n        <div className='navfoot'>\r\n          <ul>\r\n            <li>Get to Know Us</li>\r\n            <li>\r\n              <a href='#!'>About Us</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Job Opportunities</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Contact Us</a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Make Money with Us</li>\r\n            <li>\r\n              <a href='#!'>Sell on Art, Basically</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Sell as a Gallery</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Sell &nbsp;Your Services on <br /> Art, Basically\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Advertise Your Products</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                See all <MDBIcon icon='caret-right' className='caret' />{' '}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Let Us Help You</li>\r\n            <li>\r\n              <a href='#!'>\r\n                Track&nbsp;Your Packages or <br /> View&nbsp;Your Orders\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Delivery Rates & <br /> Policies\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Returns & <br /> Replacements\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Customer Service</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='copyright'>\r\n          <p>Copyright © {moment().format(\"YYYY\")} Art,Basically Inc. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from \"antd\";\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader } from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FbLogin from \"../components/FbLogin\";\r\nimport GgLogin from \"../components/GoogleLogin/\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = \"modal\" + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = \"\";\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n\r\n    let {\r\n      startingStore: {\r\n        loginAccount,\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.2)\r\n            .then(() => message.error(\"Login Unsuccessful\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/Home\");\r\n        }, 500);\r\n      } else if (\r\n        // (typeof res === 'string')\r\n        res === 4\r\n      ) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push(\"/ArtistHome\");\r\n        }, 500);\r\n      } else if (res === 5) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() =>\r\n              message.error(\"Please wait for your account confirmation\", 1)\r\n            );\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 6) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Your account request rejected\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Username or password is incorrect\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n   \r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n      <div className=\"btnmodal\">\r\n        <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color=\"#FAE933\"\r\n          className=\"btn btnBlack loginbtn\"\r\n        >\r\n          Login\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className=\"modalform modlog\"\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className=\"login\">\r\n            <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(Login)));\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nimport './../css/style.css';\r\nimport './../css/normalize.css';\r\nimport './../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBBtn onClick={this.toggle(1)} color='#fff' className='navlogin'>\r\n          Hello, Sign In\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n          <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import Autosuggest from 'react-autosuggest';\r\nimport React, {Component} from 'react';\r\nimport {\r\n \r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBCol,\r\n  MDBIcon,\r\n} from 'mdbreact';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {message} from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nclass Search extends Component {\r\n  componentDidMount(){\r\n    let {startingStore:{getAllArtworks}}=this.props;\r\n    getAllArtworks()\r\n  }\r\n  state = {\r\n    modal: false,\r\n  \r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  \r\n  constructor() {\r\n    super();\r\n  \r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n    \r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  render() {\r\n\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n\r\n        \r\n    function createData(artworkDB,id,title,artist, img,year,theme) {\r\n      return { artworkDB,id,title,artist, img,year,theme };\r\n    }\r\n\r\n    let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Active').map(artworks =>{\r\n      return(createData(\r\n     artworks,artworks.artworkID,artworks.artName\r\n     ,artworks.artistName,artworks.artworkImg,artworks.artworkDateCreated,artworks.artTheme\r\n      ))\r\n    })\r\n\r\n  let  languages =  \r\n  [...pArtworks.map((row,i) => {\r\n \r\n    return(\r\n\r\n   {\r\n      name: `${row.title}`,\r\n      year: `${row.year}`,\r\n      img: `${row.img}`,\r\n      artist: `${row.artist}`,\r\n      theme:`${row.theme.map(thme => thme)}`,\r\n\r\n    \r\n\r\n   }\r\n   \r\n   ) })\r\n  ]\r\n\r\n    \r\n    // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  let getSuggestions = value => {\r\n      const inputValue = value.trim().toLowerCase();\r\n    \r\n      const inputLength = inputValue.length;\r\n    \r\n      return inputLength === 0 ? [] : languages.filter(lang =>\r\n\r\n        lang.name.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.artist.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.year.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.theme.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(' ').slice(-1).join(' ') === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(/\\s+/).slice(1,2).join(' ') === inputValue \r\n      \r\n      );\r\n    };\r\n    \r\n    // When suggestion is clicked, Autosuggest needs to populate the input\r\n    // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n    // input value for every given suggestion.\r\n  let   getSuggestionValue = suggestion => suggestion.name;\r\n    \r\n    // Use your imagination to render suggestions.\r\n  let renderSuggestion = suggestion => (\r\n      <div>\r\n       <img src={suggestion.img} style={{width:'50px',height:'50px',float:'left',marginRight:'8px',paddingBottom:'6px'}} />\r\n    {suggestion.name}<p style={{fontSize:'10px'}}> by {suggestion.artist}</p>\r\n     \r\n      </div>\r\n    );\r\n  \r\n  \r\n  let  onChange = (event, { newValue }) => {\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n\r\n\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: 'Search artworks',\r\n      value,\r\n      onChange: onChange\r\n    };\r\n    \r\n \r\n\r\n\r\n    \r\nlet filArt = listOfArtworks.filter(art => art.artName === this.state.value).map(art => art)\r\nlet filArtist = listOfArtworks.filter(art => art.artistName === this.state.value).map(art => art)\r\n  \r\n    let searchnow =()=>{\r\n     \r\n   if(filArt[0] !== undefined && filArtist[0] === undefined){\r\n  \r\n      this.props.history.push(`/Art/${filArt[0].artworkID}/${filArt[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else if (filArtist[0] !== undefined && filArt[0] === undefined) { \r\n      this.props.history.push(`/Artist/${filArtist[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1)\r\n          .then(() => message.error('Artwork or Artist not found', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='search'>\r\n        <MDBIcon icon='search' onClick={this.toggle} style={{color:'white'}}/>\r\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <MDBModalBody md='4' color='red'>\r\n            <MDBCol md='12'>\r\n              {/* <input\r\n                className='form-control'\r\n                type='text'\r\n                placeholder='Search'\r\n                aria-label='Search'\r\n                onChange={(e)=>{searchInput(e.target.value)}}\r\n              /> */}\r\n\r\n<Autosuggest\r\n style={{width:'80%',border:'1px solid red'}}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n            </MDBCol>\r\n            <MDBBtn size='md' color='dark' onClick={()=>{searchnow()}}>Search</MDBBtn>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Search)))\r\n","\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport React, { Component } from 'react'\r\nimport {inject,observer} from 'mobx-react'\r\nclass OrderIcon extends Component {\r\n    render() {\r\nlet {startingStore:{listOfUserCart}}=this.props;\r\n\r\n\r\n\r\n\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n           <Link\r\n                  \r\n                  to='/Order'\r\n                > \r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon   className=\"mr-3 i ibag h5\" />\r\n     \r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{listOfUserCart.length}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      </Link>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n   <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(OrderIcon))","import { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n let {startingStore:{listOfNotif}}=this.props;\r\n let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nlet notifCount = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').length\r\nlet mynotif = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n  return(\r\n    <Fragment key={i}>\r\n\r\n        <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n          <span className=\"time\">{notifInfo.notifDT}</span>\r\n        </MDBDropdownItem>\r\n \r\n    </Fragment>\r\n  )\r\n})\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon far icon=\"bell\" className=\"mr-3 i\" />\r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n    {mynotif}\r\n    \r\n    </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn,MDBNavLink} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (typeof res === 'string') {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(`/CProfile/${res}`);\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBNavLink onClick={this.toggle(1)} to='' className='inlinelink rborder btnYellow navbtn' style={{fontWeight:'bold'}}>\r\n        Post, Basically\r\n        </MDBNavLink>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n          <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n\r\n        \r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <label className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </label>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import {\r\n  MDBCollapse,\r\n  MDBDropdown, MDBDropdownItem,\r\n  MDBDropdownMenu, MDBDropdownToggle,\r\n  MDBHamburgerToggler, MDBNavbar,\r\n  MDBNavbarBrand, MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBBtn\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLogin from './NavLogin';\r\nimport Search from './Search';\r\nimport OrderIcon from './OrderIcon';\r\nimport CNotif from './CNotif';\r\nimport NavLoginPost from './NavLoginPost';\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: { filterArtwork},\r\n    } = this.props;\r\n\r\n    let filterOn = (type) => {\r\n      sessionStorage.setItem('type', type);\r\n      filterArtwork(type);\r\n    };\r\n    return (\r\n      <Fragment>\r\n     \r\n      <MDBNavbar dark expand='md' className='navcon'>\r\n        {userData !== null && userData !== undefined ? (\r\n         <MDBNavbarBrand>\r\n         <a href='/Home'>\r\n           <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='logo' />\r\n         </a>\r\n       </MDBNavbarBrand>\r\n            ) : (\r\n              <MDBNavbarBrand>\r\n              <a href='/'>\r\n                <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='logo' />\r\n              </a>\r\n            </MDBNavbarBrand>\r\n              )}\r\n\r\n        <MDBHamburgerToggler\r\n          color='#FAE933'\r\n          id='hamburger1'\r\n          onClick={() => this.toggleSingleCollapse('collapse1')}\r\n        />\r\n        <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n          <MDBNavbarNav className='nav-ul'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder '\r\n                to='/OnSale'\r\n                onClick={() => {\r\n                  filterOn('onSale');\r\n                }}\r\n              >\r\n                SALE\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('latest');\r\n                }}\r\n              >\r\n                Latest\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            {userData !== null && userData !== undefined ? (\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('foryou');\r\n                  }}\r\n                >\r\n                  For&nbsp;You\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n            ) : (\r\n                <MDBNavItem style={{ display: 'none' }}></MDBNavItem>\r\n              )}\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('discover');\r\n                }}\r\n              >\r\n                Discover\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBDropdown className='ddnav'>\r\n              <MDBDropdownToggle caret color='transparent'>\r\n                Shop By\r\n              </MDBDropdownToggle>\r\n              <MDBDropdownMenu basic className='ddnavMenu'>\r\n                <MDBDropdownItem href='/ShopByPrice'>Price</MDBDropdownItem>\r\n                <MDBDropdownItem href='/ShopByCategory'>Category</MDBDropdownItem>\r\n              </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n       \r\n            <MDBNavItem>\r\n    \r\n            \r\n                {userData !== null && userData !== undefined ? (<MDBNavLink\r\n          className='inlinelink rborder btnYellow navbtn'\r\n          to='/Upload'\r\n        >\r\n          Post, Basically\r\n        </MDBNavLink>)\r\n        : (<NavLoginPost />)}\r\n\r\n            </MDBNavItem> \r\n            \r\n              <MDBNavItem>\r\n                <MDBBtn color='dark' style={{color:'white'}}>\r\n            \r\n                  <Search />\r\n                 \r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n              <MDBDropdown className='ddnav'>\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownToggle color='transparent'>\r\n                    Hello, {userData.accFname}\r\n                  </MDBDropdownToggle>\r\n                ) : (\r\n                    <NavLogin />\r\n                  )}\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownMenu basic className='ddnavMenu'>\r\n                    <MDBDropdownItem>\r\n                      <Link\r\n                        to={`/CProfileEdit/${userData.accFname} ${userData.accLname}`}\r\n                      >\r\n                        {' '}\r\n                      Account\r\n                    </Link>\r\n                    </MDBDropdownItem>\r\n             \r\n                    <MDBDropdownItem\r\n                      onClick={() => logout()\r\n                      }\r\n                      style={{paddingLeft:'25px',color:'#000000'}}\r\n                    >\r\n                Log Out\r\n                    </MDBDropdownItem>\r\n                  </MDBDropdownMenu>\r\n                ) : (\r\n                   <p></p>\r\n                  )}\r\n              </MDBDropdown>\r\n              {userData !== null && userData !== undefined ? (\r\n                <div className='row lbtn'>\r\n                  <MDBNavItem>\r\n                  \r\n\r\n                  <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('yourlists');\r\n                  }}\r\n                >\r\n                  Your Lists\r\n                </MDBNavLink>\r\n\r\n                  </MDBNavItem>\r\n                \r\n                  <MDBNavItem>\r\n                    <CNotif />\r\n                  </MDBNavItem>\r\n                  <MDBNavItem >\r\n           \r\n                    \r\n                     <OrderIcon/>\r\n                  \r\n                \r\n       \r\n                  </MDBNavItem>\r\n                </div>\r\n              ) : (\r\n                  <MDBNavItem style={{ display: 'none' }}>\r\n                \r\n                  </MDBNavItem>\r\n                )}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n      <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n    shouldShowDialog={true}\r\n    loggedInGreeting=\"Hi! How can we help you?\"\r\n\r\n    \r\n  />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Navbar));\r\n","import { BackTop, Skeleton } from 'antd';\r\nimport { MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport CookieConsent from \"react-cookie-consent\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport AYLogin from '../../components/AddYoursLogin/index.js';\r\nimport Footer from '../../components/Footer';\r\nimport Login from '../../components/Login';\r\nimport Navbar from '../../components/Navbar';\r\n class Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() { \r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {\r\n     \r\n        \r\n        getAllArtworks,\r\n        getEmergingArtistArtwork,\r\n        getPrintSize,\r\n        getAccounts,\r\n        getArtists,\r\n        \r\n        \r\n        \r\n\r\n      },\r\n    } = this.props;\r\n      \r\n      getEmergingArtistArtwork();\r\n      getAllArtworks();\r\n      getPrintSize()\r\n      getAccounts()\r\n      getArtists(); \r\n     \r\n  }\r\n\r\n  render() {\r\n \r\n   \r\n    let {\r\n      startingStore: {listOfEmergingArtist,listOfArtworks,listOfUsers,listOfArtists},\r\n    } = this.props;\r\n\r\n\r\n    function createData(aomName,aomID){\r\n      return{aomName,aomID}\r\n    }\r\n\r\n    \r\n    let AOMid = listOfUsers.filter(fil => fil.accessType === 'Artist')\r\n    let ArtistOftheMonth = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active' && AOMid.pop() === fil.accID).map(usr =>  {return (`${usr.accFname} ${usr.accLname}`)})\r\n\r\n    \r\n    // let ArtistOftheMonthID = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active' ).map(usr =>  {return (`${usr.accID}`)})\r\n\r\n\r\n  \r\n    \r\n   \r\n    let AOM = ArtistOftheMonth.pop()\r\n\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        <CookieConsent\r\n        sameSite=\"none\" \r\n        Secure='true'\r\n        cookieSecurity={true}\r\n        location=\"bottom\"\r\n        buttonText=\"Allow cookies\"\r\n        cookieName=\"ABasicallyCookies\"\r\n        cookieName=\"G_ENABLED_IDPS\"\r\n        cookieName=\"G_AUTHUSER_H\"\r\n        cookieName=\"SEARCH_SAMESITE\"\r\n        cookieValue='true'\r\n      style={{ background: \"#2B373B\" }}\r\n      buttonStyle={{ color: \"#4e503b\", fontSize: \"13px\" }}\r\n      expires={999}\r\n        >\r\n          <h6 style={{color:'white'}}>Cookies on Art, Basically</h6>\r\n          <p style={{color:'white'}}>We use cookies to personalize contents, to provide social media features and to ensure that we give you the best experience on our website. We also share information about your use of our site with our social media partners who may combine it with other information that you’ve provided to them from your use of their services.</p>\r\n        </CookieConsent>\r\n\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='welcome'>\r\n            <h2>Welcome to Art, Basically</h2>\r\n            <p style={{marginTop:'-10px'}}>Create an account with us and start sharing your artworks!</p>\r\n            <h2 className='paddh4'>But first, are you</h2>\r\n            <div className='signinOpt'>\r\n            \r\n              <MDBNavLink to='/ArtistRegistration' className='btnYellow'>\r\n                Artist\r\n              </MDBNavLink>\r\n              <MDBNavLink to='ArtistGalleryRegistration' className='btnYellow'>\r\n                Art Enthusiast\r\n              </MDBNavLink>\r\n            </div>\r\n            <span className='inlinep'>\r\n              What would best fit your description?{' '}\r\n              <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n            </span>\r\n            <div className='signinOpt block'>\r\n              <p className='inlinep paddh4'>Already have an account?</p>\r\n              <Login />\r\n            </div>\r\n          </div>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n       \r\n       \r\n     \r\n                 \r\n                    \r\n                        \r\n                         \r\n                        {/* { \r\n                        (listOfArtworks.filter(art => art.accID === AOMid).length === 0 ) ? \r\n                        (<Skeleton rows=\"1\" size=\"small\" loading={true}/>)\r\n                        : \r\n                        (   */}\r\n                        <Link\r\n                          to={{ pathname: `/Artist/${AOM}`,\r\n                          state: {artistName:AOM ,artistid:AOMid}\r\n                         }}\r\n                          ><h2>{AOM}      </h2>      \r\n                          </Link>\r\n                          {/* )\r\n                        } */}\r\n               \r\n                  \r\n                     \r\n              \r\n\r\n             \r\n              <p>ARTIST OF THE MONTH </p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks.filter(fil => `${fil.accID} ${fil.accID}` === AOM).slice(0,3).map((image,i) => {\r\n                   \r\n                  return (\r\n                    \r\n                    <li key={i}>\r\n                      \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName,artID:image.artworkID}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                     \r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                    \r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n               <Link to={{\r\n                          pathname:  `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                       \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                         </Link>\r\n          \r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n         \r\n            <ul className='col3img clearfix'>\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')         \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  return (\r\n\r\n                   (image !== null || image !== undefined)?(\r\n                      <Skeleton key={i}/>\r\n                   ):(\r\n                      <li key={i}>\r\n                     \r\n                      <Link\r\n                        artid={image.artworkID}\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName,artID:image.artworkID}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                       \r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <Link to={{\r\n                        \r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName,artID:image.artworkID}\r\n                       \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <Link to={{\r\n\r\n                      \r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName,artID:image.artworkID}\r\n                       \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                 \r\n                  </div>\r\n                    </li>\r\n                   )\r\n                   \r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest' id='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n         \r\n         {( listOfArtworks.length === 0) ? ( <Skeleton/>):\r\n         (\r\n          listOfArtworks\r\n            .filter((item) => item.artworkStatus === 'Active')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image,i) => {\r\n              \r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                        state: {artistName:image.artistName,artID:image.artworkID}\r\n                      }}\r\n                      className='artlink'\r\n                    >\r\n               \r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                         <img src={image.artworkImg} alt='artwork'/>\r\n                    \r\n                    </Link>\r\n              \r\n                 \r\n                  <div className='artistinfo clearfix pad10'>\r\n     \r\n                        \r\n                   <Link to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName,artID:image.artworkID}\r\n                 \r\n                  }}\r\n                >\r\n                     <p className='artistname'>{image.artName}</p>\r\n                 \r\n                </Link>\r\n\r\n                \r\n                <br/>\r\n                   \r\n                 <Link to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName,artID:image.artworkID}\r\n              \r\n                  }}\r\n                >\r\n                     <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                 \r\n                </Link>\r\n                    \r\n                 \r\n               \r\n             \r\n              </div>\r\n                  \r\n                </li>\r\n              );\r\n            })\r\n\r\n         )}\r\n              \r\n\r\n\r\n\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            \r\n\r\n          <AYLogin login={'aywn'} />\r\n            <a href='/' className='learnmore' style={{color:'black'}}>\r\n              Learn More <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              \r\n              {(listOfEmergingArtist.length === 0)?(<Skeleton/>):\r\n              (\r\n                listOfEmergingArtist\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  return (\r\n                    <li key={i}>\r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName,artID:image.artworkID}\r\n                          }} className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                             <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      \r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n                     <Link to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName,artID:image.artworkID}\r\n                      \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                      <Link to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName,artID:image.artworkID}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                 \r\n                  </div>\r\n                      \r\n                    </li>\r\n                  );\r\n                })\r\n              )\r\n              }\r\n              \r\n            </ul>\r\n          </section>\r\n          <div className='bttop'>\r\n         \r\n\r\n        <AYLogin login={'ay'}/>\r\n            <BackTop style={{margin:'auto'}}>\r\n              {'     '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Landing)))\r\n","import { BackTop, message } from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBNavLink\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/')\r\n    // }\r\n\r\n    let {\r\n      startingStore: {\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getAllArtworks,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        listOfEmergingArtist,\r\n        getPrintSize,\r\n        getNotif,\r\n        getToCart,getOrders,\r\n        getMyLists,\r\n        getAccounts,\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    if (listOfEmergingArtist) {\r\n      getArtistFollowArtwork();\r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getAllArtworks()\r\n      getArtists();\r\n      getPrintSize()\r\n      getNotif()\r\n      getToCart()\r\n      getOrders()\r\n      getMyLists()\r\n      getAccounts()\r\n      getFollow()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n       let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listOfArtworks,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        mylists,\r\n        addMyLists,\r\n        listOfMyLists,\r\n        listOfUsers,\r\n        addFollow,\r\n        userfollow,\r\n        listOfFollowing,\r\n        deleteFollow,\r\n        addNotif,\r\n        notif,\r\n        \r\n      },\r\n    } = this.props;\r\n\r\n    \r\n\r\n    let ArtistOftheMonth = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accFname} ${usr.accLname}`)})\r\n    let AOMid = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accID}`)})\r\n    \r\n\r\n\r\n   \r\n  \r\n let addtoList=(rtwrk)=>{\r\n\r\n  let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n\r\nif (getmyList === 0){\r\n   \r\n   mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n   mylists.setProperty('accID',logged.accID)\r\n   mylists.setProperty('artworkID',rtwrk.artworkID)\r\n \r\n   mylists.setProperty('artName',rtwrk.artName)\r\n   mylists.setProperty('artTheme',rtwrk.artTheme)\r\n   mylists.setProperty('artStyle',rtwrk.artStyle)\r\n   mylists.setProperty('artPrice',rtwrk.artPrice)\r\n   mylists.setProperty('artistID',rtwrk.accID)\r\n   mylists.setProperty('artistName',rtwrk.artistName)\r\n   mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n   mylists.setProperty('artType',rtwrk.artType)\r\n   mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n   \r\n   addMyLists()\r\n\r\n   const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork added to your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n}else{\r\n  const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork already on your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n \r\n}\r\n }\r\n\r\n function getHash(input){\r\n  var hash = 0, len = input.length;\r\n  for (var i = 0; i < len; i++) {\r\n    hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n    hash |= 0; // to 32bit integer\r\n  }\r\n\r\n        \r\n  return hash;\r\n}\r\n\r\n let follow =(following)=>{\r\n  let getFollowing = listOfFollowing.filter(data =>  data.followingID === AOMid && data.followerID === logged.accID)\r\n   if (getFollowing.length === 0){\r\n    userfollow.setProperty('followID', `${Math.floor(1000 + Math.random() * 9000)}`)\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    addFollow()\r\n  \r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: false,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n\r\n\r\n\r\n\r\n    notif.setProperty('notifID',`${getHash(logged.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',logged.accID)\r\n    notif.setProperty('notifRecipient',following)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${logged.accFname } started following you`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif()\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Following', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },500)\r\n\r\n   }else{\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    deleteFollow();\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Unfollow', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },50)\r\n   }\r\n   setTimeout(()=>{\r\n    window.location.reload(false);\r\n  },1500)\r\n\r\n   this.setState(function (prevState) {\r\n    return {\r\n      isToggleOn: true,\r\n      condition: !this.state.condition,\r\n    };\r\n  });\r\n \r\n\r\n }\r\n\r\n\r\n    function MatchRoute() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n        {listOfArtworks\r\n          .filter((item) => item.artistName === 'Cleon Peterson')\r\n          .reverse()\r\n          .slice(0, 3)\r\n          .map((image,i) => {\r\n         \r\n          \r\n            return (\r\n              <li key={i}>\r\n                <a href='#!' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                    <span className='type'>\r\n                      {image.artType === 'Secondary'\r\n                        ? 'Second Edition'\r\n                        : 'Original'}\r\n                    </span>\r\n                  </div>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n                    }}\r\n                  >\r\n                    <img src={image.artworkImg} alt='artwork'/>\r\n                   \r\n                  \r\n                  </Link>\r\n                </a>\r\n               \r\n                <div className='artistinfo clearfix pad10'>\r\n           \r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                      \r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName }\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n                    \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteUserCategories() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {/*  */}\r\n          {listofFilteredUserArtworkCategories\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                        state: {artistName:image.artistName}\r\n                      }}\r\n                    >\r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteEmergingArtist() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfEmergingArtist\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n               <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                        state: {artistName:image.artistName}}} className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                 \r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n             \r\n                  <div className='artistinfo clearfix pad10'>\r\n                  <Link\r\n                      to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                      to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteArtistFollowed() {\r\n\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfArtistFollowed !== undefined\r\n            ? listOfArtistFollowed\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                     <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}}} className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                 \r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                 \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n            : ''}\r\n        </ul>\r\n      );\r\n    }\r\n    let getFollowing = listOfFollowing.filter(data =>  data.followingID === AOMid && data.followerID === logged.accID)\r\n\r\n    let AOM = ArtistOftheMonth.pop()\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n              <h2>\r\n              <a\r\n                      href=''\r\n                     style={{marginRight:'8px'}}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${AOM}`,\r\n                          state: {artistName:AOM\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n               { (listOfArtworks.length == 0 ) ? (<p></p>):(  <h2 className='artistname'>{AOM}      </h2>)}\r\n                     \r\n                    </a>\r\n                    { (listOfArtworks.length == 0 ) ? (<p></p>):( \r\n                    <MDBBtn\r\n               color='primary'\r\n                  style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px'}}\r\n                outline\r\n                  floating\r\n                 \r\n                  title={getFollowing === '0' ? 'Follow' : 'Unfollow'}\r\n                  onClick={() =>\r\n                    // this.handleClick(followArtist(AOMid.pop()))\r\n                    follow(AOMid.pop())\r\n                  }\r\n                >\r\n               \r\n                  {getFollowing.length === 0 ? (\r\n                   <div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n                  ) : (\r\n                    'Following'\r\n                  )}\r\n                </MDBBtn> )}\r\n               \r\n                \r\n              </h2>\r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter(fil => fil.accID === AOMid.pop())\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                  \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      \r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                    \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          \r\n                       \r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                    \r\n                      <Link\r\n                    \r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      \r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                 \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                         \r\n                        >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                          to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                        >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                         </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            <MDBNavLink to='#!' className='btnBlack'>\r\n              Add your work now\r\n            </MDBNavLink>\r\n          \r\n            <a href='#1' className='learnmore' >\r\n             <span style={{color:'black'}}>Learn More</span>  <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='latest'>\r\n            <h3>Recommended for You</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'foryou')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteEmergingArtist />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Artists You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'artistyoufollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteArtistFollowed />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Categories You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'categoriesfollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <div className='bttop'>\r\n            <MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <MDBContainer className='notif'>\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            icon=\"envelope\"\r\n            title=\"Message\"\r\n            message=\"Jane: See? Just like this.\"\r\n            text=\"just now\"\r\n          /> */}\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='Recieved an order from Jane Doe'\r\n            text='Just now'\r\n          />\r\n          <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='New art submission'\r\n            text='2 seconds ago'\r\n          /> */}\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Homepage));\r\n","export default __webpack_public_path__ + \"static/media/art1.87a26908.png\";","import { message, Skeleton } from 'antd';\r\nimport _ from 'lodash';\r\nimport { MDBBtn, MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport art from '../../images/artworks/art1.png';\r\n\r\nclass SingleArtist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcondition: false,\r\n\t\t\tisToggleOn: true,\r\n\t\t\tfollowStatus: false\r\n\t\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n    let {\r\n\t\t\tstartingStore: {  followed,setFollowed }\r\n    } = this.props;\r\n    setFollowed()\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0,0)\r\n\t\tlet { startingStore: { getFollow,getSingleArtists, getArtistArtwork, getArtists, getArtworkInfo }} = this.props;\r\n\t\r\n\t\tgetSingleArtists(this.props.match.params.name);\r\n\t\tgetArtistArtwork(this.props.match.params.name);\r\n\t\tgetArtworkInfo();\r\n\t\tgetArtists();\r\n\t\tgetFollow();\r\n\t}\r\n\r\n\tcheckFollower = (follower) => {\r\n\t\tif (follower !== undefined && follower[0] !== '') {\r\n\t\t\treturn follower.length;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\r\n\tfollowArtist = () => {\r\n\t\tmessage.loading({ content: 'Loading...' });\r\n\t\tsetTimeout(() => {\r\n\t\t\tmessage.success({ content: 'Loaded!', duration: 2 });\r\n\t\t}, 1000);\r\n\t};\r\n\t\r\n\r\n\trender() {\r\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\t\r\n\t\tlet {\r\n\t\t\tstartingStore: { listOfFollowing,listofArtistInfo, listofArtistArtwork, listofArtistCategories, followArtist, followed }\r\n\t\t} = this.props;\r\n\r\n\t\tlet getFollowers = listOfFollowing.filter(data => data.followingID === this.props.artistid).length\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className=\"home\">\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"maincon con\">\r\n\t\t\t\t\t<div className=\"artist\">\r\n\t\t\t\t\t\t<div className=\"artistprofile clearfix\">\r\n\t\t\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t\t\t<div className=\"artistpp\" >\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<img src={listofArtistInfo.profile_Img} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"artistInfo\">\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo.accFname !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n\t\t\t\t\t\t\t\t\t\t\t{userData === null || userData === undefined ?(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t   style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px',marginLeft:'16px'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t outline\r\n\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t   title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n\t\t\t\t\t\t\t\t\t\t\t   onClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t this.handleClick(followArtist(listofArtistInfo._id))\r\n\t\t\t\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t   {(this.state.isToggleOn) ? (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n\t\t\t\t\t\t\t\t\t\t\t   ) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t 'Following'\r\n\t\t\t\t\t\t\t\t\t\t\t\t   )}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"bday\">\r\n\t\t\t\t\t\t\t\t\t\t\t{listofArtistInfo.accAddress}, born {listofArtistInfo.birthYear}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<span className=\"estart\">Established Artist</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t{getFollowers === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetFollowers\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>Followers</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t\t\t\t4.8/5\r\n\t\t\t\t\t\t\t\t\t\t<span>528k Ratings</span>\r\n\t\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"artistbio clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Biography</h4>\r\n\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t<p>{listofArtistInfo.artistDescription}</p>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"relatedcat clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Related Categories</h4>\r\n\t\t\t\t\t\t\t<div className=\"catlist\" style={{color:'black'}}>\r\n\t\t\t\t\t\t\t\t{listofArtistCategories[0] !== [] || listofArtistCategories[0] !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t_.uniqBy(listofArtistCategories).map((cat) => (\r\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">{cat}</MDBNavLink>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">No Categories</MDBNavLink>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<section className=\"bestsellers\">\r\n\t\t\t\t\t\t<h3>Best Sellers of {this.props.location.state.artistName}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Latest Work by {this.props.location.state.artistName}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Related Artist</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Rene Gagnon</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#1\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Eelus</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Banksy</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArtist)))\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class ArtistReg extends Component {\r\n   \r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n \r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID = moment().format('MDYY') + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n \r\n   \r\n   \r\n    const formData = new FormData();\r\n    formData.append('artworkImg',  e.target.files[0]);\r\n    formData.append('type', 'artist');\r\n    upload(formData, 'docu');\r\n  }\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {startingStore:{listOfUsers,addAccount,account, upload}}=this.props;\r\n    \r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n\r\nif (filAccounts === 0){\r\n\r\n\r\n    if (this.state.password === this.state.confPassword ){\r\n\r\n\r\n\r\n    event.target.className += ' was-validated';\r\n\r\n    account.setProperty('acc_Status', 'Pending');\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    setTimeout(() => {\r\n    addAccount();\r\n  }, 4000);\r\n    const success = () => {\r\n    \r\n      message.success('Successfully submitted registration', 1);\r\n \r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n      this.props.history.push('/RegVerify');\r\n    }, 1000);\r\n    \r\n    \r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 4000);\r\n\r\n  }else{\r\n    const error = () => {\r\n    \r\n      message.error('Please check your password', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n      const error = () => {\r\n    \r\n      message.error('Your email or contact number is already taken', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n}\r\n\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Artist <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n\r\n\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n\r\n\r\n\r\n            <div className=\"page req clearfix\">\r\n<div className=\"container\">\r\n\t\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n\r\n\r\n\r\n              <MDBInput\r\n                label='First Name'\r\n               \r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='5'\r\n                style={{padding:'10px'}}\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n                   <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n             \r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n           \r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n            \r\n        \r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} required/>\r\n                <p className='req'>\r\n                  Acceptable documents includes image of your passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n\r\n\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                REGISTER\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistReg));\r\n","import React, {Component} from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nimport {withRouter} from 'react-router-dom'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit\r\n  },\r\n  facebookIcon: {\r\n    color: \"pink\"\r\n  }\r\n});\r\n\r\nclass FbReg extends Component {\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props;\r\n        getAccounts();\r\n      }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n    let {startingStore:{listOfUsers}}=this.props;\r\n\r\n    let getEmail = listOfUsers.filter(usr=> usr.accEmailAddress === response.email).length;\r\n\r\n    if (response.email === undefined || response.email === null){\r\n    console.log('error')\r\n    }\r\n    else if (getEmail !== 0){\r\n      const success = () => {\r\n        message\r\n          .loading('Validating..', 1.2)\r\n          .then(() => message.success('Account already registered', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 200);\r\n      this.props.history.push('/');\r\n    \r\n    }\r\nelse{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n  \r\n\r\n    if(response !== undefined || response != null){\r\n       \r\n  \r\n        let { startingStore: { addAccount, account ,loginFB ,getArtists,\r\n          getArtworkInfo,\r\n          getEmergingArtistArtwork,\r\n          getArtistFollowArtwork,listOfUsers} } = this.props;\r\n  \r\n      let checkuser = listOfUsers.map(usr =>{\r\n        return usr.accEmailAddress\r\n      })\r\n  let fil = checkuser.filter(usr => usr === response.email).length\r\n  \r\n\r\n  if (fil === 0 || fil === null){\r\n    let stat ='';\r\n    if (this.props.user === 'Standard'){\r\n      stat = 'Active'\r\n\r\n    }else{\r\n      stat = 'Pending'\r\n    }\r\n        account.setProperty('accessType', this.props.user);\r\n        account.setProperty('acc_Status', stat);\r\n  \r\n        account.setProperty(\"accEmailAddress\", response.email)\r\n        account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n        account.setProperty(\"accFname\", response.name)\r\n        account.setProperty(\"profile_Img\", response.picture.data.url)\r\n        account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n        account.setProperty('regType','FBAccount')\r\n        addAccount().then(res => {\r\n          if(res === true){\r\n             \r\n            loginFB().then((res) => {\r\n              let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n              getArtworkInfo();\r\n              getEmergingArtistArtwork();\r\n              getArtists();\r\n              getArtistFollowArtwork(mydata.accEmailAddress);\r\n            if (res === 2) {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.success('Welcome to artBasically', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/Home');\r\n              }  else {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.error('Registration Unsuccessful', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/');\r\n              }\r\n            });\r\n  \r\n            \r\n      \r\n  \r\n          }\r\n        })\r\n      }else if(fil === 1){\r\n  \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Email already taken!', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/');\r\n          \r\n        \r\n      }\r\n  \r\n      }\r\n      else{\r\n        console.log('error')\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    \r\n\r\n   \r\n     \r\n   let fbContent = (\r\n        <FacebookLogin\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          fields='name,email,picture'\r\n          cssClass=\"FacebookReg\"\r\n          disableMobileRedirect={true}\r\n        \r\n          callback={this.responseFacebook}\r\n          textButton=\"Sign up with Facebook\"\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    \r\n\r\n    return (<div >{fbContent}</div>)\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(withStyles(styles)(FbReg))))","import React, {Component} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass GmailRegister extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n\r\n  responseGoogle = (response) => {\r\n \r\n\r\n    if(response !== undefined || response != null){\r\n   \r\n      let { startingStore: { addAccount, account ,loginGoogle,listOfUsers} } = this.props;\r\n\r\n    let checkuser = listOfUsers.map(usr =>{\r\n      return usr.accEmailAddress\r\n    })\r\nlet fil = checkuser.filter(usr => usr === response.profileObj.email).length\r\n\r\n\r\nif (fil === 0 || fil === null){\r\n      account.setProperty('accessType', this.props.user);\r\n      if (this.props.user === 'Artist'){\r\n      account.setProperty('acc_Status', 'Pending');\r\n      }else{\r\n        account.setProperty('acc_Status', 'Active');\r\n      }\r\n      account.setProperty(\"profile_Img\", response.profileObj.imageUrl)\r\n      account.setProperty(\"accEmailAddress\", response.profileObj.email)\r\n      account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n      account.setProperty(\"accFname\", response.profileObj.givenName)\r\n      account.setProperty(\"accLname\", response.profileObj.familyName)\r\n      account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n      account.setProperty('regType','GmailAccount')\r\n      addAccount().then(res => {\r\n        \r\n        if(res === true){\r\n           \r\n          loginGoogle().then((res) => {\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n            // getArtworkInfo();\r\n            // getEmergingArtistArtwork();\r\n            // getArtists();\r\n            // getArtistFollowArtwork(response.profileObj.email);\r\n            if (res === 1) {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 1000);\r\n              this.props.history.push('/ArtistHome');\r\n            } \r\n            else if (res === 2){\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n            \r\n                success();\r\n                setTimeout(() => {\r\n              this.props.history.push('/Home');\r\n            }, 100);\r\n            } \r\n            \r\n            \r\n            else {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Account created', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push('/RegVerify');\r\n              setTimeout(() => {\r\n                this.props.history.push('/');\r\n              }, 4500);\r\n            }\r\n          });\r\n\r\n          \r\n    \r\n\r\n        }\r\n      })\r\n    }else if(fil === 1){\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('Validating..', 1.2)\r\n              .then(() => message.error('Email already taken!', 1));\r\n          };\r\n  \r\n          setTimeout(() => {\r\n            success();\r\n          }, 1000);\r\n          // this.props.history.push('/');\r\n        \r\n      \r\n    }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n          buttonText='Sign up with Google'\r\n          onSuccess={this.responseGoogle}\r\n          onFailure={this.responseGoogle}\r\n          disableMobileRedirect={true}\r\n          cookiePolicy={'single_host_origin'}\r\n          className='btnGoogle'\r\n          icon={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailRegister)));\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport FBReg from '../../components/RegisterFB/';\r\nimport GmailReg from './../../components/RegisterGmail/';\r\n\r\n class ArtGalReg extends Component {\r\n\r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n   \r\n\r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  submitHandler = (event) => {\r\n\r\n\r\n\r\n    event.preventDefault();\r\n   \r\n\r\n    let {\r\n      startingStore: {listOfUsers,addAccount, account},\r\n    } = this.props;\r\n\r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n    if (filAccounts === 0){\r\n\r\n    account.setProperty('accessType', 'Standard')\r\n    account.setProperty('acc_Status', 'Active')\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n    account.setProperty('accID',  `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    if (this.state.password === this.state.confPassword){\r\n      event.target.className += 'was-validated';\r\n    addAccount();\r\n\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('You have been successfully registered', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      success();\r\n    \r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 3000);\r\n  }else{\r\n    const error = () => {\r\n      // message.then(() =>\r\n      message.error('Please check your password', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n  const error = () => {\r\n\r\n  message.error('Your email or contact number is already taken', 2);\r\n\r\n};\r\nsetTimeout(() => {\r\n  error();\r\n\r\n}, 500);\r\n}\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Art Enthusiast <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start exploring the best artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n         \r\n        \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                style={{textTransform: 'capitalize'}}\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n  \r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n          \r\n              <FBReg user='Standard'/>\r\n              <GmailReg user='Standard'/>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                Register\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtGalReg));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nexport class UserReg extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n    \r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                User <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n            \r\n          \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='text'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n           \r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Full Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='usertype'\r\n                onChange={(accessType) =>\r\n                  account.setProperty('accessType', accessType.target.value)\r\n                }\r\n              >\r\n                <option> User Type </option>\r\n                <option value='Standard'> Art Gallery </option>\r\n                <option value='Artist'> Artist </option>\r\n                {/* <option value='Admin'> Admin </option> */}\r\n              </select>\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfCategories}\r\n                placeholder=\"Art Themes you'd like to follow\"\r\n                showCheckbox={true}\r\n                displayValue='catType'\r\n                onSelect={selectCategory}\r\n                // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n              />\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfStyles}\r\n                placeholder=\"Art Style you'd like to follow\"\r\n                showCheckbox={true}\r\n                onSelect={selectStyle}\r\n                displayValue='styleType'\r\n                // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n              />\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                onChange={(password) =>\r\n                  account.setProperty('password', password.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                onChange={(confirmPassword) =>\r\n                  account.setProperty(\r\n                    'confirmPassword',\r\n                    confirmPassword.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} />\r\n                <p className='req'>\r\n                  Acceptable documents include passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                SUBMIT\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UserReg));\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Icon, Modal } from 'antd';\r\n\r\nfunction getBase64 (file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass UploadMult extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: ''\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render () {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n          className=\"multsel\"\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadMult;","import React, {Component} from 'react';\r\nimport {MDBInput, MDBNavLink, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport UploadMult from '../../components/UploadMult';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport moment from 'moment';\r\n\r\nclass UploadWork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n      artImg:null,\r\n      ArtByMe:'',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtists();\r\n    getPrintSize()\r\n    getStyles();\r\n    getCategories();\r\n    getArtworkInfo();\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n    this.setState({\r\n      profileImg: URL.createObjectURL(event.target.files[0])\r\n    })\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n\r\n\r\n    this.setState({selectedFile: image});\r\n   \r\n  }\r\n  onSubmit(e) {\r\n    let userData= JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {upload, artwork,addNotif,notif},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    data.append('type', 'artwork');\r\n    \r\n    upload(data);\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('Artwork submitted', 1);\r\n      // );\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n    this.props.history.push('/SubmitArt');\r\n    setTimeout(() => {\r\n      this.props.history.push('/Upload');\r\n    }, 4000);\r\n\r\n\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\nnotif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\nnotif.setProperty('notifSender',userData.accID)\r\nnotif.setProperty('notifRecipient','admin-001')\r\nnotif.setProperty('notifSubject','Artwork')\r\nnotif.setProperty('notifMsg',`${userData.accFname} ${userData.accLname} submitted and artwork`)\r\nnotif.setProperty('notifDT',moment().format('MMM/DD/YYYY'))\r\nnotif.setProperty('notifStatus','unread')\r\n\r\naddNotif()\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n    let madeByMe= ()=>{\r\n     this.setState({ArtByMe:`${mydata.accFname} ${mydata.accLname}`})\r\n    }\r\n\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n   \r\n    artwork.setProperty('accID',mydata.accID)\r\n    artwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon'>\r\n          <div className='uploadart uploadwork clearfix'>\r\n            <h2>Upload Your Work</h2>\r\n            <form\r\n              onSubmit={this.onSubmit}\r\n              className='regform uploadform custform'\r\n            >\r\n              <div className='left'>\r\n                <div>\r\n                  <span  style={{marginBottom:'-8px'}}>Your Title</span>\r\n                  <MDBInput\r\n                     \r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>{\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback ' >\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}} className='custom-checkbox '>\r\n                <span>Artist</span>\r\n                <select\r\n                  value={this.state.ArtByMe}\r\n                  onChange={(artistName) =>\r\n                    artwork.setProperty('artistName', artistName.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <option>Artist</option>\r\n                  {listOfArtists.map((artist) => {\r\n                    return (\r\n                      <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                        {artist.accFname} {artist.accLname}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                <p className='inlinep' style={{marginLeft:'20px',marginTop:'-22px',paddingBottom:'22px'}}>\r\n                            <input\r\n                              type='checkbox'\r\n                              className='custom-control-input '\r\n                              id='anycat'\r\n                              onChange={()=>{madeByMe()}}\r\n                              \r\n                            />\r\n                            <label\r\n                              className='custom-control-label clabel'\r\n                              htmlFor='anycat'\r\n                              style={{fontSize:'12px',paddingTop:'4px'}}\r\n                            >\r\n                              Is this artwork made by you?\r\n                            </label>\r\n                        </p> \r\n                </div>\r\n                <div>\r\n                <span     style={{marginBottom:'-8px'}}>Year</span>\r\n                  <MDBInput\r\n              \r\n                    label='Year'\r\n                    type='number'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Themes</span>\r\n                  <p className='inlinep'>\r\n                    What themes would best help describe your artwork?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n              \r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art theme.\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span>Style</span>\r\n                  <p className='inlinep'>\r\n                    What styles are your artwork inspired by?{' '}\r\n                    <MDBNavLink to='#!' className='nobg'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art style.\r\n                  </div>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}}>\r\n                <span>Art Type</span>\r\n                <select\r\n                  className='usertype'\r\n                  onChange={(artType) =>\r\n                    artwork.setProperty('artType', artType.target.value)\r\n                  }\r\n                >\r\n                  <option> Art Type </option>\r\n                  <option value='Original'> Original </option>\r\n                  <option value='Secondary'> Secondary </option>\r\n                </select>\r\n                </div>\r\n                <div className='dim'>\r\n                  <span>Artwork Size</span>\r\n                 {/*  <ul>\r\n                    <li>\r\n                      <p>Unit of Measure</p>\r\n                      <select>\r\n                        <option>Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Length</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Width</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                  </ul> */}\r\n                         <Multiselect\r\n                 \r\n                 className='multsel'\r\n                 options={listOfPrintSize}\r\n                 placeholder='Printing Size'\r\n                 showCheckbox={true}\r\n                 displayValue='printSize'\r\n                 onSelect={selectArtSize}\r\n           \r\n               />\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span >Number of Copies</span>\r\n                  <p className='inlinep' style={{marginBottom:'-8px'}}>How many copies of your artworks are you selling?</p>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='number'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span>Authenticity Certificate</span>\r\n                  <p className='inlinep'>\r\n                    Do you have a document certifiying your artwork is original?\r\n                    Don’t know what this is?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <select>\r\n                    <option>No</option>\r\n                    <option>Yes</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <span style={{marginBottom:'-8px'}}>Price</span>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide the Art Price.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Description</span>\r\n                  <MDBInput\r\n                    label='How do you describe your current work?'\r\n                    type='textarea'\r\n                    rows='8'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n        \r\n                <div className='uploadreq clearfix'>\r\n                \r\n                  <div className='upload' >\r\n                    {/* <label htmlhtmlFor='submitart' htmlFor='submitart' disabled>\r\n                      Coming Soon\r\n                    </label>\r\n                    <input type='submit' id='submitart' disabled /> */}\r\n                    <MDBBtn type='submit' color='#fae933' style={{fontWeight:'bold'}}>\r\n                      Upload Your Work\r\n                    </MDBBtn>\r\n                  </div>\r\n\r\n                  <p style={{textAlign:'center',fontSize:'12px'}}>\r\n                    Your artwork will be sent to our team for review to see if\r\n                    it meets our standards. We will send you a notification if\r\n                    your artwork has already been uploaded to the site. Thank\r\n                    you for your patience. How long does the review take?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <div className='artsingle'>\r\n                  <span>Main Photo</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <img src={this.state.profileImg} style={{width:'500px',marginBottom:'16px'}}/>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                   \r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  {/* <UploadImage /> */}\r\n                </div>\r\n                <div className='artmult'>\r\n                  <span>More Photos of Your Artwork</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <UploadMult />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UploadWork));\r\n","import {toast} from 'react-toastify';\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case 'info':\r\n      toast.info(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 1200,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'success':\r\n      toast.success(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'warning':\r\n      toast.warn(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'error':\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    default:\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n  }\r\n};\r\n\r\nexport default notify;\r\n","import {MDBBtn, MDBCol, MDBIcon, MDBInput, MDBRow} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Notification from './Notif';\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass OrderTab extends Component {\r\n  state = {\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n    totalPrice: 0,\r\n    partnerPercentage:30,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n    getOrders();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      let total =\r\n        parseFloat(this.state.totalPrice) +\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        totalPrice: total,\r\n      });\r\n\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      let data = this.state.selected.filter((indexer) => {\r\n        if (indexer !== index) {\r\n          selectedArray.push(data);\r\n        }\r\n      });\r\n      let total =\r\n        parseFloat(this.state.totalPrice) -\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n        totalPrice: total <= 0 ? 0 : total,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n   \r\n    \r\n\r\n  addOrder = () => {\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n   let perctodec = this.state.partnerPercentage/100;\r\n   \r\n    let date = new Date();\r\n\r\n    let {\r\n      startingStore: {order, addOrder, editToCart,notif,addNotif},\r\n    } = this.props;\r\n\r\n  \r\n    let totalValue = perctodec * this.state.totalPrice;\r\n    console.log(perctodec,this.state.totalPrice,totalValue,'perc')\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    \r\n    order.setProperty('orderID',`${moment().format('YY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY,h:mm:ssa'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('totalAmount',this.state.totalPrice)\r\n    order.setProperty('partnerEarnings',totalValue)\r\n  \r\n    addOrder();\r\n    \r\n    let recipient = this.state.selected.map( ntf =>  (ntf.accID))\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient',userData.accID)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${userData.accFname } order an artwork(s)`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\naddNotif();\r\n    if (this.state.selected.length > 1) {\r\n      this.state.selected.map((item) => {\r\n        editToCart(item);\r\n     \r\n        Notification('success', 'Checkout Successfully');\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.1)\r\n            .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n           setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n      });\r\n    } else {\r\n      editToCart(this.state.selected[0]);\r\n\r\n      Notification('success', 'Checkout Successfully');\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.1)\r\n          .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n      setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n    }\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n\r\n  \r\n    let {\r\n      startingStore: {listOfOrder, listOfUserCart},\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n            {listOfUserCart.map((item, indexes) => {\r\n              if (listOfUserCart.length > 0) {\r\n                return (\r\n                  <MDBRow className='artlistorder' >\r\n                    <MDBCol md='1' >\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <MDBInput\r\n                          onChange={(data) => {\r\n                            this.selectedValue(\r\n                              indexes,\r\n                              data.target.checked,\r\n                              item\r\n                            );\r\n                          }}\r\n                          type='checkbox'\r\n                          id='checkbox1'\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='2' className='artimg colpad'>\r\n                      {item.artworkImg !== '' ? (\r\n                        <img src={item.artworkImg} alt='artwork' />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='4' className='artdet colpad'>\r\n                      <a\r\n                        href='#!'\r\n                        onClick={() => {\r\n                          this.props.history.push({\r\n                            pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                            state: {\r\n                              artistName: `${item.accFname} ${item.accLname}`,\r\n                              accImg: this.state.artistImg,\r\n                              artistDescription: this.state.accDescription,\r\n                              birthYear: this.state.birthYear,\r\n                              accFollowers: this.state.accFollowers,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        {item.artistName} <MDBIcon icon='arrow-right' />\r\n                      </a>\r\n                      <br />\r\n                      <p>\"{item.artworkName}\"</p>\r\n                      <p>\r\n                        Variations: {item.artworkMaterial}, {item.artworkSize},\r\n                        {item.artworkFramingOptions}\r\n                      </p>\r\n                      <p>\r\n                        &#8369;\r\n                        {item.artworkPrice\r\n                          ? Number(\r\n                              parseFloat(item.artworkPrice)\r\n                            ).toLocaleString('en')\r\n                          : ''}\r\n                      </p>\r\n                    </MDBCol>\r\n                    <MDBCol md='1' className='quan colpad'>\r\n                      {item.artworkQuantity !== ''\r\n                        ? `x${item.artworkQuantity}`\r\n                        : ''}\r\n                    </MDBCol>\r\n                    <MDBCol md='3' className='colpad'>\r\n                      <MDBRow className='sub'>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          Subtotal\r\n                        </MDBCol>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          &#8369;\r\n                          {item.artworkPaymentAmount\r\n                            ? Number(\r\n                                parseFloat(item.artworkPaymentAmount)\r\n                              ).toLocaleString('en')\r\n                            : ''}\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                    </MDBCol>\r\n                    <MDBCol md='1'>\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <a\r\n                          href='#!'\r\n                          onClick={() => {\r\n                            this.deleteItem(item);\r\n                          }}\r\n                        >\r\n                          <MDBIcon icon='trash' />\r\n                        </a>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                );\r\n              } else {\r\n                return 'Cart is Empty';\r\n              }\r\n            })}\r\n\r\n            <div className='acts clearfix'>\r\n              {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t</MDBRow> */}\r\n              <MDBRow className='actsrowcart'>\r\n                <MDBCol md='5' className='total'>\r\n                  TOTAL\r\n                </MDBCol>\r\n                <MDBCol md='7' className='total'>\r\n                  &#8369;\r\n                  {this.state.totalPrice > 0\r\n                    ? Number(parseFloat(this.state.totalPrice)).toLocaleString(\r\n                        'en'\r\n                      )\r\n                    : Number(parseFloat(0)).toLocaleString('en')}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <div className='actsbtn'>\r\n                    <MDBBtn\r\n                      color='#fae933'\r\n                      size='sm'\r\n                      className='recieve'\r\n                      disabled={this.state.totalPrice > 0 ? false : true}\r\n                      onClick={() => {\r\n                        this.addOrder();\r\n                      }}\r\n                    >\r\n                      Checkout\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Cart from './Cart';\r\nimport notify from '../components/Notif';\r\nimport moment from 'moment'\r\nclass AddToBag extends Component {\r\n  state = {\r\n    modal1: false,\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = () => {\r\n    let nr = 1;\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  addTocart = () => {\r\n    let {\r\n      startingStore: {cart, addToCart},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    cart.setProperty('artistName', this.props.cartData.artistName);\r\n    cart.setProperty('artworkName', this.props.cartData.artName);\r\n    cart.setProperty('artworkImg', this.props.cartData.artworkImg);\r\n    cart.setProperty('artworkPrice', this.props.cartData.artPrice);\r\n    cart.setProperty(\r\n      'artworkPaymentAmount',\r\n      parseFloat(this.props.cartData.artPrice) *\r\n        parseFloat(cart.artworkQuantity)\r\n    );\r\n    cart.setProperty('accID', userData.accID);\r\n    cart.setProperty('dateOfTransaction', moment().format('MMM/DD/YYYY'))\r\n    if (cart.artworkQuantity !== '' || cart.artworkQuantity !== null) {\r\n      notify('success', 'Artwork added successfully');\r\n      addToCart();\r\n    } else {\r\n      notify('error', 'Unsuccessful adding artwork');\r\n      // ari di butang ang alert!!!!!!!!!!!!!!!!!!!!!!\r\n    }\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      // let data = this.state.selected.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedArray.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      // let indexes = this.state.selectedCheckBox.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedCheck.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n  addOrder = () => {\r\n    \r\n    let {\r\n      startingStore: {order, addOrder,notif,addNotif},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let date = new Date();\r\n\r\n    order.setProperty(\r\n      'orderID',\r\n      `${getHash(date.getFullYear())}-${Math.floor(1000 + Math.random() * 9000)}`\r\n    );\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('artworkPaymentAmount',this.state.totalPrice)\r\n    addOrder();\r\n\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient','admin-001')\r\n    notif.setProperty('notifSubject','Order')\r\n    notif.setProperty('notifMsg',`${userData.accFname} placed an order`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif();\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n \r\n    let {\r\n      startingStore: {listOfUserCart},\r\n    } = this.props;\r\n\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          disabled={!this.props.disable}\r\n          onClick={() => {\r\n            this.toggle();\r\n            this.addTocart();\r\n          }}\r\n       color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n        >\r\n          Add to Bag\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => {\r\n              this.toggle();\r\n            }}\r\n          >\r\n            <h3>Cart</h3>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='cartord'>\r\n            <Cart />\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AddToBag)));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBModal} from 'mdbreact';\r\n\r\nclass ViewRoom extends Component {\r\n\r\n  state = {\r\n    modal14: false,\r\n\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='viewroom'>\r\n        <a\r\n          href='#!'\r\n          onClick={this.toggle(14)}\r\n          className='viewinroom'\r\n          color='transparent'\r\n        >\r\n          View in Room\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='room'\r\n        >\r\n          <div className='living-con'>\r\n            <div className='frame' >\r\n            <p>{this.props.selectedsize}</p>\r\n              <img src={this.props.img} alt=''   \r\n              style={{margin:'auto',width:this.props.Awidth,height:this.props.Aheight}}\r\n          \r\n              />\r\n           \r\n            </div>\r\n       \r\n          </div>\r\n          <MDBBtn\r\n            onClick={this.toggle(14)}\r\n            className='closeviewinroom'\r\n            color='transparent'\r\n          >\r\n            Close \r\n          </MDBBtn>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewRoom;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from \"antd\";\r\nimport { MDBBtn, MDBInput, MDBLink, MDBModal, MDBModalHeader } from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FbLogin from \"../FbLogin\";\r\nimport GgLogin from \"../GoogleLogin/\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass ATLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = \"modal\" + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = \"\";\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n\r\n    let {\r\n      startingStore: {\r\n        loginAccount,\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.2)\r\n            .then(() => message.error(\"Login Unsuccessful\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/Home\");\r\n        }, 500);\r\n      } else if (\r\n        // (typeof res === 'string')\r\n        res === 4\r\n      ) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push(\"/ArtistHome\");\r\n        }, 500);\r\n      } else if (res === 5) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() =>\r\n              message.error(\"Please wait for your account confirmation\", 1)\r\n            );\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 6) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Your account request rejected\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Username or password is incorrect\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n   \r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n                          <MDBLink to='#' style={{marginTop:'-6px'}}  onClick={this.toggle(1)}>Add to List</MDBLink>\r\n                     \r\n  \r\n      <div className=\"btnmodal\">\r\n        {/* <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color=\"#FAE933\"\r\n          className=\"btn btnBlack loginbtn\"\r\n        >\r\n          Login\r\n        </MDBBtn> */}\r\n\r\n       \r\n\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className=\"modalform modlog\"\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className=\"login\">\r\n            <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(ATLogin)));\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GoogleLogin from '.././GoogleLogin/index';\r\nimport FbLogin from '../FbLogin';\r\n\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getArtistFollowArtwork(account.accEmailAddress);\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n\r\n         <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          \r\n          color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n         >\r\n         Add to Bag\r\n         </MDBBtn>\r\n        \r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  className='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label className='custom-control-label' htmlFor='rempass' style={{marginBottom:'10px'}}> \r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GoogleLogin />\r\n         \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from \"antd\";\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader ,MDBIcon} from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FbLogin from \"./../FbLogin\";\r\nimport GgLogin from \"../GoogleLogin/\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = () => () => {\r\n  \r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  \r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = \"\";\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n\r\n    let {\r\n      startingStore: {\r\n        loginAccount,\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.2)\r\n            .then(() => message.error(\"Login Unsuccessful\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/Home\");\r\n        }, 500);\r\n      } else if (\r\n        // (typeof res === 'string')\r\n        res === 4\r\n      ) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push(\"/ArtistHome\");\r\n        }, 500);\r\n      } else if (res === 5) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() =>\r\n              message.error(\"Please wait for your account confirmation\", 1)\r\n            );\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 6) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Your account request rejected\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Username or password is incorrect\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n   \r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n             {/* <div > <MDBIcon icon='plus'  onClick={this.toggle()}  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'1px'}}/><p style={{fontSize:'9px',color:'#4285F4',marginTop:'3px'}}>Follows</p></div> */}\r\n       \r\n       \r\n          <MDBIcon icon='plus' onClick={this.toggle()}   style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'4px'}}/><p onClick={this.toggle()}  style={{fontSize:'9px',color:'#4285F4',marginTop:'3px'}}>Follow</p>\r\n       \r\n        <div className=\"btnmodal\"> \r\n\r\n       \r\n\r\n        <MDBModal\r\n          isOpen={this.state.modal}\r\n        \r\n          centered\r\n          className=\"modalform modlog\"\r\n        >\r\n          <MDBModalHeader toggle={this.toggle()}></MDBModalHeader>\r\n          <div className=\"login\">\r\n            <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(Login)));\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { message, Skeleton } from 'antd';\r\nimport { MDBBtn, MDBIcon, MDBLink, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton, FacebookIcon, FacebookShareButton,\r\n\r\n\r\n  FacebookShareCount\r\n} from \"react-share\";\r\nimport AddToBag from '../../components/AddToBag';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport ViewRoom from '../../components/ViewRoom';\r\nimport art from '../../images/artworks/art1.png';\r\nimport ATLogin from './../../components/ATLogin';\r\nimport LoginCart from './../../components/CartLogin/';\r\nimport FollowLogin from './../../components/FollowLogin';\r\n\r\n\r\nclass SingleArt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n      condition: false,\r\n      isToggleOn: true,\r\n      selectedSize:'AP - portrait, 1.5x2',\r\n    height:'2cm',\r\n    width:'1.5cm',\r\n    };\r\n  \r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    \r\n  }\r\n  // state={\r\n  //   selectedSize:'AP - portrait, 1.5x2',\r\n  //   height:'2cm',\r\n  //   width:'1.5cm',\r\n  // }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    \r\n    \r\n    let {\r\n      startingStore: {\r\n        getArtistArtwork,\r\n        getSingleArtists,\r\n        getSingleArtworkInfo,\r\n        getToCart,\r\n        getPrintSize,\r\n        \r\n      },\r\n    } = this.props;\r\n    getSingleArtworkInfo(this.props.match.params.id);\r\n    getSingleArtists(this.props.match.params.name);\r\n    getArtistArtwork(this.props.match.params.name);\r\n    getToCart();\r\n    getPrintSize();\r\n    \r\n    //   .then(response => {\r\n\r\n    //  })\r\n    // getToCart();\r\n  }\r\n\r\n  checkFollower = (follower) => {\r\n    if (follower !== undefined && follower[0] !== '') {\r\n      return follower.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  followArtist = () => {\r\n    message.loading({content: 'Loading...'});\r\n    setTimeout(() => {\r\n      message.success({content: 'Loaded!', duration: 2});\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        cart,\r\n        listOfSingleArtwork,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n        followArtist,\r\n        listRelatedWorkByCategory,\r\n        listOfMyLists,\r\n        listOfPrintSize,\r\n        addMyLists,\r\n        mylists,\r\n        addArtShare,\r\n        artshare,\r\n       \r\n      },\r\n    } = this.props;\r\n\r\n    const options = [];\r\n    for (let i = 1; i <= 50; i++) {\r\n      options.push(i);\r\n    }\r\n\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    let changeSize =(size)=>{\r\n    \r\n  \r\n      cart.setProperty('artworkSize',size)\r\n\r\n      if (size === 'AP - portrait, 1.5x2'){\r\n        this.setState({height:'2cm',width:'1.5cm',selectedSize:'AP - portrait, 1.5x2'})\r\n      }else if( size === 'AP - portrait, 3x4'){\r\n        this.setState({height:'4cm',width:'3cm',selectedSize:'AP - portrait, 3x4'})\r\n      }else if( size === 'B - square, 2x2'){\r\n        this.setState({height:'2cm',width:'2cm',selectedSize:'B - square, 2x2'})\r\n      }else if( size === 'B - square, 4x4'){\r\n        this.setState({height:'4cm',width:'4cm',selectedSize:'B - square, 4x4'})\r\n      }else if( size === 'CP - portrait, 2x3'){\r\n        this.setState({height:'3cm',width:'2cm',selectedSize:'CP - portrait, 2x3'})\r\n      }else if( size === 'CP - portrait, 4x6'){\r\n        this.setState({height:'6cm',width:'4cm',selectedSize:'CP - portrait, 4x6'})\r\n      }else if( size === 'DL - landscape, 2x1.5'){\r\n        this.setState({height:'1.5cm',width:'2cm',selectedSize:'DL - landscape, 2x1.5'})\r\n      }else if( size === 'DL - landscape, 4x3'){\r\n        this.setState({height:'3cm',width:'4cm',selectedSize:'DL - landscape, 4x3'})\r\n      }else if( size === 'EL - landscape, 3x2'){\r\n        this.setState({height:'2cm',width:'3cm',selectedSize:'EL - landscape, 3x2'})\r\n      }else if( size === 'EL - landscape, 6x4'){\r\n        this.setState({height:'4cm',width:'6cm',selectedSize:'EL - landscape, 6x4'})\r\n      }\r\n\r\n\r\n    }\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n     \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',logged.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else if(getmyList === 1){\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n     let artworkList = listofArtistArtwork.map(data => data.artSize)\r\n\r\n\r\n     let countShares =()=>{\r\n\r\n      artshare.setProperty('shareID',`${logged.accID}-${Math.floor(100 + Math.random() * 900)}`)\r\n      artshare.setProperty('userID',logged.accID)\r\n  \r\n      artshare.setProperty('social','Facebook')\r\n      artshare.setProperty('dateTime',moment().format(\"MMM/DD/YYYY\"))\r\n      addArtShare()\r\n\r\n     }\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artcon'>\r\n            <div className='clearfix'>\r\n              <div className='left'>\r\n                <div className='artworkInfo'>\r\n                  <h2 className='title artistname'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artistName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    <MDBBtn\r\n                     \t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t   style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px',marginLeft:'16px'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t outline\r\n\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t   title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n\t\t\t\t\t\t\t\t\t\t\t   onClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t this.handleClick(followArtist(listofArtistInfo._id))\r\n\t\t\t\t\t\t\t\t\t\t\t   }\r\n                    >\r\n                      {mydata === null ? (\r\n                  <FollowLogin/>\r\n\r\n                      ) : (\r\n                        (this.state.isToggleOn === null)?(\r\n                          (\t<div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>)\r\n                        ):\r\n                       'Following'\r\n                      )}\r\n                    </MDBBtn>\r\n                  </h2>\r\n                  <span className='arttitle'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    ,&nbsp;\r\n                  </span>\r\n                  <span className='year'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artworkDateCreated\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </span>\r\n                  <div className='artImg'>\r\n                    <img\r\n                      src={\r\n                        listOfSingleArtwork[0] !== undefined ? (\r\n                          listOfSingleArtwork[0].artworkImg\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )\r\n                      }\r\n                      alt=''\r\n                    />\r\n\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      <ul className='artOpt'>\r\n                        {' '}\r\n                        {(logged === null) ?(\r\n                          <li>\r\n                          <ATLogin/>\r\n                          </li>\r\n                        ):(\r\n                          <li onClick={()=>{addtoList(listOfSingleArtwork[0])}} >\r\n                          <MDBLink to='#' onClick={()=>{addtoList(listOfSingleArtwork[0])}} style={{marginTop:'-6px'}}>Add to List</MDBLink>\r\n                        </li>\r\n                        ) }\r\n                     \r\n                        <li >\r\n                          <ViewRoom img={listOfSingleArtwork[0].artworkImg}  Aheight={this.state.height} Awidth={this.state.width} selectedsize = {this.state.selectedSize}/>\r\n                        </li>\r\n                        {' '}\r\n                      </ul>\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                   { (logged === null)?(\r\n                      <Fragment></Fragment>\r\n                    ):(\r\n                    <div style={{marginBottom:'10px'}}>\r\n<FacebookShareButton url={window.location.href} appId='216207193165878' pageId='301933277234280' subject='Share' hashtag=\"#ArtBasically\" style={{marginRight:'8px'}}\r\nonShareWindowClose={()=>countShares()}\r\n>\r\n  <FacebookIcon size={40}   round={true}/>\r\n\r\n\r\n  </FacebookShareButton>\r\n\r\n  <EmailShareButton url={window.location.href}>\r\n<EmailIcon size={40}   round={true}/>\r\n  </EmailShareButton>\r\n\r\n  </div>\r\n  )}\r\n                    \r\n                    \r\n                  </div>\r\n                  <div className='abtArtist'>\r\n                    <h4>About the Artist</h4>\r\n                    <span>\r\n                      {listOfSingleArtwork[0] !== undefined ? (\r\n                        listOfSingleArtwork[0].artistName\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                      , b.\r\n                      {listofArtistInfo.birthYear}.\r\n                    </span>\r\n                    <p>{listofArtistInfo.accDescription}</p>\r\n\r\n                    <a\r\n                      href=''\r\n                      className='seemore'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${listOfSingleArtwork[0].artistName}`,\r\n                          state: {\r\n                            artistName:\r\n                              listOfSingleArtwork[0] !== undefined\r\n                                ? listOfSingleArtwork[0].artistName\r\n                                : '',\r\n                            \"accImg\": listofArtistInfo.artistImg,\r\n                            \"artistDescription\": listofArtistInfo.accDescription,\r\n                            \"birthYear\": listofArtistInfo.birthYear,\r\n                            \"accFollowers\": listofArtistInfo.accFollowers\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Visit artist profile\r\n                      <MDBIcon icon='caret-right' />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <h2>\r\n                  Customize your  <br/> order.\r\n                </h2>\r\n                \r\n               \r\n              \r\n                <p className='inlinep' style={{marginTop:'-10px',paddingBottom:'22px'}}>\r\n                  Can't Decide? <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                </p>\r\n                <form\r\n                  onSubmit={this.submitHandler}\r\n                  className='regform uploadform custform'\r\n                >\r\n                  <div style={{marginBottom:'16px'}}>\r\n                    <span>Material</span>\r\n                    <select\r\n                      onChange={(artworkMaterial) =>\r\n                        cart.setProperty(\r\n                          'artworkMaterial',\r\n                          artworkMaterial.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Material\r\n                      </option>\r\n                      <option value='Print on Sintra (Matte)'>Print on Sintra (Matte)</option>\r\n                      <option value='Print on Sintra (Glossy)'>Print on Sintra (Glossy)</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      What material is the best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}} >\r\n                    <span>Size</span>\r\n            \r\n                    <select\r\n                      onChange={(Asize) => changeSize(Asize.target.value)}\r\n                    >\r\n                      {listOfPrintSize.map((sizes) => (\r\n                          <option key={sizes.printSize} value={sizes.printSize}>\r\n                            {  sizes.printSize == artworkList[0] ? \r\n                           ( \r\n                             `${sizes.printSize} Recommended`\r\n                            ):(\r\n                              sizes.printSize\r\n                            )\r\n                           \r\n                            }\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which size best fits your needs?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}}>\r\n                    <span>Framing Options</span>\r\n                    <select\r\n                      onChange={(artworkFramingOptions) =>\r\n                        cart.setProperty(\r\n                          'artworkFramingOptions',\r\n                          artworkFramingOptions.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Framing Options\r\n                      </option>\r\n                      <option value='Rustic Barnwood Distressed Wood'>\r\n                        Rustic Barnwood Distressed Wood\r\n                      </option>\r\n                      <option value='Natural Wood'>Natural Wood</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which framing option is best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}}>\r\n                    <span>Quantity</span>\r\n                    {listOfSingleArtwork.artType === 'Original' ? (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option selected value=''>\r\n                          Choose Quantity\r\n                        </option>\r\n                        <option value='1'>1</option>\r\n                      </select>\r\n                    ) : (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        {options.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    )}\r\n                    <a className='blacklink' href=''>\r\n                      This is part of a limited edition set of 12.\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Your total is</span>\r\n                    <span className='nopad'>\r\n                      PHP{' '}\r\n                      {Number(\r\n                        parseFloat(\r\n                          listOfSingleArtwork[0] !== undefined\r\n                            ? parseFloat(listOfSingleArtwork[0].artPrice) *\r\n                                parseFloat(cart.artworkQuantity)\r\n                            : '0.00'\r\n                        )\r\n                      ).toLocaleString('en')}\r\n                    </span>\r\n                    <a className='bluelink' href=''>\r\n                      How long will your order arrive?\r\n                    </a>\r\n                    <div style={{float: 'right'}}>\r\n                      {mydata === null ? (\r\n                        <LoginCart/>\r\n                      ):( \r\n                        \r\n                        <AddToBag\r\n                        cartData={listOfSingleArtwork[0]}\r\n                        disable={\r\n                          cart.artworkFramingOptions !== '' ? true : false\r\n                        }\r\n                      />)}\r\n                    \r\n                      {/* <ViewCart cartData={listOfSingleArtwork[0]} /> */}\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className='relcat'>\r\n            <h3>\r\n              Other Works by{' '}\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listOfSingleArtwork[0].artistName\r\n              ) : (\r\n                <Skeleton active />\r\n              )}\r\n            </h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listofArtistArtwork\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relcat'>\r\n            <h3>Related Works by Category</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listRelatedWorkByCategory[0] !== undefined ? (\r\n                listRelatedWorkByCategory\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relartist'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                  </div>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Rene Gagnon</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Eelus</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Banksy</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArt)))\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\n\r\nimport {message} from 'antd';\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n      minValue: 0,\r\n      maxValue: 10,\r\n    };\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    //new\r\n    this.setState({\r\n      minValue: (value - 1) * numEachPage,\r\n      maxValue: value * numEachPage,\r\n    });\r\n  };\r\n  componentDidMount(){\r\n    let{startingStore:\r\n      {\r\n        // getAllArtworks,\r\n      getArtworkInfo}}=this.props;\r\n    // getAllArtworks();\r\n    getArtworkInfo()\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nif (mydata === null){\r\n\r\n}else{\r\n  let{startingStore:{getMyLists}}=this.props;\r\n    getMyLists()\r\n  }\r\n\r\n  \r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfArtworks,\r\n       \r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        listOfMyLists,\r\n        mylists,\r\n        deleteMyLists,\r\n        addMyLists,\r\n     \r\n      },\r\n    } = this.props;\r\n\r\n\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',mydata.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n\r\n\r\n    let removeToLists = (list)=>{\r\n\r\nmylists.setProperty('mylistsID',list.mylistsID)\r\n\r\n\r\ndeleteMyLists()\r\n\r\nconst success = () => {\r\n  message\r\n    .loading('', 0.5)\r\n    .then(() => message.success('Artwork removed to your list', 3));\r\n};\r\nsetTimeout(() =>{\r\n  success()\r\n},100)\r\n\r\nsetTimeout(()=>{\r\n  window.location.reload(false);\r\n},1500)\r\n    }\r\n\r\n\r\n    \r\n\r\n    let artworks = () => {\r\n      if (this.props.type === 'foryou') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName,artID:image.artworkID}\r\n                  }}\r\n                >\r\n               {/* <Image publicId={image.artworkImg} secure=\"true\"></Image>    */}\r\n               <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName,artID:image.artworkID}\r\n                  }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n                  }}\r\n                      \r\n                     \r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                \r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'bestseller') {\r\n        return toJS(listOfArtworks)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              \r\n              <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                  className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n           \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n           \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'discover') {\r\n        return toJS(listOfArtworks)\r\n          \r\n          .map((image,i) => {\r\n            \r\n            return(\r\n\r\n            <li key={i}>\r\n            \r\n            <Link\r\n                  to={{  pathname: `/Art/${image.artworkID}/${image.artistName}`,}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n             \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n          \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                    \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          )});\r\n      } else if (this.props.type === 'categoriesfollow') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <Link\r\n                  to={{ pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n             \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n            \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                  \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'artistyoufollow') {\r\n        return toJS(listOfArtistFollowed)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n            <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n             \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n            \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'latest') {\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'Approved' || art.artworkStatus === 'Active'))\r\n         .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n                     <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n           \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n              \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }else if(this.props.type === 'yourlists'){\r\n        return toJS(listOfMyLists.filter(art=> art.accID === mydata.accID))\r\n        .reverse()\r\n         .map((image,i) => (\r\n           <li key={i}>\r\n               <Link\r\n                 to={{ pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n               <div className='artlabel'>\r\n                 <span className='new'>NEW</span>\r\n                 <span className='hot'>HOT</span>\r\n                 <span className='type'>\r\n                   {image.artType === 'Secondary'\r\n                     ? 'Second Edition'\r\n                     : 'Original'}\r\n                 </span>\r\n               </div>\r\n              \r\n                 <img src={image.artworkImg} alt='artwork' />\r\n           \r\n             </Link>\r\n             <div className='artistinfo clearfix pad10'>\r\n      \r\n                      <Link\r\n                      to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                  \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                 to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                  \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n           \r\n           \r\n           <MDBBtn\r\n             className='ifollow'\r\n             color='transparent'\r\n             floating\r\n             rounded\r\n             style={{color:'red'}}\r\n             onClick={() => removeToLists(image)}\r\n           >\r\n             \r\n             <MDBIcon icon='minus' style={{color:'red'}}/>\r\n           </MDBBtn>\r\n         </div>\r\n           </li>\r\n         ));\r\n      }else if (this.props.type === 'onSale') {\r\n    \r\n        let a =listOfArtworks.filter(art=> art.artworkStatus === 'onSale')\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'onSale'))\r\n         \r\n          .map((image,i) => (\r\n            <li key={i}>\r\n               <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  \r\n                  <span className='hot'>On Sale</span>\r\n                  <span className='new'>20% Off</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n            \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n           \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                      \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                    \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.price.length !== 0 ? (\r\n          <ul className='col3img clearfix'>\r\n            {this.props.price.map((image,i) => {\r\n              return (\r\n                <li key={i}>\r\n                 <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n               \r\n                      <img src={image.artworkImg} alt='artwork' />\r\n                    </Link>\r\n                 \r\n                  <div className='artistinfo clearfix pad10'>\r\n              \r\n                  <Link\r\n                      to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName\r\n                      }\r\n                 \r\n                  }}\r\n                >\r\n                     <p>{image.artistName}</p>\r\n                 \r\n                </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n        )}\r\n\r\n        {/* <List defaultCurrent={1} pageSize={10} dataSource={listOfArtworks}/> */}\r\n\r\n        <div>\r\n          <Pagination //new\r\n            defaultCurrent={1}\r\n            defaultPageSize={numEachPage}\r\n            onChange={this.handleChange}\r\n            total={\r\n              this.props.type.length !== 0\r\n                ? this.props.type.length\r\n                : artworks.length\r\n            }\r\n            //\r\n          />\r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter ,  listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Discover Emerging Artists </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }else if (type === 'yourlists'){\r\n        return <h3>My Lists</h3>;\r\n      }else{\r\n        console.log('error')\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n                <h4>Search by Filter</h4>\r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n  \r\n\r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n           \r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { BackTop, Pagination } from 'antd';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n    };\r\n  }\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  executeOnClick(isExpanded) {\r\n    console.log(isExpanded);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfUsers, followArtist, listofArtistInfo},\r\n    } = this.props;\r\n    let listOfArtists = listOfUsers.filter((artist) => {\r\n      if (artist.accessType === 'Artist') {\r\n        return artist;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artists'>\r\n          <section className='latest'>\r\n            <h3 style={{textAlign: 'center', padding: '20px 20px 50px 20px'}}>\r\n              All Artists\r\n            </h3>\r\n            <ul className='col3img colartists clearfix'>\r\n              {listOfArtists.map((image) => (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <img\r\n                      alt=''\r\n                      src={image.accImg}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>\r\n                      {image.accFname} {image.accLname}\r\n                    </p>\r\n                    {/* <a href=\"\" className=\"seeworks\"\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: '/Artist',\r\n                          state: {\r\n                            \"artistName\": this.state.artworkInfo[0] !== undefined ? this.state.artworkInfo[0].artistName : \"\",\r\n                            \"accImg\": this.state.artistImg,\r\n                            \"artistDescription\": this.state.accDescription,\r\n                            \"birthYear\": this.state.birthYear,\r\n                            \"accFollowers\": this.state.accFollowers\r\n                          }\r\n                        })\r\n                      }}\r\n                  > See Works &rarr; </a> */}\r\n                    <a\r\n                      href='#!'\r\n                      className='seeworks'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      See Works &rarr;\r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      onClick={() => followArtist(listofArtistInfo._id)}\r\n                    >\r\n                      <MDBIcon icon='plus' />\r\n                    </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n              {/* <li>\r\n                <a href=\"\" className=\"artlink\">\r\n                  <img src={artist} />\r\n                </a>\r\n                <a className=\"artistinfo clearfix pad10\">\r\n                  <p>Jane Doe</p>\r\n                  <MDBNavLink to=\"#!\" className=\"seeworks\"> See Works &rarr; </MDBNavLink>\r\n                  <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </section>\r\n\r\n          <Pagination dataSource={listOfArtists} total={listOfArtists} />\r\n\r\n          <div className='bttop clearfix'>\r\n            {/* <MDBNavLink to=\"/Upload\" className=\"btnYellow\">Add Yours</MDBNavLink> */}\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!'>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artists));\r\n","import { MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass CProfile extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts()\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listofUsers\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              <div className='left'>\r\n                <div className='artistpp'>\r\n                  {/* <img src={this.props.location.state.accImg} /> */}\r\n                  {/* {listofArtistInfo !== undefined ? (\r\n                    <img src={listofArtistInfo.accImg} alt='' />\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                </div>\r\n                <div className='artistInfo'>\r\n                  {/* {listofArtistInfo.accFname !== undefined ? (\r\n                    <h2 className='title'>\r\n                      {`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n                   \r\n                    </h2>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )}\r\n                  {listofArtistInfo !== undefined ? (\r\n                    <span className='bday'>\r\n                      {listofArtistInfo.accAddress}, born{' '}\r\n                      {listofArtistInfo.birthYear}\r\n                    </span>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                  <span className='estart'>Established Artist</span>\r\n                  <MDBNavLink\r\n                    to={`/CProfileEdit/${this.props.match.params.id}`}\r\n                    className='pencil'\r\n                  >\r\n                    <MDBIcon icon='pencil-alt' />\r\n                  </MDBNavLink>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    489\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className='artistbio clearfix'>\r\n              <h4 className='paddh4'>Biography</h4>\r\n              {/* {listofArtistInfo !== undefined ? (\r\n                <p>{listofArtistInfo.artistDescription}</p>\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </div>\r\n            <div className='relatedcat clearfix'>\r\n              <h4 className='paddh4'>Related Categories</h4>\r\n              <div className='catlist'>\r\n                {/* {listofArtistCategories[0] !== [] ||\r\n                listofArtistCategories[0] !== undefined ? (\r\n                  listofArtistCategories.map((cat) => (\r\n                    <MDBNavLink to='#!'>{cat}</MDBNavLink>\r\n                  ))\r\n                ) : (\r\n                  <MDBNavLink to='#!'>No Categories</MDBNavLink>\r\n                )} */}\r\n              </div>\r\n              <a href='#!' className='seemore'>\r\n                See More &nbsp;\r\n                <MDBIcon icon='caret-right' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers of {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Latest Work by {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Favorites</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Following</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                     \r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfile));\r\n","import React, {Component} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Steps} from 'antd';\r\nimport {\r\n  MDBRow,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport art from '../images/artworks/art1.png';\r\n\r\nconst {Step} = Steps;\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal1: false,\r\n    pendingOrders: undefined,\r\n    steps: 0,\r\n  };\r\n  checkSteps = (status) => {\r\n   \r\n    if (status === 'Pending') {\r\n      this.setState({\r\n        steps: 1,\r\n      });\r\n    } else if (status === 'PendingPrint') {\r\n      this.setState({\r\n        steps: 2,\r\n      });\r\n    }else if ( status === 'Printing') {\r\n      this.setState({\r\n        steps: 3,\r\n      });\r\n    } else if (status === 'ForDelivery') {\r\n      this.setState({\r\n        steps: 4,\r\n      });\r\n    } else if (status === 'Completed' || status === 'Received') {\r\n      this.setState({\r\n        steps: 5\r\n      });\r\n    } else if (status === 'PrintRejected' || status === 'Rejected') {\r\n      this.setState({\r\n        steps: 6,\r\n      });\r\n    }\r\n  };\r\n  toggle = (nr) => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n      pendingOrders: this.props.pendingOrders,\r\n      // steps: this.checkSteps(this.props.steps),\r\n    });\r\n    this.checkSteps(this.props.steps);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => this.toggle(1)}\r\n          color='#fae933'\r\n        >\r\n          Track order\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => this.toggle(1)}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() => this.toggle(1)}>\r\n            Track order\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='float-right'>\r\n              <p>\r\n                ORDER ID:{' '}\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderID\r\n                  : '00-000-XXXX'}\r\n              </p>\r\n            </div>\r\n\r\n            {this.state.steps === 6 ? (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Rejected'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n              </Steps>\r\n            ) : (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 2 ? 'finish' : 'wait'}\r\n                  title='Verified'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 3 ? 'finish' : 'wait'}\r\n                  title='Printing'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 4 ? 'finish' : 'wait'}\r\n                  title='Shipped'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps === 5 ? 'finish' : 'wait'}\r\n                  title='Completed'\r\n                />\r\n              </Steps>\r\n            )}\r\n\r\n            <div className='artlist'>\r\n              <div className='cartord'>\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderItems.map((item) => {\r\n                      return (\r\n                        <MDBRow className='artlistorder'>\r\n                          <MDBCol md='3' className='artimg colpad'>\r\n                            {item.artworkImg !== null ? (\r\n                              <img\r\n                                className='item-image'\r\n                                src={item.artworkImg}\r\n                                alt='artwork'\r\n                              />\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </MDBCol>\r\n                          <MDBCol md='5' className='artdet colpad'>\r\n                            <a\r\n                              href='#!'\r\n                              onClick={() => {\r\n                                this.props.history.push({\r\n                                  pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                  state: {\r\n                                    artistName: `${item.accFname} ${item.accLname}`,\r\n                                    accImg: this.state.artistImg,\r\n                                    artistDescription: this.state\r\n                                      .accDescription,\r\n                                    birthYear: this.state.birthYear,\r\n                                    accFollowers: this.state.accFollowers,\r\n                                  },\r\n                                });\r\n                              }}\r\n                            >\r\n                              {' '}\r\n                              {\r\n                                item.artistName\r\n                              } <MDBIcon icon='arrow-right' />{' '}\r\n                            </a>\r\n                            <br />\r\n                            <p>\"{item.artworkName}\"</p>\r\n                            <p>\r\n                              Variations: {item.artworkMaterial},{' '}\r\n                              {item.artworkSize}, {item.artworkFramingOptions}\r\n                            </p>\r\n                            <p>&#8369; {item.artworkPaymentAmount}</p>\r\n                          </MDBCol>\r\n                          <MDBCol md='1' className='quan colpad'>\r\n                            x{item.artworkQuantity}\r\n                          </MDBCol>\r\n                          <MDBCol md='3' className='colpad'>\r\n                            <MDBRow>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                Subtotal\r\n                              </MDBCol>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                &#8369;{' '}\r\n                                {item.artworkPaymentAmount\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPaymentAmount)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </MDBCol>\r\n                            </MDBRow>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      );\r\n                    })\r\n                  : ''}\r\n              </div>\r\n\r\n              <div className='acts clearfix'>\r\n                {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t</MDBRow> */}\r\n                <MDBRow className='actsrow'>\r\n                  <MDBCol md='2' className='total'>\r\n                    Total\r\n                  </MDBCol>\r\n                  <MDBCol md='10' className='total'>\r\n                    {(this.state.pendingOrders !== undefined\r\n                      ? 'PHP ' +\r\n                        this.state.pendingOrders.orderItems.reduce(\r\n                          (a, b) =>\r\n                            parseFloat(a) + parseFloat(b.artworkPaymentAmount),\r\n                          0\r\n                        )\r\n                      : '0').toLocaleString('en-GB', {\r\n                        style: 'currency',\r\n                        currency: 'PHP',\r\n                      })}\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                {/* <div className='actsbtn'>\r\n                  <MDBBtn size='sm' className='recieve'>\r\n                    Order Received\r\n                  </MDBBtn>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            {/* <MDBTable style={{ textAlign: \"center\" }}>\r\n            <MDBTableHead>\r\n              <th>Material</th>\r\n              <th>Size</th>\r\n              <th>Framing Options</th>\r\n              <th>Quantity</th>\r\n              <th>Status</th>\r\n              <th>Price</th>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>Total Price</td>\r\n                <td>&#8369; 300,000</td>\r\n              </tr>\r\n            </MDBTableBody>\r\n          </MDBTable> */}\r\n          </MDBModalBody>\r\n          {/* <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={this.toggle(1)}>Close</MDBBtn>\r\n        </MDBModalFooter> */}\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n    MDBBtn,\r\n    MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment'\r\nimport {message} from 'antd'\r\n\r\n\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal: false,\r\n\r\n  };\r\n\r\n\r\n  render() {\r\nlet {startingStore:{feedback,addFeedback}}=this.props;\r\n\r\n  \r\n let toggle = () => {\r\n  \r\n    this.setState({modal: true});\r\n\r\n    feedback.setProperty('feedbackID',`fb${Math.floor(1000 + Math.random() * 9000)}`)\r\n    feedback.setProperty('accID',this.props.orderInfo.accID)\r\n   \r\n    feedback.setProperty('orderID',this.props.orderInfo.orderID)\r\n    feedback.setProperty('date',moment().format('MMM/DD/YYYY'))\r\n    \r\n  };   \r\n\r\n  let close = ()=>{\r\n\r\n    this.setState({modal: false});\r\n  }\r\n  let submitFeedback = ()=>{\r\n\r\n    addFeedback();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 1)\r\n        .then(() => message.success('Feedback sent', 3));\r\n    };\r\n\r\n \r\n    \r\n   setTimeout(()=>{\r\n   success()\r\n   },600)\r\n   setTimeout(()=>\r\n   this.setState({modal: false})\r\n    ,1500)\r\n\r\n  }\r\n              \r\n    \r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => toggle()}\r\n        \r\n        >\r\n          Send us feedback\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal}\r\n          toggle={() => toggle()}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() =>close()} style={{backgroundColor:'#231F20'}}>\r\n           <h6 style={{color:'white'}}>Feedback</h6> \r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\">\r\n            Please provide us feedback to improve Art,Basically.\r\n            </label>\r\n            <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"5\"\r\n            onChange={(feedbackNote) =>\r\n                feedback.setProperty('feedbackNote', feedbackNote.target.value)\r\n              }\r\n            />\r\n        </div>\r\n\r\n          </MDBModalBody>\r\n         <MDBModalFooter>\r\n          <MDBBtn color=\"#fae933\"  size='sm'  className='recieve'  onClick={()=>submitFeedback()}>Submit</MDBBtn>\r\n        </MDBModalFooter>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBRow,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport OrderDetails from './OrderDetails';\r\nimport Cart from './Cart';\r\nimport {message} from 'antd';\r\nimport Feedback from './Feedback/'\r\n\r\nclass OrderTab extends Component {\r\n  state = {\r\n    activeItem: '1',\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getOrderUser, getToCart},\r\n    } = this.props;\r\n    getOrderUser();\r\n    getToCart();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfSingleArtwork,\r\n        listOfUserCart,\r\n        listOfOrder,\r\n        listofUserOrder,\r\n        editOrder,\r\n        listOfOrders,\r\n      },\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    let pendingOrders = listofUserOrder.filter((items) => {\r\n      if (\r\n        items.orderStatus === 'Printing' || items.orderStatus === 'ForDelivery' ||\r\n        items.orderStatus.includes('Pending')\r\n      ) {\r\n        return items;\r\n      }\r\n    });\r\n\r\n    let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Completed' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    });\r\n\r\n\r\n    let listOfOrderDelivered = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Delivered' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    })\r\n\r\n    let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n      if (\r\n        Rejected.orderStatus === 'Rejected' && Rejected.accID === mydata._id ||\r\n        Rejected.orderStatus === 'PrintRejected' && Rejected.accID === mydata._id\r\n        ||\r\n        Rejected.orderStatus === 'Cancelled' && Rejected.accID === mydata._id\r\n      ) {\r\n        return Rejected;\r\n      }\r\n    })\r\n\r\n\r\n    let cancelOrder =( myorder) =>{\r\n      let filOrder = listofUserOrder.filter( ord => ord.orderID === myorder.orderID && ord.orderStatus === 'Printing' || ord.orderID === myorder.orderID && ord.orderStatus === 'ForDelivery').length\r\n\r\n      if (filOrder === 0){\r\n          editOrder(myorder._id, 'Cancelled', myorder.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 0.5)\r\n              .then(() => message.success('Order cancelled', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },500)\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.5)\r\n            .then(() => message.success('Cant cancel order. Your order is already on printing or delivery.', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n      }\r\n   \r\n    }\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <h4>My Orders</h4>\r\n        <MDBNav className='nav-tabs'>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '1'}\r\n              onClick={this.toggle('1')}\r\n              role='tab'\r\n                // className='ordernavlin k'\r\n            >\r\n              My Bag\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '2'}\r\n              onClick={this.toggle('2')}\r\n              role='tab'\r\n            >\r\n              Orders\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '3'}\r\n              onClick={this.toggle('3')}\r\n              role='tab'\r\n            >\r\n              Delivered\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '4'}\r\n              onClick={this.toggle('4')}\r\n              role='tab'\r\n            >\r\n              Completed\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '5'}\r\n              onClick={this.toggle('5')}\r\n              role='tab'\r\n            >\r\n              Cancelled\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '6'}\r\n              onClick={this.toggle('6')}\r\n              role='tab'\r\n            >\r\n              {/* <MDBIcon icon='history' /> */}\r\n               History\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n\r\n        <MDBTabContent activeItem={this.state.activeItem}>\r\n          <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <div className='artlist' >\r\n              <Cart cartData={listOfSingleArtwork[0]} />\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n            <div className='artlist pending '>\r\n              {pendingOrders.reverse().map((items, indexes) => (\r\n                <div className='cartord ' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n\r\n                                <img src={item.artworkImg} alt='artwork' />\r\n                              \r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        \r\n                        {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                      <div className='actsbtn'>\r\n                          <MDBBtn\r\n                            color='red'\r\n                            size='sm'\r\n                            className='det'\r\n                            onClick={() =>cancelOrder(items) }\r\n                          >\r\n                            Cancel order\r\n                          </MDBBtn>\r\n                          <OrderDetails\r\n                     \r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderDelivered.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='4' role='tabpanel' className='tabs complete'>\r\n            <div className='artlist'>\r\n              {listOfOrderReceived.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                                 <Feedback  orderInfo={items}/>\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='5' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderCancelled.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='6' role='tabpanel' className='tabs'>\r\n            <div className='artlist history'>\r\n              {listofUserOrder.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                            <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  {item.artworkPaymentAmount\r\n                                    ? parseFloat(\r\n                                        item.artworkPaymentAmount\r\n                                      ).toLocaleString('en-GB', {\r\n                                        style: 'currency',\r\n                                        currency: 'PHP',\r\n                                      })\r\n                                    : ''}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        &#8369;\r\n                        {\r\n                          +items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                   \r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import { Icon, message, Skeleton } from 'antd';\r\nimport {\r\n  MDBBtn, MDBCol,\r\n\r\n\r\n  MDBInput, MDBNav,\r\n\r\n\r\n  MDBNavItem,\r\n  MDBNavLink, MDBRow, MDBTabContent, MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport art from '../../images/artworks/art1.png';\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass CProfileEdit extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {\r\n        getSingleEnthusiast,\r\n        getOrder,\r\n       \r\n      },\r\n    } = this.props;\r\n   \r\n     \r\n    getSingleEnthusiast(this.props.match.params.id);\r\n      getOrder();\r\n    \r\n  }\r\n\r\n  state = {\r\n    activeItem: '1',\r\n    loading: false,\r\n    pass:'',\r\n    confPass:'',\r\n  };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   \r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editAccount, account},\r\n    } = this.props;\r\n    account.setProperty('_id', this.props.data._id);\r\n    account.setProperty('accID', this.props.data.accID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited account..', 1.2)\r\n        .then(() => message.success('Successfully edited an Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        account,\r\n        editAccount,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n      },\r\n    } = this.props;\r\n\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className='ant-upload-text'>Upload Image</div>\r\n      </div>\r\n    );\r\n    const {imageUrl} = this.state;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n\r\n    let AccountInfo = ()=>{\r\n        \r\n\r\n          if (this.state.pass === this.state.confPass){\r\n\r\n         \r\n      account.setProperty('_id', userData._id);\r\n      account.setProperty('password',this.state.pass)\r\n      editAccount().then(resp=>{\r\n        if (resp === 'success'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      });\r\n\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cedit clearfix'>\r\n            <div className='clearfix chead'>\r\n              <h2>{this.props.match.params.id}</h2>\r\n              <MDBNavLink to='/Upload' className='btnYellow cuploadbtn'>\r\n                Upload Artwork\r\n              </MDBNavLink>\r\n            </div>\r\n            <div className='cmaincon'>\r\n              <MDBRow>\r\n                <MDBCol md='3' className='usertab'>\r\n                  <MDBNav className='nav-tabs mt-5 ctab'>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '1'}\r\n                        onClick={this.toggle('1')}\r\n                        role='tab'\r\n                      >\r\n                        Account Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '2'}\r\n                        onClick={this.toggle('2')}\r\n                        role='tab'\r\n                      >\r\n                        Profile Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '3'}\r\n                        onClick={this.toggle('3')}\r\n                        role='tab'\r\n                      >\r\n                        Orders\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '4'}\r\n                        onClick={this.toggle('4')}\r\n                        role='tab'\r\n                      >\r\n                       My Artworks\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    {/* <MDBNavItem>\r\n                      <MDBNavLink link to=\"#\" active={this.state.activeItem === \"5\"} onClick={this.toggle(\"5\")} role=\"tab\" >\r\n                        Collections\r\n                      </MDBNavLink>\r\n                    </MDBNavItem> */}\r\n                    <MDBNavItem>\r\n                      {/* <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '6'}\r\n                        onClick={this.toggle('6')}\r\n                        role='tab'\r\n                      >\r\n                        Favorites\r\n                      </MDBNavLink> */}\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '7'}\r\n                        onClick={this.toggle('7')}\r\n                        role='tab'\r\n                      >\r\n                        Log Out\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                  </MDBNav>\r\n                </MDBCol>\r\n\r\n                <MDBCol md='9' className='usertab'>\r\n                  <MDBTabContent\r\n                    activeItem={this.state.activeItem}\r\n                    className='ccon'\r\n                  >\r\n                    <MDBTabPane tabId='1' role='tabpanel'>\r\n                      {userData !== undefined ? (\r\n                        <form onSubmit={this.submitHandler}>\r\n                         \r\n                          <MDBInput\r\n                            label='Email Address'\r\n                            type='email'\r\n                            // hint={userData.accEmailAddress}\r\n                            valueDefault={userData.accEmailAddress}\r\n                            onChange={(accEmailAddress) =>\r\n                              account.setProperty(\r\n                                'accEmailAddress',\r\n                                accEmailAddress.target.value\r\n                              )\r\n                            }\r\n                            \r\n                          >\r\n                            <a href='#!' className='changee'>\r\n                              Change Email-Address\r\n                            </a>\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid email.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}\r\n                            onChange={(password) =>\r\n                              this.setState({pass:password.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Confirm New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}s\r\n                            onChange={(confpassword) =>\r\n                            this.setState({confPass:confpassword.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <div className='custom-control custom-checkbox'>\r\n                            <input\r\n                              type='checkbox'\r\n                              className='custom-control-input'\r\n                              id='anycat'\r\n                            />\r\n                            <label\r\n                              className='custom-control-label clabel'\r\n                              htmlFor='anycat'\r\n                            >\r\n                              Allow viewing of adult related content.\r\n                            </label>\r\n                          </div>\r\n                          <MDBBtn\r\n                            className='submitreg clearfix btnYellow'\r\n                            color='#FAE933'\r\n                            onClick={() => {AccountInfo()}}\r\n                          >\r\n                            Save Changes\r\n                          </MDBBtn>\r\n                        </form>\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='2' role='tabpanel'>\r\n                      <h4>Update Profile Picture</h4>\r\n                      {/* <Upload\r\n                        name='avatar'\r\n                        listType='picture-card'\r\n                        className='avatar-uploader cpup clearfix'\r\n                        showUploadList={false}\r\n                        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                        beforeUpload={beforeUpload}\r\n                        onChange={this.onFileChangeP}\r\n                      >\r\n                        {imageUrl ? (\r\n                          <img\r\n                            src={imageUrl}\r\n                            alt='avatar'\r\n                            style={{width: '100%'}}\r\n                          />\r\n                        ) : (\r\n                          uploadButton\r\n                        )}\r\n                      </Upload> */}\r\n\r\n\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n        <div  className='regform formbtn'>\r\n          <div className=\"page req clearfix\" >\r\n<div className=\"container\">\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n        </div>\r\n        \r\n\t\t\t\r\n                      <div>\r\n                        <h4>Personal Information</h4>\r\n\r\n                        <MDBInput\r\n                            label='First Name'\r\n                            type='text'\r\n                            // hint={listofArtistInfo.accFname}\r\n                            valueDefault={`${userData.accFname}`}\r\n                            onChange={(accFname) =>\r\n                              account.setProperty(\r\n                                'accFname',\r\n                                accFname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid first name.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Last Name'\r\n                            type='text'\r\n                            // hint={userData.accLname}\r\n                            valueDefault={userData.accLname}\r\n                            onChange={(accLname) =>\r\n                              account.setProperty(\r\n                                'accLname',\r\n                                accLname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid last name.\r\n                            </div>\r\n                          </MDBInput>\r\n\r\n                        <MDBInput\r\n                          label='Address'\r\n                          type='text'\r\n                          valueDefault={userData.accAddress}\r\n                          onChange={(accAddress) =>\r\n                            account.setProperty(\r\n                              'accAddress',\r\n                              accAddress.target.value\r\n                            )\r\n                          }\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid address.\r\n                          </div>\r\n                        </MDBInput>\r\n                        {/* <MDBInput\r\n                          type='textarea'\r\n                          label='Bio'\r\n                          rows='5'\r\n                          \r\n                        /> */}\r\n                        {/* <MDBInput\r\n                          label='Facebook'\r\n                          type='text'\r\n                          hint='e.g. https://www.facebook.com/artbasically'\r\n                       \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid facebook url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                        {/* <MDBInput\r\n                          label='Instagram'\r\n                          type='text'\r\n                          hint='e.g. https://www.instagram.com/artbasically'\r\n                        \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid instagram url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                      </div>\r\n                      <MDBBtn\r\n                        className='submitreg clearfix btnYellow'\r\n                        color='#FAE933'\r\n                        // type='submit'\r\n                        onClick={() => {\r\n                          account.setProperty('_id', userData._id);\r\n                          editAccount().then(resp=>{\r\n                            if (resp === 'success'){\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Changes saved', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }else{\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Try again', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }\r\n                          });\r\n                        }}\r\n                      >\r\n                        Save Changes\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='3' role='tabpanel'>\r\n                      <OrderTab />\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='4' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                  \r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    {/* <MDBTabPane tabId=\"5\" role=\"tabpanel\">\r\n                      <ul className=\"col3img rowart clearfix\">\r\n                        {listofArtistArtwork !== undefined ?\r\n                          listofArtistArtwork.map(art =>\r\n                            <li>\r\n                              <a href=\"\" className=\"artlink\">\r\n                                <img src={art.artworkImg} />\r\n                              </a>\r\n                              <div className=\"artistinfo clearfix pad10\">\r\n                                <p>{art.artName}</p>\r\n                                <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                              </div>\r\n                            </li>\r\n                          ) : <Skeleton active />\r\n                        }\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <img src={art} />\r\n                          </a>\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane> */}\r\n                    <MDBTabPane tabId='6' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .reverse()\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='7' role='tabpanel'>\r\n                      <p className='float-left outp'>\r\n                        Are you sure you want to Log Out?\r\n                      </p>\r\n                      <MDBBtn\r\n                        className='btnYellow'\r\n                        color='FAE933'\r\n                        onClick={() => {\r\n                          sessionStorage.removeItem('userData');\r\n                        }}\r\n                      >\r\n                        <Link to={`/`}> Confirm</Link>\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                  </MDBTabContent>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfileEdit));\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nclass Order extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrder},\r\n    } = this.props;\r\n    getOrder();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cart-items'>\r\n            <div className='clearfix'>\r\n              <OrderTab />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div >\r\n        <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default inject('startingStore')(observer(Order));\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your information will be evaluated by ArtBasically kindly wait for us\r\n          to contact you.\r\n          <br /> Thank you for your interest in joining us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your artwork will be evaluated by ArtBasically kindly wait for us to\r\n          contact you.\r\n          <br /> Thank you for sharing your artwork with us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by price </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n               \r\n                <form>\r\n         \r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n         \r\n              \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n     \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize,getMyLists},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    getMyLists()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'yourlists') {\r\n        return <h3>My Lists</h3>;\r\n      }\r\n   \r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter  type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n\r\n","\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n     else if (type === 'onSale') {\r\n        return <h3>On Sale</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass AdminLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('', 1)\r\n            .then(() => message.success('Welcome to Art Basically', 3));\r\n        };\r\n\r\n     \r\n        \r\n       setTimeout(()=>{\r\n       success()\r\n       },600)\r\n       setTimeout(()=>\r\n        this.props.history.push('/AdminHome')\r\n        ,1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 0.5)\r\n            .then(() => message.error('Email or password is incorrect', 1.5));\r\n        };\r\n        setTimeout(()=>{\r\n          success()\r\n          },600)\r\n        setTimeout(() => {\r\n          this.props.history.push('/Admin');\r\n        }, 1500);\r\n    \r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>ADMIN LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li className='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label className='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AdminLogin)))\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBCol, MDBContainer,\r\n\r\n\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader, MDBRow\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nclass AddArtist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    // let {\r\n    //   startingStore: {account},\r\n    // } = this.props;\r\n    this.setState({selectedFile: e.target.files[0]});\r\n\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  onSubmit = () => {\r\n    let {\r\n      startingStore: {account, addAccount},\r\n    } = this.props;\r\n    //   //e.preventDefault()\r\n\r\n    //   // axios.post(\"https://artbasically.herokuapp.com/artworkRoute/uploadProfile\", formData, {\r\n    //   // }).then(res => {\r\n    //   //   console.log(res)\r\n    //   // })\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    formData.append('type', 'artist');\r\n    upload(formData);\r\n\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artist Registration..', 1.2)\r\n        .then(() => message.success('Successfully added an Artist Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.onSubmit();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD ARTIST \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD ARTIST \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    placeholder='Prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    type='textarea'\r\n                    label='Biography'\r\n                    rows='3'\r\n                    onChange={(artistDescription) =>\r\n                      account.setProperty(\r\n                        'artistDescription',\r\n                        artistDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a short Bio.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtist));\r\n","\nimport { message } from 'antd';\nimport {\n  MDBBtn, MDBDataTable, MDBModal,\n  MDBModalBody,\n\n\n\n\n  MDBModalFooter, MDBModalHeader\n} from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\n\n\n class Artists extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreinfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n          account.setProperty('accLname',itm.accLname)\n          account.setProperty('accAddress',itm.accAddress)\n          account.setProperty('birthYear',itm.birthYear)\n          account.setProperty('accInstitution',itm.accInstitution)\n          account.setProperty('artistDescription',itm.artistDescription)\n          account.setProperty('acc_Documents',itm.acc_Documents)\n          account.setProperty('profile_Img',itm.profile_Img)\n          account.setProperty('accEmailAddress',itm.accEmailAddress)\n          account.setProperty('password',itm.password)\n          this.setState({\n            modal: true\n          \n          });\n          };\n          let deactivate =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n\n      \n          }\n        \n\nconst ArtistsTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n       \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>moreinfo(row.userDB)} color='moreinfo'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}} onClick={()=>deactivate(row.userDB)} color='reject'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal} centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n                  <li>\n                    489\n                    <span>Followers</span>\n                  </li>\n                  {/* <li>\n                    4.8/5\n                    <span>528k Ratings</span>\n                  </li> */}\n                 \n                </ul>\n              </div>\n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <ArtistsTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Artists))\n\n\n\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Artist' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreinfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n  \r\n          \r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n        \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreinfo(row.userDB)} color='moreinfo'>More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  \r\n  ","import { message } from 'antd';\nimport {\n  MDBBtn, MDBDataTable, MDBModal,\n  MDBModalBody,\n\n\n\n\n  MDBModalFooter, MDBModalHeader\n} from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\n class Deactivated extends Component {\n  state = {\n    modal: false,\n    \n   \n  };\ncomponentDidMount(){\n  let{startingStore:{getAccounts}}=this.props;\n  getAccounts();\n}\n\n  \n\n\n\n  render() {\n\n  \n   let close =()=>{\n    this.setState({\n      modal: false\n    });\n   }\n\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname,lname, email, address,action) {\n      return { userDB,id,fname,lname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Pending') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,users.accFname,users.accLname\n           ,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n          let  info = (itm) => {\n            this.setState({\n              modal: true\n            \n            });\n  \n              account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n            \n        \n           \n          }\n      \n        let  approve = (itm) => {\n        \n       account.setProperty('_id',itm._id)\n       account.setProperty('acc_Status','Active')\n\n\n\n      editAccount().then((resp) => {\n       \n        if (resp === 'success') {\n                const success = () => {\n        message\n          .loading('', 1)\n          .then(() => message.success('Account Approved', 3));\n      };\n\n      setTimeout(() =>{\n        success();\n      },1000)\n     \n    \n          setTimeout(()=>{\n            window.location.reload(false);\n          },1500)\n        } else {\n          const error = () => {\n            message\n            .loading('', 1)\n            .then(() => message.success('Try Again', 3));\n          };\n          setTimeout(() => {\n            error();\n          }, 200)\n      \n        }\n      });\n          }\n\n         \n         \n         \n         \n          let reject =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Rejected')\n            editAccount()\n            const success = () => {\n              message\n                .loading('', 1)\n                .then(() => message.success('Account Rejected', 3));\n            };\n\n            setTimeout(() =>{\n              success()\n           \n            },1000)\n            setTimeout(()=>{\n              window.location.reload(false);\n            },1500)\n       \n          }\n        \n\n\nconst DeactivatedTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname} ${row.lname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'340px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.userDB)} color='approve'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}}  onClick={()=>{approve(row.userDB)}} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>{reject(row.userDB)}} color='reject'> Reject</MDBBtn>\n        </div>,\n      \n      \n     }\n     \n     ) })\n    ]\n\n  }\n  return(\n    <Fragment>\n  <MDBDataTable\n  striped\n  bordered\n  small\n  data={data}\n/>\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n          \n                </ul>\n              </div>\n            </div>\n            <div className=' clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n        </Fragment>\n  )\n}\n\n  function PendingTable(){\n\n  return (\n    <Fragment>\n<DeactivatedTable/>\n\n\n    \n  </Fragment>\n  );\n\n}\nreturn (\n  <PendingTable/>\n)\n}\n}\n\n\n\nexport default withRouter(inject('startingStore')(observer(Deactivated)))\n\n\n","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Artists from './../ArtistTable';\r\nimport Deactivated from './../DeactivatedArtist';\r\nimport Pending from './../PendingArtistTable';\r\n \r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n \r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artist Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artists\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artists/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n          <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddArtist from './sections/AddArtist';\r\nimport ArtistsTab from './sections/ArtistsTab';\r\n\r\nexport class ArtistTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artist</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n         \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtist />\r\n   \r\n   <MDBCard>\r\n     <MDBCardBody>\r\n<ArtistsTab/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArtistTab\r\n","import { message } from 'antd';\r\nimport imageCompression from 'browser-image-compression';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport React, { Component } from 'react';\r\n\r\n\r\n\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    \r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n  \r\n    let {\r\n      startingStore: {upload,listOfArtworks,artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    artwork.setProperty('accID',mydata.accID)\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n    // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\r\n\r\n    // console.log(categoryList)\r\n    let getArtNames = listOfArtworks.filter(data=> data.artName === artwork.artName).length\r\n\r\n    \r\n   let onSubmit =()=> {\r\n      if (getArtNames === 0){\r\n     \r\n      const data = new FormData();\r\n      data.append('artworkImg', this.state.selectedFile);\r\n      artwork.setProperty('artworkID', this.getUniqueID());\r\n      artwork.setProperty('artworkStatus', 'Active');\r\n      data.append('type', 'artwork');\r\n      upload(data);\r\n      const success = () => {\r\n        message\r\n          .loading('Submitting Artwork..', 1.3)\r\n          .then(() => message.success('Successfully added an Artwork', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1500);\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('Checking Availability', 1.3)\r\n          .then(() => message.success('Art name already taken', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1500);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#231F20'}}><span style={{color:'white'}}> Add Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form \r\n            // onSubmit={this.onSubmit}\r\n             className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  {/* <SelectTheme theme = {categoryList} style = {styleList}/> */}\r\n                  <div style={{width:'95%'}}>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    style={{width:'95%'}}\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={(catType) =>\r\n                    // //   artwork.setProperty('catType', catType.target.value)\r\n                    // }\r\n                  />\r\n                  </div>\r\n                  <div style={{width:'95%'}}>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                    </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  {/* <MDBInput\r\n                    label='Dimension'\r\n                    type='text'\r\n                    onChange={(artDimension) =>\r\n                      artwork.setProperty(\r\n                        'artDimension',\r\n                        artDimension.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput> */}\r\n                    <Multiselect\r\n                 \r\n                 className='multsel'\r\n                 options={listOfPrintSize}\r\n                 placeholder='Printing Size'\r\n                 showCheckbox={true}\r\n                 displayValue='printSize'\r\n                 onSelect={selectArtSize}\r\n                 required\r\n           \r\n               />\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='text'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='text'\r\n                    onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                      required\r\n                    \r\n                      style={{overflow: 'hidden',textOverflow:' ellipsis'}}\r\n                    />\r\n                    {/* <img src={this.state.selectedFile} alt='artwork' /> */}\r\n                    <p className='req'>\r\n                    Please upload a high resolution photo with 72dpi and above.\r\n                    <br/><span style={{fontStyle: 'italic'}}>DPI = Pixel Length * Pixel Width </span> \r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit' onClick={()=>onSubmit()}>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import { Grid } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n      } = this.props;\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => {\r\n              if (art.artworkStatus === 'Archived') {\r\n                return art;\r\n              }\r\n            }).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n         \r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Active');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n  <MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork'/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","\r\nimport { Grid } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n\r\n\r\n\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n\r\n \r\n    function createData(artworkDB,id,title,artist, style,  price,action) {\r\n      return { artworkDB,id,title,artist, style,  price,action };\r\n    }\r\n\r\nlet pArtworks = listOfArtworks.filter((art) => {\r\n            if ( art.artworkStatus === 'Active') {\r\n              return art;\r\n            }\r\n          }).map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreInfo = (itm) => {\r\n          artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n          artwork.setProperty('artTheme',itm.artTheme)\r\n          artwork.setProperty('artSize',itm.artSize)\r\n          artwork.setProperty('artCategory',itm.artCategory)\r\n          artwork.setProperty('artworkID',itm.artworkID)\r\n          artwork.setProperty('artName',itm.artName)\r\n          artwork.setProperty('artDescription',itm.artDescription)\r\n          artwork.setProperty('artPrice',itm.artPrice)\r\n          artwork.setProperty('artistName',itm.artistName)\r\n          artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n          artwork.setProperty('artDimension',itm.artDimension)\r\n          artwork.setProperty('artType',itm.artType)\r\n          artwork.setProperty('dateAdded',itm.dateAdded)\r\n          artwork.setProperty('artworkImg',itm.artworkImg)\r\n          this.setState({\r\n            modal: !this.state.modal\r\n          });\r\n       \r\n          };\r\n\r\n          let  close = () => {\r\n            this.setState({\r\n              modal: false\r\n            });\r\n            };\r\n\r\n          let archive =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('artworkStatus','Archived');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Archived', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price}`,\r\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject'> Archive</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  \r\n<MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork'/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n\r\n","import { Grid } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getAllArtworks, getArtists, getStyles, getCategories,getPrintSize},\r\n    } = this.props;\r\n    \r\n    getAllArtworks();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n    getPrintSize()\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork,notif,addNotif}} = this.props;\r\n  \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n    function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n      return { artworkDB,id,title,artist, style, date, price,action };\r\n    }\r\n\r\nlet filArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending')\r\n\r\n\r\nlet pArtworks = filArtworks.map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n\r\n          let  info = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n        let  approve = (data) => {\r\n         \r\n\r\n\r\n\r\n\r\n          artwork.setProperty('_id', data._id);\r\n          artwork.setProperty('accID',data.accID)\r\n          artwork.setProperty('artworkStatus','Active');\r\n\r\n\r\n          notif.setProperty('notifID',`${getHash(data.artName.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n          notif.setProperty('notifSender','admin-001')\r\n          notif.setProperty('notifRecipient',data.accID)\r\n          notif.setProperty('notifSubject','Artwork approval')\r\n          notif.setProperty('notifMsg',`Your artwork '${data.artName}' has been approved` )\r\n          notif.setProperty('notifDT',moment().format('MMM/DD/YYYY'))\r\n          notif.setProperty('notifStatus','unread')\r\n\r\n          editArtwork();\r\n          addNotif()\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Arwork Approved', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          \r\n\r\n          let reject =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('accID',data.accID)\r\n            artwork.setProperty('artworkStatus','Rejected');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      }, {\r\n        label: 'Date Added',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        id: `${row.id}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price}`,\r\n        date:`${row.date}`,\r\n        action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve'> Info</MDBBtn><MDBBtn style={{float:'left'}}  onClick={()=>approve(row.artworkDB)} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.artworkDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n  \r\n  <MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork'/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ArchivedArtwors from './../ArchivedArtworks';\r\nimport Artworks from './../ArtworkTable';\r\nimport Pending from './../PendingArtworkTable';\r\n\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artwork Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddArtwork from './sections/AddArtwork';\r\nimport ArtworkTabs from './sections/ArtworkTab';\r\n class ArtworkTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtwork />\r\n      \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <ArtworkTabs/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArtworkTab;\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBContainer,\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n    modal2: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting theme..', 1.2)\r\n        .then(() => message.success('Successfully added a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addCategory();\r\n  };\r\n\r\n  submitHandlerStyle = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting style..', 1.2)\r\n        .then(() => message.success('Successfully added a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addStyle();\r\n  };\r\n\r\n  submitHandlerSize = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting printing size..', 1.2)\r\n        .then(() => message.success('Printing size added', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addPrintSize();\r\n  };\r\n\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {addCategory},\r\n    } = this.props;\r\n    e.preventDefault();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Theme..', 1.2)\r\n        .then(() => message.success('Successfully added a Theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n\r\n    addCategory();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories, style,printsize},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Theme\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n            <MDBModalHeader toggle={this.toggle(1)}>\r\n              Add Theme\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandler} className='formbtn'>\r\n                <MDBInput\r\n                  label='Theme Name'\r\n                  type='text'\r\n                  onChange={(catType) =>\r\n                    categories.setProperty('catType', catType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add  Style\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add  Style\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerStyle} className='formbtn'>\r\n                <MDBInput\r\n                  label='Style Name'\r\n                  type='text'\r\n                  onChange={(styleType) =>\r\n                    style.setProperty('styleType', styleType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Printing Size\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add Printing Size\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerSize} className='formbtn'>\r\n                <MDBInput\r\n                  label='Printing Size'\r\n                  type='text'\r\n                  onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddCat));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.props.data.catID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited theme..', 1.2)\r\n        .then(() => message.success('Successfully edited a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editCategory();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART CATEGORY\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Category Name'\r\n                type='text'\r\n                valueDefault={this.props.data.catType}\r\n                // value={this.props.data.catType}\r\n                onChange={(catType) =>\r\n                  categories.setProperty('catType', catType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Category Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditCat));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.props.data.sizeID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited print size..', 1.2)\r\n        .then(() => message.success('Print size has been modified', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editPrintSize();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printsize},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            Edit Print Size\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Print Size'\r\n                type='text'\r\n                valueDefault={this.props.data.printSize}\r\n                // value={this.props.data.catType}\r\n                onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.props.data.styleID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited style..', 1.2)\r\n        .then(() => message.success('Successfully edited a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editStyle();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {style},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART STYLE\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Style Name'\r\n                type='text'\r\n                valueDefault={this.props.data.styleType}\r\n                // value={this.props.data.catType}\r\n                onChange={(styleType) =>\r\n                  style.setProperty('styleType', styleType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import {\r\n  MDBCard,\r\n  MDBCardBody,\r\n\r\n\r\n\r\n\r\n  MDBCol, MDBRow, MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport EditCat from './EditCat';\r\nimport EditPrintSize from './EditPrintSize';\r\nimport EditStyle from './EditStyle';\r\n\r\nclass CategoryTable extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getCategories, getStyles,getPrintSize},\r\n    } = this.props;\r\n    getCategories();\r\n    getStyles();\r\n    getPrintSize();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n  \r\n    // let listOfCustomers = listOfCategories.filter(artist => {\r\n    //   if (artist.accessType !== \"artist\") {\r\n    //     return artist;\r\n    //   }\r\n    // })\r\n    return (\r\n      <div className='clearfix'>\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Theme List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Theme Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfCategories.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.catType}</td>\r\n                        <td className='edittd'>\r\n                          <EditCat data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Style List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Style Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfStyles.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.styleType}</td>\r\n                        <td className='edittd'>\r\n                          <EditStyle data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Printing Size</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Size</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfPrintSize.map((data,index) => {\r\n\r\n                        let no = index +1;\r\nreturn(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.printSize}</td>\r\n                        <td className='edittd'>\r\n                          <EditPrintSize data={data} />\r\n                        </td>\r\n                      </tr>\r\n)  })}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CategoryTable));\r\n","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddCat from './sections/AddCat';\r\nimport CatTable from './sections/CatTable';\r\n\r\nexport class CategoryTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Categories</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddCat />\r\n        <CatTable />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryTab\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrderUser,getOrders}}=this.props;\r\n    getAccounts()\r\n    getOrderUser()\r\n    getOrders()\r\n  }\r\n\r\n\r\n    render() {\r\nlet {startingStore:{listOfUsers,listOfOrders}}=this.props;\r\n\r\nlet activeArtists = listOfUsers.filter (usr => usr.accessType === 'Artist' && usr.acc_Status === 'Active').length;\r\n\r\nlet artEnthu = listOfUsers.filter (usr => usr.accessType === 'Standard' && usr.acc_Status === 'Active').length;\r\nlet Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery').length;\r\nlet CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed' || ord.orderStatus === 'Rejected').length;\r\n\r\nlet CompletedOrders = listOfOrders.filter (ord => ord.orderStatus === 'Completed' ).length;\r\n\r\nlet salesYTD =  listOfOrders.map(product => {\r\n  \r\n  return (\r\n\r\n    listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n    .reduce((sum, record) => parseInt(sum) + parseInt(record.totalAmount) , 0)\r\n\r\n\r\n\r\n    );\r\n\r\n })\r\n const sales = `${salesYTD.pop()}`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} sm={12} xs={12}>\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nSales YTD\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>\r\n  {sales === 'undefined' ?(\r\n    '0'\r\n  ):(\r\n  sales\r\n  )\r\n\r\n}\r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n{/* <PersonAddDisabledIcon style={{fontSize:\"3.5em\"}}/> */}\r\n<MDBIcon icon=\"users\" style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArt Enthusiasts\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{artEnthu}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n  <Grid container xs={12} sm={12}>\r\n\r\n  <Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"user-tie\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n    <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n   \r\n<Typography className={classes.title}   >\r\nArtists\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{activeArtists}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"clipboard-list\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea > */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={5} sm={5}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<CollectionsBookmarkOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={7} sm={7} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCompleted Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{CompletedOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import { MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='artwork' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;\r\n","\r\n\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../sections/DownloadImage';\r\n\r\n class PendingOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   let {\r\n  //     startingStore: {getOrders, getAccounts},\r\n  //   } = this.props;\r\n   \r\n  //   getAccounts();\r\n  //   getOrders();\r\n  // }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder,notif,addNotif}} = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData')) \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n   \r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Pending' ) {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( `${user.accFname} ${user.accLname}`\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'PendingPrint', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Order Approved', 3));\r\n          };\r\n\r\n\r\n          notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n          notif.setProperty('notifSender','admin-001')\r\n          notif.setProperty('notifRecipient','print-001')\r\n          notif.setProperty('notifSubject','Printing')\r\n          notif.setProperty('notifMsg','New item to print')\r\n          notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n          notif.setProperty('notifStatus','unread')\r\naddNotif()\r\n\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n\r\n            notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n            notif.setProperty('notifSender','admin-001')\r\n            notif.setProperty('notifRecipient',userData.accID)\r\n            notif.setProperty('notifSubject','Order')\r\n            notif.setProperty('notifMsg','Order Rejected')\r\n            notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n            notif.setProperty('notifStatus','unread')\r\n  addNotif()\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n    \r\n          let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n\r\nconst PendingOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:\r\n        <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.orderDB)} color='yellow'> Items</MDBBtn> <MDBBtn style={{float:'left'}} onClick={()=>approve(row.orderDB)} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n\r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n   \r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      responsive\r\n      data={data}\r\n    />\r\n\r\n <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt='artwork'\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody,\r\n\r\n\r\n\r\n  MDBFormInline\r\n} from 'mdbreact';\r\nimport React from 'react';\r\nimport DashCard from './DashCards';\r\nimport PendingArtistTable from './sections/PendingArtistTable';\r\nimport PendingArtworkTable from './sections/PendingArtworkTable';\r\nimport PendingOrderTable from './sections/PendingOrderTable';\r\n\r\n\r\nconst DashboardSection = () => {\r\n  return (\r\n    <div>\r\n      <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n            \r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBFormInline className='md-form m-0 adminsearch'>\r\n              {/* <input\r\n                className='form-control form-control-sm'\r\n                type='search'\r\n                placeholder='Type your query'\r\n                aria-label='Search'\r\n              /> */}\r\n              {/* <MDBBtn size='sm' color='#FAE933' className='my-0' type='submit'>\r\n                <MDBIcon icon='search' />\r\n              </MDBBtn> */}\r\n            </MDBFormInline>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      <div className='mb-4'>\r\n<DashCard/>\r\n</div>\r\n<Grid container  xs={12} sm={12}>\r\n  <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n    \r\n  <Paper>\r\n    <div className='p-2 '>\r\n<h3>Pending Orders</h3>\r\n      <PendingOrderTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid> \r\n\r\n\r\n\r\n      <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Pending Arworks</h3>\r\n      <PendingArtworkTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Artist Membership Requests</h3>\r\n      <PendingArtistTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>   \r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSection;\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n\r\n\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class UserFeedback extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getFeedback,getAccounts},\r\n      } = this.props;\r\n   getFeedback()\r\n   getAccounts()\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfFeedback,feedback,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(fbID,acID,ordID,date, note) {\r\n        return { fbID,acID,ordID,date, note };\r\n      }\r\n  \r\n  let filtFeedback = listOfFeedback.map(fb =>{\r\n              return(createData(\r\n             fb.feedbackID,listOfUsers.filter(usr => usr._id === fb.accID) .map(acc => `${acc.accFname} ${acc.accLname}`)\r\n             ,fb.orderID,fb.date\r\n             ,fb.feedbackNote\r\n              ))\r\n            })\r\n\r\n\r\n            let  toggle = (itm) => {\r\n        \r\n                this.setState({\r\n                  modal: !this.state.modal,\r\n                  items:itm\r\n                });\r\n              feedback.setProperty('feedbackNote',itm)\r\n              };\r\n              let close =()=>{\r\n                this.setState({\r\n                  modal: false,\r\n                \r\n                });\r\n              }\r\n  \r\n    \r\n  \r\n  const FeedbackTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Sender',\r\n          field: 'sender',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order No.',\r\n          field: 'order',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Feedback',\r\n          field: 'fb',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        }\r\n  \r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...filtFeedback.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          sender: `${row.acID}`,\r\n         order: `${row.ordID}`,\r\n        \r\n          date: `${row.date}`,\r\n          fb: <div ><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.note)} color='yellow'>View</MDBBtn> </div>,\r\n    \r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal\r\n    size='md'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n      style={{backgroundColor:'#231F20'}}\r\n    >\r\n      <h5 style={{color:'white'}}> User Feedback</h5> \r\n    </MDBModalHeader>\r\n    <MDBModalBody >\r\n    <p style={{margin:'8px'}}>{feedback.feedbackNote}</p>\r\n    </MDBModalBody>\r\n    <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" size='sm' onClick={()=>close()}>Close</MDBBtn>\r\n           \r\n          </MDBModalFooter>\r\n  </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <FeedbackTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(UserFeedback))\r\n  \r\n  ","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport Feedback from './sections/UserFeedback';\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Users Feedback</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    <Feedback/>\r\n\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../sections/DownloadImage';\r\n   class CancelledOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Cancelled') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const CancelledOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data) => (\r\n                <tr>\r\n                  <td>\r\n                    <img\r\n                      style={{width: '100% ', height: 'auto'}}\r\n                      src={data.artworkImg}\r\n                      alt='artwork'\r\n                    />\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <CancelledOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(CancelledOrder))"," import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from './DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt='artwork'\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../sections/DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Approved' || Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order Stat',\r\n        field: 'orderStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        orderStat:`${row.orderStat}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt='artwork'\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Cancelled from './../CancelledOrders';\r\nimport Completed from './../CompletedOrder';\r\nimport Orders from './../OrderTable';\r\nimport Pending from './../PendingOrderTable';\r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>My Orders</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Orders\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Completed\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '4'}\r\n                onClick={this.toggle('4')}\r\n                role='tab'\r\n              >\r\n                Cancelled\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Orders/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n            <Completed/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='4' role='tabpanel' className='tabs'>\r\n            <Cancelled/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import {\n  MDBBreadcrumb,\n  MDBBreadcrumbItem, MDBCard,\n  MDBCardBody\n} from 'mdbreact';\nimport React, { Component } from 'react';\nimport OrderTabs from './sections/OrderTab';\n\nclass OrdersTab extends Component {\n  render() {\n    return (\n      <div>\n        <div className='adminbreadcrumb'>\n          <MDBCard>\n            <MDBCardBody\n              id='breadcrumb'\n              className='d-flex align-items-center justify-content-between'\n            >\n              <MDBBreadcrumb>\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\n                <MDBBreadcrumbItem active>Orders</MDBBreadcrumbItem>\n              </MDBBreadcrumb>\n        \n            </MDBCardBody>\n          </MDBCard>\n        </div>\n        <MDBCard>\n          <MDBCardBody>\n      <OrderTabs/>\n      </MDBCardBody>\n      </MDBCard>\n      </div>\n    );\n  }\n}\n\nexport default OrdersTab;\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n  MDBBtn, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n      return (createData(\r\n          data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}>Save Changes</MDBBtn></div>\r\n      ))\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n   \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","\r\nimport { MDBBadge, MDBDropdown, MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle, MDBIcon } from \"mdbreact\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n\r\n\r\n  render() {\r\nlet{startingStore:{listOfNotif,notif,editNotif}}=this.props;\r\n\r\nlet notifNum = listOfNotif.filter(notif => notif.notifStatus === 'unread').length;\r\n\r\nlet  notifClicked =(notifInfo)=>{\r\n  editNotif(notifInfo._id, 'read', notifInfo.notifID)\r\n \r\n}\r\n\r\n\r\n\r\nlet notifData = listOfNotif.filter(notif => notif.notifStatus === 'unread').map((info,i) =>{\r\n  let dateToday = moment().format('MMM/DD/YY')\r\n  let dateNotif = '';\r\n  if (dateToday.slice(0,9) === info.notifDT.slice(0,9)){\r\n    dateNotif = `Today, ${info.notifDT.slice(10,20)}`\r\n  }else{\r\n    dateNotif = info.notifDT;\r\n  }\r\n  return(\r\n    <Fragment key={i}>\r\n   <MDBDropdownItem className=\"newnotif\" onClick={()=>{notifClicked(info)}}>\r\n     {info.notifMsg}\r\n          <span className=\"time\">{dateNotif}</span>\r\n        </MDBDropdownItem>\r\n    </Fragment>\r\n  )\r\n})\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n  <MDBBadge color=\"danger\" className=\"ml-2\">{notifNum}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic >\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     \r\n  {notifData}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import {\r\n    MDBBtn, MDBDataTable\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class ArtShares extends Component {\r\n\r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getAccounts,getArtShare},\r\n      } = this.props;\r\n \r\n   getAccounts()\r\n   getArtShare()\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,listOfArtShare}} = this.props;\r\n  \r\n      function createData(sharer,social,date) {\r\n        return { sharer,social,date };\r\n      }\r\n  \r\n  let filtartshare = listOfArtShare.map(as =>{\r\n    \r\n              return(createData(\r\n             listOfUsers.filter(usr => usr.accID=== as.userID) .map(acc => `${acc.accFname} ${acc.accLname}`)\r\n             ,as.social,as.dateTime\r\n             \r\n              ))\r\n            })\r\n\r\n\r\n   \r\n  \r\n    \r\n  \r\n  const ArtShareTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Sharer',\r\n          field: 'sharer',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Social media',\r\n          field: 'sm',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        }\r\n  \r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...filtartshare.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          sharer: `${row.sharer}`,\r\n         sm: `${row.social}`,\r\n        \r\n          date: `${row.date}`,\r\n        \r\n    \r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ArtShareTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(ArtShares))\r\n  \r\n  ","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport SocialShare from './sections/SocialShares';\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Shared Artworks</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    \r\n<SocialShare/>\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol, MDBContainer,\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n\r\n\r\n\r\n  MDBRow\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddUser extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    // this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n     \r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD USER \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD USER \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(accessType) =>\r\n                      account.setProperty('accessType', accessType.target.value)\r\n                    }\r\n                  >\r\n                    <option> User Type </option>\r\n                    <option value='Standard'> Standard </option>\r\n                    <option value='Curator'> Curator </option>\r\n                    <option value='Admin'> Admin </option>\r\n                  </select>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder=\"Art Themes you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder=\"Art Style you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n                  />\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddUser));\r\n","import { message } from 'antd';\nimport {\n  MDBBtn, MDBDataTable, MDBModal,\n  MDBModalBody,\n  MDBModalFooter, MDBModalHeader\n} from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\n\n\n class Customer extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Standard' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreInfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n              this.setState({\n                modal: true\n              \n              });\n          };\n          let deactivate =(itm)=>{\n         \n\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n          }\n        \n\nconst CustomerTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n      \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve'> More Info</MDBBtn>\n        <MDBBtn  onClick={()=>deactivate(row.userDB)} color='reject'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                \n          \n                </div>\n              </div>\n       \n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <CustomerTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Customer))\n\n\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Standard' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n           \r\n  \r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n    \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n         \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  ","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Customers from './../CustomerTable';\r\nimport Deactivated from './../DeactivatedAccount';\r\n \r\n\r\n  \r\n  class UsrsTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Customer Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Customer\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Customers/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n           <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(UsrsTab)));\r\n  ","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddUser from './sections/AddUser';\r\nimport UserTab from './sections/UsersTab';\r\n\r\nexport class User extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Customer</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n          \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddUser/>\r\n       \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <UserTab />\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n\r\n\r\n\r\n  MDBNavbar, MDBNavItem,\r\n\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import Message from './sections/Message';\r\nimport '../css/admin.css';\r\nimport ArtistTab from './ArtistTab';\r\nimport ArtworkTab from './ArtworkTab';\r\nimport CategoryTab from './CategoryTab';\r\nimport Dashboard from './Dashboard';\r\nimport Feedback from './FeedbackTab';\r\nimport OrdersTab from './OrdersTab';\r\nimport MyAccount from './sections/AccountSettings/';\r\nimport Notif from './sections/Notif';\r\nimport Shares from './SharesTab';\r\nimport UserTab from './UserTab';\r\n\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/Admin')\r\n    // }\r\n\r\n    let {startingStore:{getOrders, getAccounts,getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize,getAllNotif}}=this.props;\r\n    getAccounts();\r\n    getOrders();\r\n    getAllNotif();\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n    getPrintSize()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/Admin';\r\n  }\r\n    return (\r\n      <div>\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav'  style={{backgroundColor:'#231F20'}}>\r\n              <a href='/AdminHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Admin</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='bell' className='mr-3' />\r\n                    Orders\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='user' className='mr-3' />\r\n                    Customer\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='user-tie' className='mr-3' />\r\n                    Artists\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='th-large' className='mr-3' />\r\n                    Categories\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '9'}\r\n                    onClick={this.togglePills('default', '9')}\r\n                  >\r\n                    <MDBIcon icon='bullhorn' className='mr-3' />\r\n                    Shares\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '8'}\r\n                    onClick={this.togglePills('default', '8')}\r\n                  >\r\n                    <MDBIcon icon='comment-alt' className='mr-3' />\r\n                    Feedback\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <OrdersTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <UserTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <ArtistTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n              <CategoryTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='8'>\r\n              <Feedback />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n              <MyAccount />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='9'>\r\n              <Shares />\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PartnerLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      if (res === 3) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PrintingPartner');\r\n      },1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Email or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PartnerLogin');\r\n      },1500)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li className='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label className='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PartnerLogin)))\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CancelledOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Cancelled' || Delivery.orderStatus === 'Rejected') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CancelledOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                    \r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CancelledOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CancelledOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport CCancelOrder from './sections/CCancelOrder';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Cancelled Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n       \r\n\r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Cancelled Orders</h3>\r\n <CCancelOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data,i) => (\r\n              <tr key={i}>\r\n                <td>\r\n            \r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport CCompletedOrder from './sections/CCompletedOrder';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Completed Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n    \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n     \r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Completed Orders</h3>\r\n <CCompletedOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrders,getOrderUser}}=this.props;\r\n    getOrders()\r\n    getOrderUser()\r\n    getAccounts()\r\n  }\r\n\r\n    render() {\r\n      let {startingStore:{listOfOrders,listOfUsers}}=this.props;\r\n      let Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery' || ord.orderStatus === 'Printing').length;\r\n      let CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed').length;\r\n\r\n\r\n      let salesYTD =  listOfOrders.map(product => {\r\n  \r\n        return (\r\n      \r\n          listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n          .reduce((sum, record) => parseInt(sum) + parseInt(record.partnerEarnings) , 0)\r\n      \r\n      \r\n      \r\n          );\r\n      \r\n       })\r\n       const sales = `${salesYTD.pop()}`;\r\n    //  let percent = 30;\r\n    //  let perctodec = percent/100;\r\n    //  let totalValue = perctodec * sales;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 17,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nEarnings YTD\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>\r\n  \r\n  {\r\n    sales == 'undefined' ?(\r\n      '0'\r\n    ):(\r\n      sales\r\n    )\r\n  }\r\n\r\n  \r\n  \r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\n class ForDelivery extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'ForDelivery') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreinfo = (itm) => {\r\n        \r\n       \r\n          };\r\n          let done =(itm)=>{\r\n            editOrder(itm._id, 'Completed', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Completed', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst ForDeliveryTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>moreinfo(row.orderDB)} color='approve'>More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>done(row.orderDB)} color='reject'> Done</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <ForDeliveryTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(ForDelivery))\r\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\n class PendingPrint extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'Printing', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Approved to print', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingPrintTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Approve</MDBBtn>\r\n        <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingPrintTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingPrint))","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../../admin/sections/DownloadImage';\r\n  \r\n   class OngoingOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Printing' || Delivery.orderStatus === 'Delivery') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const OngoingOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data,i) => (\r\n                <tr key={i}>\r\n                  <td>\r\n              \r\n                  <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <OngoingOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(OngoingOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React from 'react';\r\nimport DashCards from './DashCards';\r\nimport FinishedProd from './sections/COrderDeli';\r\nimport CPendingOrders from './sections/CPendingOrders';\r\nimport OngoingProd from './sections/OngoingOrders';\r\n\r\n\r\nconst pDashboardSection = () => {\r\n  return (\r\n    <div style={{marginTop:'16px'}}>\r\n      <div className='printbreadcrumb' style={{marginBottom:'16px'}}>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n  \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n      <div className='mb-4'>\r\n      <DashCards/>\r\n      </div>\r\n\r\n\r\n      <Grid container  xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Pending Orders</h3>\r\n <CPendingOrders />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Ongoing Production</h3>\r\n <OngoingProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      \r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Finished Production</h3>\r\n <FinishedProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      </Grid>  \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pDashboardSection;\r\n","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\n// import Messaging from './sections/Messaging';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n       \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        {/* <Messaging /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport COrderDeli from './sections/COrderDeli';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Orders for Delivery</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n\r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Orders to delivery</h3>\r\n <COrderDeli />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n  \r\n   class Printing extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrders, getAccounts},\r\n      } = this.props;\r\n     \r\n      getAccounts();\r\n      getOrders();\r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n  \r\n      \r\n      function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n        return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((order) => {\r\n              if (order.orderStatus === 'Printing') {\r\n                return order;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  approve = (itm) => {\r\n            editOrder(itm._id, 'ForDelivery', itm.accID)\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Done Printing', 3));\r\n            };\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n            };\r\n            let reject =(itm)=>{\r\n              editOrder(itm._id, 'Rejected', itm.accID)\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Order Rejected', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n              setTimeout(()=>{\r\n                window.location.reload(false);\r\n              },1500)\r\n            }\r\n          \r\n  \r\n  const PrintingTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Done</MDBBtn>\r\n          <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Cancel</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PrintingTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Printing))","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport Printing from './../sections/Printing';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Printing</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n   \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n \r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Printing</h3>\r\n <Printing/>\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n  MDBBtn, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\nlet getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n    \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","import React from 'react';\r\nimport {\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from 'mdbreact';\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className='topicons'>\r\n      <MDBDropdownToggle color='transparent'>\r\n        <MDBIcon icon='bell' className='mr-3' style={{color:'white'}}/>\r\n        <MDBBadge color='danger' className='ml-2'>\r\n          4\r\n        </MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className='title'>NOTIFICATIONS</div>\r\n        <MDBDropdownItem className='newnotif'>\r\n          Recieved an order from Jane Doe\r\n          <span className='time'>just now</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem className='newnotif'>\r\n          New art submission\r\n          <span className='time'>2 seconds ago</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 3<span className='time'>13:28</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 4<span className='time'>15:01</span>\r\n        </MDBDropdownItem>\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n};\r\n\r\nexport default Notif;\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n\r\n\r\n\r\n  MDBNavbar, MDBNavItem,\r\n\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/printart.css';\r\nimport CancelOrdertab from './CancelOrdertab';\r\nimport CompletedOrderTab from './CompletedOrderTab';\r\nimport Dashboard from './Dashboard';\r\nimport MessageTab from './MessageTab';\r\nimport OrderDeliverytab from './OrderDeliverytab';\r\nimport PrintingTab from './PrintingTab';\r\nimport MyAccount from './sections/AccountSetting/';\r\nimport Notif from './sections/Notif';\r\n\r\n\r\n\r\nclass PrintingPartner extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/PartnerLogin')\r\n    // }\r\n\r\n    getOrders();\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/PartnerLogin';\r\n  }\r\n    return (\r\n      <div className='admin'>\r\n        <MDBNavbar className='position-fixed' dark expand='md'>\r\n          <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n            <a href='/PrintingPartner' className='logo-wrapper ablogo'>\r\n              <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n              <p style={{color:'white'}}>Printing</p>\r\n            </a>\r\n            <div className='topcon'>\r\n              {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n              <MDBNavItem>\r\n                <Notif />\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBBtn\r\n                  onClick={() => logout()}\r\n                  color='transparent'\r\n                  className='btnYellow logout'\r\n                >\r\n                  Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n            </div>\r\n          </MDBNav>\r\n          <MDBHamburgerToggler\r\n            color='#FAE933'\r\n            id='hamburger1'\r\n            onClick={() => this.toggleSingleCollapse('collapse1')}\r\n          />\r\n          <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n            <MDBNav\r\n              className='nav-pills sidebar-fixed position-fixed adminside'\r\n              id='pills-tab'\r\n              role='tablist'\r\n            >\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '1'}\r\n                  onClick={this.togglePills('default', '1')}\r\n                >\r\n                  <MDBIcon icon='chart-pie' className='mr-3' />\r\n                  Dashboard\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '2'}\r\n                  onClick={this.togglePills('default', '2')}\r\n                >\r\n                  <MDBIcon icon='print' className='mr-3' />\r\n                  Printing\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '3'}\r\n                  onClick={this.togglePills('default', '3')}\r\n                >\r\n                  <MDBIcon icon='truck' className='mr-3' />\r\n                  Delivery\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '4'}\r\n                  onClick={this.togglePills('default', '4')}\r\n                >\r\n                  <MDBIcon icon='calendar-check' className='mr-3' />\r\n                  Completed\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '5'}\r\n                  onClick={this.togglePills('default', '5')}\r\n                >\r\n                  <MDBIcon icon='ban' className='mr-3' />\r\n                  Cancelled\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              {/* <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '6'}\r\n                  onClick={this.togglePills('default', '6')}\r\n                >\r\n                  <MDBIcon icon='th-large' className='mr-3' />\r\n                  History\r\n                </MDBNavLink>\r\n              </MDBNavItem> */}\r\n\r\n              <MDBNavItem>\r\n\r\n              <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n            </MDBNav>\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='2'>\r\n              <PrintingTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <OrderDeliverytab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <CompletedOrderTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <CancelOrdertab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n      <MessageTab/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n      <MyAccount/>\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PrintingPartner)))\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n  MDBBtn, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n\r\n   \r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass] = React.useState('')\r\n  const [confPass,setConfPass] = React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' style={{float:'left'}}>\r\n          General\r\n      </h6>\r\n      <p style={{float:'right'}}>Account#:{mydata.accID}</p>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Institution :</span>   <TextField type='text' defaultValue={row.institution}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' style={{minWidth:'300px'}} defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password' style={{minWidth:'300px'}}     onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'15px'}}>Confirm Password :</span> <TextField type='password' style={{minWidth:'300px'}}   onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","\r\nimport { Grid } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style,  price,action) {\r\n        return { artworkDB,id,title,artist, style,  price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Approved' &&  art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n         \r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n\r\n            let archive =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Archived', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject'> Archive</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { message } from 'antd';\r\nimport imageCompression from 'browser-image-compression';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; \r\n        // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let {\r\n      startingStore: {upload,artwork,listOfArtworks},\r\n    } = this.props;\r\n    let getArtNames = listOfArtworks.filter(data=> data.artName === artwork.artName).length\r\n\r\n  let  onSubmit =()=> {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n  if (getArtNames === 0){\r\n\r\n    const data = new FormData();\r\n    artwork.setProperty('artistName', `${mydata.accFname} ${mydata.accLname}`)\r\n    data.append('artworkImg',this.state.selectedFile);\r\n    \r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Artwork submitted', 1));\r\n    };\r\n  \r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  \r\n  \r\n     }else{\r\n  \r\n       const success = () => {\r\n         message\r\n           .loading('Checking Availability', 1.3)\r\n           .then(() => message.success('Art name already taken', 1));\r\n       };\r\n   \r\n       setTimeout(() => {\r\n         success();\r\n       }, 1500);\r\n  \r\n     } \r\n  \r\n  \r\n    }\r\n\r\n\r\n\r\n    let {\r\n      startingStore: { listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\nartwork.setProperty('accID',mydata.accID)\r\nartwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n \r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#262626'}}><span style={{color:'white'}}> Register Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form \r\n            // onSubmit={this.onSubmit} \r\n            \r\n            className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>{\r\n                    \r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                    \r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n              \r\n\r\n\r\n                  <MDBInput\r\n                    label='Artist'\r\n                    type='text'\r\n                    disabled\r\n                    style={{width:'95%'}}\r\n                    valueDefault={`${mydata.accFname} ${mydata.accLname}`}\r\n                  \r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='number'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n            \r\n              \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    required\r\n               \r\n                  />\r\n                  </div>\r\n                  \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                  style={{width:'95%'}}\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    required\r\n                 \r\n                  />\r\n                   </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n              \r\n                     <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfPrintSize}\r\n                    placeholder='Printing Size'\r\n                    showCheckbox={true}\r\n                    displayValue='printSize'\r\n                    onSelect={selectArtSize}\r\n                    required\r\n              \r\n                  />\r\n                  </div>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  {/* <img src={this.state.selectedFile} alt='artwork'/> */}\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Quantity'\r\n                    type='number'\r\n                    required\r\n                 \r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                    style={{width:'95%'}}\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                      style={{overflow: 'hidden',textOverflow:' ellipsis'}}\r\n                    />\r\n                    {/* <img src={this.state.selectedFile} alt='artwork' /> */}\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo with 72dpi and above.\r\n                     <br/><span style={{fontStyle: 'italic'}}>DPI = Pixel Length * Pixel Width </span> \r\n                    </p>\r\n              \r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit' onClick={()=>onSubmit()}>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import { Grid } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n     \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Archived' && art.accID === mydata.accID).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n         \r\n            };\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork'/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { Grid } from '@material-ui/core';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class PendingArtwork extends Component { \r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n\r\n\r\n    componentDidMount() {   \r\n      let {\r\n        startingStore: {getAllArtworks},\r\n      } = this.props;\r\n      getAllArtworks();\r\n \r\n  \r\n    }\r\n  \r\n   \r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks,  artwork}} = this.props;\r\n\r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending' && art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n            let  info = (itm) => {\r\n\r\n              artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n              };\r\n              let  close= () => {\r\n       \r\n                this.setState({\r\n                  modal: false\r\n                });\r\n                };\r\n     \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          id: `${row.id}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve'>More Info</MDBBtn></div>\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped  \r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4} >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork'/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Style : {artwork.artStyle}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  ","import Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Artworks from './ActiveArtworks';\r\nimport AddArtwork from './AddArtwork';\r\nimport ArchivedArtwors from './ArchivedArtworks';\r\nimport Pending from './PendingArtwork';\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {   \r\n      let {\r\n        startingStore: {getAllArtworks, getArtists, getStyles, getCategories,getPrintSize},\r\n      } = this.props;\r\n      getAllArtworks();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n      getPrintSize()\r\n  \r\n    }\r\n  \r\n    render() {\r\n    \r\n  \r\n      return (\r\n<Fragment>\r\n        <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n        <div className='orderconAdmin' style={{marginTop:'16px'}}>\r\n        <Grid container sm={12}>\r\n            <Grid item sm={6}>\r\n        <h4>Artwork Lists</h4>\r\n        </Grid>\r\n        <Grid item sm={6} >\r\n            <div style={{float:'right'}}>\r\n<AddArtwork/>\r\n</div>\r\n</Grid> \r\n</Grid> \r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>   \r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import { MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='artwork' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from './DownloadImage';\r\n class Earnings extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n   \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n\r\n  \r\n            if (Delivery.orderItems.filter(ord => ord.accID === mydata.accID)) {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n   \r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n     \r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Amount',\r\n        field: 'amount',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => \r\n      {\r\n      \r\n        let total =row.items.filter(ord => ord.accID === '92420-650').reduce((sum, record) => parseInt(sum) + parseInt(record.artworkPaymentAmount) , 0)\r\n        \r\n        \r\n       \r\n      return(\r\n\r\n\r\n    \r\n       {\r\n \r\n\r\n\r\n\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        amount:`${total}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     )})\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n             <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Sold Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n      <MDBCard>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n</MDBCard>\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt='artwork'\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(Earnings))","import { MDBBadge, MDBDropdown, MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle, MDBIcon } from \"mdbreact\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n    let {startingStore:{listOfNotif}}=this.props;\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n   \r\n   let notifCount = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').length\r\n  \r\n   let mynotif = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n     return(\r\n       <Fragment key={i}>\r\n   \r\n           <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n             <span className=\"time\">{notifInfo.notifDT}</span>\r\n           </MDBDropdownItem>\r\n    \r\n       </Fragment>\r\n     )\r\n   })\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n        <MDBBadge color=\"danger\" className=\"ml-2 bell\" >{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n      <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     {mynotif}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n\r\n\r\n    render() {\r\n        let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n      let {startingStore:{listofUserOrder,listOfArtworks}}=this.props;\r\n      let Artwoks = listOfArtworks.filter(art => art.accID === mydata.accID).length\r\n      let Orders = listofUserOrder.filter (ord => ord.orderItems.accID === mydata.accID).length;\r\n   \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Typography className={classes.title}  gutterBottom style={{float:\"right\"}}>\r\nEarnings YTD\r\n</Typography>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\",color:\"white\"}}/>\r\n{/* <span style={{textAlign:\"right\",color:\"white\"}}> &#8369;{sales}</span> */}\r\n</Typography>\r\n\r\n<Typography variant=\"body2\" component=\"p\">\r\n\r\n\r\n\r\n</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<BrushIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArtworks \r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Artwoks}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOrders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DCards from './../DCards';\r\n\r\nclass ArtistProfile extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts,getAllArtworks,getOrders,getFollow},\r\n    } = this.props;\r\n    getAccounts()\r\n    getAllArtworks()\r\n    getOrders()\r\n   \r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listOfUsers,listOfFollowing\r\n      },\r\n    } = this.props;\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\nfunction createData(userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img) {\r\n  return { userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img };\r\n}\r\nlet myprofile = listOfUsers.filter(pp => pp.accID === mydata.accID).map(info =>{\r\n\r\n  return(createData(\r\n    info,info.accID,info.accFname,info.accLname,info.accEmailAddress,info.accAddress,info.accContact,info.birthYear,info.accInstitution,info.acc_Documents,info.artistDescription,info.profile_Img\r\n\r\n\r\n  )\r\n  )\r\n})\r\n\r\n\r\nlet myFollowers = listOfFollowing.filter(data => data.followingID === mydata.accID).length;\r\n    return (\r\n<Fragment>\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n            \r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      {myprofile.map((row,index) => {\r\n\r\n        return(\r\n        \r\n        \r\n        \r\n          <Fragment>\r\n\r\n   \r\n      <MDBCard style={{marginTop:'15px',marginBottom:'20px'}}>\r\n    \r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              \r\n   \r\n\r\n     \r\n\r\n              <div className='left' key={index}>\r\n                <div className='artistpp'>\r\n                \r\n               \r\n                <img \r\n      src={row.profile_Img}\r\n      alt=\"profilePic\"\r\n      />\r\n                  ) \r\n                </div>\r\n                <div className='artistInfo'>\r\n                <h2 className='title'>\r\n                 {row.fname} {row.lname}\r\n                 <span className='bday'>\r\n                      {row.address}, born{' '}\r\n                      {row.birthYear}\r\n                    </span>\r\n                    <span className='bday'>\r\n                  {row.institution}\r\n                </span>\r\n                    </h2>\r\n              \r\n\r\n                  <span className='estart'>Established Artist</span>\r\n               \r\n                </div>\r\n                <div style={{marginTop:'16px'}}>\r\n                  <p> {row.description}</p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    {myFollowers === 0 ? (\r\n                      '0'\r\n                    ):(\r\n                      {myFollowers}\r\n                    )}\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n\r\n            \r\n\r\n    \r\n\r\n            </div>\r\n          \r\n          </div>\r\n        \r\n        \r\n          </MDBCard>\r\n      \r\n      <DCards/>\r\n\r\n      </Fragment>\r\n      )})}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistProfile));\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n  MDBNavbar, MDBNavItem,\r\n  MDBNavLink,\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/admin.css';\r\nimport Settings from './AccountSetting';\r\nimport ArtworkTab from './ArtworkManagement';\r\nimport EarningsTab from './Earnings';\r\nimport Notif from './Notification';\r\nimport Profile from './Profile';\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAllNotif}}=this.props\r\n    getAllNotif()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n \r\n    return (\r\n      <div>\r\n     <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n    shouldShowDialog={true}\r\n    loggedInGreeting=\"Hi! How can we help you?\"\r\n\r\n  />\r\n\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n              <a href='/ArtistHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Artist</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n               \r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='coins' className='mr-3' />\r\n                    Sold Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n     \r\n    \r\n           \r\n                <MDBNavItem>\r\n\r\n{/* \r\n                <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink> */}\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              {/* <Dashboard /> */}\r\n              <Profile/>\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <EarningsTab />\r\n            </MDBTabPane>\r\n            {/* <MDBTabPane tabId='4'>\r\n              <Messages/>\r\n            </MDBTabPane> */}\r\n            <MDBTabPane tabId='5'>\r\n              <Settings />\r\n            </MDBTabPane>\r\n         \r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your information will be evaluated by ArtBasically kindly wait for us\r\n          to contact you.\r\n          <br /> Thank you for your interest in joining us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","/* eslint no-param-reassign: [\"error\"] */\n\nimport Joi from 'joi';\nimport {\n  toJS,\n  isObservableArray,\n  isObservableObject,\n  isBoxedObservable,\n  action,\n  decorate,\n} from 'mobx';\n\nclass Model {\n  constructor(props) {\n    Object.assign(this, props);\n  }\n\n  static get schema() {\n    return {};\n  }\n\n  validate = () => (\n    Joi.validate(\n      this,\n      this.constructor.schema,\n      {\n        skipFunctions: true,\n        abortEarly: false,\n        allowUnknown: false,\n      },\n    )\n  );\n\n  setProperty = (property, value) => {\n    this.handleProperties(property, value);\n  };\n\n  // get toJS of each property that is an observable\n  get toJSproperties() {\n    let propertiesClone = {};\n\n    Object.keys(this).forEach((prop) => {\n      const value = this[prop];\n      if (isObservableArray(value) || isObservableObject(value) || isBoxedObservable(value)) {\n        propertiesClone = { ...propertiesClone, [prop]: toJS(value) };\n      }\n    });\n\n    return { ...this, ...propertiesClone };\n  }\n\n  get errors() {\n    const { error } = this.validate();\n\n    if (error) {\n      const { details } = error;\n      return details;\n    }\n\n    return [];\n  }\n\n  get isValid() {\n    const { error } = this.validate();\n    return error === null;\n  }\n\n  handleProperties = (property, value, deepProperty = undefined) => {\n    if (typeof property !== 'string') {\n      throw new Error('accepts property of type string');\n    }\n\n    const properties = property.split('.');\n    const prop = properties.shift();\n\n    if (properties.length > 0) {\n      if (deepProperty) {\n        return this.handleProperties(properties.join('.'), value, deepProperty[prop]);\n      }\n      return this.handleProperties(properties.join('.'), value, this[prop]);\n    }\n    if (deepProperty) {\n      (deepProperty[prop] = value);\n      return true;\n    }\n    this[prop] = value;\n    return true;\n  }\n}\n\ndecorate(Model, {\n  setProperty: action,\n});\n\nexport default Model;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Account extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      accID: '',\r\n      accFname: '',\r\n      accLname: '',\r\n      accSuffix: '',\r\n      accAddress: '',\r\n      accEmailAddress: '',\r\n      accessType: '',\r\n      accInstitution: '',\r\n      accFollowers: '0',\r\n      accPoints: '0',\r\n      password: '',\r\n      username: '',\r\n      accContact: '',\r\n      profile_Img: undefined,\r\n      accCategories: [],\r\n      accStyles: [],\r\n      dateAdded: '',\r\n      acc_Status: '',\r\n      acc_Documents: '',\r\n      regType: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Account, {\r\n  _id: observable,\r\n  accID: observable,\r\n  accFname: observable,\r\n  accLname: observable,\r\n  accSuffix: observable,\r\n  accAddress: observable,\r\n  accEmailAddress: observable,\r\n  accessType: observable,\r\n  accInstitution: observable,\r\n  accFollowers: observable,\r\n  accPoints: observable,\r\n  password: observable,\r\n  username: observable,\r\n  accContact: observable,\r\n  profile_Img: observable,\r\n  accCategories: observable,\r\n  accStyles: observable,\r\n  dateAdded: observable,\r\n  acc_Status: observable,\r\n  acc_Documents: observable,\r\n  regType: observable,\r\n});\r\n\r\nexport default Account;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Artwork extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      artworkPath: '',\r\n      artDescription: '',\r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artDimension: '',\r\n      artRating: '',\r\n      accID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n      artworkStatus: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Artwork, {\r\n  _id: observable,\r\n  artworkPath: observable,\r\n  artDescription: observable,\r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artDimension: observable,\r\n  artRating: observable,\r\n  accID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n  artworkStatus: observable,\r\n});\r\n\r\nexport default Artwork;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Cart extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      artistName: '',\r\n      dateOfTransaction: '',\r\n      artworkName: '',\r\n      artworkMaterial: '',\r\n      artworkFramingOptions: '',\r\n      artworkQuantity: '1',\r\n      artworkSize: '',\r\n      artworkPrice: '',\r\n      artworkPaymentAmount: '',\r\n      artworkImg: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Cart, {\r\n  accID: observable,\r\n  artistName: observable,\r\n  dateOfTransaction: observable,\r\n  artworkName: observable,\r\n  artworkMaterial: observable,\r\n  artworkFramingOptions: observable,\r\n  artworkQuantity: observable,\r\n  artworkSize: observable,\r\n  artworkPaymentAmount: observable,\r\n  artworkImg: observable,\r\n  artworkPrice: observable,\r\n});\r\n\r\nexport default Cart;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Categories extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      catID: ' ',\r\n      catType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Categories, {\r\n  catID: observable,\r\n  catType: observable,\r\n});\r\n\r\nexport default Categories;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Order extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      orderID: '',\r\n      modeOfPayment: '',\r\n      orderDate: '',\r\n      orderItems: '',\r\n      orderStatus: '',\r\n      paymentStatus: '',\r\n      totalAmount:'',\r\n      partnerEarnings:'',\r\n      \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Order, {\r\n  accID: observable,\r\n  orderID: observable,\r\n  modeOfPayment: observable,\r\n  orderDate: observable,\r\n  orderItems: observable,\r\n  orderStatus: observable,\r\n  paymentStatus: observable,\r\n  totalAmount:observable,\r\n  partnerEarnings:observable,\r\n});\r\n\r\nexport default Order;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Style extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      styleID: ' ',\r\n      styleType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Style, {\r\n  styleID: observable,\r\n  styleType: observable,\r\n});\r\n\r\nexport default Style;\r\n","import Joi from \"joi\";\nimport { decorate, observable } from \"mobx\";\nimport Model from \"./Model\";\n\nclass User extends Model {\n  constructor(props) {\n    const defaults = {\n      _id: undefined,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      phone: 0,\n      address: {\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        postalCode: 0\n      },\n      dateRegistered: undefined\n    };\n    super({ ...defaults, ...props });\n  }\n\n  static get schema() {\n    return {\n      _id: Joi.string()\n        .hex()\n        .length(20),\n      firstName: Joi.string().required(),\n      lastName: Joi.string().required(),\n      email: Joi.email().required(),\n      password: Joi.string().required(),\n      phone: Joi.string().required(),\n      address: Joi.object().keys({\n        street: Joi.string(),\n        city: Joi.string(),\n        state: Joi.string(),\n        postalCode: Joi.number()\n      }),\n      date: Joi.date()\n        .iso()\n        .required()\n    };\n  }\n}\n\ndecorate(User, {\n  firstName: observable,\n  lastName: observable,\n  email: observable,\n  password: observable,\n  phone: observable,\n  address: observable,\n  date: observable,\n});\n\nexport default User;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass PrintSize extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      sizeID: ' ',\r\n      printSize: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(PrintSize, {\r\n  sizeID: observable,\r\n  printSize: observable,\r\n});\r\n\r\nexport default PrintSize;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Notification extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      notifID: '',\r\n      notifSender: ' ',\r\n      notifRecipient:'',\r\n      notifSubject:'',\r\n      notifMsg:'',\r\n      notifDT:'',\r\n      notifStatus:'',\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Notification, {\r\n  notifID: observable,\r\n  notifSender: observable,\r\n  notifRecipient:observable,\r\n  notifSubject:observable,\r\n  notifMsg:observable,\r\n  notifDT:observable,\r\n  notifStatus:observable,\r\n});\r\n\r\nexport default Notification;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass MyLists extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      mylistsID:'',\r\n      accID:'',\r\n     \r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artRating: '',\r\n      artistID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n\r\n\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(MyLists, {\r\n  _id: observable,\r\n  mylistsID:observable,\r\n  accID:observable,\r\n \r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artRating: observable,\r\n  artistID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n\r\n\r\n});\r\n\r\nexport default MyLists;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Feedback extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      feedbackID: '',\r\n      accID: '',\r\n      orderID: '',\r\n      artworkID:'',\r\n      date: '',\r\n      feedbackNote: '',\r\n   \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Feedback, {\r\n  feedbackID: observable,\r\n  accID: observable,\r\n  orderID: observable,\r\n  artworkID:observable,\r\n  date: observable,\r\n  feedbackNote: observable,\r\n\r\n});\r\n\r\nexport default Feedback;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass UserFollow extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: undefined,\r\n      followID:'',\r\n      followerID:'',\r\n      followingID:'',\r\n    \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(UserFollow, {\r\n  _id: observable,\r\n  followID:observable,\r\n  follower:observable,\r\n  followingID:observable,\r\n \r\n});\r\n\r\nexport default UserFollow;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass ArtShares extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: undefined,\r\n      shareID:'',\r\n      userID:'',\r\n      social:'',\r\n      dateTime:'',\r\n    \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(ArtShares, {\r\n  _id: observable,\r\n  shareID:observable,\r\n  userID:observable,\r\n  social:observable,\r\n  dateTime:observable,\r\n \r\n});\r\n\r\nexport default ArtShares;\r\n","import _ from 'lodash';\nimport {action, decorate, observable, toJS} from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nimport PrintSize from './../models/PrintSize'\nimport Notification from './../models/Notif'\nimport MyLists from './../models/MyLists'\nimport Feedback from './../models/Feedback'\nimport UserFollow from './../models/UserFollow'\nimport ArtShare from './../models/ArtShares'\n\nclass StartingStore {\n  account = new Account();\n  artwork = new Artwork();\n  categories = new Categories();\n  style = new Style();\n  cart = new Cart();\n  order = new Order();\n  printsize = new PrintSize();\n  notif = new Notification();\n  mylists= new MyLists();\n  feedback = new Feedback();\n  userfollow = new UserFollow();\n  artshare = new ArtShare()\n  listOfFollowing = [];\n  listOfFeedback = [];\n  listOfMyLists =[];\n  listOfNotif=[];\n  listOfPrintSize =[];\n  listOfOrders = [];\n  welcomeMessage = 'Welcome!';\n  listOfUsers = [];\n  listOfArtworks = [];\n  listOfFilteredArtwork =[];\n  listOfCategories = [];\n  listOfStyles = [];\n  listOfOrder = [];\n  listOfArtists = [];\n  currentUser = new User();\n  listOfUserDocs = [];\n  listOfUserCart = [];\n  listofArtistArtwork = [];\n  listOfSingleArtwork = [];\n  listofArtistInfo = [];\n  listofArtistCategories = [];\n  listofUserCategoriesArtwork = [];\n  listofFilteredUserArtworkCategories = [];\n  listOfEmergingArtist = [];\n  listofUserOrder = [];\n  filter = false;\n  listofUserStyleArtwork = [];\n  followed = false;\n  listRelatedWorkByCategory = [];\n  listOfArtShare =[];\n\n  img = undefined;\n  api = undefined;\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n    return obj;\n  }\n  setFollowed = () => {\n    this.followed = !this.followed;\n  };\n  filterArtwork = (type) => {\n    this.filter = type;\n  };\n  addAccount = () => {\n  \n      return new Promise ((resolve,reject) =>{\n     \n      this.api.addaccount(this.account)\n      .then(resp => {\n      \n        \n        if (resp.data !== false ) {  \n          this.listOfUsers = resp.data; \n          resolve(true);       \n          } \n  else {         \n   resolve(false);      \n   }  \n       \n      })\n    })\n\n  };\n\n  getAccounts = () => {\n    this.api.getaccounts().then((resp) => {\n    \n      this.listOfUsers = resp.data;\n    });\n  };\n\n  editAccount = () => {\n    return new Promise((resolve, reject) => {\n    this.api\n      .editAccount(this.removeUndefinedProps(this.account))\n      .then((resp) => {\n        let user = resp.data.filter((us) => us._id === this.account._id);\n       \n        resolve('success')\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    });\n  };\n\n  editProfile = () => {\n    return new Promise((resolve,reject) =>{\n\n   \n\n    let doc = this.listOfUsers.filter(data=> {\n   \n      if (data.accID === this.account.accID){\n        \n          return data._id\n      }\n    })\n\n\n \n \n    this.api.editprofile(this.account , doc[0]._id)\n    .then(resp => {\n \n      this.listOfUsers=resp.data\n      resolve('true')\n    })\n\n  })\n  }\n\n  // editProfile = () => {\n   \n  //   this.api.editprofile(this.account).then((resp) => {\n  //     this.listOfUsers = resp.data;\n     \n  //   });\n  // };\n\n\n  loginAccount = () => {\n    return new Promise((resolve, reject) => {\n      this.api.loginaccount(this.account).then((resp) => {\n       \n        if (resp.data.accessType === 'Admin') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(true);\n        } else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        } else if (resp.data.accessType === 'PrintingPartner') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(3);\n        } else if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n        \n          resolve(4)\n        } else if (resp.data.acc_Status === 'Pending'){\n          resolve(5)\n         \n        } else if (resp.data.acc_Status === 'Rejected'){\n          resolve(6)\n         \n        }else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginEmail = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginemail(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginFB = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginfb(this.account)\n     \n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(4)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n  loginGoogle = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.logingoogle(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addArtwork = () => {\n  \n    this.api.addartwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n    \n\n    });\n  };\n\n  upload = (img, documents) => {\n\n    return new Promise((resolve, reject) => {\n      return this.api.upload(img).then((resp) => {\n   \n        if (documents === 'docu') {\n          this.account.setProperty('acc_Documents', resp.data.url);\n        }else if(documents === 'profile'){\n          this.account.setProperty('profile_Img', resp.data.url);\n        } else {\n          this.artwork.setProperty('artworkImg', resp.data.url);\n          this.account.setProperty('accImg', resp.data.url);\n        }\n  \n        if (this.artwork.artName === '') {\n          this.addAccount();\n        } else {\n          this.addArtwork();\n        }\n      });\n    });\n  };\n\n  getArtwork = () => {\n    this.api.getartwork().then((resp) => {\n      this.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n \n    });\n  };\n\n  getEmergingArtistArtwork = () => {\n    this.api.getEmergingArtist().then((resp) => {\n      this.listOfEmergingArtist = resp.data;\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    if (userData !== null) {\n      this.api\n        .getArtistFollowArtwork(email ? email : userData.accEmailAddress)\n        .then((resp) => {\n          this.listOfArtistFollowed = resp.data;\n        });\n    }\n  };\n\n  getArtworkInfo = () => {\n    return new Promise((resolve, reject) => {\n      this.api.getartworkInfo().then((resp) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        let artCategories = [];\n        let categories = [];\n\n        this.listOfArtworks = resp.data.map((art) => {\n          artCategories.push(art.artTheme[0]);\n          return art;\n        });\n\n        let cat = artCategories.filter((art) => {\n          if (art === '' || categories.includes(art)) {\n          } else {\n            categories.push(art);\n          }\n        });\n\n        if (userData === null || userData === false) {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .map((art) => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n        } else {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .filter((art) => {\n              userData['accCategories'].map((cat) => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n\n                  return art;\n                }\n              });\n            });\n       \n          this.listofFilteredUserArtworkCategories = _.uniqBy(\n            this.listofFilteredUserArtworkCategories,\n            (a) => a.artName\n          );\n        }\n\n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtworkInfo = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getsingleartworkinfo(id).then((resp) => {\n        this.listOfSingleArtwork = resp.data;\n\n        if (resp.data !== false) {\n          let listOfSingleArtwork = resp.data;\n          let styles = [];\n          let themes = [];\n          if (resp.data.length > 1) {\n            resp.data.map((item) => {\n              item.artStyle.map((style) => styles.push(style));\n              item.artTheme.map((theme) => themes.push(theme));\n            });\n            let categories = _.union(themes.concat(styles));\n            this.getRelatedWorkByCategory(JSON.stringify(categories));\n          } else {\n            if (resp.data.artStyle !== undefined) {\n              // resp.data.artStyle.map((style) => styles.push(style));\n              // resp.data.artTheme.map((theme) => themes.push(theme));\n\n              let categories = _.union(\n                listOfSingleArtwork.artTheme.concat(\n                  listOfSingleArtwork.artStyle\n                )\n              );\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            }\n          }\n\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  followArtist = (artist) => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.followAccount(userData, artist).then((resp) => {\n        if (resp.data !== false) {\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addOrder = () => {\n \n    this.api.addOrder(this.order).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editArtwork = () => {\n   \n    this.api.editArtwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n     \n    });\n  };\n\n  //Category\n\n  addCategory = () => {\n    this.api.addCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n \n    });\n  };\n\n  editCategory = () => {\n    this.api.editCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n\n  getCategories = () => {\n    this.api.getCategories().then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n  getOrderUser = () => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrder(userData._id).then((resp) => {\n        this.listofUserOrder = resp.data;\n       \n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Style\n\n  addStyle = () => {\n    this.api.addStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  editStyle = () => {\n    this.api.editStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  getStyles = () => {\n    this.api.getStyles().then((resp) => {\n      this.listOfStyles = resp.data;\n    \n    });\n  };\n\n  //PrintSize\n\n  addPrintSize = () => {\n    this.api.addprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n  getPrintSize = () => {\n    this.api.getprintsize().then((resp) => {\n      this.listOfPrintSize = resp.data;\n    \n    });\n  };\n\n  editPrintSize = () => {\n    this.api.editprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n\n  //Artist\n  getArtists = (artist) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtists().then((resp) => {\n        this.listOfArtists = resp.data;\n\n        if (resp.data !== false && artist !== '') {\n          resolve(\n            resp.data.filter(\n              (art) => `${art.accFname} ${art.accLname}` === artist\n            )\n          );\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtists = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n          if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n            this.followed = true;\n          }\n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getSingleEnthusiast = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n        \n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getArtistArtwork = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtistArtwork(id).then((resp) => {\n        let listOfCategories = [];\n        if (resp.data !== false && id !== '') {\n          this.listofArtistArtwork = resp.data;\n\n          listOfCategories = resp.data.map((art) => {\n            if (art.artTheme[0] !== '') {\n              return art.artTheme[0];\n            }\n          });\n          this.listofArtistCategories = listOfCategories.filter((cat) => {\n            return cat !== undefined;\n          });\n     \n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getRelatedWorkByCategory = (cat) => {\n    \n    return new Promise((resolve, reject) => {\n      this.api.getRelatedWorkByCategory(cat).then((resp) => {\n        if (resp.data !== false && cat !== '') {\n          this.listRelatedWorkByCategory = resp.data;\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Cart\n\n  addToCart = () => {\n    this.api.addToCart(this.cart).then((resp) => {\n      this.listOfUserCart = resp.data;\n    });\n  };\n\n  getToCart = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    this.api.getToCart(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfUserCart = resp.data.filter(\n          (item) => item.artworkQuantity !== ''\n        );\n      }\n    });\n  };\n\n  editToCart = (data) => {\n \n    let currData = toJS(data);\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n \n    this.api.editToCart(currData._id).then((resp) => {\n      if (resp.data !== false) {\n        this.getToCart(userData);\n      }\n    });\n  };\n\n  // ORDERS\n  getOrders = () => {\n    // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n \n    this.api.getOrders().then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrders = resp.data;\n      }\n    });\n  };\n  getOrder = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n    this.api.getOrders(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editOrder = (id, status, account) => {\n    let data = {id: id, status: status, account: account};\n    this.api.editOrder(data).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  addNotif = () => { \n    return new Promise((resolve, reject) => {   \n      this.api.addnotif(this.notif)\n      .then(resp => {    \n         this.listOfNotif = resp.data\n   \n         if (resp.data !== false ) {   \n                  resolve(resp.data);       \n                  } \n         else {         \n           resolve(false);      \n           }  \n           });\n          })\n    }\n\n    getNotif = () => { \n   \n      return new Promise((resolve, reject) => {   \n        let getId = JSON.parse(sessionStorage.getItem('userData'))\n     \n        this.api.getnotif(getId.accID)\n        .then(resp => {    \n        \n           this.listOfNotif = resp.data\n     \n           if (resp.data !== false ) {   \n                    resolve(resp.data);       \n                    } \n           else {         \n             resolve(false);      \n             }  \n             });\n            })\n      }\n\n      getAllNotif = () => {\n        this.api.getallnotif()\n        .then(resp => {\n    \n         this.listOfNotif=resp.data\n        \n      \n        })\n\n      }\n\n\n      editNotif = (id, status, notif) => {\n        \n        let data = {id: id, status: status, notif: notif};\n     \n        this.api.editnotif(data).then((resp) => {\n          if (resp.data !== false) {\n            this.listOfNotif = resp.data;\n          }\n        });\n      }\n\n      addMyLists = () => { \n        return new Promise((resolve, reject) => {   \n          this.api.addmylists(this.mylists)\n          .then(resp => {    \n             this.listOfMyLists = resp.data\n       \n             if (resp.data !== false ) {   \n                      resolve(resp.data);       \n                      } \n             else {         \n               resolve(false);      \n               }  \n               });\n              })\n        }\n\n        getMyLists = () => { \n   \n          return new Promise((resolve, reject) => {   \n            let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n            this.api.getmylists(getId.accID)\n            .then(resp => {    \n          \n               this.listOfMyLists = resp.data\n         \n               if (resp.data !== false ) {   \n                        resolve(resp.data);       \n                        } \n               else {         \n                 resolve(false);      \n                 }  \n                 });\n                })\n          }\n\n\n          deleteMyLists =() =>{\n            let mytoken =this.listOfMyLists.filter(data =>{\n            \n              if (data.mylistsID === this.mylists.mylistsID){\n                return data._id\n              }\n            })\n          \n            this.api.deletemylists(this.mylists ,mytoken[0]._id)\n            .then(resp => {\n\n              this.listOfMyLists=resp.data\n            })\n          }\n\n          addFeedback = () => { \n         \n            return new Promise((resolve, reject) => {   \n              this.api.addfeedback(this.feedback)\n              .then(resp => {    \n                 this.listOfFeedback = resp.data\n           \n                 if (resp.data !== false ) {   \n                          resolve(resp.data);       \n                          } \n                 else {         \n                   resolve(false);      \n                   }  \n                   });\n                  })\n            }\n\n\n        \n            getFeedback = () => {\n              this.api.getfeedback().then((resp) => {\n                this.listOfFeedback = resp.data;\n              \n              });\n            };\n\n\n\n            addFollow = () => { \n         \n              return new Promise((resolve, reject) => {   \n                this.api.addfollow(this.userfollow)\n                .then(resp => {    \n                   this.listOfFollowing = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              \n          deleteFollow =() =>{\n            return new Promise((resolve, reject) => {   \n\n             let getuserId = JSON.parse(sessionStorage.getItem('userData'))\n            let follow =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data._id\n              }\n            })\n\n            let follow_ID =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data.followID\n              }\n            })\n           \n          \n            this.api.deletefollow(this.userfollow ,follow[0]._id,follow_ID[0].followID)\n            .then(resp => {\n\n              resolve('deleted')\n            })\n\n          })\n          }\n\n    \n\n\n\n          // getFollow = () => { \n   \n          //   return new Promise((resolve, reject) => {   \n          //     let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n          //     this.api.getfollow(getId.accID)\n          //     .then(resp => {    \n          //   console.log(resp.data,'aaa')\n          //        this.listOfFollowing = resp.data\n           \n          //        if (resp.data !== false ) {   \n          //                 resolve(resp.data);       \n          //                 } \n          //        else {         \n          //          resolve(false);      \n          //          }  \n          //          });\n          //         })\n          //   }\n\n              \n            getFollow = () => {\n              this.api.getfollow().then((resp) => {\n                this.listOfFollowing = resp.data;\n              \n              });\n            };\n\n            getAllArtworks = () => {\n              return new Promise((resolve, reject) => {\n              this.api.getallartworks().then((resp) => {\n        \n                this.listOfArtworks = resp.data;\n                  \n              });\n            })\n            }\n\n\n            addArtShare = () => { \n        \n              return new Promise((resolve, reject) => {   \n                this.api.addartshare(this.artshare)\n                .then(resp => {    \n                   this.listOfArtShare = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              getArtShare  = () => {\n                return new Promise((resolve, reject) => {\n                this.api.getartshare().then((resp) => {\n          \n                  this.listOfArtShare = resp.data;\n                    \n                });\n              })\n              }\n\n\n\n\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  editProfile: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n  addPrintSize:action,\n  getPrintSize:action,\n  editPrintSize:action,\n  loginAccount:action,\n  loginEmail:action,\n  loginFB:action,\n  loginGoogle:action,\n  notif:observable,\n  listOfNotif:observable,\n  addNotif:action,\n  getNotif:action,\n  getAllNotif:action,\n  editNotif:action,\n  mylists:observable,\n  listOfMyLists :observable,\n  addMyLists:action,\n  getMyLists:action,\n  deleteMyLists:action,\n  feedback:observable,\n  listOfFeedback:observable,\n  addFeedback:action,\n  getFeedback:action,\n  getSingleEnthusiast:action,  \n  userfollow:observable,\n  listOfFollowing:observable,    \n  addFollow:action,   \n  deleteFollow:action,   \n  getFollow:action,        \n  getAllArtworks:action,        \n  artshare:observable,\n  listOfArtShare:observable,      \n  addArtShare:action,    \n  getArtShare:action,\n  listOfFilteredArtwork:observable,                  \n});\n\nexport default StartingStore;\n","import axios from 'axios';\nimport {action, decorate} from 'mobx';\n\nclass Api {\n  api = axios.create({\n    baseURL: '/api',\n  });\n\n  // ACCOUNT\n  addaccount = (data) => {\n    return this.api.post('addAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getaccounts = () => {\n    return this.api.get('getAccounts');\n  };\n\n  editAccount = (data) => {\n    return this.api.post('editAccount', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editprofile = (data ,docID)=>{\n    \n    return this.api.put(`editProfile/${docID}`,{\n    mode:'cors',\n    data:data,\n  })\n  }\n\n  \n  addOrder = (data) => {\n    return this.api.post('addOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginaccount = async (data) => {\n    return this.api.post('loginAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginemail = async (data) => {\n   \n    return this.api.post('loginEmail', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  \n  loginfb = async (data) => {\n   \n    return this.api.post('loginFB', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  \n  logingoogle = async (data) => {\n   \n    return this.api.post('loginGoogle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getOrder = (id) => {\n    return this.api.get(`getOrder/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  // ARTWORK\n  addartwork = (data) => {\n    return this.api.post('addArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getartwork = () => {\n    return this.api.get('getArtworks');\n  };\n\n  getartworkInfo = () => {\n    return this.api.get('getArtworkInfo');\n  };\n\n  getsingleartworkinfo = (id) => {\n    return this.api.get(`getSingleArtworkInfo/${id}`);\n  };\n\n  editArtwork = (data) => {\n    return this.api.post('editArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getArtistArtwork = (id) => {\n    return this.api.get(`getArtistArtwork/${id}`);\n  };\n\n  getRelatedWorkByCategory = (category) => {\n    return this.api.get(`getRelatedWorkByCategory/${category}`);\n  };\n\n  // CATEGORY\n  addCategory = (data) => {\n    return this.api.post('addCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editCategory = (data) => {\n    return this.api.post('editCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getCategories = () => {\n    return this.api.get('getCategories');\n  };\n\n  // STYLES\n  addStyle = (data) => {\n    return this.api.post('addStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editStyle = (data) => {\n    return this.api.post('editStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getStyles = () => {\n    return this.api.get('getStyles');\n  };\n\n  //Print Size\n  addprintsize = (data) => {\n    return this.api.post('addprintSize', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  getprintsize = () => {\n    return this.api.get('getprintSize');\n  };\n\n  editprintsize =(data)=>{\n    return this.api.post('editprintSize',{\n      mode:'cors',\n      data:data,\n    })\n  };\n\n  //ARTIST\n  getArtists = () => {\n    return this.api.get('getArtists');\n  };\n\n  getSingleArtists = (id) => {\n    return this.api.get(`getSingleArtists/${id}`);\n  };\n\n  // CART\n\n  addToCart = (data) => {\n    return this.api.post('addToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getToCart = (data) => {\n    return this.api.post('getToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editToCart = (id) => {\n    return this.api.delete(`editToCart/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  upload = (img) => {\n    return this.api.post('/upload', img, {\n      mode: 'cors',\n    });\n  };\n\n  getOrders = () => {\n    return this.api.get('getAllOrders', {\n      mode: 'cors',\n    });\n  };\n\n  followAccount = (data, id) => {\n    return this.api.post(`followAccount/${id}`, {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editOrder = (data) => {\n    return this.api.put('editOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getEmergingArtist = () => {\n    return this.api.get('getEmergingArtistArtwork', {\n      mode: 'cors',\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    return this.api.get(`getArtistFollowArtwork/${email}`, {\n      mode: 'cors',\n    });\n  };\n  addnotif = (data) => {\n    \n    return this.api.post('addNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n  getnotif = (id) => {\n    return this.api.get(`getNotif/${id}`);\n  };\n\n  getallnotif = () => {\n    return this.api.get(`getAllNotif`);\n  };\n\n  editnotif = (data) => {\n    return this.api.put('editNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n\n\naddmylists = (data) => {\n \n  return this.api.post('addMyLists', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetmylists = (id) => {\n \n  return this.api.get(`getMyLists/${id}`, {\n    mode: 'cors',\n  });\n};\n\ndeletemylists = (data,id) =>{\n  return this.api.delete(`deleteMyLists/${id}`,{\n    data:data,\n  })\n}\n\n\n\naddfeedback = (data) => {\n  return this.api.post('addFeedback', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetfeedback = () => {\n  return this.api.get('getFeedback');\n};\n\n\n\naddfollow = (data) => {\n  return this.api.post('addFollow', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\n\ngetfollow = () => {\n  return this.api.get('getFollow');\n};\n\ndeletefollow = (data,id,followid) =>{\n \n  return this.api.delete(`deleteFollow/${id}/${followid}`,{\n    data:data,\n  })\n}\n\ngetallartworks = () => {\n  return this.api.get('getAllArtworks');\n};\n\naddartshare = (data) => {\n\n  return this.api.post('addartShare', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\n\ngetartshare= () => {\n  return this.api.get('getartShare');\n};\n\n\n}\n\n\n\n\ndecorate(Api, {\n  getUsers: action,\n  addaccount: action,\n  getaccounts: action,\n  loginaccount: action,\n  loginemail: action,\n  loginfb: action,\n  logingoogle: action,\n  editAccount: action,\n  editprofile: action,\n  addartwork: action,\n  getartwork: action,\n  editArtwork: action,\n  getartworkInfo: action,\n  addCategory: action,\n  editCategory: action,\n  getCategories: action,\n  getArtists: action,\n  addToCart: action,\n  getToCart: action,\n  editToCart: action,\n  addStyle: action,\n  addprintsize:action,\n  getprintsize:action,\n  editprintsize:action,\n  getStyles: action,\n  editStyle: action,\n  getsingleartworkinfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  getOrders: action,\n  getOrder: action,\n  followAccount: action,\n  addOrder: action,\n  editOrder: action,\n  getEmergingArtist: action,\n  getArtistFollowArtwork: action,\n  addnotif:action,\n  getnotif:action,\n  editnotif:action,\n  addmylists:action,\n  getmylists:action,\n  deletemylists:action,\n  addfeedback:action,\n  getfeedback:action,\n  addfollow:action,\n  getfollow:action,\n  deletefollow:action,\n  getallartworks:action,\n  addartshare:action,\n  getartshare:action,\n});\n\nexport default Api;\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, withRouter} from 'react-router-dom';\r\nimport {Provider} from 'mobx-react';\r\n\r\n//pages\r\nimport Landing from './pages/Landing/';\r\nimport Homepage from './pages/Homepage/';\r\nimport SingleArtist from './pages/SingleArtist/';\r\nimport ArtistReg from './pages/ArtistReg/';\r\nimport ArtGalReg from './pages/ArtGalReg/';\r\nimport UserReg from './pages/UserReg/';\r\nimport UploadWork from './pages/UploadWork/';\r\nimport SingleArt from './pages/SingleArt/';\r\nimport Artworks from './pages/Artworks/';\r\nimport Artists from './pages/Artists/';\r\nimport CProfile from './pages/CProfile/';\r\nimport CProfileEdit from './pages/CProfileEdit/';\r\nimport Order from './pages/Order/';\r\nimport RegVerify from './pages/RegVerify/';\r\nimport SubmitArt from './pages/SubmitArt/';\r\n\r\nimport ShopByPrice from './pages/ShopByPrice/';\r\nimport ShopByCategory from './pages/ShopByCategory/';\r\nimport MyLists from './pages/MyLists/'\r\nimport OnSale from './pages/Onsale'\r\n//Admin\r\nimport AdminLogin from './admin/AdminLogin.js';\r\nimport AdminHome from './admin/Admin.js';\r\nimport {ToastContainer} from 'react-toastify';\r\n//PrintPartner\r\nimport PartnerLogin from './printingpartner/PartnerLogin.js';\r\nimport PrintingPartner from './printingpartner/PrintingPartner.js';\r\nimport ArtistHome from './ArtistPage/'\r\n\r\nimport ForgotPass from './components/ForgotPass'\r\nimport {StartingStore, Api} from './stores';\r\n\r\nconst api = new Api();\r\nconst startingStore = new StartingStore(api);\r\n\r\nconst stores = {\r\n  startingStore,\r\n};\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider {...stores}>\r\n        <ToastContainer\r\n          position='top-right'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Route exact path='/' component={Landing} />\r\n        <Route  path='/Home' component={Homepage} />\r\n        <Route  path='/Artist/:name' component={SingleArtist} />\r\n        <Route  path='/ArtistRegistration' component={ArtistReg} />\r\n        <Route  path='/UserRegistration' component={UserReg} />\r\n        <Route  path='/ArtistGalleryRegistration' component={ArtGalReg} />\r\n        <Route  path='/Upload' component={UploadWork} />\r\n        <Route  path='/Art/:id/:name' component={SingleArt} />\r\n        <Route  path='/Artworks' component={Artworks} />\r\n     \r\n        <Route  path='/Artists' component={Artists} />\r\n        <Route  path='/CProfile/:id' component={CProfile} />\r\n        <Route  path='/CProfileEdit/:id' component={CProfileEdit} />\r\n        <Route  path='/RegVerify' component={RegVerify} />\r\n        <Route  path='/SubmitArt' component={SubmitArt} />\r\n        <Route  path='/MyLists' component={MyLists} />\r\n\r\n        <Route  path='/ShopByPrice' component={ShopByPrice} />\r\n        <Route  path='/ShopByCategory' component={ShopByCategory} />\r\n        <Route  path='/OnSale' component={OnSale} />\r\n\r\n        <Route  path='/Admin' component={AdminLogin} />\r\n        <Route  path='/AdminHome' component={AdminHome} />\r\n        <Route  path='/Order' component={Order} />\r\n        <Route  path='/PartnerLogin' component={PartnerLogin} />\r\n        <Route  path='/PrintingPartner' component={PrintingPartner} />\r\n        <Route  path='/ForgotPass' component={ForgotPass} />\r\n        <Route  path='/ArtistHome' component={ArtistHome} />\r\n        <ToastContainer />\r\n\r\n        {/* render={function() {\r\n              return <h1>Not Found</h1>;\r\n            }}\r\n          /> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Routes);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport './css/style.css';\r\nimport './css/normalize.css';\r\nimport './css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n\r\n      <Router basename={'/'}>\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n\r\n        \r\n      </Router>\r\n   \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./css/style.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nconst routes = (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} />\r\n      <Redirect from=\"/\" to=\"/\" />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(routes, document.getElementById(\"root\"));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}