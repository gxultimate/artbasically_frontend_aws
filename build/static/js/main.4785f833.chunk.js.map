{"version":3,"sources":["components/GoogleLogin/index.js","components/FbLogin.js","components/AddYoursLogin/index.js","components/Footer.js","components/Login.js","components/NavLogin.js","components/Search.js","components/OrderIcon.js","components/CNotif.js","components/NavLoginPost.js","components/Navbar.js","components/WeCanHelp/index.js","pages/Landing/index.js","pages/Homepage/index.js","images/artworks/art1.png","pages/SingleArtist/index.js","pages/ArtistReg/index.js","components/RegisterFB/index.js","components/RegisterGmail/index.js","pages/ArtGalReg/index.js","pages/UserReg/index.js","components/UploadMult.js","pages/UploadWork/index.js","components/Notif.js","components/Cart.js","components/AddToBag.js","components/ViewRoom.js","components/ATLogin/index.js","components/CartLogin/index.js","components/FollowLogin/index.js","pages/SingleArt/index.js","components/ArtworkFilter.js","pages/Artworks/index.js","pages/Artists/index.js","pages/CProfile/index.js","components/OrderDetails.js","components/Feedback/index.js","components/OrderTab.js","pages/CProfileEdit/index.js","pages/Order/index.js","pages/RegVerify/index.js","pages/SubmitArt/index.js","pages/ShopByPrice/filter/index.js","pages/ShopByPrice/index.js","pages/ShopByCategory/filter/index.js","pages/ShopByCategory/index.js","pages/MyLists/index.js","pages/AllArtworks/filter/index.js","pages/AllArtworks/index.js","pages/Latest/filter/index.js","pages/Latest/index.js","pages/Discover/filter/index.js","pages/Discover/index.js","admin/AdminLogin.js","admin/sections/AddArtist.js","admin/sections/ArtistTable.js","admin/sections/DeactivatedArtist/index.js","admin/sections/PendingArtistTable.js","admin/sections/ArtistsTab/index.js","admin/ArtistTab.js","admin/sections/AddArtwork.js","admin/sections/ArchivedArtworks/index.js","admin/sections/ArtworkTable.js","admin/sections/PendingArtworkTable.js","admin/sections/ArtworkTab/index.js","admin/ArtworkTab.js","admin/sections/AddCat.js","admin/sections/EditCat.js","admin/sections/EditPrintSize/index.js","admin/sections/EditStyle.js","admin/sections/CatTable.js","admin/CategoryTab.js","admin/DashCards/index.js","admin/sections/DownloadImage.js","admin/sections/PendingOrderTable.js","admin/Dashboard.js","admin/sections/UserFeedback/index.js","admin/FeedbackTab.js","admin/sections/CancelledOrders/index.js","admin/sections/CompletedOrder.js","admin/sections/OrderTable.js","admin/sections/OrderTab/index.js","admin/OrdersTab.js","admin/sections/AccountSettings/index.js","admin/sections/Notif.js","admin/sections/SocialShares/index.js","admin/SharesTab.js","admin/sections/AddUser.js","admin/sections/CustomerTable.js","admin/sections/DeactivatedAccount/index.js","admin/sections/UsersTab/index.js","admin/UserTab.js","admin/Admin.js","printingpartner/PartnerLogin.js","printingpartner/sections/CCancelOrder.js","printingpartner/CancelOrdertab.js","printingpartner/sections/CCompletedOrder.js","printingpartner/CompletedOrderTab.js","printingpartner/DashCards/index.js","printingpartner/sections/COrderDeli.js","printingpartner/sections/CPendingOrders.js","printingpartner/sections/OngoingOrders/index.js","printingpartner/Dashboard.js","printingpartner/OrderDeliverytab.js","printingpartner/sections/Printing/index.js","printingpartner/PrintingTab/index.js","printingpartner/sections/AccountSetting/index.js","printingpartner/sections/Notif.js","printingpartner/sections/EditOpt/index.js","printingpartner/sections/Customize/index.js","printingpartner/sections/AddMaterial/index.js","printingpartner/sections/AddFrame/index.js","printingpartner/CustomizeTab.js","printingpartner/PrintingPartner.js","ArtistPage/AccountSetting/index.js","ArtistPage/ArtworkManagement/ActiveArtworks/index.js","ArtistPage/ArtworkManagement/AddArtwork/index.js","ArtistPage/ArtworkManagement/ArchivedArtworks/index.js","ArtistPage/ArtworkManagement/PendingArtwork/index.js","ArtistPage/ArtworkManagement/index.js","ArtistPage/Earnings/DownloadImage/index.js","ArtistPage/Earnings/index.js","ArtistPage/Notification/index.js","ArtistPage/DCards/index.js","ArtistPage/Profile/index.js","ArtistPage/index.js","components/ForgotPass/index.js","models/Model.js","models/Account.js","models/Artwork.js","models/Cart.js","models/Categories.js","models/Order.js","models/Style.js","models/User.js","models/PrintSize.js","models/Notif.js","models/MyLists.js","models/Feedback.js","models/UserFollow.js","models/ArtShares.js","models/PrintingOptions.js","stores/StartingStore.js","stores/Api.js","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["GmailLogin","state","isLoggedIn","googleID","name","email","picture","responseGoogle","response","props","startingStore","account","loginGoogle","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","undefined","setState","profileObj","googleId","givenName","imageUrl","setProperty","then","res","mydata","JSON","parse","sessionStorage","getItem","setTimeout","message","loading","error","history","push","accEmailAddress","getAccounts","this","googleContent","clientId","buttonText","onSuccess","onFailure","cookiePolicy","icon","Component","withRouter","inject","observer","FbLogin","userID","responseFacebook","loginFB","data","url","success","componentClicked","console","log","fbContent","style","width","margin","background","padding","textAlign","marginBottom","src","alt","fontSize","appId","autoLoad","cssClass","fields","onClick","disableMobileRedirect","callback","className","color","Transition","React","forwardRef","ref","Slide","direction","Login","modal1","open","verify","newpass","confpass","toggle","nr","modalNumber","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","loginAccount","changeHandler","value","editAccount","listOfUsers","btn","login","isOpen","centered","onSubmit","type","label","required","onChange","password","float","id","htmlFor","marginTop","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","contact","filter","acc","accContact","length","disabled","e","DialogActions","Button","getuser","map","_id","modal14","ChangePass","backgroundColor","Footer","href","moment","format","getFollow","NavLogin","Search","modal","suggestions","getAllArtworks","listOfArtworks","pArtworks","art","artworkStatus","artworks","artworkDB","artworkID","title","artName","artist","artistName","img","artworkImg","year","artworkDateCreated","theme","artTheme","languages","row","thme","getSuggestions","inputValue","trim","toLowerCase","inputLength","lang","slice","toLocaleLowerCase","split","join","inputProps","placeholder","newValue","filArt","filArtist","searchnow","window","location","reload","md","border","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","height","marginRight","paddingBottom","size","OrderIcon","listOfUserCart","CNotif","to","Notifications","listOfNotif","notifCount","ntf","notifRecipient","accID","notifStatus","mynotif","notifInfo","notifMsg","notifDT","far","basic","paddingLeft","fontWeight","Navbar","collapse1","collapseID","toggleCollapse","prevState","toggleSingleCollapse","collapseId","getCategories","getPrintSize","getLatestArts","userData","filterArtwork","filterOn","setItem","dark","expand","navbar","caret","NavLoginPost","accFname","accLname","clear","display","pageId","loggedInGreeting","ModalPage","marginLeft","selected","rows","Landing","cat","condition","isToggleOn","handleClick","bind","scrollTo","getArtistOftheMonth","getAllActiveArtworks","listOfEmergingArtist","listOfArtistOfTheMonth","listOfArtists","listOfLatestArts","listOfArtistOfTheMonthID","sameSite","Secure","cookieSecurity","cookieName","pathname","artistid","fil","image","artID","artType","item","index","post","reverse","fontStyle","Homepage","getNotif","getToCart","getOrders","getMyLists","logged","followArtist","listofArtistInfo","listofFilteredUserArtworkCategories","mylists","listOfArtistFollowed","addMyLists","listOfMyLists","addFollow","userfollow","listOfFollowing","deleteFollow","addNotif","notif","addtoList","rtwrk","floor","artStyle","artPrice","follow","following","followingID","followerID","input","hash","len","charCodeAt","getHash","getFollowing","borderRadius","outline","rounded","SingleArtist","checkFollower","follower","content","duration","followStatus","link","followed","setFollowed","getSingleArtists","getArtistArtwork","match","params","getLastItem","thePath","substring","lastIndexOf","listofArtistArtwork","listofArtistCategories","getFollowers","profile_Img","active","accAddress","birthYear","artistDescription","_","uniqBy","decodeURI","ArtistReg","confPassword","handleChange","addAccount","upload","usr","acc_Status","onFileChange","onFileChangeP","profileImg","selectedFile","formData","FormData","append","files","URL","createObjectURL","formData2","accept","maxlength","accInstitution","FbReg","getEmail","stat","user","textButton","withStyles","root","button","spacing","unit","instructions","facebookIcon","GmailRegister","familyName","ArtGalReg","textTransform","UserReg","getStyles","listOfCategories","listOfStyles","accessType","options","showCheckbox","displayValue","onSelect","list","listitem","categorySelected","catType","styleSelected","styleType","confirmPassword","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UploadMult","previewVisible","previewImage","fileList","handleCancel","handlePreview","a","preview","originFileObj","uploadButton","action","listType","onPreview","visible","footer","onCancel","UploadWork","artImg","ArtByMe","imageFile","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","catch","artwork","listOfPrintSize","paddingTop","artThemeSelected","artStyleSelected","artSizeSelected","printSize","artDescription","notify","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warn","OrderTab","selectedCheckBox","totalPrice","partnerPercentage","setStatus","status","selectedValue","checked","total","parseFloat","artworkPaymentAmount","selectedArray","indexer","deleteItem","editToCart","addOrder","perctodec","order","totalValue","Notification","selectedCheck","indexes","artworkQuantity","accImg","artistImg","accDescription","accFollowers","artworkName","artworkMaterial","artworkSize","artworkFramingOptions","artworkPrice","Number","toLocaleString","AddToBag","addTocart","cart","addToCart","cartData","date","getFullYear","reduce","disable","ViewRoom","selectedsize","Awidth","Aheight","ATLogin","GoogleLogin","SingleArt","artistInfoList","artistData","artworkInfo","artworkList","isMounted","selectedSize","framingOption","getSingleArtworkInfo","getPrintOption","listOfSingleArtwork","listRelatedWorkByCategory","addArtShare","artshare","listOfPrintoption","artworkData","getmyList","artSize","FollowLogin","FacebookShareButton","subject","hashtag","onShareWindowClose","FacebookIcon","round","EmailShareButton","EmailIcon","printCat","mat","printOptions","optionID","Asize","sizes","option","ArtworkFilter","minValue","maxValue","getSaleArts","deleteMyLists","listOfSaleArts","removeToLists","mylistsID","toJS","price","defaultCurrent","defaultPageSize","Artworks","setPrice","amt","arts","parseInt","setCategories","selectedCheckboxes","has","delete","add","newCategories","Array","from","includes","setPrintSize","categories","Set","categoryList","printSizeList","Artists","buffer","binary","call","Uint8Array","forEach","b","String","fromCharCode","btoa","isExpanded","dataSource","CProfile","listofUsers","Step","Steps","OrderDetails","pendingOrders","steps","checkSteps","orderID","progressDot","current","orderItems","currency","feedback","addFeedback","orderInfo","submitFeedback","feedbackNote","activeItem","tab","getOrderUser","listofUserOrder","listOfOrder","editOrder","listOfOrders","items","orderStatus","listOfOrderReceived","Received","listOfOrderDelivered","listOfOrderCancelled","Rejected","cancelOrder","myorder","ord","role","tabId","CProfileEdit","pass","confPass","getSingleEnthusiast","getOrder","AccountInfo","resp","valueDefault","confpassword","removeItem","Order","RegVerify","filteredArtwork","filData","filterData","selectedIndex","indexOf","newSelected","concat","sort","x","listOfActiveArtworks","filPrice","filterPrice","AdminLogin","AddArtist","accSuffix","close","users","userDB","fname","address","deactivate","itm","ArtistsTable","columns","field","maxWidth","acc_Documents","striped","bordered","small","Deactivated","restore","DeactivatedTable","modalConfApprove","modalConfReject","lname","confirmApprove","confirmReject","PendingTable","ArtistTab","ArtistsTab","AddArtwork","onImgLoad","imgRaw","dpi","calcPixels","offsetWidth","offsetHeight","getArtNames","overflow","textOverflow","onLoad","visiblity","PendingArtwork","toggleTab","editArtwork","arworks","dateAdded","PendingArtworkTable","no","artCategory","artDimension","artHeight","artWidth","artFormat","artDPI","Grid","container","xs","Typography","variant","archive","approve","ArtwrkTab","ArtworkTab","AddCat","modal2","addCategory","submitHandlerStyle","addStyle","submitHandlerSize","addPrintSize","printsize","EditCat","editCategory","catID","EditStyle","editPrintSize","sizeID","editStyle","styleID","CategoryTable","hover","EditPrintSize","CategoryTab","CatTable","DashCards","activeArtists","artEnthu","Orders","CancelledOrders","CompletedOrders","salesYTD","product","amount","paymentStatus","sum","record","totalAmount","sales","pop","useStyles","makeStyles","paper","cont","palette","text","secondary","cont2","cont3","menuButton","hide","toolbar","alignItems","justifyContent","mixins","flexGrow","bullet","transform","pos","card","card2","flex","iconButton","search","DCards","classes","sm","Card","CardContent","DownloadImage","PendingOrder","Corder","Delivery","orders","orderDB","orderBy","orderDate","paymentStat","PendingOrderTable","modeOfPayment","partnerEarnings","responsive","DashboardSection","Paper","PendingArtistTable","UserFeedback","getFeedback","listOfFeedback","filtFeedback","fb","fbID","feedbackID","acID","ordID","note","FeedbackTable","sender","FeedbackTab","CancelledOrder","CancelledOrderTable","CompletedOrder","CompletedOrderTable","orderStat","OrdersTab","AccountSettings","editProfile","SettingGrid","useState","setPass","setConfPass","edit","accData","getMyData","byear","institution","createData","justify","TextField","defaultValue","editNotif","notifNum","notifData","dateNotif","notifID","Notif","ArtShares","getArtShare","filtartshare","listOfArtShare","as","sharer","social","dateTime","ArtShareTable","AddUser","Customer","CustomerTable","UsrsTab","User","Admin","default","togglePills","getAllNotif","Dashboard","UserTab","PartnerLogin","CCancelOrder","CCompletedOrder","ForDelivery","done","ForDeliveryTable","PendingPrint","PendingPrintTable","OngoingOrder","OngoingOrderTable","pDashboardSection","CPendingOrders","COrderDeli","Printing","PrintingTable","editPrintOption","printoption","addPrintOption","AddFrames","AddFrame","Customize","PrintingPartner","PrintingTab","OrderDeliverytab","CompletedOrderTab","CancelOrdertab","minWidth","Earnings","Artwoks","gutterBottom","component","ArtistProfile","linkName","myprofile","pp","contactno","document","description","myFollowers","visibility","cursor","paddingRight","shouldShowDialog","Profile","Model","validate","Joi","constructor","schema","skipFunctions","abortEarly","allowUnknown","property","handleProperties","deepProperty","Error","properties","prop","shift","Object","assign","propertiesClone","keys","isObservableArray","isObservableObject","isBoxedObservable","details","decorate","Account","defaults","accPoints","username","accCategories","accStyles","regType","observable","Artwork","artworkPath","artRating","Cart","dateOfTransaction","Categories","Style","firstName","lastName","phone","street","city","postalCode","dateRegistered","string","hex","object","number","iso","PrintSize","notifSender","notifSubject","MyLists","artistID","Feedback","UserFollow","followID","shareID","PrintOptions","StartingStore","api","ArtShare","PrintOption","welcomeMessage","listOfFilteredArtwork","currentUser","listOfUserDocs","listofUserCategoriesArtwork","listofUserStyleArtwork","listOfBestSellerArts","listOfDiscEmergeArt","listOfEmergingArtworks","addaccount","getaccounts","removeUndefinedProps","us","stringify","doc","editprofile","loginaccount","loginEmail","loginemail","loginfb","logingoogle","addArtwork","addartwork","documents","dataaa","getArtwork","getartwork","arrayBufferToBase64","getEmergingArtist","getartworkInfo","artCategories","getsingleartworkinfo","styles","themes","union","getRelatedWorkByCategory","followAccount","addprintsize","getprintsize","editprintsize","currData","addnotif","getId","getnotif","getallnotif","editnotif","addmylists","getmylists","mytoken","deletemylists","addfeedback","getfeedback","addfollow","follow_ID","deletefollow","getfollow","getallartworks","addartshare","getartshare","addprintoption","getprintoption","editprintoption","getsalearts","latest","obj","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName","Api","axios","create","baseURL","mode","get","docID","put","category","followid","getUsers","stores","Routes","newestOnTop","rtl","pauseOnFocusLoss","exact","path","SubmitArt","ShopByPrice","ShopByCategory","AllArtworks","LatestArts","Discover","AdminHome","ForgotPass","ArtistHome","App","basename","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","routes","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","headers","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4785f833.chunk.js","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport GoogleLoginBtn from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\n\r\nimport {\r\n  \r\n  MDBIcon\r\n\r\n} from 'mdbreact';\r\nimport './../../css/style.css';\r\nimport './../../css/normalize.css';\r\nimport './../../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass GmailLogin extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    googleID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseGoogle = (response) => {\r\n\r\n let { startingStore: {  account ,loginGoogle ,getArtists,\r\n  getArtworkInfo,\r\n  getEmergingArtistArtwork,\r\n  getArtistFollowArtwork} } = this.props;\r\n\r\n    if(response !== undefined || response !== null){\r\n\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        googleID: response.profileObj.googleId,\r\n        name: response.profileObj.givenName,\r\n        email: response.profileObj.email,\r\n        picture: response.profileObj.imageUrl,\r\n      });\r\n     \r\n\r\n     \r\n\r\n\r\n        account.setProperty(\"accEmailAddress\", this.state.email)\r\n        account.setProperty(\"accFname\", this.state.name)\r\n\r\n        if (this.state.isLoggedIn === true){\r\n        loginGoogle().then((res) => {\r\n          let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n          getArtworkInfo();\r\n          getEmergingArtistArtwork();\r\n          getArtists();\r\n   \r\n          if (res === 1) {\r\n          \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/ArtistHome');\r\n          } \r\n          else if (res === 2){\r\n            getArtistFollowArtwork(mydata.accEmailAddress);\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n       \r\n              success();\r\n              setTimeout(() => {\r\n            this.props.history.push('/Home');\r\n          }, 50);\r\n          } \r\n          else if (res === 3){\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.error('Admin is validating your account', 2));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          \r\n          }\r\n          \r\n          else {\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('No account registered', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          }\r\n        });\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n  \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n\r\n    let googleContent = (\r\n      <GoogleLoginBtn\r\n      clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n      buttonText='Log in with Google'\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n    \r\n      icon={true}\r\n    />\r\n    );\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        \r\n   {googleContent}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailLogin)));\r\n","import React, {Component} from 'react';\r\nimport FacebookLoginBtn from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass FbLogin extends Component {\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n   \r\n    let { startingStore: {  account ,loginFB ,getArtists,\r\n      getArtworkInfo,\r\n      getEmergingArtistArtwork,\r\n      getArtistFollowArtwork} } = this.props;\r\n    \r\n   \r\n    if (response.email === undefined || response.email === null ){\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n      }\r\n  else{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n\r\n    account.setProperty('accFname',this.state.name)\r\n    account.setProperty('accEmailAddress',this.state.email)\r\n\r\nif (this.state.isLoggedIn === true){\r\n\r\n    loginFB().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === 1) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/ArtistHome');\r\n      } else if (res === 2) {\r\n         getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 3) {\r\n        \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Please wait for your account approval', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 4) {\r\n       \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Account rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (res === false) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('No facebook account registered', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n    \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n    });\r\n  }else{\r\n    const success = () => {\r\n      message\r\n        .loading('Signing in..', 1.2)\r\n        .then(() => message.error('Please try again', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 500);\r\n  }\r\n  }\r\n    \r\n  };\r\n\r\n  componentClicked = () => console.log('clicked');\r\n\r\n  render() {\r\n    let fbContent;\r\n\r\n    if (this.state.isLoggedIn) {\r\n      fbContent = (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            margin: 'auto',\r\n            background: '#f4f4f4',\r\n            padding: '20px',\r\n         \r\n          }}\r\n        >\r\n         <div style={{textAlign:'center',marginBottom:'8px'}}><img src={this.state.picture} alt={this.state.name} alt='profileimg'/></div> \r\n         <div style={{textAlign:'center',marginBottom:'8px'}}>\r\n          <h6>Welcome to Art, Basically</h6>\r\n          <p style={{fontSize:'18px'}}>{ this.state.name}</p>\r\n          <p style={{fontSize:'15px'}}>{this.state.email}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      fbContent = (\r\n        <FacebookLoginBtn\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          cssClass=\"LoginFb\"\r\n          fields='name,email,picture'\r\n          onClick={this.componentClicked}\r\n          disableMobileRedirect={true}\r\n          callback={this.responseFacebook}\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (<div>{fbContent}</div>)\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(FbLogin)))","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GgLogin from '../../components/GoogleLogin/';\r\nimport FbLogin from '../FbLogin';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        \r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account,editAccount,listOfUsers},\r\n    } = this.props;\r\nlet btn = this.props.login;\r\n\r\n\r\n\r\nlet handleClickOpen = () => {\r\n  this.setState({\r\n    modal1: false,\r\n    open: true,\r\n  });\r\n};\r\n\r\nlet ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n  if (this.state.newpass === this.state.confpass){\r\n    account.setProperty('_id',getuser)\r\n    account.setProperty('password',this.state.newpass)\r\n      editAccount()\r\n\r\n      const success = () => {\r\n        message\r\n          .loading(\"\", 1)\r\n          .then(() =>\r\n            message.error(\"Password successfully modified\", 2)\r\n          );\r\n      };\r\n      success()\r\n      setTimeout(() => {\r\n        this.setState({\r\n          modal14: false,\r\n          open: false,\r\n        });\r\n      },400)\r\n  }else{\r\n    const error = () => {\r\n      message\r\n        .loading(\"\", 1)\r\n        .then(() =>\r\n          message.error(\"Please check your password\", 2)\r\n        );\r\n    };\r\n    error()\r\n  }\r\n\r\n\r\n\r\n  // this.setState({\r\n  //   open: false,\r\n  // });\r\n};\r\n\r\nlet handleClose= () => {\r\n\r\n  this.setState({\r\n    open: false,\r\n  });\r\n};\r\n\r\n\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        {btn === 'ay'  ? (\r\n <MDBBtn\r\n onClick={this.toggle(1)}\r\n color='#FAE933'\r\n className='btnYellow'\r\n>\r\n Add Yours\r\n</MDBBtn>\r\n        )\r\n        :(  <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='#FAE933'\r\n          className='btnBlack'\r\n         >\r\n          Add Your Work Now\r\n         </MDBBtn>)\r\n        }\r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n          <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n\r\n\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import React, {Component} from 'react';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport moment from 'moment'\r\n class Footer extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className='footer clearfix'>\r\n        <div className='navfoot'>\r\n          <ul>\r\n            <li>Get to Know Us</li>\r\n            <li>\r\n              <a href='#!'>About Us</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Job Opportunities</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Contact Us</a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Partner with Us</li>\r\n            <li>\r\n              <a href='#!'>Sell on Art, Basically</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Sell as a Gallery</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Sell &nbsp;Your Services on <br /> Art, Basically\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Advertise Your Products</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                See all <MDBIcon icon='caret-right' className='caret' />{' '}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Let Us Help You</li>\r\n            <li>\r\n              <a href='#!'>\r\n                Track&nbsp;Your Packages or <br /> View&nbsp;Your Orders\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Delivery Rates & <br /> Policies\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Returns & <br /> Replacements\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Customer Service</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='copyright'>\r\n          <p>Copyright © {moment().format(\"YYYY\")} Art,Basically Inc. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from \"antd\";\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader } from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FbLogin from \"../components/FbLogin\";\r\nimport GgLogin from \"../components/GoogleLogin/\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = \"modal\" + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = \"\";\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n\r\n    let {\r\n      startingStore: {\r\n        loginAccount,\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.2)\r\n            .then(() => message.error(\"Login Unsuccessful\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/Home\");\r\n        }, 500);\r\n      } else if (\r\n        // (typeof res === 'string')\r\n        res === 4\r\n      ) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push(\"/ArtistHome\");\r\n        }, 500);\r\n      } else if (res === 5) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() =>\r\n              message.error(\"Please wait for your account confirmation\", 1)\r\n            );\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 6) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Your account request rejected\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Username or password is incorrect\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n   \r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n      <div className=\"btnmodal\">\r\n        <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color=\"#FAE933\"\r\n          className=\"btn btnBlack loginbtn\"\r\n        >\r\n          Login\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className=\"modalform modlog\"\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className=\"login\">\r\n            <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(Login)));\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nimport './../css/style.css';\r\nimport './../css/normalize.css';\r\nimport './../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBBtn onClick={this.toggle(1)} color='#fff' className='navlogin'>\r\n          Hello, Sign In\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n          <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import Autosuggest from 'react-autosuggest';\r\nimport React, {Component} from 'react';\r\nimport {\r\n \r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBCol,\r\n  MDBIcon,\r\n} from 'mdbreact';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {message} from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nclass Search extends Component {\r\n  componentDidMount(){\r\n    let {startingStore:{getAllArtworks}}=this.props;\r\n    getAllArtworks()\r\n  }\r\n  state = {\r\n    modal: false,\r\n  \r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  \r\n  constructor() {\r\n    super();\r\n  \r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n    \r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  render() {\r\n\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n\r\n        \r\n    function createData(artworkDB,id,title,artist, img,year,theme) {\r\n      return { artworkDB,id,title,artist, img,year,theme };\r\n    }\r\n\r\n    let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Active').map(artworks =>{\r\n      return(createData(\r\n     artworks,artworks.artworkID,artworks.artName\r\n     ,artworks.artistName,artworks.artworkImg,artworks.artworkDateCreated,artworks.artTheme\r\n      ))\r\n    })\r\n\r\n  let  languages =  \r\n  [...pArtworks.map((row,i) => {\r\n \r\n    return(\r\n\r\n   {\r\n      name: `${row.title}`,\r\n      year: `${row.year}`,\r\n      img: `${row.img}`,\r\n      artist: `${row.artist}`,\r\n      theme:`${row.theme.map(thme => thme)}`,\r\n\r\n    \r\n\r\n   }\r\n   \r\n   ) })\r\n  ]\r\n\r\n    \r\n    // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  let getSuggestions = value => {\r\n      const inputValue = value.trim().toLowerCase();\r\n    \r\n      const inputLength = inputValue.length;\r\n    \r\n      return inputLength === 0 ? [] : languages.filter(lang =>\r\n\r\n        lang.name.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.artist.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.year.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.theme.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(' ').slice(-1).join(' ') === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(/\\s+/).slice(1,2).join(' ') === inputValue \r\n      \r\n      );\r\n    };\r\n    \r\n    // When suggestion is clicked, Autosuggest needs to populate the input\r\n    // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n    // input value for every given suggestion.\r\n  let   getSuggestionValue = suggestion => suggestion.name;\r\n    \r\n    // Use your imagination to render suggestions.\r\n  let renderSuggestion = suggestion => (\r\n      <div>\r\n       <img src={suggestion.img} style={{width:'50px',height:'50px',float:'left',marginRight:'8px',paddingBottom:'6px'}} />\r\n    {suggestion.name}<p style={{fontSize:'10px'}}> by {suggestion.artist}</p>\r\n     \r\n      </div>\r\n    );\r\n  \r\n  \r\n  let  onChange = (event, { newValue }) => {\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n\r\n\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: 'Search artworks',\r\n      value,\r\n      onChange: onChange\r\n    };\r\n    \r\n \r\n\r\n\r\n    \r\nlet filArt = listOfArtworks.filter(art => art.artName === this.state.value).map(art => art)\r\nlet filArtist = listOfArtworks.filter(art => art.artistName === this.state.value).map(art => art)\r\n  \r\n    let searchnow =()=>{\r\n     \r\n   if(filArt[0] !== undefined && filArtist[0] === undefined){\r\n  \r\n      this.props.history.push(`/Art/${filArt[0].artworkID}/${filArt[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else if (filArtist[0] !== undefined && filArt[0] === undefined) { \r\n      this.props.history.push(`/Artist/${filArtist[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1)\r\n          .then(() => message.error('Artwork or Artist not found', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='search'>\r\n        <MDBIcon icon='search' onClick={this.toggle} style={{color:'white'}}/>\r\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <MDBModalBody md='4' color='red'>\r\n            <MDBCol md='12'>\r\n              {/* <input\r\n                className='form-control'\r\n                type='text'\r\n                placeholder='Search'\r\n                aria-label='Search'\r\n                onChange={(e)=>{searchInput(e.target.value)}}\r\n              /> */}\r\n\r\n<Autosuggest\r\n style={{width:'80%',border:'1px solid red'}}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n            </MDBCol>\r\n            <MDBBtn size='md' color='dark' onClick={()=>{searchnow()}}>Search</MDBBtn>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Search)))\r\n","\r\nimport { MDBBadge, MDBDropdown, MDBDropdownToggle, MDBIcon } from \"mdbreact\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass OrderIcon extends Component {\r\n    render() {\r\nlet {startingStore:{listOfUserCart}}=this.props;\r\n\r\n\r\n\r\n\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n           <Link\r\n                  \r\n                  to='/Order'\r\n                > \r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon   className=\"mr-3 i ibag h5\" />\r\n     \r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{listOfUserCart.length}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      </Link>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n   <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(OrderIcon))","import { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n let {startingStore:{listOfNotif}}=this.props;\r\n let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nlet notifCount = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').length\r\nlet mynotif = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n  return(\r\n    <Fragment key={i}>\r\n\r\n        <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n          <span className=\"time\">{notifInfo.notifDT}</span>\r\n        </MDBDropdownItem>\r\n \r\n    </Fragment>\r\n  )\r\n})\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon far icon=\"bell\" className=\"mr-3 i\" />\r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n    {mynotif}\r\n    \r\n    </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn,MDBNavLink} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (typeof res === 'string') {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(`/CProfile/${res}`);\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBNavLink onClick={this.toggle(1)} to='' className='inlinelink rborder btnYellow navbtn' style={{fontWeight:'bold'}}>\r\n        Post, Basically\r\n        </MDBNavLink>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n          <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n\r\n        \r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <label className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </label>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import {\r\n  MDBCollapse,\r\n  MDBDropdown, MDBDropdownItem,\r\n  MDBDropdownMenu, MDBDropdownToggle,\r\n  MDBHamburgerToggler, MDBNavbar,\r\n  MDBNavbarBrand, MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBBtn\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLogin from './NavLogin';\r\nimport Search from './Search';\r\nimport OrderIcon from './OrderIcon';\r\nimport CNotif from './CNotif';\r\nimport NavLoginPost from './NavLoginPost';\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts, getEmergingArtistArtwork,getArtists, getCategories,getPrintSize,getLatestArts},\r\n    } = this.props;\r\n   \r\n    getArtists();\r\n    getEmergingArtistArtwork()\r\n    getCategories();\r\n    getPrintSize();\r\n    getLatestArts()\r\n    getAccounts()\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: { filterArtwork},\r\n    } = this.props;\r\n\r\n    let filterOn = (type) => {\r\n      sessionStorage.setItem('type', type);\r\n      filterArtwork(type);\r\n    };\r\n    return (\r\n      <Fragment>\r\n     \r\n      <MDBNavbar dark expand='md' className='navcon'>\r\n        {userData !== null && userData !== undefined ? (\r\n         <MDBNavbarBrand>\r\n         <a href='/Home'>\r\n           <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='logo' />\r\n         </a>\r\n       </MDBNavbarBrand>\r\n            ) : (\r\n              <MDBNavbarBrand>\r\n              <a href='/'>\r\n                <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='logo' />\r\n              </a>\r\n            </MDBNavbarBrand>\r\n              )}\r\n\r\n        <MDBHamburgerToggler\r\n          color='#FAE933'\r\n          id='hamburger1'\r\n          onClick={() => this.toggleSingleCollapse('collapse1')}\r\n        />\r\n        <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n          <MDBNavbarNav className='nav-ul'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder '\r\n                to='/AllArtworks'\r\n               \r\n              >\r\n               All Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/latestArtworks'\r\n                onClick={() => {\r\n                  filterOn('latest');\r\n                }}\r\n              >\r\n                Latest\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            {/* {userData !== null && userData !== undefined ? (\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('foryou');\r\n                  }}\r\n                >\r\n                  For&nbsp;You\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n            ) : (\r\n                <MDBNavItem style={{ display: 'none' }}></MDBNavItem>\r\n              )} */}\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Discover'\r\n                onClick={() => {\r\n                  filterOn('discover');\r\n                }}\r\n              >\r\n                Discover\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBDropdown className='ddnav'>\r\n              <MDBDropdownToggle caret color='transparent'>\r\n                Shop By\r\n              </MDBDropdownToggle>\r\n              <MDBDropdownMenu basic className='ddnavMenu'>\r\n                <MDBDropdownItem href='/ShopByPrice'>Price</MDBDropdownItem>\r\n                <MDBDropdownItem href='/ShopByCategory'>Category</MDBDropdownItem>\r\n              </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n       \r\n            <MDBNavItem>\r\n    \r\n            \r\n                {userData !== null && userData !== undefined ? (<MDBNavLink\r\n          className='inlinelink rborder btnYellow navbtn'\r\n          to='/Upload'\r\n        >\r\n          Post, Basically\r\n        </MDBNavLink>)\r\n        : (<NavLoginPost />)}\r\n\r\n            </MDBNavItem> \r\n            \r\n              <MDBNavItem>\r\n                <MDBBtn color='dark' style={{color:'white'}}>\r\n            \r\n                  <Search />\r\n                 \r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n              <MDBDropdown className='ddnav'>\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownToggle color='transparent'>\r\n                    Hello, {userData.accFname}\r\n                  </MDBDropdownToggle>\r\n                ) : (\r\n                    <NavLogin />\r\n                  )}\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownMenu basic className='ddnavMenu'>\r\n                    <MDBDropdownItem>\r\n                      <Link\r\n                        to={`/CProfileEdit/${userData.accFname} ${userData.accLname}`}\r\n                      >\r\n                        {' '}\r\n                      Account\r\n                    </Link>\r\n                    </MDBDropdownItem>\r\n             \r\n                    <MDBDropdownItem\r\n                      onClick={() => logout()\r\n                      }\r\n                      style={{paddingLeft:'25px',color:'#000000'}}\r\n                    >\r\n                Log Out\r\n                    </MDBDropdownItem>\r\n                  </MDBDropdownMenu>\r\n                ) : (\r\n                   <p></p>\r\n                  )}\r\n              </MDBDropdown>\r\n              {userData !== null && userData !== undefined ? (\r\n                <div className='row lbtn'>\r\n                  <MDBNavItem>\r\n                  \r\n\r\n                  <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('yourlists');\r\n                  }}\r\n                >\r\n                  Your Lists\r\n                </MDBNavLink>\r\n\r\n                  </MDBNavItem>\r\n                \r\n                  <MDBNavItem>\r\n                    <CNotif />\r\n                  </MDBNavItem>\r\n                  <MDBNavItem >\r\n           \r\n                    \r\n                     <OrderIcon/>\r\n                  \r\n                \r\n       \r\n                  </MDBNavItem>\r\n                </div>\r\n              ) : (\r\n                  <MDBNavItem style={{ display: 'none' }}>\r\n                \r\n                  </MDBNavItem>\r\n                )}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n      <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n    \r\n    loggedInGreeting=\"Hi! How can we help you?\"\r\n\r\n    \r\n  />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Navbar));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBLink,\r\n  MDBInput,\r\n  \r\n} from \"mdbreact\";\r\nimport { message } from 'antd';\r\nimport './../../css/style.css';\r\nimport './../../css/normalize.css';\r\nimport './../../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass ModalPage extends Component {\r\n  state = {\r\n    modal: false,\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n   let toggle = () => {\r\n   \r\n      this.setState({\r\n        modal: !this.state.modal,\r\n      });\r\n    };\r\n  \r\n   let toggleSubmit = ()=>{\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 1)\r\n        .then(() => message.success('Equiry submitted', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 800);\r\n\r\n\r\n    setTimeout (()=>{\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n      });\r\n    },300)\r\n    \r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <MDBLink to=\"#\" color=\"primary\" onClick={toggle}>\r\n          We can help\r\n        </MDBLink>\r\n        <MDBContainer>\r\n          <MDBModal\r\n            isOpen={this.state.modal}\r\n            toggle={toggle}\r\n            centered\r\n            size=\"sm\"\r\n          >\r\n            <MDBModalHeader toggle={toggle} style={{backgroundColor:'#231F20'}}>\r\n             <span style={{color:'#FAE933',marginLeft:'8px'}}> How can we help you?</span>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n              <form className=\"regform formbtn\">\r\n                <MDBInput label=\"Name\" type=\"text\" required>\r\n                  <div className=\"invalid-feedback\">Please provide your Name.</div>\r\n                </MDBInput>\r\n                <MDBInput label=\"Contact#\" type=\"number\" required>\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide your contact number.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBInput label=\"Email\" type=\"email\" required>\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide your email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBInput label=\"Company\" type=\"text\" >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide your company.\r\n                  </div>\r\n                </MDBInput>\r\n\r\n                <div >\r\n                   \r\n                    <select required>\r\n                      <option selected value=''>\r\n                      I'm a/an \r\n                      </option>\r\n                      <option value='Art Collector'>Art Collector</option>\r\n                      <option value='Art Gallery Owner/Representative'>Art Gallery Owner/Representative</option>\r\n                      <option value='Contractor'>Contractor</option>\r\n                      <option value='Curator'>Curator</option>\r\n                      <option value='Hotel Owner/Representative'>Hotel Owner/Representative</option>\r\n                      <option value='Interior Designer/Decorator'>Interior Designer/Decorator</option>\r\n                    </select>\r\n                    \r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n            <span htmlFor=\"myinquiry\" style={{float:'left'}}>\r\n            Inquiry:\r\n            </span>\r\n            <textarea\r\n            className=\"form-control\"\r\n            id=\"myinquiry\"\r\n            rows=\"5\"\r\n            required\r\n            />\r\n        </div>\r\n\r\n              </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n              <button  className=\"btn btnBlack\" onClick={toggle} size=\"sm\">\r\n                Close\r\n              </button>\r\n              <button className=\"btn btnYellow\"size=\"sm\" onClick={toggleSubmit}>\r\n                Submit\r\n              </button>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n        </MDBContainer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalPage;\r\n","import { BackTop, Skeleton } from \"antd\";\r\nimport { MDBIcon, MDBNavLink } from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport CookieConsent from \"react-cookie-consent\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AYLogin from \"../../components/AddYoursLogin/index.js\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Login from \"../../components/Login\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Wecanhelp from './../../components/WeCanHelp'\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      cat:['Graphic','Drawing'],\r\n      condition: false,\r\n      isToggleOn: true,\r\n      artworks:[],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {\r\n        getAllArtworks,\r\n        getEmergingArtistArtwork,\r\n        getPrintSize,\r\n        getAccounts,\r\n        getArtists,\r\n        getLatestArts,\r\n        getArtistOftheMonth,\r\n        getAllActiveArtworks\r\n      },\r\n    } = this.props;\r\n\r\n    getEmergingArtistArtwork();\r\n    getAllArtworks();\r\n    getPrintSize();\r\n    getAccounts();\r\n    getArtists();\r\n    getLatestArts()\r\n    getArtistOftheMonth()\r\n    getAllActiveArtworks()\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listOfEmergingArtist,\r\n        listOfArtworks,\r\n        listOfUsers,\r\n        listOfArtists,\r\n        listOfLatestArts,\r\n        listOfArtistOfTheMonth,\r\n        listOfArtistOfTheMonthID\r\n\r\n      },\r\n    } = this.props;\r\nlet artistOTM = listOfArtistOfTheMonth\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n    return (\r\n      <Fragment>\r\n        <CookieConsent\r\n          sameSite=\"none\"\r\n          Secure=\"true\"\r\n          cookieSecurity={true}\r\n          location=\"bottom\"\r\n          buttonText=\"Allow cookies\"\r\n          cookieName=\"ABasicallyCookies\"\r\n          cookieName=\"G_ENABLED_IDPS\"\r\n          cookieName=\"G_AUTHUSER_H\"\r\n          cookieName=\"SEARCH_SAMESITE\"\r\n          cookieValue=\"true\"\r\n          style={{ background: \"#2B373B\" }}\r\n          buttonStyle={{ color: \"#4e503b\", fontSize: \"13px\" }}\r\n          expires={999}\r\n        >\r\n          <h6 style={{ color: \"white\" }}>Cookies on Art, Basically</h6>\r\n          <p style={{ color: \"white\" }}>\r\n            We use cookies to personalize contents, to provide social media\r\n            features and to ensure that we give you the best experience on our\r\n            website. We also share information about your use of our site with\r\n            our social media partners who may combine it with other information\r\n            that you’ve provided to them from your use of their services.\r\n          </p>\r\n        </CookieConsent>\r\n\r\n        <div className=\"home\">\r\n          <Navbar />\r\n          <div className=\"maincon con\">\r\n            <div className=\"welcome\">\r\n              <h2>Welcome to Art, Basically</h2>\r\n              <p style={{ marginTop: \"-10px\" }}>\r\n                Create an account with us and start sharing your artworks!\r\n              </p>\r\n              <h2 className=\"paddh4\">But first, are you an</h2>\r\n              <div className=\"signinOpt\">\r\n                <MDBNavLink to=\"/ArtistRegistration\" className=\"btnYellow\">\r\n                  Artist\r\n                </MDBNavLink>\r\n                <MDBNavLink\r\n                  to=\"ArtistGalleryRegistration\"\r\n                  className=\"btnYellow\"\r\n                >\r\n                  Art Enthusiast\r\n                </MDBNavLink>\r\n              </div>\r\n              <span className=\"inlinep\">\r\n                What would best fit your description? \r\n              \r\n                 <Wecanhelp/>\r\n               \r\n                {/* <MDBNavLink to=\"#!\">We can help.</MDBNavLink> */}\r\n              \r\n              </span>\r\n              <div className=\"signinOpt block\">\r\n                <p className=\"inlinep paddh4\">Already have an account?</p>\r\n                <Login />\r\n              </div>\r\n            </div>\r\n            <section className=\"artistofdmonth\">\r\n              <div className=\"title center\">\r\n                {/* { \r\n                        (listOfArtworks.filter(art => art.accID === listOfArtistOfTheMonth[0]id).length === 0 ) ? \r\n                        (<Skeleton rows=\"1\" size=\"small\" loading={true}/>)\r\n                        : \r\n                        (   */}\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Artist/${listOfArtistOfTheMonth[0]}`,\r\n                    state: { artistName: listOfArtistOfTheMonth[0], artistid: listOfArtistOfTheMonthID[0] },\r\n                  }}\r\n                >\r\n                  <h2>{listOfArtistOfTheMonth[0]} </h2>\r\n                </Link>\r\n                {/* )\r\n                        } */}\r\n\r\n                <p>ARTIST OF THE MONTH </p>\r\n                {/* {listOfArtworks\r\n  .find(key => key.artTheme == 'Graphic')\r\n  .map((key, index) => {\r\n    return <div key={key}>\r\n             <h1>{listOfArtworks[key].artName}</h1>\r\n           \r\n           </div>\r\n  })}    */}\r\n              </div>\r\n              <ul className=\"col3img clearfix\">\r\n                {/*  */}\r\n                {listOfArtworks\r\n                  .filter((fil) => `${fil.accID}` === listOfArtistOfTheMonthID[0] && fil.artworkStatus == 'Active')\r\n                  .slice(0, 3)\r\n                  .map((image, i) => {\r\n                    return (\r\n                      <li key={i}>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {\r\n                              artistName: image.artistName,\r\n                              artID: image.artworkID,\r\n                            },\r\n                          }}\r\n                          className=\"artlink\"\r\n                         \r\n                        >\r\n                          <div className=\"artlabel\">\r\n                            <span className=\"new\">NEW</span>\r\n                            <span className=\"hot\">HOT</span>\r\n                            <span className=\"type\">\r\n                              {image.artType === \"Secondary\"\r\n                                ? \"Second Edition\"\r\n                                : \"Original\"}\r\n                            </span>\r\n                          </div>\r\n\r\n                          <img src={image.artworkImg} alt=\"artwork\" />\r\n                        </Link>\r\n\r\n                        <div className=\"artistinfo clearfix pad10\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                              state: { artistName: image.artistName },\r\n                            }}\r\n                          >\r\n                            <p className=\"artistname\">{image.artName}</p>\r\n                          </Link>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </section>\r\n            <section className=\"bestsellers\">\r\n              <h3>Best Sellers</h3>\r\n              <a\r\n                href=\"/Artworks\"\r\n                className=\"seemore\"\r\n                onClick={() => sessionStorage.setItem(\"type\", \"bestseller\")}\r\n              >\r\n                See More &nbsp;\r\n                <MDBIcon icon=\"caret-right\" />\r\n              </a>\r\n              <ul className=\"col3img clearfix\">\r\n              {listOfArtworks.length === 0 ? (\r\n                  <Skeleton />\r\n                ) : (\r\n                  listOfArtworks\r\n                    .filter((item,index,post) => item.artworkStatus === \"Active\" && index === 20 || item.artworkStatus === \"Active\" && index === 10 ||  item.artworkStatus === \"Active\" && index === 1)\r\n                    .reverse()\r\n                    .slice(0, 3)\r\n                    .map((image, i) => {\r\n                      \r\n                      return (\r\n                        <li key={i}>\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n\r\n                              state: {\r\n                                artistName: image.artistName,\r\n                                artID: image.artworkID,\r\n                                \r\n                              },\r\n                            }}\r\n                            className=\"artlink\"\r\n                          >\r\n                            <div className=\"artlabel\">\r\n                              <span className=\"new\">NEW</span>\r\n                              <span className=\"hot\">HOT</span>\r\n                              <span className=\"type\">\r\n                                {image.artType === \"Secondary\"\r\n                                  ? \"Second Edition\"\r\n                                  : \"Original\"}\r\n                              </span>\r\n                            </div>\r\n\r\n                            <img src={image.artworkImg} alt=\"artwork\" />\r\n                          </Link>\r\n\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                                state: {\r\n                                  artistName: image.artistName,\r\n                                  artID: image.artworkID,\r\n                                \r\n                                },\r\n                              }}\r\n                            >\r\n                              <p className=\"artistname\">{image.artName}</p>\r\n                            </Link>\r\n\r\n                            <br />\r\n\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Artist/${image.artistName}`,\r\n                                state: {\r\n                                  artistName: image.artistName,\r\n                                  artID: image.artworkID,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <p\r\n                                className=\"artistname\"\r\n                                style={{\r\n                                  fontSize: \"10px\",\r\n                                  fontStyle: \"italic\",\r\n                                }}\r\n                              >\r\n                                by {image.artistName}\r\n                              </p>\r\n                            </Link>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })\r\n                )}\r\n              </ul>\r\n            </section>\r\n            <section className=\"latest\" id=\"latest\">\r\n              <h3>Latest Drops</h3>\r\n              <a\r\n                href=\"/latestArtworks\"\r\n                className=\"seemore\"\r\n            \r\n              >\r\n                See More &nbsp;\r\n                <MDBIcon icon=\"caret-right\" />\r\n              </a>\r\n              <ul className=\"col3img clearfix\">\r\n                {listOfArtworks.length === 0 ? (\r\n                  <Skeleton />\r\n                ) : (\r\n                  listOfArtworks\r\n                    .filter((item) => item.artworkStatus === \"Active\")\r\n                    .reverse()\r\n                    .slice(0, 3)\r\n                    .map((image, i) => {\r\n                      return (\r\n                        <li key={i}>\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                              state: {\r\n                                artistName: image.artistName,\r\n                                artID: image.artworkID,\r\n                              },\r\n                            }}\r\n                            className=\"artlink\"\r\n                          >\r\n                            <div className=\"artlabel\">\r\n                              <span className=\"new\">NEW</span>\r\n                              <span className=\"hot\">HOT</span>\r\n                              <span className=\"type\">\r\n                                {image.artType === \"Secondary\"\r\n                                  ? \"Second Edition\"\r\n                                  : \"Original\"}\r\n                              </span>\r\n                            </div>\r\n\r\n                            <img src={image.artworkImg} alt=\"artwork\" />\r\n                          </Link>\r\n\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                                state: {\r\n                                  artistName: image.artistName,\r\n                                  artID: image.artworkID,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <p className=\"artistname\">{image.artName}</p>\r\n                            </Link>\r\n\r\n                            <br />\r\n\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Artist/${image.artistName}`,\r\n                                state: {\r\n                                  artistName: image.artistName,\r\n                                  artID: image.artworkID,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <p\r\n                                className=\"artistname\"\r\n                                style={{\r\n                                  fontSize: \"10px\",\r\n                                  fontStyle: \"italic\",\r\n                                }}\r\n                              >\r\n                                by {image.artistName}\r\n                              </p>\r\n                            </Link>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })\r\n                )}\r\n              </ul>\r\n            </section>\r\n            <div className=\"addwork\">\r\n              <h2>\r\n                Basically, be famous, <br /> without all the work.\r\n              </h2>\r\n              <p>Post your art and start earning like crazy.</p>\r\n\r\n              <AYLogin login={\"aywn\"} />\r\n              <a href=\"/\" className=\"learnmore\" style={{ color: \"black\" }}>\r\n                Learn More <MDBIcon icon=\"caret-right\" />{\" \"}\r\n              </a>\r\n            </div>\r\n            <section className=\"bestsellers\">\r\n              <h3>Discover Emerging Artists</h3>\r\n              <a\r\n                href=\"/Discover\"\r\n                className=\"seemore\"\r\n                \r\n              >\r\n                See More &nbsp;\r\n                <MDBIcon icon=\"caret-right\" />\r\n              </a>\r\n              <ul className=\"col3img clearfix\">\r\n                {listOfEmergingArtist.length === 0 ? (\r\n                  <Skeleton />\r\n                ) : (\r\n                  listOfEmergingArtist\r\n                    .filter((item) => item.artworkStatus == \"Active\")\r\n                    .reverse()\r\n                    .slice(0, 3)\r\n                    .map((image, i) => {\r\n                      return (\r\n                        <li key={i}>\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                              state: {\r\n                                artistName: image.artistName,\r\n                                artID: image.artworkID,\r\n                              },\r\n                            }}\r\n                            className=\"artlink\"\r\n                          >\r\n                            <div className=\"artlabel\">\r\n                              <span className=\"new\">NEW</span>\r\n                              <span className=\"hot\">HOT</span>\r\n                              <span className=\"type\">\r\n                                {image.artType === \"Secondary\"\r\n                                  ? \"Second Edition\"\r\n                                  : \"Original\"}\r\n                              </span>\r\n                            </div>\r\n\r\n                            <img src={image.artworkImg} alt=\"artwork\" />\r\n                          </Link>\r\n\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                                state: {\r\n                                  artistName: image.artistName,\r\n                                  artID: image.artworkID,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <p className=\"artistname\">{image.artName}</p>\r\n                            </Link>\r\n\r\n                            <br />\r\n\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Artist/${image.artistName}`,\r\n                                state: {\r\n                                  artistName: image.artistName,\r\n                                  artID: image.artworkID,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <p\r\n                                className=\"artistname\"\r\n                                style={{\r\n                                  fontSize: \"10px\",\r\n                                  fontStyle: \"italic\",\r\n                                }}\r\n                              >\r\n                                by {image.artistName}\r\n                              </p>\r\n                            </Link>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })\r\n                )}\r\n              </ul>\r\n            </section>\r\n            <div className=\"bttop\">\r\n              <AYLogin login={\"ay\"} />\r\n              <BackTop style={{ margin: \"auto\" }}>\r\n                {\"     \"}\r\n                <a href=\"#!\" style={{ color: \"black\" }}>\r\n                  Back to Top <MDBIcon icon=\"caret-right\" />{\" \"}\r\n                </a>{\" \"}\r\n              </BackTop>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(Landing)));\r\n","import { BackTop, message } from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBNavLink\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/')\r\n    // }\r\n\r\n    let {\r\n      startingStore: {\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getAllArtworks,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        listOfEmergingArtist,\r\n        getPrintSize,\r\n        getNotif,\r\n        getToCart,getOrders,\r\n        getMyLists,\r\n        getAccounts,\r\n        getFollow,\r\n        getArtistOftheMonth\r\n      },\r\n    } = this.props;\r\n    if (listOfEmergingArtist) {\r\n      getArtistFollowArtwork();\r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getAllArtworks()\r\n      getArtists();\r\n      getPrintSize()\r\n      getNotif()\r\n      getToCart()\r\n      getOrders()\r\n      getMyLists()\r\n      getAccounts()\r\n      getFollow()\r\n      getArtistOftheMonth()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n       let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listOfArtworks,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        mylists,\r\n        addMyLists,\r\n        listOfMyLists,\r\n        listOfUsers,\r\n        addFollow,\r\n        userfollow,\r\n        listOfFollowing,\r\n        deleteFollow,\r\n        addNotif,\r\n        notif,\r\n        listOfArtistOfTheMonth,\r\n        listOfArtistOfTheMonthID\r\n        \r\n      },\r\n    } = this.props;\r\n\r\n    \r\n\r\n\r\n\r\n\r\n   \r\n  \r\n let addtoList=(rtwrk)=>{\r\n\r\n  let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n\r\nif (getmyList === 0){\r\n   \r\n   mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n   mylists.setProperty('accID',logged.accID)\r\n   mylists.setProperty('artworkID',rtwrk.artworkID)\r\n \r\n   mylists.setProperty('artName',rtwrk.artName)\r\n   mylists.setProperty('artTheme',rtwrk.artTheme)\r\n   mylists.setProperty('artStyle',rtwrk.artStyle)\r\n   mylists.setProperty('artPrice',rtwrk.artPrice)\r\n   mylists.setProperty('artistID',rtwrk.accID)\r\n   mylists.setProperty('artistName',rtwrk.artistName)\r\n   mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n   mylists.setProperty('artType',rtwrk.artType)\r\n   mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n   \r\n   addMyLists()\r\n\r\n   const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork added to your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n}else{\r\n  const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork already on your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n \r\n}\r\n }\r\n\r\n function getHash(input){\r\n  var hash = 0, len = input.length;\r\n  for (var i = 0; i < len; i++) {\r\n    hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n    hash |= 0; // to 32bit integer\r\n  }\r\n\r\n        \r\n  return hash;\r\n}\r\n\r\n let follow =(following)=>{\r\n  let getFollowing = listOfFollowing.filter(data =>  data.followingID ===  listOfArtistOfTheMonthID[0] && data.followerID === logged.accID)\r\n   if (getFollowing.length === 0){\r\n    userfollow.setProperty('followID', `${Math.floor(1000 + Math.random() * 9000)}`)\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    addFollow()\r\n  \r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: false,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n\r\n\r\n\r\n\r\n    notif.setProperty('notifID',`${getHash(logged.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',logged.accID)\r\n    notif.setProperty('notifRecipient',following)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${logged.accFname } started following you`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif()\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Following', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },500)\r\n\r\n   }else{\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    deleteFollow();\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Unfollow', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },50)\r\n   }\r\n   setTimeout(()=>{\r\n    window.location.reload(false);\r\n  },1500)\r\n\r\n   this.setState(function (prevState) {\r\n    return {\r\n      isToggleOn: true,\r\n      condition: !this.state.condition,\r\n    };\r\n  });\r\n \r\n\r\n }\r\n\r\n\r\n\r\n\r\n    function MatchRouteUserCategories() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {/*  */}\r\n          {listofFilteredUserArtworkCategories\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                        state: {artistName:image.artistName}\r\n                      }}\r\n                    >\r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteEmergingArtist() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfEmergingArtist\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n               <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                        state: {artistName:image.artistName}}} className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                 \r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n             \r\n                  <div className='artistinfo clearfix pad10'>\r\n                  <Link\r\n                      to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                      to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteArtistFollowed() {\r\n\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfArtistFollowed !== undefined\r\n            ? listOfArtistFollowed\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                     <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}}} className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                 \r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                 \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n            : ''}\r\n        </ul>\r\n      );\r\n    }\r\n    let getFollowing = listOfFollowing.filter(data =>  data.followingID ===  listOfArtistOfTheMonthID[0] && data.followerID === logged.accID)\r\n\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n              <h2>\r\n              <a\r\n                      href=''\r\n                     style={{marginRight:'8px'}}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${listOfArtistOfTheMonth[0]}`,\r\n                          state: {artistName:listOfArtistOfTheMonth[0]\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n               { (listOfArtworks.length == 0 ) ? (<p></p>):(  <h2 className='artistname'>{listOfArtistOfTheMonth[0]}      </h2>)}\r\n                     \r\n                    </a>\r\n                    { (listOfArtworks.length == 0  || listOfArtistOfTheMonth[0] === undefined) ? (<p></p>):( \r\n                    <MDBBtn\r\n               color='primary'\r\n                  style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px',margin:'6px'}}\r\n                outline\r\n                  \r\n                 \r\n                  title={getFollowing === '0' ? 'Follow' : 'Unfollow'}\r\n                  onClick={() =>\r\n                    // this.handleClick(followArtist(AOMid.pop()))\r\n                    follow(listOfArtistOfTheMonthID[0])\r\n                  }\r\n                >\r\n             \r\n\r\n               { getFollowing.length  === 0 ? (\r\n                  <div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n                 ) : (\r\n                   'Following'\r\n                 )\r\n               }\r\n\r\n                 \r\n\r\n\r\n                </MDBBtn> )}\r\n               \r\n                \r\n              </h2>\r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter(fil => fil.accID === listOfArtistOfTheMonthID[0])\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                  \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      \r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                    \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          \r\n                       \r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                    \r\n                      <Link\r\n                    \r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      \r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                 \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                         \r\n                        >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                          to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/latestArtworks'\r\n              className='seemore'\r\n              \r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                        >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                         </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            <MDBNavLink to='#!' className='btnBlack'>\r\n              Add your work now\r\n            </MDBNavLink>\r\n          \r\n            <a href='#1' className='learnmore' >\r\n             <span style={{color:'black'}}>Learn More</span>  <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          {/* <section className='latest'>\r\n            <h3>Recommended for You</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'foryou')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section> */}\r\n          <section className='latest'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Discover'\r\n              className='seemore'\r\n            \r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfEmergingArtist\r\n                .filter((item) => item.artworkStatus == 'Active')\r\n              \r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      \r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                          className='artlink'\r\n                        >\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                      \r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                            state: {artistName:image.artistName}\r\n                          }}\r\n                        >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                         </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          {/* <section className='latest'>\r\n            <h3>Artists You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'artistyoufollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteArtistFollowed />\r\n          </section> */}\r\n          {/* <section className='latest'>\r\n            <h3>Categories You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'categoriesfollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section> */}\r\n          <div className='bttop'>\r\n            <MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <MDBContainer className='notif'>\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            icon=\"envelope\"\r\n            title=\"Message\"\r\n            message=\"Jane: See? Just like this.\"\r\n            text=\"just now\"\r\n          /> */}\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='Recieved an order from Jane Doe'\r\n            text='Just now'\r\n          />\r\n          <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='New art submission'\r\n            text='2 seconds ago'\r\n          /> */}\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Homepage));\r\n","export default __webpack_public_path__ + \"static/media/art1.87a26908.png\";","import { message, Skeleton } from 'antd';\r\nimport _ from 'lodash';\r\nimport { MDBBtn, MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport art from '../../images/artworks/art1.png';\r\n\r\nclass SingleArtist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcondition: false,\r\n\t\t\tisToggleOn: true,\r\n\t\t\tfollowStatus: false,\r\n\t\t\tlink:null\r\n\t\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n    let {\r\n\t\t\tstartingStore: {  followed,setFollowed }\r\n    } = this.props;\r\n    setFollowed()\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0,0)\r\n\t\tlet { startingStore: { getFollow,getSingleArtists, getArtistArtwork, getArtists, getArtworkInfo }} = this.props;\r\n\t\r\n\t\tgetSingleArtists(this.props.match.params.name);\r\n\t\tgetArtistArtwork(this.props.match.params.name);\r\n\t\tgetArtworkInfo();\r\n\t\tgetArtists();\r\n\t\tgetFollow();\r\n\t}\r\n\r\n\tcheckFollower = (follower) => {\r\n\t\tif (follower !== undefined && follower[0] !== '') {\r\n\t\t\treturn follower.length;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\r\n\tfollowArtist = () => {\r\n\t\tmessage.loading({ content: 'Loading...' });\r\n\t\tsetTimeout(() => {\r\n\t\t\tmessage.success({ content: 'Loaded!', duration: 2 });\r\n\t\t}, 1000);\r\n\t};\r\n\t\r\n\r\n\trender() {\r\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\t\tconst getLastItem = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\r\n\t\t\r\n\t\tlet {\r\n\t\t\tstartingStore: { listOfFollowing,listofArtistInfo, listofArtistArtwork, listofArtistCategories, followArtist, followed }\r\n\t\t} = this.props;\r\n\r\n\t\tlet getFollowers = listOfFollowing.filter(data => data.followingID === this.props.artistid).length\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className=\"home\">\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"maincon con\">\r\n\t\t\t\t\t<div className=\"artist\">\r\n\t\t\t\t\t\t<div className=\"artistprofile clearfix\">\r\n\t\t\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t\t\t<div className=\"artistpp\" >\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<img src={listofArtistInfo.profile_Img} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"artistInfo\">\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo.accFname !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n\t\t\t\t\t\t\t\t\t\t\t{userData === null || userData === undefined ?(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t   style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px',marginLeft:'16px'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t outline\r\n\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t   title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n\t\t\t\t\t\t\t\t\t\t\t   onClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t this.handleClick(followArtist(listofArtistInfo._id))\r\n\t\t\t\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t   {(this.state.isToggleOn) ? (\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n\t\t\t\t\t\t\t\t\t\t\t   ) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t 'Following'\r\n\t\t\t\t\t\t\t\t\t\t\t\t   )}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"bday\">\r\n\t\t\t\t\t\t\t\t\t\t\t{listofArtistInfo.accAddress}, born {listofArtistInfo.birthYear}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<span className=\"estart\">Established Artist</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t{getFollowers === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetFollowers\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>Followers</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t\t\t\t4.8/5\r\n\t\t\t\t\t\t\t\t\t\t<span>528k Ratings</span>\r\n\t\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"artistbio clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Biography</h4>\r\n\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t<p>{listofArtistInfo.artistDescription}</p>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"relatedcat clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Related Categories</h4>\r\n\t\t\t\t\t\t\t<div className=\"catlist\" style={{color:'black'}}>\r\n\t\t\t\t\t\t\t\t{listofArtistCategories[0] !== [] || listofArtistCategories[0] !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t_.uniqBy(listofArtistCategories).map((cat) => (\r\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">{cat}</MDBNavLink>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">No Categories</MDBNavLink>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t\t</a> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<section className=\"bestsellers\">\r\n\t\t\t\t\t\t<h3>Best Sellers of {getLastItem(decodeURI(window.location.href))}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Latest Work by {getLastItem(decodeURI(window.location.href))}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t{/* <section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Related Artist</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Rene Gagnon</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#1\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Eelus</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Banksy</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArtist)))\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class ArtistReg extends Component {\r\n   \r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n \r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID = moment().format('MDYY') + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n \r\n   \r\n   \r\n    const formData = new FormData();\r\n    formData.append('artworkImg',  e.target.files[0]);\r\n    formData.append('type', 'artist');\r\n    upload(formData, 'docu');\r\n  }\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {startingStore:{listOfUsers,addAccount,account, upload}}=this.props;\r\n    \r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n\r\nif (filAccounts === 0){\r\n\r\n\r\n    if (this.state.password === this.state.confPassword ){\r\n\r\n\r\n\r\n    event.target.className += ' was-validated';\r\n\r\n    account.setProperty('acc_Status', 'Pending');\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    setTimeout(() => {\r\n    addAccount();\r\n  }, 4000);\r\n    const success = () => {\r\n    \r\n      message.success('Successfully submitted registration', 1);\r\n \r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n      this.props.history.push('/RegVerify');\r\n    }, 1000);\r\n    \r\n    \r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 4000);\r\n\r\n  }else{\r\n    const error = () => {\r\n    \r\n      message.error('Please check your password', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n      const error = () => {\r\n    \r\n      message.error('Your email or contact number is already taken', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n}\r\n\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Artist <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n\r\n\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n\r\n\r\n\r\n            <div className=\"page req clearfix\">\r\n<div className=\"container\">\r\n\t\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n\r\n\r\n\r\n              <MDBInput\r\n                label='First Name'\r\n               \r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='5'\r\n                style={{padding:'10px'}}\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n                   <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n             \r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n           \r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n            \r\n        \r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} required/>\r\n                <p className='req'>\r\n                  Acceptable documents includes image of your passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n\r\n\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                REGISTER\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistReg));\r\n","import React, {Component} from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nimport {withRouter} from 'react-router-dom'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit\r\n  },\r\n  facebookIcon: {\r\n    color: \"pink\"\r\n  }\r\n});\r\n\r\nclass FbReg extends Component {\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props;\r\n        getAccounts();\r\n      }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n    let {startingStore:{listOfUsers}}=this.props;\r\n\r\n    let getEmail = listOfUsers.filter(usr=> usr.accEmailAddress === response.email).length;\r\n\r\n    if (response.email === undefined || response.email === null){\r\n    console.log('error')\r\n    }\r\n    else if (getEmail !== 0){\r\n      const success = () => {\r\n        message\r\n          .loading('Validating..', 1.2)\r\n          .then(() => message.success('Account already registered', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 200);\r\n      this.props.history.push('/');\r\n    \r\n    }\r\nelse{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n  \r\n\r\n    if(response !== undefined || response != null){\r\n       \r\n  \r\n        let { startingStore: { addAccount, account ,loginFB ,getArtists,\r\n          getArtworkInfo,\r\n          getEmergingArtistArtwork,\r\n          getArtistFollowArtwork,listOfUsers} } = this.props;\r\n  \r\n      let checkuser = listOfUsers.map(usr =>{\r\n        return usr.accEmailAddress\r\n      })\r\n  let fil = checkuser.filter(usr => usr === response.email).length\r\n  \r\n\r\n  if (fil === 0 || fil === null){\r\n    let stat ='';\r\n    if (this.props.user === 'Standard'){\r\n      stat = 'Active'\r\n\r\n    }else{\r\n      stat = 'Pending'\r\n    }\r\n        account.setProperty('accessType', this.props.user);\r\n        account.setProperty('acc_Status', stat);\r\n  \r\n        account.setProperty(\"accEmailAddress\", response.email)\r\n        account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n        account.setProperty(\"accFname\", response.name)\r\n        account.setProperty(\"profile_Img\", response.picture.data.url)\r\n        account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n        account.setProperty('regType','FBAccount')\r\n        addAccount().then(res => {\r\n          if(res === true){\r\n             \r\n            loginFB().then((res) => {\r\n              let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n              getArtworkInfo();\r\n              getEmergingArtistArtwork();\r\n              getArtists();\r\n              getArtistFollowArtwork(mydata.accEmailAddress);\r\n            if (res === 2) {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.success('Welcome to artBasically', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/Home');\r\n              }  else {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.error('Registration Unsuccessful', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/');\r\n              }\r\n            });\r\n  \r\n            \r\n      \r\n  \r\n          }\r\n        })\r\n      }else if(fil === 1){\r\n  \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Email already taken!', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/');\r\n          \r\n        \r\n      }\r\n  \r\n      }\r\n      else{\r\n        console.log('error')\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    \r\n\r\n   \r\n     \r\n   let fbContent = (\r\n        <FacebookLogin\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          fields='name,email,picture'\r\n          cssClass=\"FacebookReg\"\r\n          disableMobileRedirect={true}\r\n        \r\n          callback={this.responseFacebook}\r\n          textButton=\"Sign up with Facebook\"\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    \r\n\r\n    return (<div >{fbContent}</div>)\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(withStyles(styles)(FbReg))))","import React, {Component} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass GmailRegister extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n\r\n  responseGoogle = (response) => {\r\n \r\n\r\n    if(response !== undefined || response != null){\r\n   \r\n      let { startingStore: { addAccount, account ,loginGoogle,listOfUsers} } = this.props;\r\n\r\n    let checkuser = listOfUsers.map(usr =>{\r\n      return usr.accEmailAddress\r\n    })\r\nlet fil = checkuser.filter(usr => usr === response.profileObj.email).length\r\n\r\n\r\nif (fil === 0 || fil === null){\r\n      account.setProperty('accessType', this.props.user);\r\n      if (this.props.user === 'Artist'){\r\n      account.setProperty('acc_Status', 'Pending');\r\n      }else{\r\n        account.setProperty('acc_Status', 'Active');\r\n      }\r\n      account.setProperty(\"profile_Img\", response.profileObj.imageUrl)\r\n      account.setProperty(\"accEmailAddress\", response.profileObj.email)\r\n      account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n      account.setProperty(\"accFname\", response.profileObj.givenName)\r\n      account.setProperty(\"accLname\", response.profileObj.familyName)\r\n      account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n      account.setProperty('regType','GmailAccount')\r\n      addAccount().then(res => {\r\n        \r\n        if(res === true){\r\n           \r\n          loginGoogle().then((res) => {\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n            // getArtworkInfo();\r\n            // getEmergingArtistArtwork();\r\n            // getArtists();\r\n            // getArtistFollowArtwork(response.profileObj.email);\r\n            if (res === 1) {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 1000);\r\n              this.props.history.push('/ArtistHome');\r\n            } \r\n            else if (res === 2){\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n            \r\n                success();\r\n                setTimeout(() => {\r\n              this.props.history.push('/Home');\r\n            }, 100);\r\n            } \r\n            \r\n            \r\n            else {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Account created', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push('/RegVerify');\r\n              setTimeout(() => {\r\n                this.props.history.push('/');\r\n              }, 4500);\r\n            }\r\n          });\r\n\r\n          \r\n    \r\n\r\n        }\r\n      })\r\n    }else if(fil === 1){\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('Validating..', 1.2)\r\n              .then(() => message.error('Email already taken!', 1));\r\n          };\r\n  \r\n          setTimeout(() => {\r\n            success();\r\n          }, 1000);\r\n          // this.props.history.push('/');\r\n        \r\n      \r\n    }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n          buttonText='Sign up with Google'\r\n          onSuccess={this.responseGoogle}\r\n          onFailure={this.responseGoogle}\r\n          disableMobileRedirect={true}\r\n          cookiePolicy={'single_host_origin'}\r\n          className='btnGoogle'\r\n          icon={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailRegister)));\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport FBReg from '../../components/RegisterFB/';\r\nimport GmailReg from './../../components/RegisterGmail/';\r\n\r\n class ArtGalReg extends Component {\r\n\r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n   \r\n\r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  submitHandler = (event) => {\r\n\r\n\r\n\r\n    event.preventDefault();\r\n   \r\n\r\n    let {\r\n      startingStore: {listOfUsers,addAccount, account},\r\n    } = this.props;\r\n\r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n    if (filAccounts === 0){\r\n\r\n    account.setProperty('accessType', 'Standard')\r\n    account.setProperty('acc_Status', 'Active')\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n    account.setProperty('accID',  `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    if (this.state.password === this.state.confPassword){\r\n      event.target.className += 'was-validated';\r\n    addAccount();\r\n\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('You have been successfully registered', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      success();\r\n    \r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 3000);\r\n  }else{\r\n    const error = () => {\r\n      // message.then(() =>\r\n      message.error('Please check your password', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n  const error = () => {\r\n\r\n  message.error('Your email or contact number is already taken', 2);\r\n\r\n};\r\nsetTimeout(() => {\r\n  error();\r\n\r\n}, 500);\r\n}\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Art Enthusiast <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start exploring the best artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n         \r\n        \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                style={{textTransform: 'capitalize'}}\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n  \r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n          \r\n              <FBReg user='Standard'/>\r\n              <GmailReg user='Standard'/>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                Register\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtGalReg));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nexport class UserReg extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n    \r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                User <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n            \r\n          \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='text'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n           \r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Full Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='usertype'\r\n                onChange={(accessType) =>\r\n                  account.setProperty('accessType', accessType.target.value)\r\n                }\r\n              >\r\n                <option> User Type </option>\r\n                <option value='Standard'> Art Gallery </option>\r\n                <option value='Artist'> Artist </option>\r\n                {/* <option value='Admin'> Admin </option> */}\r\n              </select>\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfCategories}\r\n                placeholder=\"Art Themes you'd like to follow\"\r\n                showCheckbox={true}\r\n                displayValue='catType'\r\n                onSelect={selectCategory}\r\n                // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n              />\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfStyles}\r\n                placeholder=\"Art Style you'd like to follow\"\r\n                showCheckbox={true}\r\n                onSelect={selectStyle}\r\n                displayValue='styleType'\r\n                // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n              />\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                onChange={(password) =>\r\n                  account.setProperty('password', password.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                onChange={(confirmPassword) =>\r\n                  account.setProperty(\r\n                    'confirmPassword',\r\n                    confirmPassword.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} />\r\n                <p className='req'>\r\n                  Acceptable documents include passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                SUBMIT\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UserReg));\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Icon, Modal } from 'antd';\r\n\r\nfunction getBase64 (file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass UploadMult extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: ''\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render () {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n          className=\"multsel\"\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadMult;","import React, {Component} from 'react';\r\nimport {MDBInput, MDBNavLink, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport UploadMult from '../../components/UploadMult';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport moment from 'moment';\r\n\r\nclass UploadWork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n      artImg:null,\r\n      ArtByMe:'',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtists();\r\n    getPrintSize()\r\n    getStyles();\r\n    getCategories();\r\n    getArtworkInfo();\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n    this.setState({\r\n      profileImg: URL.createObjectURL(event.target.files[0])\r\n    })\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n\r\n\r\n    this.setState({selectedFile: image});\r\n   \r\n  }\r\n  onSubmit(e) {\r\n    let userData= JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {upload, artwork,addNotif,notif},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    data.append('type', 'artwork');\r\n    \r\n    upload(data);\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('Artwork submitted', 1);\r\n      // );\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n    this.props.history.push('/SubmitArt');\r\n    setTimeout(() => {\r\n      this.props.history.push('/Upload');\r\n    }, 4000);\r\n\r\n\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\nnotif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\nnotif.setProperty('notifSender',userData.accID)\r\nnotif.setProperty('notifRecipient','admin-001')\r\nnotif.setProperty('notifSubject','Artwork')\r\nnotif.setProperty('notifMsg',`${userData.accFname} ${userData.accLname} submitted and artwork`)\r\nnotif.setProperty('notifDT',moment().format('MMM/DD/YYYY'))\r\nnotif.setProperty('notifStatus','unread')\r\n\r\naddNotif()\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n    let madeByMe= ()=>{\r\n     this.setState({ArtByMe:`${mydata.accFname} ${mydata.accLname}`})\r\n    }\r\n\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n   \r\n    artwork.setProperty('accID',mydata.accID)\r\n    artwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon'>\r\n          <div className='uploadart uploadwork clearfix'>\r\n            <h2>Upload Your Work</h2>\r\n            <form\r\n              onSubmit={this.onSubmit}\r\n              className='regform uploadform custform'\r\n            >\r\n              <div className='left'>\r\n                <div>\r\n                  <span  style={{marginBottom:'-8px'}}>Your Title</span>\r\n                  <MDBInput\r\n                     \r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>{\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback ' >\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}} className='custom-checkbox '>\r\n                <span>Artist</span>\r\n                <select\r\n                  value={this.state.ArtByMe}\r\n                  onChange={(artistName) =>\r\n                    artwork.setProperty('artistName', artistName.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <option>Artist</option>\r\n                  {listOfArtists.map((artist) => {\r\n                    return (\r\n                      <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                        {artist.accFname} {artist.accLname}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                <p className='inlinep' style={{marginLeft:'20px',marginTop:'-22px',paddingBottom:'22px'}}>\r\n                            <input\r\n                              type='checkbox'\r\n                              className='custom-control-input '\r\n                              id='anycat'\r\n                              onChange={()=>{madeByMe()}}\r\n                              \r\n                            />\r\n                            <label\r\n                              className='custom-control-label clabel'\r\n                              htmlFor='anycat'\r\n                              style={{fontSize:'12px',paddingTop:'4px'}}\r\n                            >\r\n                              Is this artwork made by you?\r\n                            </label>\r\n                        </p> \r\n                </div>\r\n                <div>\r\n                <span     style={{marginBottom:'-8px'}}>Year</span>\r\n                  <MDBInput\r\n              \r\n                    label='Year'\r\n                    type='number'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Themes</span>\r\n                  <p className='inlinep'>\r\n                    What themes would best help describe your artwork?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n              \r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art theme.\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span>Style</span>\r\n                  <p className='inlinep'>\r\n                    What styles are your artwork inspired by?{' '}\r\n                    <MDBNavLink to='#!' className='nobg'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art style.\r\n                  </div>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}}>\r\n                <span>Art Type</span>\r\n                <select\r\n                  className='usertype'\r\n                  onChange={(artType) =>\r\n                    artwork.setProperty('artType', artType.target.value)\r\n                  }\r\n                >\r\n                  <option> Art Type </option>\r\n                  <option value='Original'> Original </option>\r\n                  <option value='Secondary'> Secondary </option>\r\n                </select>\r\n                </div>\r\n                <div className='dim'>\r\n                  <span>Artwork Size</span>\r\n                 {/*  <ul>\r\n                    <li>\r\n                      <p>Unit of Measure</p>\r\n                      <select>\r\n                        <option>Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Length</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Width</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                  </ul> */}\r\n                         <Multiselect\r\n                 \r\n                 className='multsel'\r\n                 options={listOfPrintSize}\r\n                 placeholder='Printing Size'\r\n                 showCheckbox={true}\r\n                 displayValue='printSize'\r\n                 onSelect={selectArtSize}\r\n           \r\n               />\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span >Number of Copies</span>\r\n                  <p className='inlinep' style={{marginBottom:'-8px'}}>How many copies of your artworks are you selling?</p>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='number'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span>Authenticity Certificate</span>\r\n                  <p className='inlinep'>\r\n                    Do you have a document certifiying your artwork is original?\r\n                    Don’t know what this is?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <select>\r\n                    <option>No</option>\r\n                    <option>Yes</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <span style={{marginBottom:'-8px'}}>Price</span>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide the Art Price.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Description</span>\r\n                  <MDBInput\r\n                    label='How do you describe your current work?'\r\n                    type='textarea'\r\n                    rows='8'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n        \r\n                <div className='uploadreq clearfix'>\r\n                \r\n                  <div className='upload' >\r\n                    {/* <label htmlhtmlFor='submitart' htmlFor='submitart' disabled>\r\n                      Coming Soon\r\n                    </label>\r\n                    <input type='submit' id='submitart' disabled /> */}\r\n                    <MDBBtn type='submit' color='#fae933' style={{fontWeight:'bold'}}>\r\n                      Upload Your Work\r\n                    </MDBBtn>\r\n                  </div>\r\n\r\n                  <p style={{textAlign:'center',fontSize:'12px'}}>\r\n                    Your artwork will be sent to our team for review to see if\r\n                    it meets our standards. We will send you a notification if\r\n                    your artwork has already been uploaded to the site. Thank\r\n                    you for your patience. How long does the review take?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <div className='artsingle'>\r\n                  <span>Main Photo</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <img src={this.state.profileImg} style={{width:'500px',marginBottom:'16px'}}/>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                   \r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  {/* <UploadImage /> */}\r\n                </div>\r\n                <div className='artmult'>\r\n                  <span>More Photos of Your Artwork</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <UploadMult />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UploadWork));\r\n","import {toast} from 'react-toastify';\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case 'info':\r\n      toast.info(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 1200,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'success':\r\n      toast.success(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'warning':\r\n      toast.warn(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'error':\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    default:\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n  }\r\n};\r\n\r\nexport default notify;\r\n","import {MDBBtn, MDBCol, MDBIcon, MDBInput, MDBRow} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Notification from './Notif';\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass OrderTab extends Component {\r\n  state = {\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n    totalPrice: 0,\r\n    partnerPercentage:30,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n    getOrders();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      let total =\r\n        parseFloat(this.state.totalPrice) +\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        totalPrice: total,\r\n      });\r\n\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      let data = this.state.selected.filter((indexer) => {\r\n        if (indexer !== index) {\r\n          selectedArray.push(data);\r\n        }\r\n      });\r\n      let total =\r\n        parseFloat(this.state.totalPrice) -\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n        totalPrice: total <= 0 ? 0 : total,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n   \r\n    \r\n\r\n  addOrder = () => {\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n   let perctodec = this.state.partnerPercentage/100;\r\n   \r\n\r\n\r\n    let {\r\n      startingStore: {order, addOrder, editToCart,notif,addNotif},\r\n    } = this.props;\r\n\r\n  \r\n    let totalValue = perctodec * this.state.totalPrice;\r\n    console.log(perctodec,this.state.totalPrice,totalValue,'perc')\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    \r\n    order.setProperty('orderID',`${moment().format('YY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY,h:mm:ssa'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('totalAmount',this.state.totalPrice)\r\n    order.setProperty('partnerEarnings',totalValue)\r\n  \r\n    addOrder();\r\n    \r\n\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient',userData.accID)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${userData.accFname } order an artwork(s)`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\naddNotif();\r\n    if (this.state.selected.length > 1) {\r\n      this.state.selected.map((item) => {\r\n        editToCart(item);\r\n     \r\n        Notification('success', 'Checkout Successfully');\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.1)\r\n            .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n           setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n      });\r\n    } else {\r\n      editToCart(this.state.selected[0]);\r\n\r\n      Notification('success', 'Checkout Successfully');\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.1)\r\n          .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n      setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n    }\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n\r\n  \r\n    let {\r\n      startingStore: { listOfUserCart},\r\n    } = this.props;\r\n \r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n            {listOfUserCart.map((item, indexes) => {\r\n              if (listOfUserCart.length > 0) {\r\n                return (\r\n                  <MDBRow className='artlistorder' >\r\n                    <MDBCol md='1' >\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <MDBInput\r\n                          onChange={(data) => {\r\n                            this.selectedValue(\r\n                              indexes,\r\n                              data.target.checked,\r\n                              item\r\n                            );\r\n                          }}\r\n                          type='checkbox'\r\n                          id='checkbox1'\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='2' className='artimg colpad'>\r\n                      {item.artworkImg !== '' ? (\r\n                        <img src={item.artworkImg} alt='artwork' />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='4' className='artdet colpad'>\r\n                      <a\r\n                        href='#!'\r\n                        onClick={() => {\r\n                          this.props.history.push({\r\n                            pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                            state: {\r\n                              artistName: `${item.accFname} ${item.accLname}`,\r\n                              accImg: this.state.artistImg,\r\n                              artistDescription: this.state.accDescription,\r\n                              birthYear: this.state.birthYear,\r\n                              accFollowers: this.state.accFollowers,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        {item.artistName} <MDBIcon icon='arrow-right' />\r\n                      </a>\r\n                      <br />\r\n                      <p>\"{item.artworkName}\"</p>\r\n                      <p>\r\n                        Variations: {item.artworkMaterial}, {item.artworkSize},\r\n                        {item.artworkFramingOptions}\r\n                      </p>\r\n                      <p>\r\n                        &#8369;\r\n                        {item.artworkPrice\r\n                          ? Number(\r\n                              parseFloat(item.artworkPrice)\r\n                            ).toLocaleString('en')\r\n                          : ''}\r\n                      </p>\r\n                    </MDBCol>\r\n                    <MDBCol md='1' className='quan colpad'>\r\n                      {item.artworkQuantity !== ''\r\n                        ? `x${item.artworkQuantity}`\r\n                        : ''}\r\n                    </MDBCol>\r\n                    <MDBCol md='3' className='colpad'>\r\n                      <MDBRow className='sub'>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          Subtotal\r\n                        </MDBCol>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          &#8369;\r\n                          {item.artworkPaymentAmount\r\n                            ? Number(\r\n                                parseFloat(item.artworkPaymentAmount)\r\n                              ).toLocaleString('en')\r\n                            : ''}\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                    </MDBCol>\r\n                    <MDBCol md='1'>\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <a\r\n                          href='#!'\r\n                          onClick={() => {\r\n                            this.deleteItem(item);\r\n                          }}\r\n                        >\r\n                          <MDBIcon icon='trash' />\r\n                        </a>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                );\r\n              } else {\r\n                return 'Cart is Empty';\r\n              }\r\n            })}\r\n\r\n            <div className='acts clearfix'>\r\n              {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t</MDBRow> */}\r\n              <MDBRow className='actsrowcart'>\r\n                <MDBCol md='5' className='total'>\r\n                  TOTAL\r\n                </MDBCol>\r\n                <MDBCol md='7' className='total'>\r\n                  &#8369;\r\n                  {this.state.totalPrice > 0\r\n                    ? Number(parseFloat(this.state.totalPrice)).toLocaleString(\r\n                        'en'\r\n                      )\r\n                    : Number(parseFloat(0)).toLocaleString('en')}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <div className='actsbtn'>\r\n                    <MDBBtn\r\n                      color='#fae933'\r\n                      size='sm'\r\n                      className='recieve'\r\n                      disabled={this.state.totalPrice > 0 ? false : true}\r\n                      onClick={() => {\r\n                        this.addOrder();\r\n                      }}\r\n                    >\r\n                      Checkout\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Cart from './Cart';\r\nimport notify from '../components/Notif';\r\nimport moment from 'moment'\r\nclass AddToBag extends Component {\r\n  state = {\r\n    modal1: false,\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = () => {\r\n    let nr = 1;\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  addTocart = () => {\r\n    let {\r\n      startingStore: {cart, addToCart},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    cart.setProperty('artistName', this.props.cartData.artistName);\r\n    cart.setProperty('artworkName', this.props.cartData.artName);\r\n    cart.setProperty('artworkImg', this.props.cartData.artworkImg);\r\n    cart.setProperty('artworkPrice', this.props.cartData.artPrice);\r\n    cart.setProperty(\r\n      'artworkPaymentAmount',\r\n      parseFloat(this.props.cartData.artPrice) *\r\n        parseFloat(cart.artworkQuantity)\r\n    );\r\n    cart.setProperty('accID', userData.accID);\r\n    cart.setProperty('dateOfTransaction', moment().format('MMM/DD/YYYY'))\r\n    if (cart.artworkQuantity !== '' || cart.artworkQuantity !== null) {\r\n      notify('success', 'Artwork added successfully');\r\n      addToCart();\r\n    } else {\r\n      notify('error', 'Unsuccessful adding artwork');\r\n      // ari di butang ang alert!!!!!!!!!!!!!!!!!!!!!!\r\n    }\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      // let data = this.state.selected.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedArray.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      // let indexes = this.state.selectedCheckBox.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedCheck.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n  addOrder = () => {\r\n    \r\n    let {\r\n      startingStore: {order, addOrder,notif,addNotif},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let date = new Date();\r\n\r\n    order.setProperty(\r\n      'orderID',\r\n      `${getHash(date.getFullYear())}-${Math.floor(1000 + Math.random() * 9000)}`\r\n    );\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('artworkPaymentAmount',this.state.totalPrice)\r\n    addOrder();\r\n\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient','admin-001')\r\n    notif.setProperty('notifSubject','Order')\r\n    notif.setProperty('notifMsg',`${userData.accFname} placed an order`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif();\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n \r\n    let {\r\n      startingStore: {listOfUserCart},\r\n    } = this.props;\r\n\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          disabled={!this.props.disable}\r\n          onClick={() => {\r\n            this.toggle();\r\n            this.addTocart();\r\n          }}\r\n       color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n        >\r\n          Add to Bag\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => {\r\n              this.toggle();\r\n            }}\r\n          >\r\n            <h3>Cart</h3>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='cartord'>\r\n            <Cart />\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AddToBag)));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBModal} from 'mdbreact';\r\n\r\nclass ViewRoom extends Component {\r\n\r\n  state = {\r\n    modal14: false,\r\n\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='viewroom' >\r\n        <a\r\n     \r\n          href='#!'\r\n          onClick={this.toggle(14)}\r\n          className='viewinroom'\r\n          color='transparent'\r\n      \r\n        >\r\n          View in Room\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='room'\r\n        >\r\n          <div className='living-con'>\r\n            <div className='frame' >\r\n            <p>{this.props.selectedsize}</p>\r\n              <img src={this.props.img} alt=''   \r\n              style={{margin:'auto',width:this.props.Awidth,height:this.props.Aheight}}\r\n          \r\n              />\r\n           \r\n            </div>\r\n       \r\n          </div>\r\n          <MDBBtn\r\n            onClick={this.toggle(14)}\r\n            className='closeviewinroom'\r\n            color='transparent'\r\n          >\r\n            Close \r\n          </MDBBtn>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewRoom;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from \"antd\";\r\nimport { MDBBtn, MDBInput, MDBLink, MDBModal, MDBModalHeader } from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FbLogin from \"../FbLogin\";\r\nimport GgLogin from \"../GoogleLogin/\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass ATLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = \"modal\" + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = \"\";\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n\r\n    let {\r\n      startingStore: {\r\n        loginAccount,\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.2)\r\n            .then(() => message.error(\"Login Unsuccessful\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/Home\");\r\n        }, 500);\r\n      } else if (\r\n        // (typeof res === 'string')\r\n        res === 4\r\n      ) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push(\"/ArtistHome\");\r\n        }, 500);\r\n      } else if (res === 5) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() =>\r\n              message.error(\"Please wait for your account confirmation\", 1)\r\n            );\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 6) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Your account request rejected\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Username or password is incorrect\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n   \r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n                          <MDBLink to='#' style={{marginTop:'-6px'}}  onClick={this.toggle(1)}>Add to List</MDBLink>\r\n                     \r\n  \r\n      <div className=\"btnmodal\">\r\n        {/* <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color=\"#FAE933\"\r\n          className=\"btn btnBlack loginbtn\"\r\n        >\r\n          Login\r\n        </MDBBtn> */}\r\n\r\n       \r\n\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className=\"modalform modlog\"\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className=\"login\">\r\n            <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(ATLogin)));\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GoogleLogin from '.././GoogleLogin/index';\r\nimport FbLogin from '../FbLogin';\r\n\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getArtistFollowArtwork(account.accEmailAddress);\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n\r\n         <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          \r\n          color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n         >\r\n         Add to Bag\r\n         </MDBBtn>\r\n        \r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  className='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label className='custom-control-label' htmlFor='rempass' style={{marginBottom:'10px'}}> \r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GoogleLogin />\r\n         \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { message } from \"antd\";\r\nimport { MDBBtn, MDBInput, MDBModal, MDBModalHeader ,MDBIcon} from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FbLogin from \"./../FbLogin\";\r\nimport GgLogin from \"../GoogleLogin/\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal: false,\r\n    open: false,\r\n    verify: true,\r\n    newpass:'',\r\n    confpass:'',\r\n  };\r\n\r\n  toggle = () => () => {\r\n  \r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  \r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = \"\";\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n\r\n    let {\r\n      startingStore: {\r\n        loginAccount,\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.2)\r\n            .then(() => message.error(\"Login Unsuccessful\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/Home\");\r\n        }, 500);\r\n      } else if (\r\n        // (typeof res === 'string')\r\n        res === 4\r\n      ) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1)\r\n            .then(() => message.success(\"Welcome to Art,Basically!\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push(\"/ArtistHome\");\r\n        }, 500);\r\n      } else if (res === 5) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() =>\r\n              message.error(\"Please wait for your account confirmation\", 1)\r\n            );\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else if (res === 6) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Your account request rejected\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading(\"Signing in..\", 1.5)\r\n            .then(() => message.error(\"Username or password is incorrect\", 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n   \r\n    let {\r\n      startingStore: { account, listOfUsers ,editAccount},\r\n    } = this.props;\r\n\r\n    let handleClickOpen = () => {\r\n      this.setState({\r\n        modal14: false,\r\n        open: true,\r\n      });\r\n    };\r\n\r\n    let ChangePass= () => {\r\nlet getuser = listOfUsers.filter(data => data.accEmailAddress === account.accEmailAddress && data.accContact === account.accContact).map(acc => acc._id)\r\n\r\n      if (this.state.newpass === this.state.confpass){\r\n        account.setProperty('_id',getuser)\r\n        account.setProperty('password',this.state.newpass)\r\n          editAccount()\r\n\r\n          const success = () => {\r\n            message\r\n              .loading(\"\", 1)\r\n              .then(() =>\r\n                message.error(\"Password successfully modified\", 2)\r\n              );\r\n          };\r\n          success()\r\n          setTimeout(() => {\r\n            this.setState({\r\n              modal14: false,\r\n              open: false,\r\n            });\r\n          },400)\r\n      }else{\r\n        const error = () => {\r\n          message\r\n            .loading(\"\", 1)\r\n            .then(() =>\r\n              message.error(\"Please check your password\", 2)\r\n            );\r\n        };\r\n        error()\r\n      }\r\n\r\n\r\n\r\n      // this.setState({\r\n      //   open: false,\r\n      // });\r\n    };\r\n\r\n    let handleClose= () => {\r\n\r\n      this.setState({\r\n        open: false,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n             {/* <div > <MDBIcon icon='plus'  onClick={this.toggle()}  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'1px'}}/><p style={{fontSize:'9px',color:'#4285F4',marginTop:'3px'}}>Follows</p></div> */}\r\n       \r\n       \r\n          <MDBIcon icon='plus' onClick={this.toggle()}   style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'4px'}}/><p onClick={this.toggle()}  style={{fontSize:'9px',color:'#4285F4',marginTop:'3px'}}>Follow</p>\r\n       \r\n        <div className=\"btnmodal\"> \r\n\r\n       \r\n\r\n        <MDBModal\r\n          isOpen={this.state.modal}\r\n        \r\n          centered\r\n          className=\"modalform modlog\"\r\n        >\r\n          <MDBModalHeader toggle={this.toggle()}></MDBModalHeader>\r\n          <div className=\"login\">\r\n            <form\r\n              className=\"needs-validation animated zoomIn\"\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img\r\n                alt=\"Art, Basically Logo\"\r\n                className=\"img-fluid\"\r\n                src=\"https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png\"\r\n              />\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"email\"\r\n                  label=\"Email Address\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      \"accEmailAddress\",\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className=\"adloginpt clearfix\">\r\n                <MDBInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  className=\"loginadmin\"\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty(\"password\", password.target.value)\r\n                  }\r\n                >\r\n                  <div className=\"invalid-feedback\">\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div\r\n                className=\"rem custom-control custom-checkbox\"\r\n                style={{ float: \"left\" }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"rempass\"\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"rempass\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <label\r\n                onClick={handleClickOpen}\r\n                style={{ color: \"#e74c3c\", float: \"right\" }}\r\n              >\r\n                Forgot password?\r\n              </label>\r\n\r\n              <MDBBtn type=\"submit\" className=\"admloginbtn\" color=\"transparent\">\r\n                LOGIN\r\n              </MDBBtn>\r\n\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <FbLogin />\r\n              </div>\r\n              <div style={{ marginTop: \"-30px\" }}>\r\n                <GgLogin />\r\n              </div>\r\n              {/* <MDBNavLink to='#' onClick={handleClickOpen} style={{fontSize:'10px',padding:3}}>Forgot password?</MDBNavLink> */}\r\n            </form>\r\n          </div>\r\n        </MDBModal>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            Forgot Password?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              <MDBInput\r\n                label=\"Email\"\r\n                \r\n                type=\"text\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(email) =>\r\n                  account.setProperty(\"accEmailAddress\", email.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your email address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Contact No.\"\r\n                type=\"number\"\r\n                style={{ width: \"95%\" }}\r\n                onChange={(contact) => {\r\n                  account.setProperty(\"accContact\", contact.target.value);\r\n                  if (\r\n                    listOfUsers.filter(\r\n                      (acc) =>\r\n                        acc.accEmailAddress === account.accEmailAddress &&\r\n                        acc.accContact === account.accContact\r\n                    ).length != 0\r\n                  ) {\r\n                    this.setState({\r\n                      verify: false,\r\n                    });\r\n                  } else {\r\n                    console.log('false');\r\n                  }\r\n                }}\r\n                required\r\n              >\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter your contact number.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                required\r\n                onChange={(e)=>{this.setState({newpass: e.target.value })}}\r\n              ></MDBInput>\r\n\r\n              <MDBInput\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                style={{ width: \"95%\" }}\r\n                disabled={this.state.verify}\r\n                onChange={(e)=>{this.setState({confpass: e.target.value })}}\r\n                required\r\n              ></MDBInput>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={()=>ChangePass()}\r\n              style={{ color: \"white\", backgroundColor: \"#FAE933\" }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(Login)));\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { message, Skeleton } from \"antd\";\r\nimport { MDBBtn, MDBIcon, MDBLink, MDBNavLink } from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport moment from \"moment\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n} from \"react-share\";\r\nimport AddToBag from \"../../components/AddToBag\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport ViewRoom from \"../../components/ViewRoom\";\r\n\r\nimport ATLogin from \"./../../components/ATLogin\";\r\nimport LoginCart from \"./../../components/CartLogin/\";\r\nimport FollowLogin from \"./../../components/FollowLogin\";\r\n\r\nclass SingleArt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: \"\",\r\n      artistImg: \"\",\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: \"\",\r\n      accDescription: \"\",\r\n      accFollowers: \"\",\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: \"\",\r\n      isMounted: false,\r\n      condition: false,\r\n      isToggleOn: true,\r\n      selectedSize: \"AP - portrait, 1.5x2\",\r\n      height: \"2cm\",\r\n      width: \"1.5cm\",\r\n      framingOption: false,\r\n      artworkInfo:[],\r\n\r\n    \r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0)\r\n\r\n\r\n    if (this.props.location.state){\r\n      this.setState({\r\n        artworkInfo: this.props.location.state.artID\r\n      });\r\n}\r\n\r\n   \r\n    let {\r\n      startingStore: {\r\n        getArtistArtwork,\r\n        getSingleArtists,\r\n        getSingleArtworkInfo,\r\n        getToCart,\r\n        getPrintSize,\r\n        getPrintOption,\r\n        getAllArtworks,\r\n      },\r\n    } = this.props;\r\n    getSingleArtworkInfo(this.props.match.params.id);\r\n    getSingleArtists(this.props.match.params.name);\r\n    getArtistArtwork(this.props.match.params.name);\r\n    getToCart();\r\n    getPrintSize();\r\n    getPrintOption();\r\n    getAllArtworks();\r\n\r\n  }\r\n\r\n  checkFollower = (follower) => {\r\n    if (follower !== undefined && follower[0] !== \"\") {\r\n      return follower.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  followArtist = () => {\r\n    message.loading({ content: \"Loading...\" });\r\n    setTimeout(() => {\r\n      message.success({ content: \"Loaded!\", duration: 2 });\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const getLastItem = thePath => thePath.substring(thePath.lastIndexOf('/') + 1)\r\n   \r\n    let logged = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    let {\r\n      startingStore: {\r\n        cart,\r\n        listOfSingleArtwork,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n        followArtist,\r\n        listRelatedWorkByCategory,\r\n        listOfMyLists,\r\n        listOfPrintSize,\r\n        addMyLists,\r\n        mylists,\r\n        addArtShare,\r\n        artshare,\r\n        listOfPrintoption,\r\n        listOfArtworks,\r\n      },\r\n    } = this.props;\r\n\r\n\r\n   let artworkData = listOfArtworks.filter(data => data.artworkID == decodeURI(window.location.href).split('/').slice(-2)[0])\r\n\r\n  \r\n \r\n\r\n    let changeMaterial = (data) => {\r\n      if (\r\n        data === \"Print on Sintra (Matte)\" ||\r\n        data === \"Print on Sintra (Glossy)\"\r\n      ) {\r\n        this.setState({\r\n          framingOption: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          framingOption: false,\r\n        });\r\n      }\r\n\r\n      cart.setProperty(\"artworkMaterial\", data);\r\n    };\r\n\r\n    const options = [];\r\n    for (let i = 1; i <= 50; i++) {\r\n      options.push(i);\r\n    }\r\n\r\n    let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\r\n    let changeSize = (size) => {\r\n      cart.setProperty(\"artworkSize\", size);\r\n\r\n      if (size === \"AP - portrait, 1.5x2\") {\r\n        this.setState({\r\n          height: \"2cm\",\r\n          width: \"1.5cm\",\r\n          selectedSize: \"AP - portrait, 1.5x2\",\r\n        });\r\n      } else if (size === \"AP - portrait, 3x4\") {\r\n        this.setState({\r\n          height: \"4cm\",\r\n          width: \"3cm\",\r\n          selectedSize: \"AP - portrait, 3x4\",\r\n        });\r\n      } else if (size === \"B - square, 2x2\") {\r\n        this.setState({\r\n          height: \"2cm\",\r\n          width: \"2cm\",\r\n          selectedSize: \"B - square, 2x2\",\r\n        });\r\n      } else if (size === \"B - square, 4x4\") {\r\n        this.setState({\r\n          height: \"4cm\",\r\n          width: \"4cm\",\r\n          selectedSize: \"B - square, 4x4\",\r\n        });\r\n      } else if (size === \"CP - portrait, 2x3\") {\r\n        this.setState({\r\n          height: \"3cm\",\r\n          width: \"2cm\",\r\n          selectedSize: \"CP - portrait, 2x3\",\r\n        });\r\n      } else if (size === \"CP - portrait, 4x6\") {\r\n        this.setState({\r\n          height: \"6cm\",\r\n          width: \"4cm\",\r\n          selectedSize: \"CP - portrait, 4x6\",\r\n        });\r\n      } else if (size === \"DL - landscape, 2x1.5\") {\r\n        this.setState({\r\n          height: \"1.5cm\",\r\n          width: \"2cm\",\r\n          selectedSize: \"DL - landscape, 2x1.5\",\r\n        });\r\n      } else if (size === \"DL - landscape, 4x3\") {\r\n        this.setState({\r\n          height: \"3cm\",\r\n          width: \"4cm\",\r\n          selectedSize: \"DL - landscape, 4x3\",\r\n        });\r\n      } else if (size === \"EL - landscape, 3x2\") {\r\n        this.setState({\r\n          height: \"2cm\",\r\n          width: \"3cm\",\r\n          selectedSize: \"EL - landscape, 3x2\",\r\n        });\r\n      } else if (size === \"EL - landscape, 6x4\") {\r\n        this.setState({\r\n          height: \"4cm\",\r\n          width: \"6cm\",\r\n          selectedSize: \"EL - landscape, 6x4\",\r\n        });\r\n      }\r\n    };\r\n\r\n    let addtoList = (rtwrk) => {\r\n      let getmyList = listOfMyLists.filter(\r\n        (art) => art.artworkID === rtwrk.artworkID\r\n      ).length;\r\n\r\n      if (getmyList === 0) {\r\n        mylists.setProperty(\r\n          \"mylistsID\",\r\n          `${rtwrk.artworkID.slice(0, 4)}-${Math.floor(\r\n            1000 + Math.random() * 900\r\n          )}`\r\n        );\r\n        mylists.setProperty(\"accID\", logged.accID);\r\n        mylists.setProperty(\"artworkID\", rtwrk.artworkID);\r\n\r\n        mylists.setProperty(\"artName\", rtwrk.artName);\r\n        mylists.setProperty(\"artTheme\", rtwrk.artTheme);\r\n        mylists.setProperty(\"artStyle\", rtwrk.artStyle);\r\n        mylists.setProperty(\"artPrice\", rtwrk.artPrice);\r\n        mylists.setProperty(\"artistID\", rtwrk.accID);\r\n        mylists.setProperty(\"artistName\", rtwrk.artistName);\r\n        mylists.setProperty(\"artworkDateCreated\", rtwrk.artworkDateCreated);\r\n        mylists.setProperty(\"artType\", rtwrk.artType);\r\n        mylists.setProperty(\"artworkImg\", rtwrk.artworkImg);\r\n\r\n        addMyLists();\r\n\r\n        const success = () => {\r\n          message\r\n            .loading(\"\", 0.5)\r\n            .then(() => message.success(\"Artwork added to your list\", 3));\r\n        };\r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      } else if (getmyList === 1) {\r\n        const success = () => {\r\n          message\r\n            .loading(\"\", 0.5)\r\n            .then(() => message.success(\"Artwork already on your list\", 3));\r\n        };\r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n    };\r\n    let artworkList = listofArtistArtwork.map((data) => data.artSize);\r\n\r\n    let countShares = () => {\r\n      artshare.setProperty(\r\n        \"shareID\",\r\n        `${logged.accID}-${Math.floor(100 + Math.random() * 900)}`\r\n      );\r\n      artshare.setProperty(\"userID\", logged.accID);\r\n\r\n      artshare.setProperty(\"social\", \"Facebook\");\r\n      artshare.setProperty(\"dateTime\", moment().format(\"MMM/DD/YYYY\"));\r\n      addArtShare();\r\n    };\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        <Navbar />\r\n        <div className=\"maincon con\">\r\n          <div className=\"artcon\">\r\n            <div className=\"clearfix\">\r\n              <div className=\"left\">\r\n                <div className=\"artworkInfo\">\r\n                  <h2 className=\"title artistname\">\r\n                    {artworkData[0] !== undefined ? (\r\n                      artworkData[0].artistName\r\n                    ) : (\r\n                      <Fragment>\r\n                  \r\n                      <Skeleton/>\r\n                      </Fragment>\r\n                    )}\r\n                    <MDBBtn\r\n                      color=\"primary\"\r\n                      style={{\r\n                        borderRadius: \"5px\",\r\n                        width: \"50px\",\r\n                        height: \"25px\",\r\n                        fontSize: \"8px\",\r\n                        margin: 0,\r\n                        padding: \"2px\",\r\n                        marginLeft: \"16px\",\r\n                      }}\r\n                      outline\r\n                      title={this.state.isToggleOn ? \"Follow\" : \"Unfollow\"}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {mydata === null ? (\r\n                        <FollowLogin />\r\n                      ) : this.state.isToggleOn === null ? (\r\n                        <div>\r\n                          {\" \"}\r\n                          <MDBIcon\r\n                            icon=\"plus\"\r\n                            style={{\r\n                              float: \"left\",\r\n                              fontSize: \"9px\",\r\n                              color: \"#4285F4\",\r\n                              marginTop: \"2px\",\r\n                            }}\r\n                          />\r\n                          <p style={{ fontSize: \"9px\", color: \"#4285F4\" }}>\r\n                            Follow\r\n                          </p>\r\n                        </div>\r\n                      ) : (\r\n                        \"Following\"\r\n                      )}\r\n                    </MDBBtn>\r\n                  </h2>\r\n                  <span className=\"arttitle\">\r\n                    {artworkData[0] !== undefined ? (\r\n                      artworkData[0].artName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    ,&nbsp;\r\n                  </span>\r\n                  <span className=\"year\">\r\n                    {artworkData[0] !== undefined ? (\r\n                      artworkData[0].artworkDateCreated\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </span>\r\n                  <div className=\"artImg\">\r\n                    <img\r\n                      src={\r\n                        artworkData[0] !== undefined ? (\r\n                          artworkData[0].artworkImg\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n\r\n                    {artworkData[0] !== undefined ? (\r\n                      <ul className=\"artOpt\">\r\n                        {\" \"}\r\n                        {logged === null ? (\r\n                          <li>\r\n                            <ATLogin />\r\n                          </li>\r\n                        ) : (\r\n                          <li\r\n                            onClick={() => {\r\n                              addtoList(artworkData[0]);\r\n                            }}\r\n                          >\r\n                            <MDBLink\r\n                              to=\"#\"\r\n                              onClick={() => {\r\n                                addtoList(artworkData[0]);\r\n                              }}\r\n                              style={{ marginTop: \"-6px\" }}\r\n                            >\r\n                              Add to List\r\n                            </MDBLink>\r\n                          </li>\r\n                        )}\r\n\r\n                        <li  >\r\n                       \r\n                          <ViewRoom\r\n                       \r\n                            img={artworkData[0].artworkImg}\r\n                            Aheight={this.state.height}\r\n                            Awidth={this.state.width}\r\n                            selectedsize={this.state.selectedSize}\r\n                          />\r\n                        \r\n                        </li>{\" \"}\r\n                      </ul>\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    {logged === null ? (\r\n                      <Fragment></Fragment>\r\n                    ) : (\r\n                      <div style={{ marginTop: \"10px\" }}>\r\n                        <FacebookShareButton\r\n                          url={window.location.href}\r\n                          appId=\"216207193165878\"\r\n                          pageId=\"301933277234280\"\r\n                          subject=\"Share\"\r\n                          hashtag=\"#ArtBasically\"\r\n                          style={{ marginRight: \"8px\" }}\r\n                          onShareWindowClose={() => countShares()}\r\n                        >\r\n                          <FacebookIcon size={40} round={true} />\r\n                        </FacebookShareButton>\r\n\r\n                        <EmailShareButton url={window.location.href}>\r\n                          <EmailIcon size={40} round={true} />\r\n                        </EmailShareButton>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"abtArtist\">\r\n                    <h4>About the Artist</h4>\r\n                    <span>\r\n                      {artworkData[0] !== undefined ? (\r\n                        getLastItem(decodeURI(window.location.href))\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                      , b.\r\n                      {listofArtistInfo.birthYear}.\r\n                    </span>\r\n                    <p>{listofArtistInfo.accDescription}</p>\r\n\r\n                    \r\n                        <Link\r\n                              to={{\r\n                                pathname: `/Artist/${getLastItem(decodeURI(window.location.href))}`,\r\n                                state: {\r\n                                  artistName: getLastItem(decodeURI(window.location.href)),\r\n                                 \r\n                                },\r\n                              }}\r\n                            >\r\n                      Visit artist profile\r\n                      <MDBIcon icon=\"caret-right\" />\r\n                      </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"right\">\r\n                <h2>\r\n                  Customize your <br /> order.\r\n                </h2>\r\n\r\n                <p\r\n                  className=\"inlinep\"\r\n                  style={{ marginTop: \"-10px\", paddingBottom: \"22px\" }}\r\n                >\r\n                  Can't Decide? <MDBNavLink to=\"#!\">We can help.</MDBNavLink>\r\n                </p>\r\n                <form\r\n                  onSubmit={this.submitHandler}\r\n                  className=\"regform uploadform custform\"\r\n                >\r\n                  <div style={{ marginBottom: \"16px\" }}>\r\n                    <span>Material</span>\r\n                    <select\r\n                      onChange={(artworkMaterial) =>\r\n                        changeMaterial(artworkMaterial.target.value)\r\n                      }\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Choose Material\r\n                      </option>\r\n                      {listOfPrintoption\r\n                        .filter((data) => data.printCat === \"material\")\r\n                        .map((mat) => {\r\n                          return (\r\n                            <option key={mat.optionID} value={mat.printOptions}>\r\n                              {mat.printOptions}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                    <a className=\"bluelink\" href=\"\">\r\n                      What material is the best for you?\r\n                    </a>\r\n                  </div>\r\n\r\n                  <div style={{ marginBottom: \"16px\" }}>\r\n                    <span>Size</span>\r\n\r\n                    <select\r\n                      onChange={(Asize) => changeSize(Asize.target.value)}\r\n                    >\r\n                      {listOfPrintSize.map((sizes) => (\r\n                        <option key={sizes.printSize} value={sizes.printSize}>\r\n                          {sizes.printSize == artworkList[0]\r\n                            ? `${sizes.printSize} Recommended`\r\n                            : sizes.printSize}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <a className=\"bluelink\" href=\"\">\r\n                      Which size best fits your needs?\r\n                    </a>\r\n                  </div>\r\n\r\n                  <div style={{ marginBottom: \"16px\" }}>\r\n                    <span>Framing Options</span>\r\n                    <select\r\n                      disabled={this.state.framingOption}\r\n                      onChange={(artworkFramingOptions) =>\r\n                        cart.setProperty(\r\n                          \"artworkFramingOptions\",\r\n                          artworkFramingOptions.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Choose Framing\r\n                      </option>\r\n                      {listOfPrintoption\r\n                        .filter((data) => data.printCat === \"material\")\r\n                        .map((mat) => {\r\n                          return (\r\n                            <option key={mat.optionID} value={mat.printOptions}>\r\n                              {mat.printOptions}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                    <a className=\"bluelink\" href=\"\">\r\n                      Which framing option is best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div style={{ marginBottom: \"16px\" }}>\r\n                    <span>Quantity</span>\r\n                    {listOfSingleArtwork.artType === \"Original\" ? (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            \"artworkQuantity\",\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option selected value=\"\">\r\n                          Choose Quantity\r\n                        </option>\r\n                        <option value=\"1\">1</option>\r\n                      </select>\r\n                    ) : (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            \"artworkQuantity\",\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        {options.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    )}\r\n                    <a className=\"blacklink\" href=\"\">\r\n                      This is part of a limited edition set of 12.\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Your total is</span>\r\n                    <span className=\"nopad\">\r\n                      PHP{\" \"}\r\n                      {Number(\r\n                        parseFloat(\r\n                          artworkData[0] !== undefined\r\n                            ? parseFloat(artworkData[0].artPrice) *\r\n                                parseFloat(cart.artworkQuantity)\r\n                            : \"0.00\"\r\n                        )\r\n                      ).toLocaleString(\"en\")}\r\n                    </span>\r\n                    <a className=\"bluelink\" href=\"\">\r\n                      How long will your order arrive?\r\n                    </a>\r\n                    <div style={{ float: \"right\" }}>\r\n                      {mydata === null ? (\r\n                        <LoginCart />\r\n                      ) : (\r\n                        <AddToBag\r\n                          cartData={artworkData[0]}\r\n                          disable={\r\n                            cart.artworkFramingOptions !== \"\" ? true : false\r\n                          }\r\n                        />\r\n                      )}\r\n\r\n                      {/* <ViewCart cartData={listOfSingleArtwork[0]} /> */}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className=\"relcat\">\r\n            <h3>\r\n              Other Works by{\" \"}\r\n              {artworkData[0] !== undefined ? (\r\n                artworkData[0].artistName\r\n              ) : (\r\n                <Skeleton active />\r\n              )}\r\n            </h3>\r\n            <a href=\"#!\" className=\"seemore\">\r\n              See More &nbsp;\r\n              <MDBIcon icon=\"caret-right\" />\r\n            </a>\r\n            <ul className=\"col3img clearfix\">\r\n              {artworkData[0] !== undefined ? (\r\n                listOfArtworks\r\n                  .filter((data) => data.artistName == artworkData[0].artistName && data.artworkStatus == \"Active\" && data.artworkID !== this.props.match.params.id)\r\n                  .reverse()\r\n                  .slice(0, 6)\r\n                  .map((art) => {\r\n                   \r\n                    \r\n                      return (\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <div className=\"artlabel\">\r\n                              <span className=\"new\">NEW</span>\r\n                              <span className=\"hot\">HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt=\"\" />\r\n                            </Link>\r\n                          </a>\r\n                          <div className=\"artistinfo\">\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    \r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className=\"relcat\">\r\n            <h3>Related Works by Category</h3>\r\n            <a href=\"#!\" className=\"seemore\">\r\n              See More &nbsp;\r\n              <MDBIcon icon=\"caret-right\" />\r\n            </a>\r\n            <ul className=\"col3img clearfix\">\r\n              {listOfArtworks !== undefined ? (\r\n                listOfArtworks\r\n                  .filter((data) => data.artTheme[0] == artworkData[0].artTheme && data.artworkID !== this.props.match.params.id)\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                  \r\n                      return (\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <div className=\"artlabel\">\r\n                              <span className=\"new\">NEW</span>\r\n                              <span className=\"hot\">HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt=\"\" />\r\n                            </Link>\r\n                          </a>\r\n                          <div className=\"artistinfo\">\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    \r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n         \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject(\"startingStore\")(observer(SingleArt)));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\n\r\nimport {message} from 'antd';\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n      minValue: 0,\r\n      maxValue: 10,\r\n    };\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    //new\r\n    this.setState({\r\n      minValue: (value - 1) * numEachPage,\r\n      maxValue: value * numEachPage,\r\n    });\r\n  };\r\n  componentDidMount(){\r\n    let{startingStore:\r\n      {\r\n        // getAllArtworks,\r\n      getArtworkInfo,getSaleArts,getLatestArts}}=this.props;\r\n    // getAllArtworks();\r\n    getArtworkInfo()\r\n    getSaleArts()\r\n    getLatestArts()\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nif (mydata === null){\r\n\r\n}else{\r\n  let{startingStore:{getMyLists}}=this.props;\r\n    getMyLists()\r\n  }\r\n\r\n  \r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfArtworks,\r\n       \r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        listOfMyLists,\r\n        mylists,\r\n        deleteMyLists,\r\n        addMyLists,\r\n        listOfSaleArts\r\n     \r\n      },\r\n    } = this.props;\r\n\r\n\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',mydata.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n\r\n\r\n    let removeToLists = (list)=>{\r\n\r\nmylists.setProperty('mylistsID',list.mylistsID)\r\n\r\n\r\ndeleteMyLists()\r\n\r\nconst success = () => {\r\n  message\r\n    .loading('', 0.5)\r\n    .then(() => message.success('Artwork removed to your list', 3));\r\n};\r\nsetTimeout(() =>{\r\n  success()\r\n},100)\r\n\r\nsetTimeout(()=>{\r\n  window.location.reload(false);\r\n},1500)\r\n    }\r\n\r\n\r\n    \r\n\r\n    let artworks = () => {\r\n      if (this.props.type === 'foryou') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName,artID:image.artworkID}\r\n                  }}\r\n                >\r\n               {/* <Image publicId={image.artworkImg} secure=\"true\"></Image>    */}\r\n               <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName,artID:image.artworkID}\r\n                  }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n                  }}\r\n                      \r\n                     \r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                \r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'bestseller') {\r\n        return toJS(listOfArtworks)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              \r\n              <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                  className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n           \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n           \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'discover') {\r\n        return toJS(listOfArtworks)\r\n          \r\n          .map((image,i) => {\r\n            \r\n            return(\r\n\r\n            <li key={i}>\r\n            \r\n            <Link\r\n                  to={{  pathname: `/Art/${image.artworkID}/${image.artistName}`,}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n             \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n          \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                    \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          )});\r\n      } else if (this.props.type === 'categoriesfollow') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <Link\r\n                  to={{ pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n             \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n            \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                  \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'artistyoufollow') {\r\n        return toJS(listOfArtistFollowed)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n            <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n             \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n            \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'latest') {\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'Approved' || art.artworkStatus === 'Active'))\r\n         .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n                     <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n           \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n              \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                   \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                     \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }else if(this.props.type === 'yourlists'){\r\n        return toJS(listOfMyLists.filter(art=> art.accID === mydata.accID))\r\n        .reverse()\r\n         .map((image,i) => (\r\n           <li key={i}>\r\n               <Link\r\n                 to={{ pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n               <div className='artlabel'>\r\n                 <span className='new'>NEW</span>\r\n                 <span className='hot'>HOT</span>\r\n                 <span className='type'>\r\n                   {image.artType === 'Secondary'\r\n                     ? 'Second Edition'\r\n                     : 'Original'}\r\n                 </span>\r\n               </div>\r\n              \r\n                 <img src={image.artworkImg} alt='artwork' />\r\n           \r\n             </Link>\r\n             <div className='artistinfo clearfix pad10'>\r\n      \r\n                      <Link\r\n                      to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                  \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                 to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                  \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n           \r\n           \r\n           <MDBBtn\r\n             className='ifollow'\r\n             color='transparent'\r\n             \r\n             rounded\r\n             style={{color:'red'}}\r\n             onClick={() => removeToLists(image)}\r\n           >\r\n             \r\n             <MDBIcon icon='minus' style={{color:'red'}}/>\r\n           </MDBBtn>\r\n         </div>\r\n           </li>\r\n         ));\r\n      }else if (this.props.type === 'onSale') {\r\n    \r\n        let a =listOfSaleArts.filter(art=> art.artworkStatus === 'Active')\r\n        return toJS(listOfSaleArts.filter(art=> art.artworkStatus === 'Active'))\r\n         \r\n          .map((image,i) => (\r\n            <li key={i}>\r\n               <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                <div className='artlabel'>\r\n                  \r\n                  <span className='hot'>On Sale</span>\r\n                  <span className='new'>20% Off</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n            \r\n                  <img src={image.artworkImg} alt='artwork' />\r\n                </Link>\r\n           \r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <Link\r\n                  to={{\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                      \r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </Link>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                    <Link\r\n                  to={{\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                    \r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.price.length !== 0 ? (\r\n          <ul className='col3img clearfix'>\r\n            {this.props.price.map((image,i) => {\r\n              return (\r\n                <li key={i}>\r\n                 <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n               \r\n                      <img src={image.artworkImg} alt='artwork' />\r\n                    </Link>\r\n                 \r\n                  <div className='artistinfo clearfix pad10'>\r\n              \r\n                  <Link\r\n                      to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName\r\n                      }\r\n                 \r\n                  }}\r\n                >\r\n                     <p>{image.artistName}</p>\r\n                 \r\n                </Link>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n        )}\r\n\r\n        {/* <List defaultCurrent={1} pageSize={10} dataSource={listOfArtworks}/> */}\r\n\r\n        <div>\r\n          <Pagination //new\r\n            defaultCurrent={1}\r\n            defaultPageSize={numEachPage}\r\n            onChange={this.handleChange}\r\n            total={\r\n              this.props.type.length !== 0\r\n                ? this.props.type.length\r\n                : artworks.length\r\n            }\r\n            //\r\n          />\r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter ,  listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Discover Emerging Artists </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }else if (type === 'yourlists'){\r\n        return <h3>My Lists</h3>;\r\n      }else{\r\n        console.log('error')\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n                <h4>Search by Filter</h4>\r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n  \r\n\r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li className='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n           \r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { BackTop, Pagination } from 'antd';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n    };\r\n  }\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  executeOnClick(isExpanded) {\r\n    console.log(isExpanded);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfUsers, followArtist, listofArtistInfo},\r\n    } = this.props;\r\n    let listOfArtists = listOfUsers.filter((artist) => {\r\n      if (artist.accessType === 'Artist') {\r\n        return artist;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artists'>\r\n          <section className='latest'>\r\n            <h3 style={{textAlign: 'center', padding: '20px 20px 50px 20px'}}>\r\n              All Artists\r\n            </h3>\r\n            <ul className='col3img colartists clearfix'>\r\n              {listOfArtists.map((image) => (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <img\r\n                      alt=''\r\n                      src={image.accImg}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>\r\n                      {image.accFname} {image.accLname}\r\n                    </p>\r\n                    {/* <a href=\"\" className=\"seeworks\"\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: '/Artist',\r\n                          state: {\r\n                            \"artistName\": this.state.artworkInfo[0] !== undefined ? this.state.artworkInfo[0].artistName : \"\",\r\n                            \"accImg\": this.state.artistImg,\r\n                            \"artistDescription\": this.state.accDescription,\r\n                            \"birthYear\": this.state.birthYear,\r\n                            \"accFollowers\": this.state.accFollowers\r\n                          }\r\n                        })\r\n                      }}\r\n                  > See Works &rarr; </a> */}\r\n                    <a\r\n                      href='#!'\r\n                      className='seeworks'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      See Works &rarr;\r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      \r\n                      rounded\r\n                      onClick={() => followArtist(listofArtistInfo._id)}\r\n                    >\r\n                      <MDBIcon icon='plus' />\r\n                    </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n              {/* <li>\r\n                <a href=\"\" className=\"artlink\">\r\n                  <img src={artist} />\r\n                </a>\r\n                <a className=\"artistinfo clearfix pad10\">\r\n                  <p>Jane Doe</p>\r\n                  <MDBNavLink to=\"#!\" className=\"seeworks\"> See Works &rarr; </MDBNavLink>\r\n                  <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </section>\r\n\r\n          <Pagination dataSource={listOfArtists} total={listOfArtists} />\r\n\r\n          <div className='bttop clearfix'>\r\n            {/* <MDBNavLink to=\"/Upload\" className=\"btnYellow\">Add Yours</MDBNavLink> */}\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!'>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artists));\r\n","import { MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass CProfile extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts()\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listofUsers\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              <div className='left'>\r\n                <div className='artistpp'>\r\n                  {/* <img src={this.props.location.state.accImg} /> */}\r\n                  {/* {listofArtistInfo !== undefined ? (\r\n                    <img src={listofArtistInfo.accImg} alt='' />\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                </div>\r\n                <div className='artistInfo'>\r\n                  {/* {listofArtistInfo.accFname !== undefined ? (\r\n                    <h2 className='title'>\r\n                      {`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n                   \r\n                    </h2>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )}\r\n                  {listofArtistInfo !== undefined ? (\r\n                    <span className='bday'>\r\n                      {listofArtistInfo.accAddress}, born{' '}\r\n                      {listofArtistInfo.birthYear}\r\n                    </span>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                  <span className='estart'>Established Artist</span>\r\n                  <MDBNavLink\r\n                    to={`/CProfileEdit/${this.props.match.params.id}`}\r\n                    className='pencil'\r\n                  >\r\n                    <MDBIcon icon='pencil-alt' />\r\n                  </MDBNavLink>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    489\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className='artistbio clearfix'>\r\n              <h4 className='paddh4'>Biography</h4>\r\n              {/* {listofArtistInfo !== undefined ? (\r\n                <p>{listofArtistInfo.artistDescription}</p>\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </div>\r\n            <div className='relatedcat clearfix'>\r\n              <h4 className='paddh4'>Related Categories</h4>\r\n              <div className='catlist'>\r\n                {/* {listofArtistCategories[0] !== [] ||\r\n                listofArtistCategories[0] !== undefined ? (\r\n                  listofArtistCategories.map((cat) => (\r\n                    <MDBNavLink to='#!'>{cat}</MDBNavLink>\r\n                  ))\r\n                ) : (\r\n                  <MDBNavLink to='#!'>No Categories</MDBNavLink>\r\n                )} */}\r\n              </div>\r\n              <a href='#!' className='seemore'>\r\n                See More &nbsp;\r\n                <MDBIcon icon='caret-right' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers of {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Latest Work by {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Favorites</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Following</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                     \r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfile));\r\n","import React, {Component} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Steps} from 'antd';\r\nimport {\r\n  MDBRow,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport art from '../images/artworks/art1.png';\r\n\r\nconst {Step} = Steps;\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal1: false,\r\n    pendingOrders: undefined,\r\n    steps: 0,\r\n  };\r\n  checkSteps = (status) => {\r\n   \r\n    if (status === 'Pending') {\r\n      this.setState({\r\n        steps: 1,\r\n      });\r\n    } else if (status === 'PendingPrint') {\r\n      this.setState({\r\n        steps: 2,\r\n      });\r\n    }else if ( status === 'Printing') {\r\n      this.setState({\r\n        steps: 3,\r\n      });\r\n    } else if (status === 'ForDelivery') {\r\n      this.setState({\r\n        steps: 4,\r\n      });\r\n    } else if (status === 'Completed' || status === 'Received') {\r\n      this.setState({\r\n        steps: 5\r\n      });\r\n    } else if (status === 'PrintRejected' || status === 'Rejected') {\r\n      this.setState({\r\n        steps: 6,\r\n      });\r\n    }\r\n  };\r\n  toggle = (nr) => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n      pendingOrders: this.props.pendingOrders,\r\n      // steps: this.checkSteps(this.props.steps),\r\n    });\r\n    this.checkSteps(this.props.steps);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => this.toggle(1)}\r\n          color='#fae933'\r\n        >\r\n          Track order\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => this.toggle(1)}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() => this.toggle(1)}>\r\n            Track order\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='float-right'>\r\n              <p>\r\n                ORDER ID:{' '}\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderID\r\n                  : '00-000-XXXX'}\r\n              </p>\r\n            </div>\r\n\r\n            {this.state.steps === 6 ? (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Rejected'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n              </Steps>\r\n            ) : (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 2 ? 'finish' : 'wait'}\r\n                  title='Verified'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 3 ? 'finish' : 'wait'}\r\n                  title='Printing'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 4 ? 'finish' : 'wait'}\r\n                  title='Shipped'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps === 5 ? 'finish' : 'wait'}\r\n                  title='Completed'\r\n                />\r\n              </Steps>\r\n            )}\r\n\r\n            <div className='artlist'>\r\n              <div className='cartord'>\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderItems.map((item) => {\r\n                      return (\r\n                        <MDBRow className='artlistorder'>\r\n                          <MDBCol md='3' className='artimg colpad'>\r\n                            {item.artworkImg !== null ? (\r\n                              <img\r\n                                className='item-image'\r\n                                src={item.artworkImg}\r\n                                alt='artwork'\r\n                              />\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </MDBCol>\r\n                          <MDBCol md='5' className='artdet colpad'>\r\n                            <a\r\n                              href='#!'\r\n                              onClick={() => {\r\n                                this.props.history.push({\r\n                                  pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                  state: {\r\n                                    artistName: `${item.accFname} ${item.accLname}`,\r\n                                    accImg: this.state.artistImg,\r\n                                    artistDescription: this.state\r\n                                      .accDescription,\r\n                                    birthYear: this.state.birthYear,\r\n                                    accFollowers: this.state.accFollowers,\r\n                                  },\r\n                                });\r\n                              }}\r\n                            >\r\n                              {' '}\r\n                              {\r\n                                item.artistName\r\n                              } <MDBIcon icon='arrow-right' />{' '}\r\n                            </a>\r\n                            <br />\r\n                            <p>\"{item.artworkName}\"</p>\r\n                            <p>\r\n                              Variations: {item.artworkMaterial},{' '}\r\n                              {item.artworkSize}, {item.artworkFramingOptions}\r\n                            </p>\r\n                            <p>&#8369; {item.artworkPaymentAmount}</p>\r\n                          </MDBCol>\r\n                          <MDBCol md='1' className='quan colpad'>\r\n                            x{item.artworkQuantity}\r\n                          </MDBCol>\r\n                          <MDBCol md='3' className='colpad'>\r\n                            <MDBRow>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                Subtotal\r\n                              </MDBCol>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                &#8369;{' '}\r\n                                {item.artworkPaymentAmount\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPaymentAmount)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </MDBCol>\r\n                            </MDBRow>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      );\r\n                    })\r\n                  : ''}\r\n              </div>\r\n\r\n              <div className='acts clearfix'>\r\n                {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t</MDBRow> */}\r\n                <MDBRow className='actsrow'>\r\n                  <MDBCol md='2' className='total'>\r\n                    Total\r\n                  </MDBCol>\r\n                  <MDBCol md='10' className='total'>\r\n                    {(this.state.pendingOrders !== undefined\r\n                      ? 'PHP ' +\r\n                        this.state.pendingOrders.orderItems.reduce(\r\n                          (a, b) =>\r\n                            parseFloat(a) + parseFloat(b.artworkPaymentAmount),\r\n                          0\r\n                        )\r\n                      : '0').toLocaleString('en-GB', {\r\n                        style: 'currency',\r\n                        currency: 'PHP',\r\n                      })}\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                {/* <div className='actsbtn'>\r\n                  <MDBBtn size='sm' className='recieve'>\r\n                    Order Received\r\n                  </MDBBtn>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            {/* <MDBTable style={{ textAlign: \"center\" }}>\r\n            <MDBTableHead>\r\n              <th>Material</th>\r\n              <th>Size</th>\r\n              <th>Framing Options</th>\r\n              <th>Quantity</th>\r\n              <th>Status</th>\r\n              <th>Price</th>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>Total Price</td>\r\n                <td>&#8369; 300,000</td>\r\n              </tr>\r\n            </MDBTableBody>\r\n          </MDBTable> */}\r\n          </MDBModalBody>\r\n          {/* <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={this.toggle(1)}>Close</MDBBtn>\r\n        </MDBModalFooter> */}\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n    MDBBtn,\r\n    MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment'\r\nimport {message} from 'antd'\r\n\r\n\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal: false,\r\n\r\n  };\r\n\r\n\r\n  render() {\r\nlet {startingStore:{feedback,addFeedback}}=this.props;\r\n\r\n  \r\n let toggle = () => {\r\n  \r\n    this.setState({modal: true});\r\n\r\n    feedback.setProperty('feedbackID',`fb${Math.floor(1000 + Math.random() * 9000)}`)\r\n    feedback.setProperty('accID',this.props.orderInfo.accID)\r\n   \r\n    feedback.setProperty('orderID',this.props.orderInfo.orderID)\r\n    feedback.setProperty('date',moment().format('MMM/DD/YYYY'))\r\n    \r\n  };   \r\n\r\n  let close = ()=>{\r\n\r\n    this.setState({modal: false});\r\n  }\r\n  let submitFeedback = ()=>{\r\n\r\n    addFeedback();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 1)\r\n        .then(() => message.success('Feedback sent', 3));\r\n    };\r\n\r\n \r\n    \r\n   setTimeout(()=>{\r\n   success()\r\n   },600)\r\n   setTimeout(()=>\r\n   this.setState({modal: false})\r\n    ,1500)\r\n\r\n  }\r\n              \r\n    \r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => toggle()}\r\n        \r\n        >\r\n          Send us feedback\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal}\r\n          toggle={() => toggle()}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() =>close()} style={{backgroundColor:'#231F20'}}>\r\n           <h6 style={{color:'white'}}>Feedback</h6> \r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\">\r\n            Please provide us feedback to improve Art,Basically.\r\n            </label>\r\n            <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"5\"\r\n            onChange={(feedbackNote) =>\r\n                feedback.setProperty('feedbackNote', feedbackNote.target.value)\r\n              }\r\n            />\r\n        </div>\r\n\r\n          </MDBModalBody>\r\n         <MDBModalFooter>\r\n          <MDBBtn color=\"#fae933\"  size='sm'  className='recieve'  onClick={()=>submitFeedback()}>Submit</MDBBtn>\r\n        </MDBModalFooter>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBRow,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport OrderDetails from './OrderDetails';\r\nimport Cart from './Cart';\r\nimport {message} from 'antd';\r\nimport Feedback from './Feedback/'\r\n\r\nclass OrderTab extends Component {\r\n  state = {\r\n    activeItem: '1',\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getOrderUser, getToCart},\r\n    } = this.props;\r\n    getOrderUser();\r\n    getToCart();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfSingleArtwork,\r\n        listOfUserCart,\r\n        listOfOrder,\r\n        listofUserOrder,\r\n        editOrder,\r\n        listOfOrders,\r\n      },\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    let pendingOrders = listofUserOrder.filter((items) => {\r\n      if (\r\n        items.orderStatus === 'Printing' || items.orderStatus === 'ForDelivery' ||\r\n        items.orderStatus.includes('Pending')\r\n      ) {\r\n        return items;\r\n      }\r\n    });\r\n\r\n    let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Completed' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    });\r\n\r\n\r\n    let listOfOrderDelivered = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Delivered' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    })\r\n\r\n    let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n      if (\r\n        Rejected.orderStatus === 'Rejected' && Rejected.accID === mydata._id ||\r\n        Rejected.orderStatus === 'PrintRejected' && Rejected.accID === mydata._id\r\n        ||\r\n        Rejected.orderStatus === 'Cancelled' && Rejected.accID === mydata._id\r\n      ) {\r\n        return Rejected;\r\n      }\r\n    })\r\n\r\n\r\n    let cancelOrder =( myorder) =>{\r\n      let filOrder = listofUserOrder.filter( ord => ord.orderID === myorder.orderID && ord.orderStatus === 'Printing' || ord.orderID === myorder.orderID && ord.orderStatus === 'ForDelivery').length\r\n\r\n      if (filOrder === 0){\r\n          editOrder(myorder._id, 'Cancelled', myorder.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 0.5)\r\n              .then(() => message.success('Order cancelled', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },500)\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.5)\r\n            .then(() => message.success('Cant cancel order. Your order is already on printing or delivery.', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n      }\r\n   \r\n    }\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <h4>My Orders</h4>\r\n        <MDBNav className='nav-tabs'>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '1'}\r\n              onClick={this.toggle('1')}\r\n              role='tab'\r\n                // className='ordernavlin k'\r\n            >\r\n              My Bag\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '2'}\r\n              onClick={this.toggle('2')}\r\n              role='tab'\r\n            >\r\n              Orders\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '3'}\r\n              onClick={this.toggle('3')}\r\n              role='tab'\r\n            >\r\n              Delivered\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '4'}\r\n              onClick={this.toggle('4')}\r\n              role='tab'\r\n            >\r\n              Completed\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '5'}\r\n              onClick={this.toggle('5')}\r\n              role='tab'\r\n            >\r\n              Cancelled\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '6'}\r\n              onClick={this.toggle('6')}\r\n              role='tab'\r\n            >\r\n              {/* <MDBIcon icon='history' /> */}\r\n               History\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n\r\n        <MDBTabContent activeItem={this.state.activeItem}>\r\n          <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <div className='artlist' >\r\n              <Cart cartData={listOfSingleArtwork[0]} />\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n            <div className='artlist pending '>\r\n              {pendingOrders.reverse().map((items, indexes) => (\r\n                <div className='cartord ' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n\r\n                                <img src={item.artworkImg} alt='artwork' />\r\n                              \r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        \r\n                        {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                      <div className='actsbtn'>\r\n                          <MDBBtn\r\n                            color='red'\r\n                            size='sm'\r\n                            className='det'\r\n                            onClick={() =>cancelOrder(items) }\r\n                          >\r\n                            Cancel order\r\n                          </MDBBtn>\r\n                          <OrderDetails\r\n                     \r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderDelivered.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='4' role='tabpanel' className='tabs complete'>\r\n            <div className='artlist'>\r\n              {listOfOrderReceived.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                                 <Feedback  orderInfo={items}/>\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='5' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderCancelled.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='6' role='tabpanel' className='tabs'>\r\n            <div className='artlist history'>\r\n              {listofUserOrder.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                            <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  {item.artworkPaymentAmount\r\n                                    ? parseFloat(\r\n                                        item.artworkPaymentAmount\r\n                                      ).toLocaleString('en-GB', {\r\n                                        style: 'currency',\r\n                                        currency: 'PHP',\r\n                                      })\r\n                                    : ''}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        &#8369;\r\n                        {\r\n                          +items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                   \r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import { Icon, message, Skeleton } from 'antd';\r\nimport {\r\n  MDBBtn, MDBCol,\r\n\r\n\r\n  MDBInput, MDBNav,\r\n\r\n\r\n  MDBNavItem,\r\n  MDBNavLink, MDBRow, MDBTabContent, MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport art from '../../images/artworks/art1.png';\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass CProfileEdit extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {\r\n        getSingleEnthusiast,\r\n        getOrder,\r\n       \r\n      },\r\n    } = this.props;\r\n   \r\n     \r\n    getSingleEnthusiast(this.props.match.params.id);\r\n      getOrder();\r\n    \r\n  }\r\n\r\n  state = {\r\n    activeItem: '1',\r\n    loading: false,\r\n    pass:'',\r\n    confPass:'',\r\n  };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   \r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editAccount, account},\r\n    } = this.props;\r\n    account.setProperty('_id', this.props.data._id);\r\n    account.setProperty('accID', this.props.data.accID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited account..', 1.2)\r\n        .then(() => message.success('Successfully edited an Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        account,\r\n        editAccount,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n      },\r\n    } = this.props;\r\n\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className='ant-upload-text'>Upload Image</div>\r\n      </div>\r\n    );\r\n    const {imageUrl} = this.state;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n\r\n    let AccountInfo = ()=>{\r\n        \r\n\r\n          if (this.state.pass === this.state.confPass){\r\n\r\n         \r\n      account.setProperty('_id', userData._id);\r\n      account.setProperty('password',this.state.pass)\r\n      editAccount().then(resp=>{\r\n        if (resp === 'success'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      });\r\n\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cedit clearfix'>\r\n            <div className='clearfix chead'>\r\n              <h2>{this.props.match.params.id}</h2>\r\n              <MDBNavLink to='/Upload' className='btnYellow cuploadbtn'>\r\n                Upload Artwork\r\n              </MDBNavLink>\r\n            </div>\r\n            <div className='cmaincon'>\r\n              <MDBRow>\r\n                <MDBCol md='3' className='usertab'>\r\n                  <MDBNav className='nav-tabs mt-5 ctab'>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '1'}\r\n                        onClick={this.toggle('1')}\r\n                        role='tab'\r\n                      >\r\n                        Account Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '2'}\r\n                        onClick={this.toggle('2')}\r\n                        role='tab'\r\n                      >\r\n                        Profile Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '3'}\r\n                        onClick={this.toggle('3')}\r\n                        role='tab'\r\n                      >\r\n                        Orders\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '4'}\r\n                        onClick={this.toggle('4')}\r\n                        role='tab'\r\n                      >\r\n                       My Artworks\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    {/* <MDBNavItem>\r\n                      <MDBNavLink link to=\"#\" active={this.state.activeItem === \"5\"} onClick={this.toggle(\"5\")} role=\"tab\" >\r\n                        Collections\r\n                      </MDBNavLink>\r\n                    </MDBNavItem> */}\r\n                    <MDBNavItem>\r\n                      {/* <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '6'}\r\n                        onClick={this.toggle('6')}\r\n                        role='tab'\r\n                      >\r\n                        Favorites\r\n                      </MDBNavLink> */}\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '7'}\r\n                        onClick={this.toggle('7')}\r\n                        role='tab'\r\n                      >\r\n                        Log Out\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                  </MDBNav>\r\n                </MDBCol>\r\n\r\n                <MDBCol md='9' className='usertab'>\r\n                  <MDBTabContent\r\n                    activeItem={this.state.activeItem}\r\n                    className='ccon'\r\n                  >\r\n                    <MDBTabPane tabId='1' role='tabpanel'>\r\n                      {userData !== undefined ? (\r\n                        <form onSubmit={this.submitHandler}>\r\n                         \r\n                          <MDBInput\r\n                            label='Email Address'\r\n                            type='email'\r\n                            // hint={userData.accEmailAddress}\r\n                            valueDefault={userData.accEmailAddress}\r\n                            onChange={(accEmailAddress) =>\r\n                              account.setProperty(\r\n                                'accEmailAddress',\r\n                                accEmailAddress.target.value\r\n                              )\r\n                            }\r\n                            \r\n                          >\r\n                            <a href='#!' className='changee'>\r\n                              Change Email-Address\r\n                            </a>\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid email.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}\r\n                            onChange={(password) =>\r\n                              this.setState({pass:password.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Confirm New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}s\r\n                            onChange={(confpassword) =>\r\n                            this.setState({confPass:confpassword.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <div className='custom-control custom-checkbox'>\r\n                            <input\r\n                              type='checkbox'\r\n                              className='custom-control-input'\r\n                              id='anycat'\r\n                            />\r\n                            <label\r\n                              className='custom-control-label clabel'\r\n                              htmlFor='anycat'\r\n                            >\r\n                              Allow viewing of adult related content.\r\n                            </label>\r\n                          </div>\r\n                          <MDBBtn\r\n                            className='submitreg clearfix btnYellow'\r\n                            color='#FAE933'\r\n                            onClick={() => {AccountInfo()}}\r\n                          >\r\n                            Save Changes\r\n                          </MDBBtn>\r\n                        </form>\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='2' role='tabpanel'>\r\n                      <h4>Update Profile Picture</h4>\r\n                      {/* <Upload\r\n                        name='avatar'\r\n                        listType='picture-card'\r\n                        className='avatar-uploader cpup clearfix'\r\n                        showUploadList={false}\r\n                        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                        beforeUpload={beforeUpload}\r\n                        onChange={this.onFileChangeP}\r\n                      >\r\n                        {imageUrl ? (\r\n                          <img\r\n                            src={imageUrl}\r\n                            alt='avatar'\r\n                            style={{width: '100%'}}\r\n                          />\r\n                        ) : (\r\n                          uploadButton\r\n                        )}\r\n                      </Upload> */}\r\n\r\n\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n        <div  className='regform formbtn'>\r\n          <div className=\"page req clearfix\" >\r\n<div className=\"container\">\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n        </div>\r\n        \r\n\t\t\t\r\n                      <div>\r\n                        <h4>Personal Information</h4>\r\n\r\n                        <MDBInput\r\n                            label='First Name'\r\n                            type='text'\r\n                            // hint={listofArtistInfo.accFname}\r\n                            valueDefault={`${userData.accFname}`}\r\n                            onChange={(accFname) =>\r\n                              account.setProperty(\r\n                                'accFname',\r\n                                accFname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid first name.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Last Name'\r\n                            type='text'\r\n                            // hint={userData.accLname}\r\n                            valueDefault={userData.accLname}\r\n                            onChange={(accLname) =>\r\n                              account.setProperty(\r\n                                'accLname',\r\n                                accLname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid last name.\r\n                            </div>\r\n                          </MDBInput>\r\n\r\n                        <MDBInput\r\n                          label='Address'\r\n                          type='text'\r\n                          valueDefault={userData.accAddress}\r\n                          onChange={(accAddress) =>\r\n                            account.setProperty(\r\n                              'accAddress',\r\n                              accAddress.target.value\r\n                            )\r\n                          }\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid address.\r\n                          </div>\r\n                        </MDBInput>\r\n                        {/* <MDBInput\r\n                          type='textarea'\r\n                          label='Bio'\r\n                          rows='5'\r\n                          \r\n                        /> */}\r\n                        {/* <MDBInput\r\n                          label='Facebook'\r\n                          type='text'\r\n                          hint='e.g. https://www.facebook.com/artbasically'\r\n                       \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid facebook url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                        {/* <MDBInput\r\n                          label='Instagram'\r\n                          type='text'\r\n                          hint='e.g. https://www.instagram.com/artbasically'\r\n                        \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid instagram url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                      </div>\r\n                      <MDBBtn\r\n                        className='submitreg clearfix btnYellow'\r\n                        color='#FAE933'\r\n                        // type='submit'\r\n                        onClick={() => {\r\n                          account.setProperty('_id', userData._id);\r\n                          editAccount().then(resp=>{\r\n                            if (resp === 'success'){\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Changes saved', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }else{\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Try again', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }\r\n                          });\r\n                        }}\r\n                      >\r\n                        Save Changes\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='3' role='tabpanel'>\r\n                      <OrderTab />\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='4' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                  \r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    {/* <MDBTabPane tabId=\"5\" role=\"tabpanel\">\r\n                      <ul className=\"col3img rowart clearfix\">\r\n                        {listofArtistArtwork !== undefined ?\r\n                          listofArtistArtwork.map(art =>\r\n                            <li>\r\n                              <a href=\"\" className=\"artlink\">\r\n                                <img src={art.artworkImg} />\r\n                              </a>\r\n                              <div className=\"artistinfo clearfix pad10\">\r\n                                <p>{art.artName}</p>\r\n                                <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                              </div>\r\n                            </li>\r\n                          ) : <Skeleton active />\r\n                        }\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <img src={art} />\r\n                          </a>\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane> */}\r\n                    <MDBTabPane tabId='6' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .reverse()\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='7' role='tabpanel'>\r\n                      <p className='float-left outp'>\r\n                        Are you sure you want to Log Out?\r\n                      </p>\r\n                      <MDBBtn\r\n                        className='btnYellow'\r\n                        color='FAE933'\r\n                        onClick={() => {\r\n                          sessionStorage.removeItem('userData');\r\n                        }}\r\n                      >\r\n                        <Link to={`/`}> Confirm</Link>\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                  </MDBTabContent>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfileEdit));\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nclass Order extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrder},\r\n    } = this.props;\r\n    getOrder();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cart-items'>\r\n            <div className='clearfix'>\r\n              <OrderTab />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div >\r\n        <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default inject('startingStore')(observer(Order));\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your information will be evaluated by ArtBasically kindly wait for us\r\n          to contact you.\r\n          <br /> Thank you for your interest in joining us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your artwork will be evaluated by ArtBasically kindly wait for us to\r\n          contact you.\r\n          <br /> Thank you for sharing your artwork with us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nimport AYLogin from \"../../../components/AddYoursLogin\";\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n     \r\n      artworks:[]\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    let{startingStore:\r\n      {\r\n     \r\n      getSaleArts,getLatestArts}}=this.props;\r\n  \r\n    \r\n    getSaleArts()\r\n    getLatestArts()\r\n  }\r\n  render() {\r\n\r\n    \r\n    let {\r\n      startingStore: {\r\n        \r\n        listOfLatestArts\r\n    \r\n     \r\n      },\r\n    } = this.props;\r\n \r\n\r\n\r\n\r\n        let filteredArtwork = listOfLatestArts.filter((art ) => Number(art.artPrice) >= Number(this.props.filData[0]) && Number(art.artPrice) <= Number(this.props.filData[this.props.filData.length-1]) ).map(art =>art)\r\n\r\n        \r\n\r\n\r\n\r\n \r\n\r\n\r\n    let artworks = () => {\r\n\r\n\r\nif(this.props.filData[0] !== undefined){\r\n\r\n\r\n  return toJS(filteredArtwork)\r\n   \r\n   .map((image,i)=>(\r\n      <li key={i}>\r\n               <Link\r\n            to={{\r\n              pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n          <div className='artlabel'>\r\n            <span className='new'>NEW</span>\r\n            <span className='hot'>HOT</span>\r\n            <span className='type'>\r\n              {image.artType === 'Secondary'\r\n                ? 'Second Edition'\r\n                : 'Original'}\r\n            </span>\r\n          </div>\r\n     \r\n            <img src={image.artworkImg} alt='artwork' />\r\n          </Link>\r\n        \r\n        <div className='artistinfo clearfix pad10'>\r\n        \r\n        <Link\r\n            to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n             \r\n                }}\r\n              >\r\n                   <p className='artistname'>{image.artName}</p>\r\n               \r\n              </Link>\r\n\r\n              \r\n              <br/>\r\n                 \r\n              <Link\r\n            to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n               \r\n                }}\r\n              >\r\n                   <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n               \r\n              </Link>\r\n      \r\n      \r\n          <MDBBtn\r\n                className='ifollow'\r\n                color='transparent'\r\n                \r\n                rounded\r\n                title='Add To My Lists' \r\n              //  onClick={()=>{addtoList(image)}}\r\n              >\r\n              \r\n                  <MDBIcon icon='plus' />\r\n              \r\n                </MDBBtn>\r\n    </div>\r\n      </li>\r\n ))\r\n}else{\r\n    return toJS(listOfLatestArts.filter(art=>  \r\n      {\r\n        if(art.artworkStatus === 'Active' ){\r\n          return art\r\n        }\r\n    })).reverse()\r\n    .map((image,i) =>  (\r\n        <li key={i}>\r\n                 <Link\r\n              to={{\r\n                pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n            <div className='artlabel'>\r\n              <span className='new'>NEW</span>\r\n              <span className='hot'>HOT</span>\r\n              <span className='type'>\r\n                {image.artType === 'Secondary'\r\n                  ? 'Second Edition'\r\n                  : 'Original'}\r\n              </span>\r\n            </div>\r\n       \r\n              <img src={image.artworkImg} alt='artwork' />\r\n            </Link>\r\n          \r\n          <div className='artistinfo clearfix pad10'>\r\n          \r\n          <Link\r\n              to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n               \r\n                  }}\r\n                >\r\n                     <p className='artistname'>{image.artName}</p>\r\n                 \r\n                </Link>\r\n  \r\n                \r\n                <br/>\r\n                   \r\n                <Link\r\n              to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n                 \r\n                  }}\r\n                >\r\n                     <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                 \r\n                </Link>\r\n        \r\n        \r\n            <MDBBtn\r\n                  className='ifollow'\r\n                  color='transparent'\r\n                  \r\n                  rounded\r\n                  title='Add To My Lists' \r\n                //  onClick={()=>{addtoList(image)}}\r\n                >\r\n                \r\n                    <MDBIcon icon='plus' />\r\n                \r\n                  </MDBBtn>\r\n      </div>\r\n        </li>\r\n      )\r\n      )\r\n  }\r\n\r\n  }\r\n    return (\r\n      <div>\r\n\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n      \r\n\r\n    \r\n\r\n        <div>\r\n   \r\n        </div>\r\n\r\n        <div className=\"bttop clearfix\">\r\n              <AYLogin login={\"ay\"} />\r\n              <BackTop style={{ margin: \"auto\" }}>\r\n                {\"     \"}\r\n                <a href=\"#!\" style={{ color: \"black\" }}>\r\n                  Back to Top <MDBIcon icon=\"caret-right\" />{\" \"}\r\n                </a>{\" \"}\r\n              </BackTop>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from './filter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\n\r\nimport {message} from 'antd';\r\n\r\nclass Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getLatestArts, getCategories},\r\n    } = this.props;\r\n    getLatestArts();\r\n    getArtists();\r\n    getCategories();\r\n\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n   \r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: { mylists, addMyLists,listOfMyLists,},\r\n    } = this.props;\r\n\r\n  \r\n\r\n  //  let setPrice = (amt) => {\r\n  \r\n   \r\n      \r\n  //     // let filteredArtwork = listOfLatestArts.filter((art ) => parseInt(art.artPrice) >= parseInt(amt[0]) && parseInt(art.artPrice) <= parseInt(amt[1]) ).map(art =>art)\r\n     \r\n  //     this.setState({filterData: arts});\r\n  //   }\r\n\r\n    let setPrice =(data)=>{\r\n    \r\n      const selectedIndex = this.state.filterData.indexOf(data);\r\n      let newSelected =[];\r\n    \r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(this.state.filterData, data);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n    } else if (selectedIndex === this.state.filterData.length - 1) {\r\n      newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        this.state.filterData.slice(0, selectedIndex),\r\n        this.state.filterData.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    \r\n    \r\n    this.setState({filterData:newSelected})\r\n    \r\n     }\r\n     \r\n     console.log(this.state.filterData.sort(function(a, b){return a-b}),'aaaa')\r\n    \r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',mydata.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n               \r\n                <form>\r\n         \r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n              \r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n         \r\n              \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              <ArtworkFilter filData={this.state.filterData.sort(function(a, b){return a-b})}/>\r\n                        \r\n            </section>\r\n\r\n\r\n     \r\n\r\n         \r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nimport AYLogin from \"../../../components/AddYoursLogin\";\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n     \r\n      artworks:[]\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    let {\r\n      startingStore: {\r\n        \r\n        listOfLatestArts\r\n    \r\n     \r\n      },\r\n    } = this.props;\r\n \r\n\r\n    let a = listOfLatestArts.filter((data,i) =>{\r\n\r\n\r\n      for(let x=0;x<this.props.filData.length;x++){\r\n      if (\r\n        data.artTheme == this.props.filData[x] \r\n     \r\n        ){\r\n        return data\r\n        \r\n        \r\n      }\r\n    \r\n    } \r\n    })\r\n\r\n\r\n\r\n    let artworks = () => {\r\n\r\n\r\nif(this.props.filData[0] !== undefined ){\r\n\r\n\r\n  return toJS(a)\r\n   \r\n   .map((image,i)=>(\r\n      <li key={i}>\r\n               <Link\r\n            to={{\r\n              pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n          <div className='artlabel'>\r\n            <span className='new'>NEW</span>\r\n            <span className='hot'>HOT</span>\r\n            <span className='type'>\r\n              {image.artType === 'Secondary'\r\n                ? 'Second Edition'\r\n                : 'Original'}\r\n            </span>\r\n          </div>\r\n     \r\n            <img src={image.artworkImg} alt='artwork' />\r\n          </Link>\r\n        \r\n        <div className='artistinfo clearfix pad10'>\r\n        \r\n        <Link\r\n            to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n             \r\n                }}\r\n              >\r\n                   <p className='artistname'>{image.artName}</p>\r\n               \r\n              </Link>\r\n\r\n              \r\n              <br/>\r\n                 \r\n              <Link\r\n            to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n               \r\n                }}\r\n              >\r\n                   <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n               \r\n              </Link>\r\n      \r\n      \r\n          <MDBBtn\r\n                className='ifollow'\r\n                color='transparent'\r\n                \r\n                rounded\r\n                title='Add To My Lists' \r\n              //  onClick={()=>{addtoList(image)}}\r\n              >\r\n              \r\n                  <MDBIcon icon='plus' />\r\n              \r\n                </MDBBtn>\r\n    </div>\r\n      </li>\r\n ))\r\n}else{\r\n    return toJS(listOfLatestArts.filter(art=>  \r\n      {\r\n        if(art.artworkStatus === 'Active' ){\r\n          return art\r\n        }\r\n    })).reverse()\r\n    .map((image,i) =>  (\r\n        <li key={i}>\r\n                 <Link\r\n              to={{\r\n                pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n            <div className='artlabel'>\r\n              <span className='new'>NEW</span>\r\n              <span className='hot'>HOT</span>\r\n              <span className='type'>\r\n                {image.artType === 'Secondary'\r\n                  ? 'Second Edition'\r\n                  : 'Original'}\r\n              </span>\r\n            </div>\r\n       \r\n              <img src={image.artworkImg} alt='artwork' />\r\n            </Link>\r\n          \r\n          <div className='artistinfo clearfix pad10'>\r\n          \r\n          <Link\r\n              to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n               \r\n                  }}\r\n                >\r\n                     <p className='artistname'>{image.artName}</p>\r\n                 \r\n                </Link>\r\n  \r\n                \r\n                <br/>\r\n                   \r\n                <Link\r\n              to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n                 \r\n                  }}\r\n                >\r\n                     <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                 \r\n                </Link>\r\n        \r\n        \r\n            <MDBBtn\r\n                  className='ifollow'\r\n                  color='transparent'\r\n                  \r\n                  rounded\r\n                  title='Add To My Lists' \r\n                //  onClick={()=>{addtoList(image)}}\r\n                >\r\n                \r\n                    <MDBIcon icon='plus' />\r\n                \r\n                  </MDBBtn>\r\n      </div>\r\n        </li>\r\n      )\r\n      )\r\n  }\r\n\r\n  }\r\n    return (\r\n      <div>\r\n\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n      \r\n\r\n    \r\n\r\n        <div>\r\n   \r\n        </div>\r\n\r\n        <div className=\"bttop clearfix\">\r\n              <AYLogin login={\"ay\"} />\r\n              <BackTop style={{ margin: \"auto\" }}>\r\n                {\"     \"}\r\n                <a href=\"#!\" style={{ color: \"black\" }}>\r\n                  Back to Top <MDBIcon icon=\"caret-right\" />{\" \"}\r\n                </a>{\" \"}\r\n              </BackTop>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from './filter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists,  getCategories,getLatestArts},\r\n    } = this.props;\r\n    getLatestArts()\r\n    getArtists();\r\n    getCategories();\r\n   \r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories},\r\n    } = this.props;\r\n    \r\n    \r\n\r\n    let setCategories =(data)=>{\r\n      const selectedIndex = this.state.filterData.indexOf(data);\r\n      let newSelected =[];\r\n    \r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(this.state.filterData, data);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n    } else if (selectedIndex === this.state.filterData.length - 1) {\r\n      newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        this.state.filterData.slice(0, selectedIndex),\r\n        this.state.filterData.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    \r\n    \r\n    this.setState({filterData:newSelected})\r\n    \r\n     }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n               \r\n               {listOfCategories.map((cat) => (\r\n                 <li className='custom-control custom-checkbox'>\r\n                   <input\r\n                     type='checkbox'\r\n                     className='custom-control-input'\r\n                     // checked={this.state.checkAllCat}\r\n                     id={cat.catType}\r\n                     onChange={() => {setCategories(cat.catType)}}\r\n                   />\r\n                   <label className='custom-control-label' htmlFor={cat.catType} >\r\n                     {cat.catType}\r\n                   </label>\r\n                 </li>\r\n               ))}\r\n             </ul>\r\n\r\n          \r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              <h3>Shop By Category</h3>\r\n              <ArtworkFilter filData={this.state.filterData}  />\r\n            </section>\r\n          </div>\r\n\r\n     \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize,getMyLists},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    getMyLists()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'yourlists') {\r\n        return <h3>My Lists</h3>;\r\n      }\r\n   \r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter  type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n     \r\n      artworks:[]\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    let {\r\n      startingStore: {\r\n        \r\n        listOfActiveArtworks\r\n    \r\n     \r\n      },\r\n    } = this.props;\r\n \r\n\r\n    let a = listOfActiveArtworks.filter((data,i) =>{\r\n\r\n\r\n      for(let x=0;x<this.props.filData.length;x++){\r\n      if (\r\n        data.artSize == this.props.filData[x] || data.artTheme == this.props.filData[x] \r\n     \r\n        ){\r\n        return data\r\n        \r\n        \r\n      }\r\n    \r\n    } \r\n    })\r\n\r\n    \r\n    let filteredArtwork = listOfActiveArtworks.filter((art ) => Number(art.artPrice) >= Number(this.props.filPrice[0]) && Number(art.artPrice) <= Number(this.props.filPrice[this.props.filPrice.length-1]) ).map(art =>art)\r\n \r\n\r\n\r\n    let artworks = () => {\r\n\r\n\r\nif(this.props.filData[0] !== undefined || this.props.filPrice[0] !== undefined){\r\n\r\n\r\n  return toJS(filteredArtwork.concat(a))\r\n   \r\n   .map((image,i)=>(\r\n      <li key={i}>\r\n               <Link\r\n            to={{\r\n              pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n          <div className='artlabel'>\r\n            <span className='new'>NEW</span>\r\n            <span className='hot'>HOT</span>\r\n            <span className='type'>\r\n              {image.artType === 'Secondary'\r\n                ? 'Second Edition'\r\n                : 'Original'}\r\n            </span>\r\n          </div>\r\n     \r\n            <img src={image.artworkImg} alt='artwork' />\r\n          </Link>\r\n        \r\n        <div className='artistinfo clearfix pad10'>\r\n        \r\n        <Link\r\n            to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n             \r\n                }}\r\n              >\r\n                   <p className='artistname'>{image.artName}</p>\r\n               \r\n              </Link>\r\n\r\n              \r\n              <br/>\r\n                 \r\n              <Link\r\n            to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n               \r\n                }}\r\n              >\r\n                   <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n               \r\n              </Link>\r\n      \r\n      \r\n          <MDBBtn\r\n                className='ifollow'\r\n                color='transparent'\r\n                \r\n                rounded\r\n                title='Add To My Lists' \r\n              //  onClick={()=>{addtoList(image)}}\r\n              >\r\n              \r\n                  <MDBIcon icon='plus' />\r\n              \r\n                </MDBBtn>\r\n    </div>\r\n      </li>\r\n ))\r\n}else{\r\n    return toJS(listOfActiveArtworks.filter(art=>  \r\n      {\r\n        if(art.artworkStatus === 'Active' ){\r\n          return art\r\n        }\r\n    })).reverse()\r\n    .map((image,i) =>  (\r\n        <li key={i}>\r\n                 <Link\r\n              to={{\r\n                pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n            <div className='artlabel'>\r\n              <span className='new'>NEW</span>\r\n              <span className='hot'>HOT</span>\r\n              <span className='type'>\r\n                {image.artType === 'Secondary'\r\n                  ? 'Second Edition'\r\n                  : 'Original'}\r\n              </span>\r\n            </div>\r\n       \r\n              <img src={image.artworkImg} alt='artwork' />\r\n            </Link>\r\n          \r\n          <div className='artistinfo clearfix pad10'>\r\n          \r\n          <Link\r\n              to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n               \r\n                  }}\r\n                >\r\n                     <p className='artistname'>{image.artName}</p>\r\n                 \r\n                </Link>\r\n  \r\n                \r\n                <br/>\r\n                   \r\n                <Link\r\n              to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n                 \r\n                  }}\r\n                >\r\n                     <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                 \r\n                </Link>\r\n        \r\n        \r\n            <MDBBtn\r\n                  className='ifollow'\r\n                  color='transparent'\r\n                  \r\n                  rounded\r\n                  title='Add To My Lists' \r\n                //  onClick={()=>{addtoList(image)}}\r\n                >\r\n                \r\n                    <MDBIcon icon='plus' />\r\n                \r\n                  </MDBBtn>\r\n      </div>\r\n        </li>\r\n      )\r\n      )\r\n  }\r\n\r\n  }\r\n    return (\r\n      <div>\r\n\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n      \r\n\r\n    \r\n\r\n        <div>\r\n   \r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\n\r\nimport Filter from './filter'\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterData: [],\r\n      filterPrice:[],\r\n     \r\n      \r\n    \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: { getAllActiveArtworks,getArtists, getSaleArts, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getSaleArts();\r\n    getArtists();\r\n    getAllActiveArtworks()\r\n    getCategories();\r\n    getPrintSize();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n\r\n\r\n  render() {\r\n \r\n    let {\r\n      startingStore: {listOfCategories, listOfPrintSize},\r\n    } = this.props;\r\n   \r\n\r\n let setCategories =(data)=>{\r\n  const selectedIndex = this.state.filterData.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterData, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n} else if (selectedIndex === this.state.filterData.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterData.slice(0, selectedIndex),\r\n    this.state.filterData.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterData:newSelected})\r\n\r\n }\r\n\r\n\r\n \r\n\r\n let setPrice =(data)=>{\r\n    \r\n  const selectedIndex = this.state.filterPrice.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterPrice, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterPrice.slice(1));\r\n} else if (selectedIndex === this.state.filterPrice.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterPrice.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterPrice.slice(0, selectedIndex),\r\n    this.state.filterPrice.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterPrice:newSelected})\r\n\r\n }\r\n\r\n\r\n\r\n let setPrintSize =(data)=>{\r\n  const selectedIndex = this.state.filterData.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterData, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n} else if (selectedIndex === this.state.filterData.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterData.slice(0, selectedIndex),\r\n    this.state.filterData.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterData:newSelected})\r\n\r\n }\r\n\r\n\r\n\r\n\r\n \r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n               \r\n                    {listOfCategories.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          // checked={this.state.checkAllCat}\r\n                          id={cat.catType}\r\n                          onChange={() => {setCategories(cat.catType)}}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat.catType} >\r\n                          {cat.catType}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n                  <h5>Price</h5>\r\n                  <ul>\r\n               \r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n              \r\n                    {listOfPrintSize.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size.printSize}\r\n                          onChange={() => {\r\n                            setPrintSize(size.printSize);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size.printSize}>\r\n                          {size.printSize}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              <h3>All Artworks  </h3>    \r\n              <Filter filData={this.state.filterData} filPrice={this.state.filterPrice.sort(function(a, b){return a-b})}/>\r\n            </section>\r\n   \r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n     \r\n      artworks:[]\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    let {\r\n      startingStore: {\r\n        \r\n        listOfLatestArts\r\n    \r\n     \r\n      },\r\n    } = this.props;\r\n \r\n\r\n    let a = listOfLatestArts.filter((data,i) =>{\r\n\r\n\r\n      for(let x=0;x<this.props.filData.length;x++){\r\n      if (\r\n        data.artSize == this.props.filData[x] || data.artTheme == this.props.filData[x] \r\n     \r\n        ){\r\n        return data\r\n        \r\n        \r\n      }\r\n    \r\n    } \r\n    })\r\n\r\n    \r\n    let filteredArtwork = listOfLatestArts.filter((art ) => Number(art.artPrice) >= Number(this.props.filPrice[0]) && Number(art.artPrice) <= Number(this.props.filPrice[this.props.filPrice.length-1]) ).map(art =>art)\r\n \r\n\r\n\r\n    let artworks = () => {\r\n\r\n\r\nif(this.props.filData[0] !== undefined || this.props.filPrice[0] !== undefined){\r\n\r\n\r\n  return toJS(filteredArtwork.concat(a))\r\n   \r\n   .map((image,i)=>(\r\n      <li key={i}>\r\n               <Link\r\n            to={{\r\n              pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n          <div className='artlabel'>\r\n            <span className='new'>NEW</span>\r\n            <span className='hot'>HOT</span>\r\n            <span className='type'>\r\n              {image.artType === 'Secondary'\r\n                ? 'Second Edition'\r\n                : 'Original'}\r\n            </span>\r\n          </div>\r\n     \r\n            <img src={image.artworkImg} alt='artwork' />\r\n          </Link>\r\n        \r\n        <div className='artistinfo clearfix pad10'>\r\n        \r\n        <Link\r\n            to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n             \r\n                }}\r\n              >\r\n                   <p className='artistname'>{image.artName}</p>\r\n               \r\n              </Link>\r\n\r\n              \r\n              <br/>\r\n                 \r\n              <Link\r\n            to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n               \r\n                }}\r\n              >\r\n                   <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n               \r\n              </Link>\r\n      \r\n      \r\n          <MDBBtn\r\n                className='ifollow'\r\n                color='transparent'\r\n                \r\n                rounded\r\n                title='Add To My Lists' \r\n              //  onClick={()=>{addtoList(image)}}\r\n              >\r\n              \r\n                  <MDBIcon icon='plus' />\r\n              \r\n                </MDBBtn>\r\n    </div>\r\n      </li>\r\n ))\r\n}else{\r\n    return toJS(listOfLatestArts).map((image,i) =>  (\r\n        <li key={i}>\r\n                 <Link\r\n              to={{\r\n                pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n            <div className='artlabel'>\r\n              <span className='new'>NEW</span>\r\n              <span className='hot'>HOT</span>\r\n              <span className='type'>\r\n                {image.artType === 'Secondary'\r\n                  ? 'Second Edition'\r\n                  : 'Original'}\r\n              </span>\r\n            </div>\r\n       \r\n              <img src={image.artworkImg} alt='artwork' />\r\n            </Link>\r\n          \r\n          <div className='artistinfo clearfix pad10'>\r\n          \r\n          <Link\r\n              to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n               \r\n                  }}\r\n                >\r\n                     <p className='artistname'>{image.artName}</p>\r\n                 \r\n                </Link>\r\n  \r\n                \r\n                <br/>\r\n                   \r\n                <Link\r\n              to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n                 \r\n                  }}\r\n                >\r\n                     <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                 \r\n                </Link>\r\n        \r\n        \r\n            <MDBBtn\r\n                  className='ifollow'\r\n                  color='transparent'\r\n                  \r\n                  rounded\r\n                  title='Add To My Lists' \r\n                //  onClick={()=>{addtoList(image)}}\r\n                >\r\n                \r\n                    <MDBIcon icon='plus' />\r\n                \r\n                  </MDBBtn>\r\n      </div>\r\n        </li>\r\n      )\r\n      )\r\n  }\r\n\r\n  }\r\n    return (\r\n      <div>\r\n\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n      \r\n\r\n    \r\n\r\n        <div>\r\n   \r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\n\r\nimport Filter from './filter'\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterData: [],\r\n      filterPrice:[],\r\n     \r\n      \r\n    \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: { getLatestArts,getArtists, getSaleArts, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getSaleArts();\r\n    getArtists();\r\n    getLatestArts()\r\n    getCategories();\r\n    getPrintSize();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n\r\n\r\n  render() {\r\n \r\n    let {\r\n      startingStore: {listOfCategories, listOfPrintSize},\r\n    } = this.props;\r\n   \r\n\r\n let setCategories =(data)=>{\r\n  const selectedIndex = this.state.filterData.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterData, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n} else if (selectedIndex === this.state.filterData.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterData.slice(0, selectedIndex),\r\n    this.state.filterData.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterData:newSelected})\r\n\r\n }\r\n\r\n\r\n \r\n\r\n let setPrice =(data)=>{\r\n    \r\n  const selectedIndex = this.state.filterPrice.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterPrice, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterPrice.slice(1));\r\n} else if (selectedIndex === this.state.filterPrice.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterPrice.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterPrice.slice(0, selectedIndex),\r\n    this.state.filterPrice.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterPrice:newSelected})\r\n\r\n }\r\n\r\n\r\n\r\n let setPrintSize =(data)=>{\r\n  const selectedIndex = this.state.filterData.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterData, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n} else if (selectedIndex === this.state.filterData.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterData.slice(0, selectedIndex),\r\n    this.state.filterData.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterData:newSelected})\r\n\r\n }\r\n\r\n\r\n\r\n\r\n \r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n               \r\n                    {listOfCategories.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          // checked={this.state.checkAllCat}\r\n                          id={cat.catType}\r\n                          onChange={() => {setCategories(cat.catType)}}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat.catType} >\r\n                          {cat.catType}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n                  <h5>Price</h5>\r\n                  <ul>\r\n               \r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n              \r\n                    {listOfPrintSize.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size.printSize}\r\n                          onChange={() => {\r\n                            setPrintSize(size.printSize);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size.printSize}>\r\n                          {size.printSize}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              <h3>Latest Artworks  </h3>    \r\n              <Filter filData={this.state.filterData} filPrice={this.state.filterPrice.sort(function(a, b){return a-b})}/>\r\n            </section>\r\n   \r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n     \r\n      artworks:[]\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    let {\r\n      startingStore: {\r\n        \r\n        listOfEmergingArtist\r\n        ,listOfUsers,listOfLatestArts\r\n     \r\n      },\r\n    } = this.props;\r\n \r\n    \r\n\r\n    let a = listOfEmergingArtist.filter((data,i) =>{\r\n\r\n\r\n      for(let x=0;x<this.props.filData.length;x++){\r\n      if (\r\n        data.artSize == this.props.filData[x] || data.artTheme == this.props.filData[x] \r\n     \r\n        ){\r\n        return data\r\n        \r\n        \r\n      }\r\n    \r\n    } \r\n    })\r\n\r\n    \r\n    let filteredArtwork = listOfEmergingArtist.filter((art ) => Number(art.artPrice) >= Number(this.props.filPrice[0]) && Number(art.artPrice) <= Number(this.props.filPrice[this.props.filPrice.length-1]) ).map(art =>art)\r\n \r\n\r\n\r\n    let artworks = () => {\r\n\r\n\r\nif(this.props.filData[0] !== undefined || this.props.filPrice[0] !== undefined){\r\n\r\n\r\n  return toJS(filteredArtwork.concat(a))\r\n   \r\n   .map((image,i)=>(\r\n      <li key={i}>\r\n               <Link\r\n            to={{\r\n              pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n          <div className='artlabel'>\r\n            <span className='new'>NEW</span>\r\n            <span className='hot'>HOT</span>\r\n            <span className='type'>\r\n              {image.artType === 'Secondary'\r\n                ? 'Second Edition'\r\n                : 'Original'}\r\n            </span>\r\n          </div>\r\n     \r\n            <img src={image.artworkImg} alt='artwork' />\r\n          </Link>\r\n        \r\n        <div className='artistinfo clearfix pad10'>\r\n        \r\n        <Link\r\n            to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n             \r\n                }}\r\n              >\r\n                   <p className='artistname'>{image.artName}</p>\r\n               \r\n              </Link>\r\n\r\n              \r\n              <br/>\r\n                 \r\n              <Link\r\n            to={{\r\n                    pathname: `/Artist/${image.artistName}`,\r\n                    state: {artistName:image.artistName}\r\n               \r\n                }}\r\n              >\r\n                   <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n               \r\n              </Link>\r\n      \r\n      \r\n          <MDBBtn\r\n                className='ifollow'\r\n                color='transparent'\r\n                \r\n                rounded\r\n                title='Add To My Lists' \r\n              //  onClick={()=>{addtoList(image)}}\r\n              >\r\n              \r\n                  <MDBIcon icon='plus' />\r\n              \r\n                </MDBBtn>\r\n    </div>\r\n      </li>\r\n ))\r\n}else{\r\n    return toJS(listOfEmergingArtist).map((image,i) =>  (\r\n        <li key={i}>\r\n                 <Link\r\n              to={{\r\n                pathname: `/Art/${image.artworkID}/${image.artistName}`}} className='artlink'>\r\n            <div className='artlabel'>\r\n              <span className='new'>NEW</span>\r\n              <span className='hot'>HOT</span>\r\n              <span className='type'>\r\n                {image.artType === 'Secondary'\r\n                  ? 'Second Edition'\r\n                  : 'Original'}\r\n              </span>\r\n            </div>\r\n       \r\n              <img src={image.artworkImg} alt='artwork' />\r\n            </Link>\r\n          \r\n          <div className='artistinfo clearfix pad10'>\r\n          \r\n          <Link\r\n              to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n               \r\n                  }}\r\n                >\r\n                     <p className='artistname'>{image.artName}</p>\r\n                 \r\n                </Link>\r\n  \r\n                \r\n                <br/>\r\n                   \r\n                <Link\r\n              to={{\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName}\r\n                 \r\n                  }}\r\n                >\r\n                     <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                 \r\n                </Link>\r\n        \r\n        \r\n            <MDBBtn\r\n                  className='ifollow'\r\n                  color='transparent'\r\n                  \r\n                  rounded\r\n                  title='Add To My Lists' \r\n                //  onClick={()=>{addtoList(image)}}\r\n                >\r\n                \r\n                    <MDBIcon icon='plus' />\r\n                \r\n                  </MDBBtn>\r\n      </div>\r\n        </li>\r\n      )\r\n      )\r\n  }\r\n\r\n  }\r\n    return (\r\n      <div>\r\n\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n      \r\n\r\n    \r\n\r\n        <div>\r\n   \r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\n\r\nimport Filter from './filter'\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterData: [],\r\n      filterPrice:[],\r\n     \r\n      \r\n    \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: { getEmergingArtistArtwork,getArtists, getSaleArts, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getSaleArts();\r\n    getArtists();\r\n    getEmergingArtistArtwork()\r\n    getCategories();\r\n    getPrintSize();\r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\n  render() {\r\n \r\n    let {\r\n      startingStore: {listOfCategories, listOfPrintSize,listOfUsers,listOfLatestArts},\r\n    } = this.props;\r\n    // let latestArtist = listOfUsers.filter(data=> data.acc_Status == 'Active' && data.accessType == 'Artist').reverse()\r\n\r\n\r\n    // let listofEmerging = listOfLatestArts.filter(data => data.accID == latestArtist[0].accID || data.accID == latestArtist[1].accID || data.accID == latestArtist[2].accID || data.accID == latestArtist[3].accID || data.accID == latestArtist[4].accID)\r\n \r\n let setCategories =(data)=>{\r\n  const selectedIndex = this.state.filterData.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterData, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n} else if (selectedIndex === this.state.filterData.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterData.slice(0, selectedIndex),\r\n    this.state.filterData.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterData:newSelected})\r\n\r\n }\r\n\r\n\r\n \r\n\r\n let setPrice =(data)=>{\r\n    \r\n  const selectedIndex = this.state.filterPrice.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterPrice, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterPrice.slice(1));\r\n} else if (selectedIndex === this.state.filterPrice.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterPrice.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterPrice.slice(0, selectedIndex),\r\n    this.state.filterPrice.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterPrice:newSelected})\r\n\r\n }\r\n\r\n\r\n\r\n let setPrintSize =(data)=>{\r\n  const selectedIndex = this.state.filterData.indexOf(data);\r\n  let newSelected =[];\r\n\r\nif (selectedIndex === -1) {\r\n  newSelected = newSelected.concat(this.state.filterData, data);\r\n} else if (selectedIndex === 0) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(1));\r\n} else if (selectedIndex === this.state.filterData.length - 1) {\r\n  newSelected = newSelected.concat(this.state.filterData.slice(0, -1));\r\n} else if (selectedIndex > 0) {\r\n  newSelected = newSelected.concat(\r\n    this.state.filterData.slice(0, selectedIndex),\r\n    this.state.filterData.slice(selectedIndex + 1),\r\n  );\r\n}\r\n\r\n\r\nthis.setState({filterData:newSelected})\r\n\r\n }\r\n\r\n\r\n\r\n\r\n \r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n               \r\n                    {listOfCategories.map((cat) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          // checked={this.state.checkAllCat}\r\n                          id={cat.catType}\r\n                          onChange={() => {setCategories(cat.catType)}}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={cat.catType} >\r\n                          {cat.catType}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n                  <h5>Price</h5>\r\n                  <ul>\r\n               \r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li className='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        className='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label className='custom-control-label' htmlFor='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n              \r\n                    {listOfPrintSize.map((size) => (\r\n                      <li className='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          className='custom-control-input'\r\n                          id={size.printSize}\r\n                          onChange={() => {\r\n                            setPrintSize(size.printSize);\r\n                          }}\r\n                        />\r\n                        <label className='custom-control-label' htmlFor={size.printSize}>\r\n                          {size.printSize}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              <h3>Discover Emerging Artists</h3>    \r\n              <Filter filData={this.state.filterData} filPrice={this.state.filterPrice.sort(function(a, b){return a-b})}/>\r\n            </section>\r\n   \r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass AdminLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('', 1)\r\n            .then(() => message.success('Welcome to Art Basically', 3));\r\n        };\r\n\r\n     \r\n        \r\n       setTimeout(()=>{\r\n       success()\r\n       },600)\r\n       setTimeout(()=>\r\n        this.props.history.push('/AdminHome')\r\n        ,1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 0.5)\r\n            .then(() => message.error('Email or password is incorrect', 1.5));\r\n        };\r\n        setTimeout(()=>{\r\n          success()\r\n          },600)\r\n        setTimeout(() => {\r\n          this.props.history.push('/Admin');\r\n        }, 1500);\r\n    \r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>ADMIN LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li className='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label className='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AdminLogin)))\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBCol, MDBContainer,\r\n\r\n\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader, MDBRow\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nclass AddArtist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    // let {\r\n    //   startingStore: {account},\r\n    // } = this.props;\r\n    this.setState({selectedFile: e.target.files[0]});\r\n\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  onSubmit = () => {\r\n    let {\r\n      startingStore: {account, addAccount},\r\n    } = this.props;\r\n    //   //e.preventDefault()\r\n\r\n    //   // axios.post(\"https://artbasically.herokuapp.com/artworkRoute/uploadProfile\", formData, {\r\n    //   // }).then(res => {\r\n    //   //   console.log(res)\r\n    //   // })\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    formData.append('type', 'artist');\r\n    upload(formData);\r\n\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artist Registration..', 1.2)\r\n        .then(() => message.success('Successfully added an Artist Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.onSubmit();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD ARTIST \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD ARTIST \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    placeholder='Prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    type='textarea'\r\n                    label='Biography'\r\n                    rows='3'\r\n                    onChange={(artistDescription) =>\r\n                      account.setProperty(\r\n                        'artistDescription',\r\n                        artistDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a short Bio.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtist));\r\n","\nimport { message } from 'antd';\nimport {\n  MDBBtn, MDBDataTable, MDBModal,\n  MDBModalBody,\n\n\n\n\n  MDBModalFooter, MDBModalHeader\n} from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\n\n\n class Artists extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreinfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n          account.setProperty('accLname',itm.accLname)\n          account.setProperty('accAddress',itm.accAddress)\n          account.setProperty('birthYear',itm.birthYear)\n          account.setProperty('accInstitution',itm.accInstitution)\n          account.setProperty('artistDescription',itm.artistDescription)\n          account.setProperty('acc_Documents',itm.acc_Documents)\n          account.setProperty('profile_Img',itm.profile_Img)\n          account.setProperty('accEmailAddress',itm.accEmailAddress)\n          account.setProperty('password',itm.password)\n          this.setState({\n            modal: true\n          \n          });\n          };\n          let deactivate =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n\n      \n          }\n        \n\nconst ArtistsTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n       \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>moreinfo(row.userDB)} color='moreinfo' size='sm'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}} onClick={()=>deactivate(row.userDB)} color='reject' size='sm'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal} centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n                  <li>\n                    489\n                    <span>Followers</span>\n                  </li>\n                  {/* <li>\n                    4.8/5\n                    <span>528k Ratings</span>\n                  </li> */}\n                 \n                </ul>\n              </div>\n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <ArtistsTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Artists))\n\n\n\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Artist' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreinfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n  \r\n          \r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n        \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreinfo(row.userDB)} color='moreinfo' size='sm'>More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject' size='sm'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  \r\n  ","import { message } from 'antd';\nimport {\n  MDBBtn, MDBDataTable, MDBModal,\n  MDBModalBody,\n\n\n\n\n  MDBModalFooter, MDBModalHeader\n} from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n\n class Deactivated extends Component {\n  state = {\n    modal: false,\n    modalConfApprove:false,\n    modalConfReject:false\n   \n  };\ncomponentDidMount(){\n  let{startingStore:{getAccounts}}=this.props;\n  getAccounts();\n}\n\n  \n\n\n\n  render() {\n\n  \n   let close =()=>{\n    this.setState({\n      modal: false,\n      modalConfApprove:false,\n      modalConfReject:false\n    });\n   }\n\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname,lname, email, address,action) {\n      return { userDB,id,fname,lname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Pending') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,users.accFname,users.accLname\n           ,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n          let  info = (itm) => {\n            this.setState({\n              modal: true\n            \n            });\n  \n              account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n            \n        \n           \n          }\n      \n        let  approve = (itm) => {\n        \n       account.setProperty('_id',itm._id)\n       account.setProperty('acc_Status','Active')\n\n\n\n\n      this.setState({\n      modalConfApprove: true\n      \n      });\n\n          }\n\n          let confirmApprove =()=>{\n\n\n            \n      editAccount().then((resp) => {\n       \n        if (resp === 'success') {\n                const success = () => {\n        message\n          .loading('', 1)\n          .then(() => message.success('Account Approved', 3));\n      };\n\n      setTimeout(() =>{\n        success();\n      },1000)\n     \n    \n          setTimeout(()=>{\n            window.location.reload(false);\n          },1500)\n        } else {\n          const error = () => {\n            message\n            .loading('', 1)\n            .then(() => message.success('Try Again', 3));\n          };\n          setTimeout(() => {\n            error();\n          }, 200)\n      \n        }\n      });\n\n\n          }\n\n         \n         \n         \n         \n          let reject =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Rejected')\n\n            this.setState({\n              modalConfReject: true\n            \n            });\n     \n       \n          }\n\n          let confirmReject = ()=>{\n            editAccount()\n            const success = () => {\n              message\n                .loading('', 1)\n                .then(() => message.success('Account Rejected', 3));\n            };\n\n            setTimeout(() =>{\n              success()\n           \n            },1000)\n            setTimeout(()=>{\n              window.location.reload(false);\n            },1500)\n          }\n        \n\n\nconst DeactivatedTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname} ${row.lname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'350px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.userDB)} color='approve' size=\"sm\">More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}}  onClick={()=>{approve(row.userDB)}} color='approve' size=\"sm\"> Approve</MDBBtn><MDBBtn  onClick={()=>{reject(row.userDB)}} color='reject' size=\"sm\"> Reject</MDBBtn>\n        </div>,\n      \n      \n     }\n     \n     ) })\n    ]\n\n  }\n  return(\n    <Fragment>\n  <MDBDataTable\n  striped\n  bordered\n  small\n  data={data}\n/>\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'#FAE933'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n          \n                </ul>\n              </div>\n            </div>\n            <div className=' clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size=\"sm\">Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n\n\n\n       \n      <MDBModal isOpen={this.state.modalConfApprove}  size=\"sm\" centered>\n      <MDBModalHeader  style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'#FAE933'}}>Confirmation</span></MDBModalHeader>\n        <MDBModalBody>\n          Are you sure you to approve this account?\n        </MDBModalBody>\n        <MDBModalFooter>\n          <MDBBtn color=\"secondary\" size=\"sm\" onClick={()=>close()}>Cancel</MDBBtn>\n          <MDBBtn color=\"primary\" size=\"sm\" onClick={()=>confirmApprove()}>Confirm</MDBBtn>\n        </MDBModalFooter>\n      </MDBModal>\n\n\n      <MDBModal isOpen={this.state.modalConfReject}  size=\"sm\" centered>\n      <MDBModalHeader  style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'#FAE933'}}>Confirmation</span></MDBModalHeader>\n        <MDBModalBody>\n          Are you sure you to reject this account?\n        </MDBModalBody>\n        <MDBModalFooter>\n          <MDBBtn color=\"secondary\" size=\"sm\" onClick={()=>close()}>Cancel</MDBBtn>\n          <MDBBtn color=\"primary\" size=\"sm\" onClick={()=>confirmReject()}>Confirm</MDBBtn>\n        </MDBModalFooter>\n      </MDBModal>\n\n        </Fragment>\n  )\n}\n\n  function PendingTable(){\n\n  return (\n    <Fragment>\n<DeactivatedTable/>\n\n\n    \n  </Fragment>\n  );\n\n}\nreturn (\n  <PendingTable/>\n)\n}\n}\n\n\n\nexport default withRouter(inject('startingStore')(observer(Deactivated)))\n\n\n","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Artists from './../ArtistTable';\r\nimport Deactivated from './../DeactivatedArtist';\r\nimport Pending from './../PendingArtistTable';\r\n \r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n \r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artist Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artists\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artists/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n          <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddArtist from './sections/AddArtist';\r\nimport ArtistsTab from './sections/ArtistsTab';\r\n\r\nexport class ArtistTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artist</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n         \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtist />\r\n   \r\n   <MDBCard>\r\n     <MDBCardBody>\r\n<ArtistsTab/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArtistTab\r\n","import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component,Fragment} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onImgLoad = this.onImgLoad.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      imgRaw:null,\r\n      height:null,\r\n      width:null,\r\n      selectedFile: null,\r\n      dpi:null,\r\n      selectedSize:null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n    this.setState({imgRaw : URL.createObjectURL(event.target.files[0])})\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n\r\n  \r\n  onImgLoad({target:img}) {\r\n  \r\n\r\n    let calcPixels = img.offsetWidth+img.offsetHeight;\r\n    \r\n    this.setState({height:img.offsetHeight,width:img.offsetWidth,dpi:Number(calcPixels/this.state.selectedSize).toFixed(2)});\r\n\r\n}\r\n\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {artwork,upload,listOfArtworks},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    let getArtNames = listOfArtworks.filter(data=> data.artName === artwork.artName).length\r\n    const data = new FormData();\r\n    if (getArtNames === 0){\r\n    data.append('artworkImg',this.state.selectedFile);\r\n    artwork.setProperty('artDPI', this.state.dpi)\r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Artwork submitted', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }else{\r\n    const success = () => {\r\n      message\r\n        .loading('Checking Availability', 1.3)\r\n        .then(() => message.success('Art name already taken', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\n  \r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\nartwork.setProperty('accID',mydata.accID)\r\nartwork.setProperty('artworkStatus','Active')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    let selectArtSize =(list, listitem)=> {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n\r\n\r\n        if (artSizeSelected == 'AP - portrait, 1.5x2'){\r\n          this.setState({selectedSize:42})\r\n    \r\n        }\r\n        else if(artSizeSelected == \"AP - portrait, 3x4\"){\r\n          this.setState({selectedSize:84})\r\n        }else if(artSizeSelected == \"B - square, 2x2\"){\r\n          this.setState({selectedSize:48})\r\n        }else if(artSizeSelected == \"B - square, 4x4\"){\r\n          this.setState({selectedSize:96}) \r\n        }\r\n          \r\n          else if(artSizeSelected == \"CP - portrait, 2x3\"){\r\n            this.setState({selectedSize:60})\r\n  \r\n        }else if(artSizeSelected == \"CP - portrait, 4x6\"){\r\n          this.setState({selectedSize:120})\r\n        }else if(artSizeSelected == \"DL - landscape, 2x1.5\"){\r\n          this.setState({selectedSize:42})\r\n        }else if(artSizeSelected == \"DL - landscape, 4x3\"){\r\n          this.setState({selectedSize:84})\r\n        }else if(artSizeSelected == \"EL - landscape, 3x2\"){\r\n          this.setState({selectedSize:60})\r\n        }else if(artSizeSelected == \"EL - landscape, 6x4\"){\r\n          this.setState({selectedSize:120})\r\n        }\r\n        else {\r\n            this.setState({selectedSize:0})\r\n            console.log('false')\r\n        }\r\n     \r\n     \r\n    }\r\n \r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#262626'}}><span style={{color:'white'}}> Register Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>{\r\n                    \r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist,i) => {\r\n                      return (\r\n                        <option key={i} value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='number'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n            \r\n              \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n               required\r\n                  />\r\n                  </div>\r\n                  \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                  style={{width:'95%'}}\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                 required\r\n                  />\r\n                   </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n              \r\n                     <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfPrintSize}\r\n                    placeholder='Printing Size'\r\n                    showCheckbox={true}\r\n                    displayValue='printSize'\r\n                    onSelect={selectArtSize}\r\n              required\r\n                  />\r\n                  </div>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    className='usertype'\r\n                    required\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                \r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Quantity'\r\n                    type='number'\r\n                 required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                    style={{width:'95%'}}\r\n                    required\r\n                      type='file'\r\n                      name='file'\r\n                      disabled={this.state.selectedSize === null  ? true:false}\r\n                      onChange={this.onFileChange}\r\n                      style={{overflow: 'hidden',textOverflow:' ellipsis'}}\r\n                      \r\n                    />\r\n                    <div  style={{height:'0',overflow:'scroll',width:'0',}}>\r\n                    <img onLoad={this.onImgLoad} src={this.state.imgRaw} alt='' visiblity='hide' />\r\n                    </div>\r\n                    {(this.state.height == null)?(\r\n                      <span></span>\r\n                    ):(\r\n                      <Fragment>\r\n                \r\n              \r\n                     { (this.state.dpi >= 72 )?(\r\n                        <p style={{color:'green'}}>DPI: {this.state.dpi} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/>  </p>\r\n                      ):(\r\n                        <p style={{color:'red'}}>DPI: {this.state.dpi} - low dpi</p>\r\n                      )\r\n                      }\r\n                      </Fragment>\r\n                    )}\r\n                  \r\n                    <p className='req'>\r\n                      Please upload a high resolution photo with 72dpi and above.\r\n                     \r\n                     \r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit' disabled={this.state.dpi <= 72?true:false}>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { MDBIcon, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[],\r\n      activeItem:'1'\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n      } = this.props;\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n  \r\n    }\r\n    toggleTab = tab => e => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab\r\n        });\r\n      }\r\n    };\r\n  \r\n    render() {\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => {\r\n              if (art.artworkStatus === 'Archived') {\r\n                return art;\r\n              }\r\n            }).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n\r\n            artwork.setProperty('artHeight',itm.artHeight)\r\n            artwork.setProperty('artWidth',itm.artWidth)\r\n            artwork.setProperty('artFormat',itm.artFormat)\r\n            artwork.setProperty('artDPI',itm.artDPI)\r\n\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n         \r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Active');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`, \r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve' size='sm'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject' size='sm'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={6}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n            <Typography variant='subtitle2'  style={{float:'right'}}>\r\n Artwork ID: {artwork.artworkID}\r\n      </Typography>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{paddingLeft:'10px'}}>\r\n        <MDBNav className=\"nav-tabs \">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggleTab(\"1\")} role=\"tab\" >\r\n              Summary\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggleTab(\"2\")} role=\"tab\" >\r\n             Properties\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggleTab(\"3\")} role=\"tab\" >\r\n              Details\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Artist:</b> {artwork.artistName}</Typography>\r\n            <Typography variant='body2'><b>Theme :</b> {artwork.artTheme}</Typography>\r\n     <Typography variant='body2'><b>Style : </b>{artwork.artStyle} </Typography>\r\n     <Typography variant='body2'><b>Type : </b>{artwork.artType}</Typography>\r\n    <Typography variant='body2'><b>Pinting Size : </b>{artwork.artSize}</Typography>\r\n    <Typography variant='body2'><b>Price : </b>&#8369;{`${Number(parseFloat(artwork.artPrice)).toLocaleString('en')}.00`}</Typography>\r\n    <Typography variant='body2'><b>Uploaded : </b>{artwork.dateAdded}</Typography>\r\n              \r\n            </p>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Dimension : </b>{artwork.artDimension}</Typography>\r\n            <Typography variant='body2'><b>Format : </b>{artwork.artFormat}</Typography>\r\n    <Typography variant='body2'><b>Height : </b>{artwork.artHeight}</Typography>\r\n     <Typography variant='body2'><b>Width : </b>{artwork.artWidth} </Typography>\r\n    <Typography variant='body2'><b>DPI : </b> { artwork.artDPI >=72 ? (<span style={{color:'green'}}>{artwork.artDPI} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/></span>):(<span style={{color:'red'}}>{artwork.artDPI} <MDBIcon far icon=\"times-circle\" style={{color:'red'}}/></span>)} </Typography>\r\n    \r\n            </p>\r\n       \r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            {artwork.artDescription}\r\n            </p>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n\r\n\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { MDBIcon, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n    activeItem:'1'\r\n   \r\n  };\r\n  toggleTab = tab => e => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab\r\n      });\r\n    }\r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: { getArtists, getStyles, getCategories,getAllArtworks},\r\n    } = this.props;\r\n    \r\n    getAllArtworks()\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n\r\n \r\n    function createData(artworkDB,id,title,artist, style,  price,action) {\r\n      return { artworkDB,id,title,artist, style,  price,action };\r\n    }\r\n\r\nlet pArtworks = listOfArtworks.filter((art) => {\r\n            if ( art.artworkStatus === 'Active') {\r\n              return art;\r\n            }\r\n          }).map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreInfo = (itm) => {\r\n          artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n          artwork.setProperty('artTheme',itm.artTheme)\r\n          artwork.setProperty('artSize',itm.artSize)\r\n          artwork.setProperty('artCategory',itm.artCategory)\r\n          artwork.setProperty('artworkID',itm.artworkID)\r\n          artwork.setProperty('artName',itm.artName)\r\n          artwork.setProperty('artDescription',itm.artDescription)\r\n          artwork.setProperty('artPrice',itm.artPrice)\r\n          artwork.setProperty('artistName',itm.artistName)\r\n          artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n          artwork.setProperty('artDimension',itm.artDimension)\r\n          artwork.setProperty('artType',itm.artType)\r\n          artwork.setProperty('dateAdded',itm.dateAdded)\r\n          artwork.setProperty('artworkImg',itm.artworkImg)\r\n\r\n          artwork.setProperty('artHeight',itm.artHeight)\r\n          artwork.setProperty('artWidth',itm.artWidth)\r\n          artwork.setProperty('artFormat',itm.artFormat)\r\n          artwork.setProperty('artDPI',itm.artDPI)\r\n          this.setState({\r\n            modal: !this.state.modal\r\n          });\r\n       \r\n          };\r\n\r\n          let  close = () => {\r\n            this.setState({\r\n              modal: false\r\n            });\r\n            };\r\n\r\n          let archive =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('artworkStatus','Archived');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Archived', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price}`,\r\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve' size='sm'> More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject' size='sm'> Archive</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  \r\n<MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={6}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n            <Typography variant='subtitle2'  style={{float:'right'}}>\r\n Artwork ID: {artwork.artworkID}\r\n      </Typography>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{paddingLeft:'10px'}}>\r\n        <MDBNav className=\"nav-tabs \">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggleTab(\"1\")} role=\"tab\" >\r\n              Summary\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggleTab(\"2\")} role=\"tab\" >\r\n             Properties\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggleTab(\"3\")} role=\"tab\" >\r\n              Details\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Artist:</b> {artwork.artistName}</Typography>\r\n            <Typography variant='body2'><b>Theme :</b> {artwork.artTheme}</Typography>\r\n     <Typography variant='body2'><b>Style : </b>{artwork.artStyle} </Typography>\r\n     <Typography variant='body2'><b>Type : </b>{artwork.artType}</Typography>\r\n    <Typography variant='body2'><b>Pinting Size : </b>{artwork.artSize}</Typography>\r\n    <Typography variant='body2'><b>Price : </b>&#8369;{`${Number(parseFloat(artwork.artPrice)).toLocaleString('en')}.00`}</Typography>\r\n    <Typography variant='body2'><b>Uploaded : </b>{artwork.dateAdded}</Typography>\r\n              \r\n            </p>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Dimension : </b>{artwork.artDimension}</Typography>\r\n            <Typography variant='body2'><b>Format : </b>{artwork.artFormat}</Typography>\r\n    <Typography variant='body2'><b>Height : </b>{artwork.artHeight}</Typography>\r\n     <Typography variant='body2'><b>Width : </b>{artwork.artWidth} </Typography>\r\n    <Typography variant='body2'><b>DPI : </b> { artwork.artDPI >=72 ? (<span style={{color:'green'}}>{artwork.artDPI} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/></span>):(<span style={{color:'red'}}>{artwork.artDPI} <MDBIcon far icon=\"times-circle\" style={{color:'red'}}/></span>)} </Typography>\r\n    \r\n            </p>\r\n       \r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            {artwork.artDescription}\r\n            </p>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n\r\n\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n\r\n","import { Grid,Typography } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { MDBIcon, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n    activeItem:'1'\r\n  };\r\n\r\n  toggleTab = tab => e => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab\r\n      });\r\n    }\r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getAllArtworks, getArtists, getStyles, getCategories,getPrintSize},\r\n    } = this.props;\r\n    \r\n    getAllArtworks();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n    getPrintSize()\r\n\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork,notif,addNotif}} = this.props;\r\n  \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n    function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n      return { artworkDB,id,title,artist, style, date, price,action };\r\n    }\r\n\r\nlet filArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending')\r\n\r\n\r\nlet pArtworks = filArtworks.map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n\r\n          let  info = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n\r\n            artwork.setProperty('artHeight',itm.artHeight)\r\n            artwork.setProperty('artWidth',itm.artWidth)\r\n            artwork.setProperty('artFormat',itm.artFormat)\r\n            artwork.setProperty('artDPI',itm.artDPI)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n        let  approve = (data) => {\r\n         \r\n\r\n\r\n\r\n\r\n          artwork.setProperty('_id', data._id);\r\n          artwork.setProperty('accID',data.accID)\r\n          artwork.setProperty('artworkStatus','Active');\r\n\r\n\r\n          notif.setProperty('notifID',`${getHash(data.artName.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n          notif.setProperty('notifSender','admin-001')\r\n          notif.setProperty('notifRecipient',data.accID)\r\n          notif.setProperty('notifSubject','Artwork approval')\r\n          notif.setProperty('notifMsg',`Your artwork '${data.artName}' has been approved` )\r\n          notif.setProperty('notifDT',moment().format('MMM/DD/YYYY'))\r\n          notif.setProperty('notifStatus','unread')\r\n\r\n          editArtwork();\r\n          addNotif()\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Arwork Approved', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          \r\n\r\n          let reject =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('accID',data.accID)\r\n            artwork.setProperty('artworkStatus','Rejected');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      }, {\r\n        label: 'Date Added',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        id: `${row.id}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price}`,\r\n        date:`${row.date}`,\r\n        action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve' size=\"sm\"> Info</MDBBtn><MDBBtn style={{float:'left'}}  onClick={()=>approve(row.artworkDB)} color='approve' size=\"sm\"> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.artworkDB)} color='reject' size=\"sm\"> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={6}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n            <Typography variant='subtitle2'  style={{float:'right'}}>\r\n Artwork ID: {artwork.artworkID}\r\n      </Typography>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{paddingLeft:'10px'}}>\r\n        <MDBNav className=\"nav-tabs \">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggleTab(\"1\")} role=\"tab\" >\r\n              Summary\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggleTab(\"2\")} role=\"tab\" >\r\n             Properties\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggleTab(\"3\")} role=\"tab\" >\r\n              Details\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Artist:</b> {artwork.artistName}</Typography>\r\n            <Typography variant='body2'><b>Theme :</b> {artwork.artTheme}</Typography>\r\n     <Typography variant='body2'><b>Style : </b>{artwork.artStyle} </Typography>\r\n     <Typography variant='body2'><b>Type : </b>{artwork.artType}</Typography>\r\n    <Typography variant='body2'><b>Pinting Size : </b>{artwork.artSize}</Typography>\r\n    <Typography variant='body2'><b>Price : </b>&#8369;{`${Number(parseFloat(artwork.artPrice)).toLocaleString('en')}.00`}</Typography>\r\n    <Typography variant='body2'><b>Uploaded : </b>{artwork.dateAdded}</Typography>\r\n              \r\n            </p>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Dimension : </b>{artwork.artDimension}</Typography>\r\n            <Typography variant='body2'><b>Format : </b>{artwork.artFormat}</Typography>\r\n    <Typography variant='body2'><b>Height : </b>{artwork.artHeight}</Typography>\r\n     <Typography variant='body2'><b>Width : </b>{artwork.artWidth} </Typography>\r\n    <Typography variant='body2'><b>DPI : </b> { artwork.artDPI >=72 ? (<span style={{color:'green'}}>{artwork.artDPI} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/></span>):(<span style={{color:'red'}}>{artwork.artDPI} <MDBIcon far icon=\"times-circle\" style={{color:'red'}}/></span>)} </Typography>\r\n    \r\n            </p>\r\n       \r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            {artwork.artDescription}\r\n            </p>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n\r\n\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ArchivedArtwors from './../ArchivedArtworks';\r\nimport Artworks from './../ArtworkTable';\r\nimport Pending from './../PendingArtworkTable';\r\n\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart,getAllArtworks},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n      getAllArtworks();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n      \r\n          listOfUserCart,\r\n    \r\n          listofUserOrder,\r\n\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artwork Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddArtwork from './sections/AddArtwork';\r\nimport ArtworkTabs from './sections/ArtworkTab';\r\n class ArtworkTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtwork />\r\n      \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <ArtworkTabs/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArtworkTab;\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBContainer,\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n    modal2: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting theme..', 1.2)\r\n        .then(() => message.success('Successfully added a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addCategory();\r\n  };\r\n\r\n  submitHandlerStyle = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting style..', 1.2)\r\n        .then(() => message.success('Successfully added a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addStyle();\r\n  };\r\n\r\n  submitHandlerSize = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting printing size..', 1.2)\r\n        .then(() => message.success('Printing size added', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addPrintSize();\r\n  };\r\n\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {addCategory},\r\n    } = this.props;\r\n    e.preventDefault();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Theme..', 1.2)\r\n        .then(() => message.success('Successfully added a Theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n\r\n    addCategory();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories, style,printsize},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Theme\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n            <MDBModalHeader toggle={this.toggle(1)}>\r\n              Add Theme\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandler} className='formbtn'>\r\n                <MDBInput\r\n                  label='Theme Name'\r\n                  type='text'\r\n                  onChange={(catType) =>\r\n                    categories.setProperty('catType', catType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add  Style\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add  Style\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerStyle} className='formbtn'>\r\n                <MDBInput\r\n                  label='Style Name'\r\n                  type='text'\r\n                  onChange={(styleType) =>\r\n                    style.setProperty('styleType', styleType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Printing Size\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add Printing Size\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerSize} className='formbtn'>\r\n                <MDBInput\r\n                  label='Printing Size'\r\n                  type='text'\r\n                  onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddCat));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.props.data.catID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited theme..', 1.2)\r\n        .then(() => message.success('Successfully edited a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editCategory();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART CATEGORY\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Category Name'\r\n                type='text'\r\n                valueDefault={this.props.data.catType}\r\n                // value={this.props.data.catType}\r\n                onChange={(catType) =>\r\n                  categories.setProperty('catType', catType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Category Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditCat));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.props.data.sizeID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited print size..', 1.2)\r\n        .then(() => message.success('Print size has been modified', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editPrintSize();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printsize},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            Edit Print Size\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Print Size'\r\n                type='text'\r\n                valueDefault={this.props.data.printSize}\r\n                // value={this.props.data.catType}\r\n                onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.props.data.styleID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited style..', 1.2)\r\n        .then(() => message.success('Successfully edited a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editStyle();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {style},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART STYLE\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Style Name'\r\n                type='text'\r\n                valueDefault={this.props.data.styleType}\r\n                // value={this.props.data.catType}\r\n                onChange={(styleType) =>\r\n                  style.setProperty('styleType', styleType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import {\r\n  MDBCard,\r\n  MDBCardBody,\r\n\r\n\r\n\r\n\r\n  MDBCol, MDBRow, MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport EditCat from './EditCat';\r\nimport EditPrintSize from './EditPrintSize';\r\nimport EditStyle from './EditStyle';\r\n\r\nclass CategoryTable extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getCategories, getStyles,getPrintSize},\r\n    } = this.props;\r\n    getCategories();\r\n    getStyles();\r\n    getPrintSize();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n  \r\n    return (\r\n      <div className='clearfix'>\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Theme List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Theme Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfCategories.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.catType}</td>\r\n                        <td className='edittd'>\r\n                          <EditCat data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Style List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Style Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfStyles.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.styleType}</td>\r\n                        <td className='edittd'>\r\n                          <EditStyle data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Printing Size</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Size</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfPrintSize.map((data,index) => {\r\n\r\n                        let no = index +1;\r\nreturn(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.printSize}</td>\r\n                        <td className='edittd'>\r\n                          <EditPrintSize data={data} />\r\n                        </td>\r\n                      </tr>\r\n)  })}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CategoryTable));\r\n","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddCat from './sections/AddCat';\r\nimport CatTable from './sections/CatTable';\r\n\r\nexport class CategoryTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Categories</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddCat />\r\n        <CatTable />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryTab\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrderUser,getOrders}}=this.props;\r\n    getAccounts()\r\n    getOrderUser()\r\n    getOrders()\r\n  }\r\n\r\n\r\n    render() {\r\nlet {startingStore:{listOfUsers,listOfOrders}}=this.props;\r\n\r\nlet activeArtists = listOfUsers.filter (usr => usr.accessType === 'Artist' && usr.acc_Status === 'Active').length;\r\n\r\nlet artEnthu = listOfUsers.filter (usr => usr.accessType === 'Standard' && usr.acc_Status === 'Active').length;\r\nlet Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery').length;\r\nlet CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed' || ord.orderStatus === 'Rejected').length;\r\n\r\nlet CompletedOrders = listOfOrders.filter (ord => ord.orderStatus === 'Completed' ).length;\r\n\r\nlet salesYTD =  listOfOrders.map(product => {\r\n  \r\n  return (\r\n\r\n    listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n    .reduce((sum, record) => parseInt(sum) + parseInt(record.totalAmount) , 0)\r\n\r\n\r\n\r\n    );\r\n\r\n })\r\n const sales = `${salesYTD.pop()}`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} sm={12} xs={12}>\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nSales YTD\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>\r\n  {sales === 'undefined' ?(\r\n    '0'\r\n  ):(\r\n  sales\r\n  )\r\n\r\n}\r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n{/* <PersonAddDisabledIcon style={{fontSize:\"3.5em\"}}/> */}\r\n<MDBIcon icon=\"users\" style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArt Enthusiasts\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{artEnthu}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n  <Grid container xs={12} sm={12}>\r\n\r\n  <Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"user-tie\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n    <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n   \r\n<Typography className={classes.title}   >\r\nArtists\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{activeArtists}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"clipboard-list\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea > */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={5} sm={5}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<CollectionsBookmarkOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={7} sm={7} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCompleted Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{CompletedOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import { MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          View Artwork\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='artwork' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;\r\n","\r\n\r\nimport { message} from 'antd';\r\nimport {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBModalFooter,\r\n  MDBContainer\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../sections/DownloadImage';\r\n\r\n class PendingOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n    modalConfApprove:false,\r\n    modalConfReject:false\r\n   \r\n  };\r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder,notif,addNotif,order}} = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData')) \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n   \r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Pending' ) {\r\n              return Delivery; }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( `${user.accFname} ${user.accLname}`\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n       order.setProperty('_id',itm._id)\r\n       order.setProperty('accID',itm.accID)\r\n\r\n          this.setState({\r\n            modalConfApprove: true\r\n            \r\n            });\r\n\r\n \r\n          };\r\n\r\n          let confirmApprove =()=>{\r\n\r\n            editOrder(order._id, 'PendingPrint', order.accID)\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Approved', 3));\r\n            };\r\n  \r\n  \r\n            notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n            notif.setProperty('notifSender','admin-001')\r\n            notif.setProperty('notifRecipient','print-001')\r\n            notif.setProperty('notifSubject','Printing')\r\n            notif.setProperty('notifMsg','New item to print')\r\n            notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n            notif.setProperty('notifStatus','unread')\r\n  addNotif()\r\n  \r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n\r\n          }\r\n          \r\n\r\n\r\n\r\n\r\n          let reject =(itm)=>{\r\n\r\n            order.setProperty('_id',itm._id)\r\n            order.setProperty('accID',itm.accID)\r\n     \r\n               this.setState({\r\n                 modalConfReject: true\r\n                 \r\n                 });\r\n     \r\n          }\r\n\r\n\r\n          let confirmReject = ()=>{\r\n\r\n            editOrder(order._id, 'Rejected', order.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n\r\n            notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n            notif.setProperty('notifSender','admin-001')\r\n            notif.setProperty('notifRecipient',userData.accID)\r\n            notif.setProperty('notifSubject','Order')\r\n            notif.setProperty('notifMsg','Order Rejected')\r\n            notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n            notif.setProperty('notifStatus','unread')\r\n          addNotif()\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n\r\n\r\n          }\r\n    \r\n          let  toggle = (itm) => {\r\n\r\n\r\n            order.setProperty('orderItems',itm.orderItems)\r\n            order.setProperty('orderID',itm.orderID)\r\n            order.setProperty('modeOfPayment',itm.modeOfPayment)\r\n            order.setProperty('orderDate',itm.orderDate)\r\n            order.setProperty('orderStatus',itm.orderStatus)\r\n            order.setProperty('paymentStatus',itm.paymentStatus)\r\n            order.setProperty('totalAmount',itm.totalAmount)\r\n            order.setProperty('partnerEarnings',itm.partnerEarnings)\r\n            order.setProperty('accID',itm.accID)\r\n         \r\n            this.setState({\r\n            \r\n              items:order.orderItems\r\n            });\r\n        setTimeout(()=>{\r\n          this.setState({\r\n            modal: !this.state.modal,\r\n          \r\n          });\r\n        },100)\r\n         \r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n              modalConfApprove:false,\r\n              modalConfReject:false\r\n            \r\n            });\r\n          }\r\n\r\nconst PendingOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:\r\n        <div style={{maxWidth:'310px',float:'right',marginLeft:'0px'}}><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.orderDB)} color='yellow' size=\"sm\"> Items</MDBBtn> <MDBBtn style={{float:'left'}} onClick={()=>approve(row.orderDB)} color='approve' size=\"sm\"> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.orderDB)} color='reject' size=\"sm\"> Reject</MDBBtn></div>,\r\n\r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n   \r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      responsive\r\n      data={data}\r\n    />\r\n\r\n <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Order Items</span></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n      <h6>Order#: {order.orderID}</h6>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n            \r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n          {this.state.items.map((data) => (\r\n              <Fragment>\r\n  \r\n              <tr>\r\n           \r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n              </Fragment>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n\r\n<MDBContainer>\r\n  <MDBModal isOpen={this.state.modalConfApprove}  size=\"small\" centered>\r\n      <MDBModalHeader  style={{backgroundColor:'#231F20'}} ><span style={{color:'#FAE933',marginLeft:'8px'}}>Confirmation</span></MDBModalHeader>\r\n        <MDBModalBody > \r\n         Are you sure you to approve this order?\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"secondary\" size=\"sm\" onClick={()=>close()}>Cancel</MDBBtn>\r\n          <MDBBtn color=\"primary\" size=\"sm\" onClick={()=>confirmApprove()}>Confirm</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n      </MDBContainer>\r\n\r\n      <MDBModal isOpen={this.state.modalConfReject}  size=\"sm\" centered>\r\n      <MDBModalHeader  style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Confirmation</span></MDBModalHeader>\r\n        <MDBModalBody>\r\n          Are you sure you to reject this order?\r\n        </MDBModalBody>\r\n        <MDBModalFooter>\r\n          <MDBBtn color=\"secondary\" size=\"sm\" onClick={()=>close()}>Cancel</MDBBtn>\r\n          <MDBBtn color=\"primary\" size=\"sm\" onClick={()=>confirmReject()}>Confirm</MDBBtn>\r\n        </MDBModalFooter>\r\n      </MDBModal>\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody,\r\n\r\n\r\n\r\n  MDBFormInline\r\n} from 'mdbreact';\r\nimport React from 'react';\r\nimport DashCard from './DashCards';\r\nimport PendingArtistTable from './sections/PendingArtistTable';\r\nimport PendingArtworkTable from './sections/PendingArtworkTable';\r\nimport PendingOrderTable from './sections/PendingOrderTable';\r\n\r\n\r\nconst DashboardSection = () => {\r\n  return (\r\n    <div>\r\n      <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n            \r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBFormInline className='md-form m-0 adminsearch'>\r\n              {/* <input\r\n                className='form-control form-control-sm'\r\n                type='search'\r\n                placeholder='Type your query'\r\n                aria-label='Search'\r\n              /> */}\r\n              {/* <MDBBtn size='sm' color='#FAE933' className='my-0' type='submit'>\r\n                <MDBIcon icon='search' />\r\n              </MDBBtn> */}\r\n            </MDBFormInline>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      <div className='mb-4'>\r\n<DashCard/>\r\n</div>\r\n<Grid container  xs={12} sm={12}>\r\n  <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n    \r\n  <Paper>\r\n    <div className='p-2 '>\r\n<h3>Pending Orders</h3>\r\n      <PendingOrderTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid> \r\n\r\n\r\n\r\n      <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Pending Arworks</h3>\r\n      <PendingArtworkTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Artist Membership Requests</h3>\r\n      <PendingArtistTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>   \r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSection;\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n\r\n\r\n  MDBModalFooter, MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class UserFeedback extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getFeedback,getAccounts},\r\n      } = this.props;\r\n   getFeedback()\r\n   getAccounts()\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfFeedback,feedback,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(fbID,acID,ordID,date, note) {\r\n        return { fbID,acID,ordID,date, note };\r\n      }\r\n  \r\n  let filtFeedback = listOfFeedback.map(fb =>{\r\n              return(createData(\r\n             fb.feedbackID,listOfUsers.filter(usr => usr._id === fb.accID) .map(acc => `${acc.accFname} ${acc.accLname}`)\r\n             ,fb.orderID,fb.date\r\n             ,fb.feedbackNote\r\n              ))\r\n            })\r\n\r\n\r\n            let  toggle = (itm) => {\r\n        \r\n                this.setState({\r\n                  modal: !this.state.modal,\r\n                  items:itm\r\n                });\r\n              feedback.setProperty('feedbackNote',itm)\r\n              };\r\n              let close =()=>{\r\n                this.setState({\r\n                  modal: false,\r\n                \r\n                });\r\n              }\r\n  \r\n    \r\n  \r\n  const FeedbackTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Sender',\r\n          field: 'sender',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order No.',\r\n          field: 'order',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Feedback',\r\n          field: 'fb',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        }\r\n  \r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...filtFeedback.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          sender: `${row.acID}`,\r\n         order: `${row.ordID}`,\r\n        \r\n          date: `${row.date}`,\r\n          fb: <div ><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.note)} color='yellow' size='sm'>View</MDBBtn> </div>,\r\n    \r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal\r\n    size='md'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n      style={{backgroundColor:'#231F20'}}\r\n    >\r\n      <h5 style={{color:'white'}}> User Feedback</h5> \r\n    </MDBModalHeader>\r\n    <MDBModalBody >\r\n    <p style={{margin:'8px'}}>{feedback.feedbackNote}</p>\r\n    </MDBModalBody>\r\n    <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" size='sm' onClick={()=>close()}>Close</MDBBtn>\r\n           \r\n          </MDBModalFooter>\r\n  </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <FeedbackTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(UserFeedback))\r\n  \r\n  ","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport Feedback from './sections/UserFeedback';\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Users Feedback</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    <Feedback/>\r\n\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../sections/DownloadImage';\r\n   class CancelledOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Cancelled') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const CancelledOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow' size='sm'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data) => (\r\n                <tr>\r\n                  <td>\r\n                    <img\r\n                      style={{width: '100% ', height: 'auto'}}\r\n                      src={data.artworkImg}\r\n                      alt='artwork'\r\n                    />\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <CancelledOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(CancelledOrder))"," import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from './DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow' size='sm'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt='artwork'\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../sections/DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Approved' || Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order Stat',\r\n        field: 'orderStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        orderStat:`${row.orderStat}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow' size='sm'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt='artwork'\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Cancelled from './../CancelledOrders';\r\nimport Completed from './../CompletedOrder';\r\nimport Orders from './../OrderTable';\r\nimport Pending from './../PendingOrderTable';\r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>My Orders</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Orders\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Completed\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '4'}\r\n                onClick={this.toggle('4')}\r\n                role='tab'\r\n              >\r\n                Cancelled\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Orders/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n            <Completed/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='4' role='tabpanel' className='tabs'>\r\n            <Cancelled/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import {\n  MDBBreadcrumb,\n  MDBBreadcrumbItem, MDBCard,\n  MDBCardBody\n} from 'mdbreact';\nimport React, { Component } from 'react';\nimport OrderTabs from './sections/OrderTab';\n\nclass OrdersTab extends Component {\n  render() {\n    return (\n      <div>\n        <div className='adminbreadcrumb'>\n          <MDBCard>\n            <MDBCardBody\n              id='breadcrumb'\n              className='d-flex align-items-center justify-content-between'\n            >\n              <MDBBreadcrumb>\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\n                <MDBBreadcrumbItem active>Orders</MDBBreadcrumbItem>\n              </MDBBreadcrumb>\n        \n            </MDBCardBody>\n          </MDBCard>\n        </div>\n        <MDBCard>\n          <MDBCardBody>\n      <OrderTabs/>\n      </MDBCardBody>\n      </MDBCard>\n      </div>\n    );\n  }\n}\n\nexport default OrdersTab;\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n  MDBBtn, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n      return (createData(\r\n          data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}>Save Changes</MDBBtn></div>\r\n      ))\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n   \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","\r\nimport { MDBBadge, MDBDropdown, MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle, MDBIcon } from \"mdbreact\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport moment from 'moment';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n\r\n\r\n  render() {\r\nlet{startingStore:{listOfNotif,notif,editNotif}}=this.props;\r\n\r\nlet notifNum = listOfNotif.filter(notif => notif.notifStatus === 'unread').length;\r\n\r\nlet  notifClicked =(notifInfo)=>{\r\n  editNotif(notifInfo._id, 'read', notifInfo.notifID)\r\n \r\n}\r\n\r\n\r\n\r\nlet notifData = listOfNotif.filter(notif => notif.notifStatus === 'unread').map((info,i) =>{\r\n  let dateToday = moment().format('MMM/DD/YY')\r\n  let dateNotif = '';\r\n  if (dateToday.slice(0,9) === info.notifDT.slice(0,9)){\r\n    dateNotif = `Today, ${info.notifDT.slice(10,20)}`\r\n  }else{\r\n    dateNotif = info.notifDT;\r\n  }\r\n  return(\r\n    <Fragment key={i}>\r\n   <MDBDropdownItem className=\"newnotif\" onClick={()=>{notifClicked(info)}}>\r\n     {info.notifMsg}\r\n          <span className=\"time\">{dateNotif}</span>\r\n        </MDBDropdownItem>\r\n    </Fragment>\r\n  )\r\n})\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n  <MDBBadge color=\"danger\" className=\"ml-2\">{notifNum}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic >\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     \r\n  {notifData}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import {\r\n    MDBBtn, MDBDataTable\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class ArtShares extends Component {\r\n\r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getAccounts,getArtShare},\r\n      } = this.props;\r\n \r\n   getAccounts()\r\n   getArtShare()\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,listOfArtShare}} = this.props;\r\n  \r\n      function createData(sharer,social,date) {\r\n        return { sharer,social,date };\r\n      }\r\n  \r\n  let filtartshare = listOfArtShare.map(as =>{\r\n    \r\n              return(createData(\r\n             listOfUsers.filter(usr => usr.accID=== as.userID) .map(acc => `${acc.accFname} ${acc.accLname}`)\r\n             ,as.social,as.dateTime\r\n             \r\n              ))\r\n            })\r\n\r\n\r\n   \r\n  \r\n    \r\n  \r\n  const ArtShareTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Sharer',\r\n          field: 'sharer',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Social media',\r\n          field: 'sm',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        }\r\n  \r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...filtartshare.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          sharer: `${row.sharer}`,\r\n         sm: `${row.social}`,\r\n        \r\n          date: `${row.date}`,\r\n        \r\n    \r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <ArtShareTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(ArtShares))\r\n  \r\n  ","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport SocialShare from './sections/SocialShares';\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Shared Artworks</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    \r\n<SocialShare/>\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol, MDBContainer,\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n\r\n\r\n\r\n  MDBRow\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddUser extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    // this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n     \r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD USER \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD USER \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(accessType) =>\r\n                      account.setProperty('accessType', accessType.target.value)\r\n                    }\r\n                  >\r\n                    <option> User Type </option>\r\n                    <option value='Standard'> Standard </option>\r\n                    <option value='Curator'> Curator </option>\r\n                    <option value='Admin'> Admin </option>\r\n                  </select>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder=\"Art Themes you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder=\"Art Style you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n                  />\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddUser));\r\n","import { message } from 'antd';\nimport {\n  MDBBtn, MDBDataTable, MDBModal,\n  MDBModalBody,\n  MDBModalFooter, MDBModalHeader\n} from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\n\n\n class Customer extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Standard' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreInfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n              this.setState({\n                modal: true\n              \n              });\n          };\n          let deactivate =(itm)=>{\n         \n\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n          }\n        \n\nconst CustomerTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n      \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve' size='sm'> More Info</MDBBtn>\n        <MDBBtn  onClick={()=>deactivate(row.userDB)} color='reject' size='sm'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                \n          \n                </div>\n              </div>\n       \n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <CustomerTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Customer))\n\n\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Standard' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n           \r\n  \r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n    \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n         \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve' size='sm'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject' size='sm'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  ","import {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Customers from './../CustomerTable';\r\nimport Deactivated from './../DeactivatedAccount';\r\n \r\n\r\n  \r\n  class UsrsTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Customer Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Customer\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Customers/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n           <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(UsrsTab)));\r\n  ","import { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddUser from './sections/AddUser';\r\nimport UserTab from './sections/UsersTab';\r\n\r\nexport class User extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Customer</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n          \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddUser/>\r\n       \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <UserTab />\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n\r\n\r\n\r\n  MDBNavbar, MDBNavItem,\r\n\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import Message from './sections/Message';\r\nimport '../css/admin.css';\r\nimport ArtistTab from './ArtistTab';\r\nimport ArtworkTab from './ArtworkTab';\r\nimport CategoryTab from './CategoryTab';\r\nimport Dashboard from './Dashboard';\r\nimport Feedback from './FeedbackTab';\r\nimport OrdersTab from './OrdersTab';\r\nimport MyAccount from './sections/AccountSettings/';\r\nimport Notif from './sections/Notif';\r\nimport Shares from './SharesTab';\r\nimport UserTab from './UserTab';\r\n\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/Admin')\r\n    // }\r\n\r\n    let {startingStore:{getOrders, getAccounts, getArtists, getStyles, getCategories,getPrintSize,getAllNotif,getAllArtworks}}=this.props;\r\n    getAccounts();\r\n    getOrders();\r\n    getAllNotif();\r\n    getAllArtworks()\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n    getPrintSize()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/Admin';\r\n  }\r\n    return (\r\n      <div>\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav'  style={{backgroundColor:'#231F20'}}>\r\n              <a href='/AdminHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Admin</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='bell' className='mr-3' />\r\n                    Orders\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='user' className='mr-3' />\r\n                    Customer\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='user-tie' className='mr-3' />\r\n                    Artists\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='th-large' className='mr-3' />\r\n                    Categories\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '9'}\r\n                    onClick={this.togglePills('default', '9')}\r\n                  >\r\n                    <MDBIcon icon='bullhorn' className='mr-3' />\r\n                    Shares\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '8'}\r\n                    onClick={this.togglePills('default', '8')}\r\n                  >\r\n                    <MDBIcon icon='comment-alt' className='mr-3' />\r\n                    Feedback\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <OrdersTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <UserTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <ArtistTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n              <CategoryTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='8'>\r\n              <Feedback />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n              <MyAccount />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='9'>\r\n              <Shares />\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBInput } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PartnerLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      if (res === 3) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PrintingPartner');\r\n      },1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Email or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PartnerLogin');\r\n      },1500)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li className='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label className='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PartnerLogin)))\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CancelledOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Cancelled' || Delivery.orderStatus === 'Rejected') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CancelledOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                    \r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CancelledOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CancelledOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport CCancelOrder from './sections/CCancelOrder';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Cancelled Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n       \r\n\r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Cancelled Orders</h3>\r\n <CCancelOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data,i) => (\r\n              <tr key={i}>\r\n                <td>\r\n            \r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport CCompletedOrder from './sections/CCompletedOrder';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Completed Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n    \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n     \r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Completed Orders</h3>\r\n <CCompletedOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrders,getOrderUser}}=this.props;\r\n    getOrders()\r\n    getOrderUser()\r\n    getAccounts()\r\n  }\r\n\r\n    render() {\r\n      let {startingStore:{listOfOrders,listOfUsers}}=this.props;\r\n      let Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery' || ord.orderStatus === 'Printing').length;\r\n      let CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed').length;\r\n\r\n\r\n      let salesYTD =  listOfOrders.map(product => {\r\n  \r\n        return (\r\n      \r\n          listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n          .reduce((sum, record) => parseInt(sum) + parseInt(record.partnerEarnings) , 0)\r\n      \r\n      \r\n      \r\n          );\r\n      \r\n       })\r\n       const sales = `${salesYTD.pop()}`;\r\n    //  let percent = 30;\r\n    //  let perctodec = percent/100;\r\n    //  let totalValue = perctodec * sales;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 17,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nEarnings YTD\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>\r\n  \r\n  {\r\n    sales == 'undefined' ?(\r\n      '0'\r\n    ):(\r\n      sales\r\n    )\r\n  }\r\n\r\n  \r\n  \r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\n class ForDelivery extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'ForDelivery') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreinfo = (itm) => {\r\n        \r\n       \r\n          };\r\n          let done =(itm)=>{\r\n            editOrder(itm._id, 'Completed', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Completed', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst ForDeliveryTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>moreinfo(row.orderDB)} color='approve'>More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>done(row.orderDB)} color='reject'> Done</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <ForDeliveryTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(ForDelivery))\r\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\n class PendingPrint extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'Printing', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Approved to print', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingPrintTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Approve</MDBBtn>\r\n        <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingPrintTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingPrint))","import {\r\n  MDBBtn, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from '../../../admin/sections/DownloadImage';\r\n  \r\n   class OngoingOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Printing' || Delivery.orderStatus === 'Delivery') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const OngoingOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data,i) => (\r\n                <tr key={i}>\r\n                  <td>\r\n              \r\n                  <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <OngoingOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(OngoingOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React from 'react';\r\nimport DashCards from './DashCards';\r\nimport FinishedProd from './sections/COrderDeli';\r\nimport CPendingOrders from './sections/CPendingOrders';\r\nimport OngoingProd from './sections/OngoingOrders';\r\n\r\n\r\nconst pDashboardSection = () => {\r\n  return (\r\n    <div style={{marginTop:'16px'}}>\r\n      <div className='printbreadcrumb' style={{marginBottom:'16px'}}>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n  \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n      <div className='mb-4'>\r\n      <DashCards/>\r\n      </div>\r\n\r\n\r\n      <Grid container  xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Pending Orders</h3>\r\n <CPendingOrders />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Ongoing Production</h3>\r\n <OngoingProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      \r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Finished Production</h3>\r\n <FinishedProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      </Grid>  \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pDashboardSection;\r\n","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport COrderDeli from './sections/COrderDeli';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Orders for Delivery</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n\r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Orders to delivery</h3>\r\n <COrderDeli />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n  \r\n  \r\n  \r\n   class Printing extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrders, getAccounts},\r\n      } = this.props;\r\n     \r\n      getAccounts();\r\n      getOrders();\r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n  \r\n      \r\n      function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n        return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((order) => {\r\n              if (order.orderStatus === 'Printing') {\r\n                return order;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  approve = (itm) => {\r\n            editOrder(itm._id, 'ForDelivery', itm.accID)\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Done Printing', 3));\r\n            };\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n            };\r\n            let reject =(itm)=>{\r\n              editOrder(itm._id, 'Rejected', itm.accID)\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Order Rejected', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n              setTimeout(()=>{\r\n                window.location.reload(false);\r\n              },1500)\r\n            }\r\n          \r\n  \r\n  const PrintingTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Done</MDBBtn>\r\n          <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Cancel</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PrintingTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Printing))","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport Printing from './../sections/Printing';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Printing</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n   \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n \r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Printing</h3>\r\n <Printing/>\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n  MDBBtn, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\nlet getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n    \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","import React from 'react';\r\nimport {\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from 'mdbreact';\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className='topicons'>\r\n      <MDBDropdownToggle color='transparent'>\r\n        <MDBIcon icon='bell' className='mr-3' style={{color:'white'}}/>\r\n        <MDBBadge color='danger' className='ml-2'>\r\n          4\r\n        </MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className='title'>NOTIFICATIONS</div>\r\n        <MDBDropdownItem className='newnotif'>\r\n          Recieved an order from Jane Doe\r\n          <span className='time'>just now</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem className='newnotif'>\r\n          New art submission\r\n          <span className='time'>2 seconds ago</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 3<span className='time'>13:28</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 4<span className='time'>15:01</span>\r\n        </MDBDropdownItem>\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n};\r\n\r\nexport default Notif;\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass EditCat extends Component {\r\n  state = {\r\n    modal: false,\r\n  };\r\n\r\n  toggle = () => () => {\r\n    \r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editPrintOption, printoption},\r\n    } = this.props;\r\n    printoption.setProperty('optionID', this.props.data.optionID);\r\n    printoption.setProperty('printCat', this.props.data.printCat);\r\n    const success = () => {\r\n      message\r\n        .loading('', 1)\r\n        .then(() => message.success('Changes saved', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 100);\r\n\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n    editPrintOption();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printoption},\r\n    } = this.props;\r\n\r\n   \r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle()} color='transparent'>\r\n          Edit\r\n        </MDBBtn>\r\n        {this.props.data.printCat === 'material' ? (    \r\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle()} centered>\r\n          <MDBModalHeader toggle={this.toggle()} style={{backgroundColor:'#231F20'}}>\r\n           <span style={{color:'white'}}> Edit Material</span>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Material Name'\r\n                type='text'\r\n                valueDefault={this.props.data.printOptions}\r\n              \r\n                onChange={(printOptions) =>\r\n                  printoption.setProperty('printOptions', printOptions.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Category Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>):(   \r\n           <MDBModal isOpen={this.state.modal} toggle={this.toggle()} centered>\r\n        <MDBModalHeader toggle={this.toggle()} style={{backgroundColor:'#231F20'}}>\r\n           <span style={{color:'white'}}> Edit Frame</span>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Frame Name'\r\n                type='text'\r\n                valueDefault={this.props.data.printOptions}\r\n              \r\n                onChange={(printOptions) =>\r\n                  printoption.setProperty('printOptions', printOptions.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Category Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>)}\r\n    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditCat));\r\n","import {\r\n  MDBCard,\r\n  MDBCardBody,\r\n\r\n\r\n\r\n\r\n  MDBCol, MDBRow, MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport EditMat from '../EditOpt'\r\nimport EditFrame from '../EditOpt'\r\n\r\nclass CategoryTable extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getPrintOption},\r\n    } = this.props;\r\n    getPrintOption();\r\n\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfPrintoption},\r\n    } = this.props;\r\n  \r\n    return (\r\n      <div className='clearfix'>\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Material Lists</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Theme Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfPrintoption.filter(data => data.printCat === 'material').map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.printOptions}</td>\r\n                        <td className='edittd'>\r\n                          <EditMat data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Frame Lists</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Style Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfPrintoption.filter(data => data.printCat === 'frame').map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.printOptions}</td>\r\n                        <td className='edittd'>\r\n                          <EditFrame data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CategoryTable));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBContainer,\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddCat extends Component {\r\n  state = {\r\n    modal: false,\r\n   \r\n  };\r\n\r\n  toggle =()=> ()  => {\r\n    \r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addPrintOption , printoption},\r\n    } = this.props;\r\n    printoption.setProperty('optionID', this.getUniqueID());\r\n    printoption.setProperty('printCat', 'material');\r\n    const success = () => {\r\n      message\r\n        .loading('', 1.2)\r\n        .then(() => message.success('Successfully added', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addPrintOption ();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printoption,},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle()} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Material\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal} toggle={this.toggle()} centered>\r\n            <MDBModalHeader toggle={this.toggle()}>\r\n              Add Material\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandler} className='formbtn'>\r\n                <MDBInput\r\n                  label='Matherial Name'\r\n                  type='text'\r\n                  onChange={(printOptions) =>\r\n                    printoption.setProperty('printOptions', printOptions.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n \r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddCat));\r\n","import { message } from 'antd';\r\nimport {\r\n  MDBBtn, MDBContainer,\r\n\r\n\r\n\r\n\r\n  MDBIcon, MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\n\r\nclass AddFrames extends Component {\r\n  state = {\r\n    modal: false,\r\n   \r\n  };\r\n\r\n  toggle =()=> ()  => {\r\n    \r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addPrintOption , printoption},\r\n    } = this.props;\r\n    printoption.setProperty('optionID', this.getUniqueID());\r\n    printoption.setProperty('printCat', 'frame');\r\n    const success = () => {\r\n      message\r\n        .loading('', 1.2)\r\n        .then(() => message.success('Successfully added', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addPrintOption ();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printoption,},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle()} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Frame\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal} toggle={this.toggle()} centered>\r\n            <MDBModalHeader toggle={this.toggle()}>\r\n              Add Frame\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandler} className='formbtn'>\r\n                <MDBInput\r\n                  label='Frame Name'\r\n                  type='text'\r\n                  onChange={(printOptions) =>\r\n                    printoption.setProperty('printOptions', printOptions.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n \r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddFrames));\r\n","import { Grid, Paper } from '@material-ui/core';\r\nimport { MDBBreadcrumb, MDBBreadcrumbItem, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport Customize from './sections/Customize';\r\nimport AddCustom from './sections/AddMaterial'\r\nimport AddFrame from './sections/AddFrame'\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Printing Options</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n   \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n<AddCustom/>\r\n <AddFrame/>\r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div className='p-2 '>\r\n <h3>Printing Options</h3>\r\n <Customize/>\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n\r\n\r\n\r\n  MDBNavbar, MDBNavItem,\r\n\r\n  MDBNavLink,\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/printart.css';\r\nimport CancelOrdertab from './CancelOrdertab';\r\nimport CompletedOrderTab from './CompletedOrderTab';\r\nimport Dashboard from './Dashboard';\r\n\r\nimport OrderDeliverytab from './OrderDeliverytab';\r\nimport PrintingTab from './PrintingTab';\r\nimport MyAccount from './sections/AccountSetting/';\r\nimport Notif from './sections/Notif';\r\nimport Customize from './CustomizeTab'\r\n\r\n\r\nclass PrintingPartner extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/PartnerLogin')\r\n    // }\r\n\r\n    getOrders();\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/PartnerLogin';\r\n  }\r\n    return (\r\n      <div className='admin'>\r\n        <MDBNavbar className='position-fixed' dark expand='md'>\r\n          <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n            <a href='/PrintingPartner' className='logo-wrapper ablogo'>\r\n              <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n              <p style={{color:'white'}}>Printing</p>\r\n            </a>\r\n            <div className='topcon'>\r\n              {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n              <MDBNavItem>\r\n                <Notif />\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBBtn\r\n                  onClick={() => logout()}\r\n                  color='transparent'\r\n                  className='btnYellow logout'\r\n                >\r\n                  Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n            </div>\r\n          </MDBNav>\r\n          <MDBHamburgerToggler\r\n            color='#FAE933'\r\n            id='hamburger1'\r\n            onClick={() => this.toggleSingleCollapse('collapse1')}\r\n          />\r\n          <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n            <MDBNav\r\n              className='nav-pills sidebar-fixed position-fixed adminside'\r\n              id='pills-tab'\r\n              role='tablist'\r\n            >\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '1'}\r\n                  onClick={this.togglePills('default', '1')}\r\n                >\r\n                  <MDBIcon icon='chart-pie' className='mr-3' />\r\n                  Dashboard\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '2'}\r\n                  onClick={this.togglePills('default', '2')}\r\n                >\r\n                  <MDBIcon icon='print' className='mr-3' />\r\n                  Printing\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '3'}\r\n                  onClick={this.togglePills('default', '3')}\r\n                >\r\n                  <MDBIcon icon='truck' className='mr-3' />\r\n                  Delivery\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '4'}\r\n                  onClick={this.togglePills('default', '4')}\r\n                >\r\n                  <MDBIcon icon='calendar-check' className='mr-3' />\r\n                  Completed\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '5'}\r\n                  onClick={this.togglePills('default', '5')}\r\n                >\r\n                  <MDBIcon icon='ban' className='mr-3' />\r\n                  Cancelled\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '6'}\r\n                  onClick={this.togglePills('default', '6')}\r\n                >\r\n                  <MDBIcon icon='th-large' className='mr-3' />\r\n                  Customize\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem>\r\n\r\n   \r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n            </MDBNav>\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='2'>\r\n              <PrintingTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <OrderDeliverytab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <CompletedOrderTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <CancelOrdertab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n              <Customize />\r\n            </MDBTabPane>\r\n\r\n            <MDBTabPane tabId='7'>\r\n      <MyAccount/>\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PrintingPartner)))\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { message } from 'antd';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n  MDBBtn, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n\r\n   \r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass] = React.useState('')\r\n  const [confPass,setConfPass] = React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' style={{float:'left'}}>\r\n          General\r\n      </h6>\r\n      <p style={{float:'right'}}>Account#:{mydata.accID}</p>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Institution :</span>   <TextField type='text' defaultValue={row.institution}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' style={{minWidth:'300px'}} defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password' style={{minWidth:'300px'}}     onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'15px'}}>Confirm Password :</span> <TextField type='password' style={{minWidth:'300px'}}   onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { MDBIcon, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[],\r\n      activeItem:'1'\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n    toggleTab = tab => e => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab\r\n        });\r\n      }\r\n    };\r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style,  price,action) {\r\n        return { artworkDB,id,title,artist, style,  price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Active' &&  art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n         \r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n\r\n        \r\n            artwork.setProperty('artHeight',itm.artHeight)\r\n            artwork.setProperty('artWidth',itm.artWidth)\r\n            artwork.setProperty('artFormat',itm.artFormat)\r\n            artwork.setProperty('artDPI',itm.artDPI)\r\n           \r\n         \r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n\r\n            let archive =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Archived', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve' size='sm'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject' size='sm'> Archive</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={6}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n            <Typography variant='subtitle2'  style={{float:'right'}}>\r\n Artwork ID: {artwork.artworkID}\r\n      </Typography>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{paddingLeft:'10px'}}>\r\n        <MDBNav className=\"nav-tabs \">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggleTab(\"1\")} role=\"tab\" >\r\n              Summary\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggleTab(\"2\")} role=\"tab\" >\r\n             Properties\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggleTab(\"3\")} role=\"tab\" >\r\n              Details\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Artist:</b> {artwork.artistName}</Typography>\r\n            <Typography variant='body2'><b>Theme :</b> {artwork.artTheme}</Typography>\r\n     <Typography variant='body2'><b>Style : </b>{artwork.artStyle} </Typography>\r\n     <Typography variant='body2'><b>Type : </b>{artwork.artType}</Typography>\r\n    <Typography variant='body2'><b>Pinting Size : </b>{artwork.artSize}</Typography>\r\n    <Typography variant='body2'><b>Price : </b>&#8369;{`${Number(parseFloat(artwork.artPrice)).toLocaleString('en')}.00`}</Typography>\r\n    <Typography variant='body2'><b>Uploaded : </b>{artwork.dateAdded}</Typography>\r\n              \r\n            </p>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Dimension : </b>{artwork.artDimension}</Typography>\r\n            <Typography variant='body2'><b>Format : </b>{artwork.artFormat}</Typography>\r\n    <Typography variant='body2'><b>Height : </b>{artwork.artHeight}</Typography>\r\n     <Typography variant='body2'><b>Width : </b>{artwork.artWidth} </Typography>\r\n    <Typography variant='body2'><b>DPI : </b> { artwork.artDPI >=72 ? (<span style={{color:'green'}}>{artwork.artDPI} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/></span>):(<span style={{color:'red'}}>{artwork.artDPI} <MDBIcon far icon=\"times-circle\" style={{color:'red'}}/></span>)} </Typography>\r\n    \r\n            </p>\r\n       \r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            {artwork.artDescription}\r\n            </p>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n\r\n\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component, Fragment} from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport { number } from 'joi';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onImgLoad = this.onImgLoad.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n      imgRaw:null,\r\n      height:null,\r\n      width:null,\r\n      selectedSize:null,\r\n      dpi:null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async onFileChange(event) {\r\n  \r\n    var imageFile = event.target.files[0];\r\n\r\n  this.setState({imgRaw : URL.createObjectURL(event.target.files[0])})\r\n    \r\n    var options = {\r\n      maxSizeMB: 100,\r\n      maxWidthOrHeight: 10000,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n\r\n  onImgLoad({target:img}) {\r\n  \r\n\r\n    let calcPixels = img.offsetWidth+img.offsetHeight;\r\n    \r\n    this.setState({height:img.offsetHeight,width:img.offsetWidth,dpi:Number(calcPixels/this.state.selectedSize).toFixed(2)});\r\n\r\n}\r\n\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {artwork,upload,listOfArtworks},\r\n    } = this.props;\r\n    let getArtNames = listOfArtworks.filter(data=> data.artName === artwork.artName).length\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    e.preventDefault();\r\n    if (getArtNames === 0){\r\n    const data = new FormData();\r\n \r\n    data.append('artworkImg',this.state.selectedFile);\r\n    artwork.setProperty('artistName', `${mydata.accFname} ${mydata.accLname}`)\r\n    artwork.setProperty('artDPI', this.state.dpi)\r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Artwork submitted', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }else{\r\n    const success = () => {\r\n      message\r\n        .loading('Checking Availability', 1.3)\r\n        .then(() => message.success('Art name already taken', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n  \r\n   \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\n  \r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\nartwork.setProperty('accID',mydata.accID)\r\nartwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    let selectArtSize =(list, listitem)=> {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n\r\n\r\n        if (artSizeSelected == 'AP - portrait, 1.5x2'){\r\n          this.setState({selectedSize:42})\r\n    \r\n        }\r\n        else if(artSizeSelected == \"AP - portrait, 3x4\"){\r\n          this.setState({selectedSize:84})\r\n        }else if(artSizeSelected == \"B - square, 2x2\"){\r\n          this.setState({selectedSize:48})\r\n        }else if(artSizeSelected == \"B - square, 4x4\"){\r\n          this.setState({selectedSize:96}) \r\n        }\r\n          \r\n          else if(artSizeSelected == \"CP - portrait, 2x3\"){\r\n            this.setState({selectedSize:60})\r\n  \r\n        }else if(artSizeSelected == \"CP - portrait, 4x6\"){\r\n          this.setState({selectedSize:120})\r\n        }else if(artSizeSelected == \"DL - landscape, 2x1.5\"){\r\n          this.setState({selectedSize:42})\r\n        }else if(artSizeSelected == \"DL - landscape, 4x3\"){\r\n          this.setState({selectedSize:84})\r\n        }else if(artSizeSelected == \"EL - landscape, 3x2\"){\r\n          this.setState({selectedSize:60})\r\n        }else if(artSizeSelected == \"EL - landscape, 6x4\"){\r\n          this.setState({selectedSize:120})\r\n        }\r\n        else {\r\n            this.setState({selectedSize:0})\r\n            console.log('false')\r\n        }\r\n     \r\n     \r\n    }\r\n \r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#262626'}}><span style={{color:'white'}}> Register Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>{\r\n                    \r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Artist'\r\n                    type='text'\r\n                    disabled\r\n                    style={{width:'95%'}}\r\n                    valueDefault={`${mydata.accFname} ${mydata.accLname}`}\r\n                  \r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='number'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n            \r\n              \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    required\r\n                  />\r\n                  </div>\r\n                  \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                  style={{width:'95%'}}\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    required\r\n                  />\r\n                   </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n              \r\n                     <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfPrintSize}\r\n                    placeholder='Printing Size'\r\n                    showCheckbox={true}\r\n                    displayValue='printSize'\r\n                    onSelect={selectArtSize}\r\n                    required\r\n                  />\r\n                  </div>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                  required\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                 \r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Quantity'\r\n                    type='number'\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                    style={{width:'95%'}}\r\n                    required\r\n                      type='file'\r\n                      name='file'\r\n                      disabled={this.state.selectedSize === null  ? true:false}\r\n                      onChange={this.onFileChange}\r\n                      style={{overflow: 'hidden',textOverflow:' ellipsis'}}\r\n                      \r\n                    />\r\n                    <div  style={{height:'0',overflow:'scroll',width:'0',}}>\r\n                    <img onLoad={this.onImgLoad} src={this.state.imgRaw} alt='' visiblity='hide' />\r\n                    </div>\r\n                    {(this.state.height == null)?(\r\n                      <span></span>\r\n                    ):(\r\n                      <Fragment>\r\n                     \r\n              \r\n                     { (this.state.dpi >= 72 )?(\r\n                        <p style={{color:'green'}}>DPI: {this.state.dpi} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/>  </p>\r\n                      ):(\r\n                        <p style={{color:'red'}}>DPI: {this.state.dpi} - low dpi</p>\r\n                      )\r\n                      }\r\n                      </Fragment>\r\n                    )}\r\n                  \r\n                    <p className='req'>\r\n                      Please upload a high resolution photo with 72dpi and above.\r\n                     \r\n                     \r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit' disabled={this.state.dpi <= 72?true:false}>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import { Grid , Typography} from '@material-ui/core';\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { MDBIcon, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[],\r\n      activeItem:'1'\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n    toggleTab = tab => e => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab\r\n        });\r\n      }\r\n    };\r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Archived' && art.accID === mydata.accID).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n\r\n\r\n                      \r\n            artwork.setProperty('artHeight',itm.artHeight)\r\n            artwork.setProperty('artWidth',itm.artWidth)\r\n            artwork.setProperty('artFormat',itm.artFormat)\r\n            artwork.setProperty('artDPI',itm.artDPI)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n         \r\n            };\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve' size='sm'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject' size='sm'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={6}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n            <Typography variant='subtitle2'  style={{float:'right'}}>\r\n Artwork ID: {artwork.artworkID}\r\n      </Typography>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{paddingLeft:'10px'}}>\r\n        <MDBNav className=\"nav-tabs \">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggleTab(\"1\")} role=\"tab\" >\r\n              Summary\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggleTab(\"2\")} role=\"tab\" >\r\n             Properties\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggleTab(\"3\")} role=\"tab\" >\r\n              Details\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Artist:</b> {artwork.artistName}</Typography>\r\n            <Typography variant='body2'><b>Theme :</b> {artwork.artTheme}</Typography>\r\n     <Typography variant='body2'><b>Style : </b>{artwork.artStyle} </Typography>\r\n     <Typography variant='body2'><b>Type : </b>{artwork.artType}</Typography>\r\n    <Typography variant='body2'><b>Pinting Size : </b>{artwork.artSize}</Typography>\r\n    <Typography variant='body2'><b>Price : </b>&#8369;{`${Number(parseFloat(artwork.artPrice)).toLocaleString('en')}.00`}</Typography>\r\n    <Typography variant='body2'><b>Uploaded : </b>{artwork.dateAdded}</Typography>\r\n              \r\n            </p>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Dimension : </b>{artwork.artDimension}</Typography>\r\n            <Typography variant='body2'><b>Format : </b>{artwork.artFormat}</Typography>\r\n    <Typography variant='body2'><b>Height : </b>{artwork.artHeight}</Typography>\r\n     <Typography variant='body2'><b>Width : </b>{artwork.artWidth} </Typography>\r\n    <Typography variant='body2'><b>DPI : </b> { artwork.artDPI >=72 ? (<span style={{color:'green'}}>{artwork.artDPI} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/></span>):(<span style={{color:'red'}}>{artwork.artDPI} <MDBIcon far icon=\"times-circle\" style={{color:'red'}}/></span>)} </Typography>\r\n    \r\n            </p>\r\n       \r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            {artwork.artDescription}\r\n            </p>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n\r\n\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { Grid, Typography } from '@material-ui/core';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { MDBIcon, MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n  \r\n   class PendingArtwork extends Component { \r\n    state = {\r\n      modal: false,\r\n      items:[],\r\n      activeItem:'1'\r\n     \r\n    };\r\n\r\n\r\n    componentDidMount() {   \r\n      let {\r\n        startingStore: {getAllArtworks},\r\n      } = this.props;\r\n      getAllArtworks();\r\n \r\n  \r\n    }\r\n  \r\n   \r\n    toggleTab = tab => e => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab\r\n        });\r\n      }\r\n    };\r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks,  artwork}} = this.props;\r\n\r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending' && art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n            let  info = (itm) => {\r\n\r\n              artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              artwork.setProperty('artHeight',itm.artHeight)\r\n              artwork.setProperty('artWidth',itm.artWidth)\r\n              artwork.setProperty('artFormat',itm.artFormat)\r\n              artwork.setProperty('artDPI',itm.artDPI)\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n              };\r\n              let  close= () => {\r\n       \r\n                this.setState({\r\n                  modal: false\r\n                });\r\n                };\r\n     \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          id: `${row.id}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve' size='sm'>More Info</MDBBtn></div>\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped  \r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n  <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',color:'white'}}><span style={{color:'#FAE933',marginLeft:'8px'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' >\r\n            <Grid item xs={6}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n            <Typography variant='subtitle2'  style={{float:'right'}}>\r\n Artwork ID: {artwork.artworkID}\r\n      </Typography>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg} alt='artwork' /></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{paddingLeft:'10px'}}>\r\n        <MDBNav className=\"nav-tabs \">\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"1\"} onClick={this.toggleTab(\"1\")} role=\"tab\" >\r\n              Summary\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"2\"} onClick={this.toggleTab(\"2\")} role=\"tab\" >\r\n             Properties\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink link to=\"#\" active={this.state.activeItem === \"3\"} onClick={this.toggleTab(\"3\")} role=\"tab\" >\r\n              Details\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n        <MDBTabContent activeItem={this.state.activeItem} >\r\n          <MDBTabPane tabId=\"1\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Artist:</b> {artwork.artistName}</Typography>\r\n            <Typography variant='body2'><b>Theme :</b> {artwork.artTheme}</Typography>\r\n     <Typography variant='body2'><b>Style : </b>{artwork.artStyle} </Typography>\r\n     <Typography variant='body2'><b>Type : </b>{artwork.artType}</Typography>\r\n    <Typography variant='body2'><b>Pinting Size : </b>{artwork.artSize}</Typography>\r\n    <Typography variant='body2'><b>Price : </b>&#8369;{`${Number(parseFloat(artwork.artPrice)).toLocaleString('en')}.00`}</Typography>\r\n    <Typography variant='body2'><b>Uploaded : </b>{artwork.dateAdded}</Typography>\r\n              \r\n            </p>\r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"2\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            <Typography variant='body2'><b>Dimension : </b>{artwork.artDimension}</Typography>\r\n            <Typography variant='body2'><b>Format : </b>{artwork.artFormat}</Typography>\r\n    <Typography variant='body2'><b>Height : </b>{artwork.artHeight}</Typography>\r\n     <Typography variant='body2'><b>Width : </b>{artwork.artWidth} </Typography>\r\n    <Typography variant='body2'><b>DPI : </b> { artwork.artDPI >=72 ? (<span style={{color:'green'}}>{artwork.artDPI} <MDBIcon far icon=\"check-circle\" style={{color:'green'}}/></span>):(<span style={{color:'red'}}>{artwork.artDPI} <MDBIcon far icon=\"times-circle\" style={{color:'red'}}/></span>)} </Typography>\r\n    \r\n            </p>\r\n       \r\n          </MDBTabPane>\r\n          <MDBTabPane tabId=\"3\" role=\"tabpanel\">\r\n            <p className=\"mt-2\">\r\n            {artwork.artDescription}\r\n            </p>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n\r\n\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()} size='sm'>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  ","import Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n\r\n\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Artworks from './ActiveArtworks';\r\nimport AddArtwork from './AddArtwork';\r\nimport ArchivedArtwors from './ArchivedArtworks';\r\nimport Pending from './PendingArtwork';\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {   \r\n      let {\r\n        startingStore: {getAllArtworks, getArtists, getStyles, getCategories,getPrintSize},\r\n      } = this.props;\r\n      getAllArtworks();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n      getPrintSize()\r\n  \r\n    }\r\n  \r\n    render() {\r\n    \r\n  \r\n      return (\r\n<Fragment>\r\n        <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n        <div className='orderconAdmin' style={{marginTop:'16px'}}>\r\n        <Grid container sm={12}>\r\n            <Grid item sm={6}>\r\n        <h4>Artwork Lists</h4>\r\n        </Grid>\r\n        <Grid item sm={6} >\r\n            <div style={{float:'right'}}>\r\n<AddArtwork/>\r\n</div>\r\n</Grid> \r\n</Grid> \r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>   \r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import { MDBModal, MDBModalBody, MDBModalHeader } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='artwork' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBDataTable,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n} from \"mdbreact\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport DownloadImage from \"./DownloadImage\";\r\nclass Earnings extends Component {\r\n  state = {\r\n    modal: false,\r\n    items: [],\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    let {\r\n      startingStore: { listOfOrders, listOfUsers },\r\n    } = this.props;\r\n\r\n    function createData(\r\n      items,\r\n      id,\r\n      orderBy,\r\n      date,\r\n      orderStat,\r\n      paymentStat,\r\n      action\r\n    ) {\r\n      return { items, id, orderBy, date, orderStat, paymentStat, action };\r\n    }\r\n\r\n\r\n    let getMyOrder = listOfOrders\r\n    .filter((Delivery) =>{\r\n      for(let x=0;x<Delivery.orderItems.length;x++){\r\n        if (\r\n          Delivery.orderItems[x].accID == mydata.accID\r\n\r\n          ){\r\n          return Delivery\r\n\r\n        }\r\n\r\n      }\r\n    })\r\n   \r\n    let Corder = getMyOrder.map((orders) => {\r\n        return createData(\r\n          orders.orderItems,\r\n          orders.orderID,\r\n          listOfUsers\r\n            .filter((usr) => usr._id === orders.accID)\r\n            .map((user) => user.accFname),\r\n          orders.orderDate,\r\n          orders.orderStatus,\r\n          orders.paymentStatus\r\n        );\r\n      });\r\n\r\n    let toggle = (itm) => {\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n        items: itm,\r\n      });\r\n    };\r\n    let close = () => {\r\n      this.setState({\r\n        modal: false,\r\n      });\r\n    };\r\n\r\n    const CompletedOrderTable = () => {\r\n      const data = {\r\n        columns: [\r\n          {\r\n            label: \"ID\",\r\n            field: \"id\",\r\n            sort: \"asc\",\r\n            width: \"auto\",\r\n          },\r\n          {\r\n            label: \"Order By\",\r\n            field: \"orderBy\",\r\n            sort: \"asc\",\r\n            width: \"auto\",\r\n          },\r\n          {\r\n            label: \"Date\",\r\n            field: \"date\",\r\n            sort: \"asc\",\r\n            width: \"auto\",\r\n          },\r\n\r\n          {\r\n            label: \"Payment Stat\",\r\n            field: \"paymentStat\",\r\n            sort: \"asc\",\r\n            width: \"auto\",\r\n          },\r\n          {\r\n            label: \"Amount\",\r\n            field: \"amount\",\r\n            sort: \"asc\",\r\n            width: \"auto\",\r\n          },\r\n          {\r\n            label: \"Action\",\r\n            field: \"action\",\r\n            sort: \"asc\",\r\n            width: \"auto\",\r\n          },\r\n        ],\r\n        rows: [\r\n          ...Corder.map((row, i) => {\r\n            let total = row.items\r\n              .filter((ord) => ord.accID == mydata.accID)\r\n              .reduce(\r\n                (sum, record) =>\r\n                  parseInt(sum) + parseInt(record.artworkPaymentAmount),\r\n                0\r\n              );\r\n\r\n            return {\r\n              id: `${row.id}`,\r\n              orderBy: `${row.orderBy}`,\r\n              date: `${row.date}`,\r\n              paymentStat: `${row.paymentStat}`,\r\n              amount: `${total}`,\r\n              action: (\r\n                <MDBBtn onClick={() => toggle(row.items)} color=\"yellow\">\r\n                  {\" \"}\r\n                  Items\r\n                </MDBBtn>\r\n              ),\r\n            };\r\n          }),\r\n        ],\r\n      };\r\n\r\n      return (\r\n        <Fragment>\r\n          <div className=\"adminbreadcrumb\">\r\n            <MDBCard>\r\n              <MDBCardBody\r\n                id=\"breadcrumb\"\r\n                className=\"d-flex align-items-center justify-content-between\"\r\n              >\r\n                <MDBBreadcrumb>\r\n                  <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                  <MDBBreadcrumbItem active>Sold Artworks</MDBBreadcrumbItem>\r\n                </MDBBreadcrumb>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </div>\r\n          <h4>Artworks Sold</h4>\r\n          <MDBCard>\r\n      \r\n            <MDBDataTable striped bordered small data={data} />\r\n          </MDBCard>\r\n          <MDBModal\r\n            size=\"lg\"\r\n            isOpen={this.state.modal}\r\n            toggle={() => close()}\r\n            centered\r\n            className=\"singleModal\"\r\n          >\r\n            <MDBModalHeader\r\n              toggle={() => {\r\n                close();\r\n              }}\r\n              className=\"mhead\"\r\n              style={{backgroundColor:'#231F20'}}\r\n            > <span style={{color:'#FAE933',marginLeft:'8px'}}>Order Items</span></MDBModalHeader>\r\n            <MDBModalBody>\r\n              <div className=\"imagecom\">\r\n               \r\n                <MDBTable hover className=\"tablescroll\">\r\n                  <MDBTableHead color=\"blue-grey lighten-4\">\r\n                    <tr>\r\n                      <th>Artwork</th>\r\n                      <th>Artist Name </th>\r\n                      <th>Artwork Name</th>\r\n                      <th>Artwork Size</th>\r\n                      <th>Payment Amount</th>\r\n                      <th>Artwork Material</th>\r\n                      <th>Framing Options</th>\r\n                      <th>Price Per Piece</th>\r\n                      <th>Quantity</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n\r\n                  <MDBTableBody>\r\n                    {this.state.items.map((data) => (\r\n                      <tr>\r\n                        <td>\r\n                          <img\r\n                            style={{ width: \"100% \", height: \"auto\" }}\r\n                            src={data.artworkImg}\r\n                            alt=\"artwork\"\r\n                          />\r\n                        </td>\r\n                        <td>{data.artistName}</td>\r\n                        <td>{data.artworkName}</td>\r\n                        <td>{data.artworkSize}</td>\r\n                        <td>{data.artworkPaymentAmount}</td>\r\n                        <td>{data.artworkMaterial}</td>\r\n                        <td>{data.artworkFramingOptions}</td>\r\n                        <td>{data.artworkPrice}</td>\r\n                        <td>{data.artworkQuantity}</td>\r\n                        <td className=\"actions\">\r\n                          <DownloadImage data={data.artworkImg} />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </div>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </Fragment>\r\n      );\r\n    };\r\n\r\n    return <CompletedOrderTable />;\r\n  }\r\n}\r\n\r\nexport default inject(\"startingStore\")(observer(Earnings));\r\n","import { MDBBadge, MDBDropdown, MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle, MDBIcon } from \"mdbreact\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\n\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n    let {startingStore:{listOfNotif}}=this.props;\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n   \r\n   let notifCount = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').length\r\n  \r\n   let mynotif = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n     return(\r\n       <Fragment key={i}>\r\n   \r\n           <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n             <span className=\"time\">{notifInfo.notifDT}</span>\r\n           </MDBDropdownItem>\r\n    \r\n       </Fragment>\r\n     )\r\n   })\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n        <MDBBadge color=\"danger\" className=\"ml-2 bell\" >{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n      <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     {mynotif}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n\r\n\r\n    render() {\r\n        let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n      let {startingStore:{listofUserOrder,listOfArtworks}}=this.props;\r\n      let Artwoks = listOfArtworks.filter(art => art.accID === mydata.accID).length\r\n      let Orders = listofUserOrder.filter (ord => ord.orderItems.accID === mydata.accID).length;\r\n   \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Typography className={classes.title}  gutterBottom style={{float:\"right\"}}>\r\nEarnings YTD\r\n</Typography>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\",color:\"white\"}}/>\r\n{/* <span style={{textAlign:\"right\",color:\"white\"}}> &#8369;{sales}</span> */}\r\n</Typography>\r\n\r\n<Typography variant=\"body2\" component=\"p\">\r\n\r\n\r\n\r\n</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<BrushIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArtworks \r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Artwoks}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOrders\r\n</Typography>\r\n<div className='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBBtn, MDBCard,\r\n\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DCards from './../DCards';\r\nimport { FacebookIcon, FacebookShareButton,\r\n} from \"react-share\";\r\n\r\n\r\nclass ArtistProfile extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts,getAllArtworks,getOrders,getFollow},\r\n    } = this.props;\r\n    getAccounts()\r\n    getAllArtworks()\r\n    getOrders()\r\n   \r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listOfUsers,listOfFollowing\r\n      },\r\n    } = this.props;\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'));\r\nlet linkName = `${mydata.accFname} ${mydata.accLname}`\r\n\r\nfunction createData(userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img) {\r\n  return { userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img };\r\n}\r\nlet myprofile = listOfUsers.filter(pp => pp.accID === mydata.accID).map(info =>{\r\n\r\n  return(createData(\r\n    info,info.accID,info.accFname,info.accLname,info.accEmailAddress,info.accAddress,info.accContact,info.birthYear,info.accInstitution,info.acc_Documents,info.artistDescription,info.profile_Img\r\n\r\n\r\n  )\r\n  )\r\n})\r\n\r\n\r\nlet myFollowers = listOfFollowing.filter(data => data.followingID === mydata.accID).length;\r\n    return (\r\n<Fragment>\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n            \r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      {myprofile.map((row,index) => {\r\n\r\n        return(\r\n        \r\n        \r\n        \r\n          <Fragment>\r\n\r\n   \r\n      <MDBCard style={{marginTop:'15px',marginBottom:'20px'}}>\r\n    \r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              \r\n   \r\n\r\n     \r\n\r\n              <div className='left' key={index}>\r\n                <div className='artistpp'>\r\n                \r\n               \r\n                <img \r\n      src={row.profile_Img}\r\n      alt=\"profilePic\"\r\n      />\r\n                  ) \r\n                </div>\r\n                <div className='artistInfo'>\r\n                <h2 className='title'>\r\n                 {row.fname} {row.lname}\r\n                 <span className='bday'>\r\n                      {row.address}, born{' '}\r\n                      {row.birthYear}\r\n                    </span>\r\n                    <span className='bday'>\r\n                  {row.institution}\r\n                </span>\r\n                    </h2>\r\n              \r\n\r\n                  <span className='estart'>Established Artist</span>\r\n               \r\n                </div>\r\n                <div style={{marginTop:'16px'}}>\r\n                  <p> {row.description}</p>\r\n                </div>\r\n              </div>\r\n              <div className='right' >\r\n              <div style={{marginTop:'-150px'}}>\r\n                  <FacebookShareButton url={`https://artbasically.com/Artist/${linkName}`}appId='216207193165878' pageId='301933277234280' subject='Share' hashtag=\"#ArtBasically\" id='share' style={{marginRight:'8px',visibility:'hidden',float:'left'}}>\r\n  <FacebookIcon size={40}   round={true}/>\r\n  </FacebookShareButton>\r\n  \r\n  <label htmlFor='share' style={{backgroundColor:'#3B5998',cursor:'pointer',borderRadius:'5px'}} >\r\n  <FacebookIcon size={40} /> <span style={{paddingRight:'10px',color:'white'}}>Share Profile</span>\r\n  </label>\r\n                  </div>\r\n\r\n                <ul style={{marginTop:'-20px'}}>\r\n\r\n                </ul>\r\n                <ul>\r\n                  <li>\r\n                    {myFollowers === 0 ? (\r\n                      '0'\r\n                    ):(\r\n                      {myFollowers}\r\n                    )}\r\n                    <span>Followers</span>\r\n                  </li>\r\n                 \r\n                 \r\n                </ul>\r\n              </div>\r\n\r\n            \r\n\r\n    \r\n\r\n            </div>\r\n          \r\n          </div>\r\n        \r\n        \r\n          </MDBCard>\r\n      \r\n      <DCards/>\r\n\r\n      </Fragment>\r\n      )})}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistProfile));\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n  MDBNavbar, MDBNavItem,\r\n  MDBNavLink,\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/admin.css';\r\nimport Settings from './AccountSetting';\r\nimport ArtworkTab from './ArtworkManagement';\r\nimport EarningsTab from './Earnings';\r\nimport Notif from './Notification';\r\nimport Profile from './Profile';\r\n// import Customize from './PrintOptions'\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAllNotif}}=this.props\r\n    getAllNotif()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n \r\n    return (\r\n      <div>\r\n     <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n    shouldShowDialog={true}\r\n    loggedInGreeting=\"Hi! How can we help you?\"\r\n\r\n  />\r\n\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n              <a href='/ArtistHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Artist</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n               \r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='coins' className='mr-3' />\r\n                    Sold Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n     \r\n    \r\n           \r\n                <MDBNavItem>\r\n\r\n\r\n                {/* <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                   Customize\r\n                  </MDBNavLink> */}\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              {/* <Dashboard /> */}\r\n              <Profile/>\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <EarningsTab />\r\n            </MDBTabPane>\r\n            {/* <MDBTabPane tabId='4'>\r\n              <Customize/>\r\n            </MDBTabPane> */}\r\n            <MDBTabPane tabId='5'>\r\n              <Settings />\r\n            </MDBTabPane>\r\n         \r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your information will be evaluated by ArtBasically kindly wait for us\r\n          to contact you.\r\n          <br /> Thank you for your interest in joining us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","/* eslint no-param-reassign: [\"error\"] */\n\nimport Joi from 'joi';\nimport {\n  toJS,\n  isObservableArray,\n  isObservableObject,\n  isBoxedObservable,\n  action,\n  decorate,\n} from 'mobx';\n\nclass Model {\n  constructor(props) {\n    Object.assign(this, props);\n  }\n\n  static get schema() {\n    return {};\n  }\n\n  validate = () => (\n    Joi.validate(\n      this,\n      this.constructor.schema,\n      {\n        skipFunctions: true,\n        abortEarly: false,\n        allowUnknown: false,\n      },\n    )\n  );\n\n  setProperty = (property, value) => {\n    this.handleProperties(property, value);\n  };\n\n  // get toJS of each property that is an observable\n  get toJSproperties() {\n    let propertiesClone = {};\n\n    Object.keys(this).forEach((prop) => {\n      const value = this[prop];\n      if (isObservableArray(value) || isObservableObject(value) || isBoxedObservable(value)) {\n        propertiesClone = { ...propertiesClone, [prop]: toJS(value) };\n      }\n    });\n\n    return { ...this, ...propertiesClone };\n  }\n\n  get errors() {\n    const { error } = this.validate();\n\n    if (error) {\n      const { details } = error;\n      return details;\n    }\n\n    return [];\n  }\n\n  get isValid() {\n    const { error } = this.validate();\n    return error === null;\n  }\n\n  handleProperties = (property, value, deepProperty = undefined) => {\n    if (typeof property !== 'string') {\n      throw new Error('accepts property of type string');\n    }\n\n    const properties = property.split('.');\n    const prop = properties.shift();\n\n    if (properties.length > 0) {\n      if (deepProperty) {\n        return this.handleProperties(properties.join('.'), value, deepProperty[prop]);\n      }\n      return this.handleProperties(properties.join('.'), value, this[prop]);\n    }\n    if (deepProperty) {\n      (deepProperty[prop] = value);\n      return true;\n    }\n    this[prop] = value;\n    return true;\n  }\n}\n\ndecorate(Model, {\n  setProperty: action,\n});\n\nexport default Model;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Account extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      accID: '',\r\n      accFname: '',\r\n      accLname: '',\r\n      accSuffix: '',\r\n      accAddress: '',\r\n      accEmailAddress: '',\r\n      accessType: '',\r\n      accInstitution: '',\r\n      accFollowers: '0',\r\n      accPoints: '0',\r\n      password: '',\r\n      username: '',\r\n      accContact: '',\r\n      profile_Img: undefined,\r\n      accCategories: [],\r\n      accStyles: [],\r\n      dateAdded: '',\r\n      acc_Status: '',\r\n      acc_Documents: '',\r\n      regType: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Account, {\r\n  _id: observable,\r\n  accID: observable,\r\n  accFname: observable,\r\n  accLname: observable,\r\n  accSuffix: observable,\r\n  accAddress: observable,\r\n  accEmailAddress: observable,\r\n  accessType: observable,\r\n  accInstitution: observable,\r\n  accFollowers: observable,\r\n  accPoints: observable,\r\n  password: observable,\r\n  username: observable,\r\n  accContact: observable,\r\n  profile_Img: observable,\r\n  accCategories: observable,\r\n  accStyles: observable,\r\n  dateAdded: observable,\r\n  acc_Status: observable,\r\n  acc_Documents: observable,\r\n  regType: observable,\r\n});\r\n\r\nexport default Account;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Artwork extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      artworkPath: '',\r\n      artDescription: '',\r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artDimension: '',\r\n      artHeight:'',\r\n      artWidth:'',\r\n      artFormat:'',\r\n      artDPI:'',\r\n      artRating: '',\r\n      accID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n      artworkStatus: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Artwork, {\r\n  _id: observable,\r\n  artworkPath: observable,\r\n  artDescription: observable,\r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artDimension: observable,\r\n  artHeight:observable,\r\n  artWidth:observable,\r\n  artFormat:observable,\r\n  artDPI:observable,\r\n  artRating: observable,\r\n  accID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n  artworkStatus: observable,\r\n});\r\n\r\nexport default Artwork;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Cart extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      artistName: '',\r\n      dateOfTransaction: '',\r\n      artworkName: '',\r\n      artworkMaterial: '',\r\n      artworkFramingOptions: '',\r\n      artworkQuantity: '1',\r\n      artworkSize: '',\r\n      artworkPrice: '',\r\n      artworkPaymentAmount: '',\r\n      artworkImg: '',\r\n      artworkPrice:'',\r\n      artDPI:'',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Cart, {\r\n  accID: observable,\r\n  artistName: observable,\r\n  dateOfTransaction: observable,\r\n  artworkName: observable,\r\n  artworkMaterial: observable,\r\n  artworkFramingOptions: observable,\r\n  artworkQuantity: observable,\r\n  artworkSize: observable,\r\n  artworkPaymentAmount: observable,\r\n  artworkImg: observable,\r\n  artworkPrice: observable,\r\n  artDPI:observable,\r\n});\r\n\r\nexport default Cart;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Categories extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      catID: ' ',\r\n      catType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Categories, {\r\n  catID: observable,\r\n  catType: observable,\r\n});\r\n\r\nexport default Categories;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Order extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      orderID: '',\r\n      modeOfPayment: '',\r\n      orderDate: '',\r\n      orderItems: '',\r\n      orderStatus: '',\r\n      paymentStatus: '',\r\n      totalAmount:'',\r\n      partnerEarnings:'',\r\n      \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Order, {\r\n  accID: observable,\r\n  orderID: observable,\r\n  modeOfPayment: observable,\r\n  orderDate: observable,\r\n  orderItems: observable,\r\n  orderStatus: observable,\r\n  paymentStatus: observable,\r\n  totalAmount:observable,\r\n  partnerEarnings:observable,\r\n});\r\n\r\nexport default Order;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Style extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      styleID: ' ',\r\n      styleType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Style, {\r\n  styleID: observable,\r\n  styleType: observable,\r\n});\r\n\r\nexport default Style;\r\n","import Joi from \"joi\";\nimport { decorate, observable } from \"mobx\";\nimport Model from \"./Model\";\n\nclass User extends Model {\n  constructor(props) {\n    const defaults = {\n      _id: undefined,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      phone: 0,\n      address: {\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        postalCode: 0\n      },\n      dateRegistered: undefined\n    };\n    super({ ...defaults, ...props });\n  }\n\n  static get schema() {\n    return {\n      _id: Joi.string()\n        .hex()\n        .length(20),\n      firstName: Joi.string().required(),\n      lastName: Joi.string().required(),\n      email: Joi.email().required(),\n      password: Joi.string().required(),\n      phone: Joi.string().required(),\n      address: Joi.object().keys({\n        street: Joi.string(),\n        city: Joi.string(),\n        state: Joi.string(),\n        postalCode: Joi.number()\n      }),\n      date: Joi.date()\n        .iso()\n        .required()\n    };\n  }\n}\n\ndecorate(User, {\n  firstName: observable,\n  lastName: observable,\n  email: observable,\n  password: observable,\n  phone: observable,\n  address: observable,\n  date: observable,\n});\n\nexport default User;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass PrintSize extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      sizeID: ' ',\r\n      printSize: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(PrintSize, {\r\n  sizeID: observable,\r\n  printSize: observable,\r\n});\r\n\r\nexport default PrintSize;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Notification extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      notifID: '',\r\n      notifSender: ' ',\r\n      notifRecipient:'',\r\n      notifSubject:'',\r\n      notifMsg:'',\r\n      notifDT:'',\r\n      notifStatus:'',\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Notification, {\r\n  notifID: observable,\r\n  notifSender: observable,\r\n  notifRecipient:observable,\r\n  notifSubject:observable,\r\n  notifMsg:observable,\r\n  notifDT:observable,\r\n  notifStatus:observable,\r\n});\r\n\r\nexport default Notification;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass MyLists extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      mylistsID:'',\r\n      accID:'',\r\n     \r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artRating: '',\r\n      artistID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n\r\n\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(MyLists, {\r\n  _id: observable,\r\n  mylistsID:observable,\r\n  accID:observable,\r\n \r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artRating: observable,\r\n  artistID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n\r\n\r\n});\r\n\r\nexport default MyLists;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Feedback extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      feedbackID: '',\r\n      accID: '',\r\n      orderID: '',\r\n      artworkID:'',\r\n      date: '',\r\n      feedbackNote: '',\r\n   \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Feedback, {\r\n  feedbackID: observable,\r\n  accID: observable,\r\n  orderID: observable,\r\n  artworkID:observable,\r\n  date: observable,\r\n  feedbackNote: observable,\r\n\r\n});\r\n\r\nexport default Feedback;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass UserFollow extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: undefined,\r\n      followID:'',\r\n      followerID:'',\r\n      followingID:'',\r\n    \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(UserFollow, {\r\n  _id: observable,\r\n  followID:observable,\r\n  follower:observable,\r\n  followingID:observable,\r\n \r\n});\r\n\r\nexport default UserFollow;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass ArtShares extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: undefined,\r\n      shareID:'',\r\n      userID:'',\r\n      social:'',\r\n      dateTime:'',\r\n    \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(ArtShares, {\r\n  _id: observable,\r\n  shareID:observable,\r\n  userID:observable,\r\n  social:observable,\r\n  dateTime:observable,\r\n \r\n});\r\n\r\nexport default ArtShares;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass PrintOptions extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      optionID: ' ',\r\n      printCat:'',\r\n      printOptions: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(PrintOptions, {\r\n  optionID: observable,\r\n  printCat:observable,\r\n  printOptions: observable,\r\n});\r\n\r\nexport default PrintOptions;","import _ from 'lodash';\nimport {action, decorate, observable, toJS} from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nimport PrintSize from './../models/PrintSize'\nimport Notification from './../models/Notif'\nimport MyLists from './../models/MyLists'\nimport Feedback from './../models/Feedback'\nimport UserFollow from './../models/UserFollow'\nimport ArtShare from './../models/ArtShares'\nimport PrintOption from './../models/PrintingOptions'\n\nclass StartingStore {\n  account = new Account();\n  artwork = new Artwork();\n  categories = new Categories();\n  style = new Style();\n  cart = new Cart();\n  order = new Order();\n  printsize = new PrintSize();\n  notif = new Notification();\n  mylists= new MyLists();\n  feedback = new Feedback();\n  userfollow = new UserFollow();\n  artshare = new ArtShare()\n  printoption = new PrintOption();\n  listOfFollowing = [];\n  listOfFeedback = [];\n  listOfMyLists =[];\n  listOfNotif=[];\n  listOfPrintSize =[];\n  listOfOrders = [];\n  welcomeMessage = 'Welcome!';\n  listOfUsers = [];\n  listOfArtworks = [];\n  listOfFilteredArtwork =[];\n  listOfCategories = [];\n  listOfStyles = [];\n  listOfOrder = [];\n  listOfArtists = [];\n  currentUser = new User();\n  listOfUserDocs = [];\n  listOfUserCart = [];\n  listofArtistArtwork = [];\n  listOfSingleArtwork = [];\n  listofArtistInfo = [];\n  listofArtistCategories = [];\n  listofUserCategoriesArtwork = [];\n  listofFilteredUserArtworkCategories = [];\n  listOfEmergingArtist = [];\n  listofUserOrder = [];\n  filter = false;\n  listofUserStyleArtwork = [];\n  followed = false;\n  listRelatedWorkByCategory = [];\n  listOfArtShare =[];\n  listOfPrintoption =[];\n\n\n\n  //getArtworkLists\n  listOfSaleArts=[];\n  listOfLatestArts=[];\n  listOfBestSellerArts=[];\n  listOfDiscEmergeArt=[];\n  listOfArtistOfTheMonth = [];\n  listOfArtistOfTheMonthID = [];\n  listOfActiveArtworks=[];\n  listOfEmergingArtworks=[];\n\n\n  img = undefined;\n  api = undefined;\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n    return obj;\n  }\n  setFollowed = () => {\n    this.followed = !this.followed;\n  };\n  filterArtwork = (type) => {\n    this.filter = type;\n  };\n  addAccount = () => {\n  \n      return new Promise ((resolve,reject) =>{\n     \n      this.api.addaccount(this.account)\n      .then(resp => {\n      \n        \n        if (resp.data !== false ) {  \n          this.listOfUsers = resp.data; \n          resolve(true);       \n          } \n  else {         \n   resolve(false);      \n   }  \n       \n      })\n    })\n\n  };\n\n  getAccounts = () => {\n    this.api.getaccounts().then((resp) => {\n    \n      this.listOfUsers = resp.data;\n    });\n  };\n\n  editAccount = () => {\n    return new Promise((resolve, reject) => {\n    this.api\n      .editAccount(this.removeUndefinedProps(this.account))\n      .then((resp) => {\n        let user = resp.data.filter((us) => us._id === this.account._id);\n       \n        resolve('success')\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    });\n  };\n\n  editProfile = () => {\n    return new Promise((resolve,reject) =>{\n\n   \n\n    let doc = this.listOfUsers.filter(data=> {\n   \n      if (data.accID === this.account.accID){\n        \n          return data._id\n      }\n    })\n\n\n \n \n    this.api.editprofile(this.account , doc[0]._id)\n    .then(resp => {\n \n      this.listOfUsers=resp.data\n      resolve('true')\n    })\n\n  })\n  }\n\n  // editProfile = () => {\n   \n  //   this.api.editprofile(this.account).then((resp) => {\n  //     this.listOfUsers = resp.data;\n     \n  //   });\n  // };\n\n\n  loginAccount = () => {\n    return new Promise((resolve, reject) => {\n      this.api.loginaccount(this.account).then((resp) => {\n       \n        if (resp.data.accessType === 'Admin') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(true);\n        } else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        } else if (resp.data.accessType === 'PrintingPartner') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(3);\n        } else if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n        \n          resolve(4)\n        } else if (resp.data.acc_Status === 'Pending'){\n          resolve(5)\n         \n        } else if (resp.data.acc_Status === 'Rejected'){\n          resolve(6)\n         \n        }else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginEmail = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginemail(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginFB = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginfb(this.account)\n     \n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(4)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n  loginGoogle = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.logingoogle(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addArtwork = () => {\n  \n    this.api.addartwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n    \n\n    });\n  };\n\n  upload = (img, documents) => {\n\n    return new Promise((resolve, reject) => {\n      return this.api.upload(img).then((resp) => {\n      \n        if (documents === 'docu') {\n          this.account.setProperty('acc_Documents', resp.data.url);\n        }else if(documents === 'profile'){\n          this.account.setProperty('profile_Img', resp.data.url);\n        } else {\n          this.artwork.setProperty('artworkImg', resp.data.url);\n          this.artwork.setProperty('artDimension', `${resp.data.dataaa.width}X${resp.data.dataaa.height}`);\n          this.artwork.setProperty('artHeight', resp.data.dataaa.height);\n          this.artwork.setProperty('artWidth', resp.data.dataaa.width);\n          this.artwork.setProperty('artFormat', resp.data.dataaa.format);\n          this.account.setProperty('accImg', resp.data.url);\n        }\n  \n        if (this.artwork.artName === '') {\n          this.addAccount();\n        } else {\n          this.addArtwork();\n        }\n      });\n    });\n  };\n\n  getArtwork = () => {\n    this.api.getartwork().then((resp) => {\n      this.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n \n    });\n  };\n\n  getEmergingArtistArtwork = () => {\n    this.api.getEmergingArtist().then((resp) => {\n      this.listOfEmergingArtist = resp.data;\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    if (userData !== null) {\n      this.api\n        .getArtistFollowArtwork(email ? email : userData.accEmailAddress)\n        .then((resp) => {\n          this.listOfArtistFollowed = resp.data;\n        });\n    }\n  };\n\n  getArtworkInfo = () => {\n    return new Promise((resolve, reject) => {\n      this.api.getartworkInfo().then((resp) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        let artCategories = [];\n        let categories = [];\n\n        this.listOfArtworks = resp.data.map((art) => {\n          artCategories.push(art.artTheme[0]);\n          return art;\n        });\n\n        let cat = artCategories.filter((art) => {\n          if (art === '' || categories.includes(art)) {\n          } else {\n            categories.push(art);\n          }\n        });\n\n        if (userData === null || userData === false) {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .map((art) => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n        } else {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .filter((art) => {\n              userData['accCategories'].map((cat) => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n\n                  return art;\n                }\n              });\n            });\n       \n          this.listofFilteredUserArtworkCategories = _.uniqBy(\n            this.listofFilteredUserArtworkCategories,\n            (a) => a.artName\n          );\n        }\n\n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtworkInfo = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getsingleartworkinfo(id).then((resp) => {\n       \n        this.listOfSingleArtwork = resp.data;\n\n     \n          let listOfSingleArtwork = resp.data;\n          let styles = [];\n          let themes = [];\n          if (resp.data.length > 1) {\n            resp.data.map((item) => {\n              item.artStyle.map((style) => styles.push(style));\n              item.artTheme.map((theme) => themes.push(theme));\n            });\n            let categories = _.union(themes.concat(styles));\n            this.getRelatedWorkByCategory(JSON.stringify(categories));\n          } else {\n            if (resp.data.artStyle !== undefined) {\n              // resp.data.artStyle.map((style) => styles.push(style));\n              // resp.data.artTheme.map((theme) => themes.push(theme));\n\n              let categories = _.union(\n                listOfSingleArtwork.artTheme.concat(\n                  listOfSingleArtwork.artStyle\n                )\n              );\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            }\n          }\n          \n          resolve(resp.data);\n      \n      });\n    });\n  };\n\n  followArtist = (artist) => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.followAccount(userData, artist).then((resp) => {\n        if (resp.data !== false) {\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addOrder = () => {\n \n    this.api.addOrder(this.order).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editArtwork = () => {\n   \n    this.api.editArtwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n     \n    });\n  };\n\n  //Category\n\n  addCategory = () => {\n    this.api.addCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n \n    });\n  };\n\n  editCategory = () => {\n    this.api.editCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n\n  getCategories = () => {\n    this.api.getCategories().then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n  getOrderUser = () => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrder(userData._id).then((resp) => {\n        this.listofUserOrder = resp.data;\n       \n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Style\n\n  addStyle = () => {\n    this.api.addStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  editStyle = () => {\n    this.api.editStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  getStyles = () => {\n    this.api.getStyles().then((resp) => {\n      this.listOfStyles = resp.data;\n    \n    });\n  };\n\n  //PrintSize\n\n  addPrintSize = () => {\n    this.api.addprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n  getPrintSize = () => {\n    this.api.getprintsize().then((resp) => {\n      this.listOfPrintSize = resp.data;\n    \n    });\n  };\n\n  editPrintSize = () => {\n    this.api.editprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n\n  //Artist\n  getArtists = (artist) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtists().then((resp) => {\n        this.listOfArtists = resp.data;\n\n        if (resp.data !== false && artist !== '') {\n          resolve(\n            resp.data.filter(\n              (art) => `${art.accFname} ${art.accLname}` === artist\n            )\n          );\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtists = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n          if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n            this.followed = true;\n          }\n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getSingleEnthusiast = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n        \n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getArtistArtwork = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtistArtwork(id).then((resp) => {\n        let listOfCategories = [];\n        if (resp.data !== false && id !== '') {\n          this.listofArtistArtwork = resp.data;\n\n          listOfCategories = resp.data.map((art) => {\n            if (art.artTheme[0] !== '') {\n              return art.artTheme[0];\n            }\n          });\n          this.listofArtistCategories = listOfCategories.filter((cat) => {\n            return cat !== undefined;\n          });\n     \n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getRelatedWorkByCategory = (cat) => {\n    \n    return new Promise((resolve, reject) => {\n      this.api.getRelatedWorkByCategory(cat).then((resp) => {\n        if (resp.data !== false && cat !== '') {\n          this.listRelatedWorkByCategory = resp.data;\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Cart\n\n  addToCart = () => {\n    this.api.addToCart(this.cart).then((resp) => {\n      this.listOfUserCart = resp.data;\n    });\n  };\n\n  getToCart = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    this.api.getToCart(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfUserCart = resp.data.filter(\n          (item) => item.artworkQuantity !== ''\n        );\n      }\n    });\n  };\n\n  editToCart = (data) => {\n \n    let currData = toJS(data);\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n \n    this.api.editToCart(currData._id).then((resp) => {\n      if (resp.data !== false) {\n        this.getToCart(userData);\n      }\n    });\n  };\n\n  // ORDERS\n  getOrders = () => {\n    // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n \n    this.api.getOrders().then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrders = resp.data;\n      }\n    });\n  };\n  getOrder = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n    this.api.getOrders(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editOrder = (id, status, account) => {\n    let data = {id: id, status: status, account: account};\n    this.api.editOrder(data).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  addNotif = () => { \n    return new Promise((resolve, reject) => {   \n      this.api.addnotif(this.notif)\n      .then(resp => {    \n         this.listOfNotif = resp.data\n   \n         if (resp.data !== false ) {   \n                  resolve(resp.data);       \n                  } \n         else {         \n           resolve(false);      \n           }  \n           });\n          })\n    }\n\n    getNotif = () => { \n   \n      return new Promise((resolve, reject) => {   \n        let getId = JSON.parse(sessionStorage.getItem('userData'))\n     \n        this.api.getnotif(getId.accID)\n        .then(resp => {    \n        \n           this.listOfNotif = resp.data\n     \n           if (resp.data !== false ) {   \n                    resolve(resp.data);       \n                    } \n           else {         \n             resolve(false);      \n             }  \n             });\n            })\n      }\n\n      getAllNotif = () => {\n        this.api.getallnotif()\n        .then(resp => {\n    \n         this.listOfNotif=resp.data\n        \n      \n        })\n\n      }\n\n\n      editNotif = (id, status, notif) => {\n        \n        let data = {id: id, status: status, notif: notif};\n     \n        this.api.editnotif(data).then((resp) => {\n          if (resp.data !== false) {\n            this.listOfNotif = resp.data;\n          }\n        });\n      }\n\n      addMyLists = () => { \n        return new Promise((resolve, reject) => {   \n          this.api.addmylists(this.mylists)\n          .then(resp => {    \n             this.listOfMyLists = resp.data\n       \n             if (resp.data !== false ) {   \n                      resolve(resp.data);       \n                      } \n             else {         \n               resolve(false);      \n               }  \n               });\n              })\n        }\n\n        getMyLists = () => { \n   \n          return new Promise((resolve, reject) => {   \n            let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n            this.api.getmylists(getId.accID)\n            .then(resp => {    \n          \n               this.listOfMyLists = resp.data\n         \n               if (resp.data !== false ) {   \n                        resolve(resp.data);       \n                        } \n               else {         \n                 resolve(false);      \n                 }  \n                 });\n                })\n          }\n\n\n          deleteMyLists =() =>{\n            let mytoken =this.listOfMyLists.filter(data =>{\n            \n              if (data.mylistsID === this.mylists.mylistsID){\n                return data._id\n              }\n            })\n          \n            this.api.deletemylists(this.mylists ,mytoken[0]._id)\n            .then(resp => {\n\n              this.listOfMyLists=resp.data\n            })\n          }\n\n          addFeedback = () => { \n         \n            return new Promise((resolve, reject) => {   \n              this.api.addfeedback(this.feedback)\n              .then(resp => {    \n                 this.listOfFeedback = resp.data\n           \n                 if (resp.data !== false ) {   \n                          resolve(resp.data);       \n                          } \n                 else {         \n                   resolve(false);      \n                   }  \n                   });\n                  })\n            }\n\n\n        \n            getFeedback = () => {\n              this.api.getfeedback().then((resp) => {\n                this.listOfFeedback = resp.data;\n              \n              });\n            };\n\n\n\n            addFollow = () => { \n         \n              return new Promise((resolve, reject) => {   \n                this.api.addfollow(this.userfollow)\n                .then(resp => {    \n                   this.listOfFollowing = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              \n          deleteFollow =() =>{\n            return new Promise((resolve, reject) => {   \n\n             let getuserId = JSON.parse(sessionStorage.getItem('userData'))\n            let follow =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data._id\n              }\n            })\n\n            let follow_ID =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data.followID\n              }\n            })\n           \n          \n            this.api.deletefollow(this.userfollow ,follow[0]._id,follow_ID[0].followID)\n            .then(resp => {\n\n              resolve('deleted')\n            })\n\n          })\n          }\n\n    \n\n\n\n          // getFollow = () => { \n   \n          //   return new Promise((resolve, reject) => {   \n          //     let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n          //     this.api.getfollow(getId.accID)\n          //     .then(resp => {    \n          //   console.log(resp.data,'aaa')\n          //        this.listOfFollowing = resp.data\n           \n          //        if (resp.data !== false ) {   \n          //                 resolve(resp.data);       \n          //                 } \n          //        else {         \n          //          resolve(false);      \n          //          }  \n          //          });\n          //         })\n          //   }\n\n              \n            getFollow = () => {\n              this.api.getfollow().then((resp) => {\n                this.listOfFollowing = resp.data;\n              \n              });\n            };\n\n            getAllArtworks = () => {\n              return new Promise((resolve, reject) => {\n              this.api.getallartworks().then((resp) => {\n        \n                this.listOfArtworks = resp.data;\n                  \n              });\n            })\n            }\n\n            getAllActiveArtworks = () => {\n              return new Promise((resolve, reject) => {\n              this.api.getallartworks().then((resp) => {\n\n            \n\n            \n                this.listOfActiveArtworks = resp.data.filter(data => data.artworkStatus === 'Active').sort(() => Math.random() - 0.5)\n            \n                  \n              });\n            })\n            }\n\n\n            addArtShare = () => { \n        \n              return new Promise((resolve, reject) => {   \n                this.api.addartshare(this.artshare)\n                .then(resp => {    \n                   this.listOfArtShare = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              getArtShare  = () => {\n                return new Promise((resolve, reject) => {\n                this.api.getartshare().then((resp) => {\n          \n                  this.listOfArtShare = resp.data;\n                    \n                });\n              })\n              }\n\n\n              \n            addPrintOption = () => { \n        \n              return new Promise((resolve, reject) => {   \n                this.api.addprintoption(this.printoption)\n                .then(resp => {    \n                   this.listOfPrintoption = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              \n              getPrintOption = () => {\n                return new Promise((resolve, reject) => {\n                this.api.getprintoption().then((resp) => {\n          \n                  this.listOfPrintoption = resp.data;\n                    \n                });\n              })\n              }\n\n\n              editPrintOption = () => {\n                this.api.editprintoption(this.printoption).then((resp) => {\n                  this.listOfPrintoption = resp.data;\n              \n                });\n              };\n\n\n\n              getSaleArts =()=>{\n              \n                  this.api.getsalearts().then((resp) => {\n\n                    this.listOfSaleArts = resp.data;\n                      \n                  });\n              \n\n              }\n\n              \n              getLatestArts =()=>{\n              \n                this.api.getallartworks().then((resp) => {\n                  this.listOfLatestArts =  resp.data.filter(data => data.artworkStatus === 'Active').map(latest => latest).reverse();\n\n         \n                    \n                });\n            \n\n            }\n\n            getArtistOftheMonth = ()=>{\nreturn new Promise ((resolve,reject)=>{\n   \n  \n\n           this.api.getaccounts().then((resp) => {\n    \n            this.listOfArtistOfTheMonth = resp.data.filter((fil,i) => fil.acc_Status === 'Active'  && fil.accessType === \"Artist\" && i=== 5).map(data => `${data.accFname} ${data.accLname}`)\n            this.listOfArtistOfTheMonthID = resp.data.filter((fil,i) => fil.acc_Status === 'Active' && i=== 5 && fil.accessType === \"Artist\").map(data => data.accID)\n              });\n\n              \n            })\n\n\n          }\n\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  editProfile: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n  addPrintSize:action,\n  getPrintSize:action,\n  editPrintSize:action,\n  loginAccount:action,\n  loginEmail:action,\n  loginFB:action,\n  loginGoogle:action,\n  notif:observable,\n  listOfNotif:observable,\n  addNotif:action,\n  getNotif:action,\n  getAllNotif:action,\n  editNotif:action,\n  mylists:observable,\n  listOfMyLists :observable,\n  addMyLists:action,\n  getMyLists:action,\n  deleteMyLists:action,\n  feedback:observable,\n  listOfFeedback:observable,\n  addFeedback:action,\n  getFeedback:action,\n  getSingleEnthusiast:action,  \n  userfollow:observable,\n  listOfFollowing:observable,    \n  addFollow:action,   \n  deleteFollow:action,   \n  getFollow:action,        \n  getAllArtworks:action,        \n  artshare:observable,\n  listOfArtShare:observable,      \n  addArtShare:action,    \n  getArtShare:action,\n  listOfFilteredArtwork:observable,  \n  printoption:observable,\n  listOfPrintoption:observable,\n  addPrintOption:action,   \n  getPrintOption:action, \n  editPrintOption:action,        \n  \n  //getArtworkLists\n  listOfSaleArts:observable,\n  getSaleArts:action,\n  listOfLatestArts:observable,\n  getLatestArts:action,\n  listOfBestSellerArts:observable,\n  listOfDiscEmergeArt:observable,\n  getArtistOftheMonth:action,\n  listOfArtistOfTheMonth:observable,\n  listOfArtistOfTheMonthID:observable,\n  listOfActiveArtworks:observable,\n  getAllActiveArtworks:action,\n});\n\nexport default StartingStore;\n","import { act } from '@testing-library/react';\nimport axios from 'axios';\nimport {action, decorate} from 'mobx';\n\nclass Api {\n  api = axios.create({\n    baseURL: '/api',\n  });\n\n  // ACCOUNT\n  addaccount = (data) => {\n    return this.api.post('addAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getaccounts = () => {\n    return this.api.get('getAccounts');\n  };\n\n  editAccount = (data) => {\n    return this.api.post('editAccount', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editprofile = (data ,docID)=>{\n    \n    return this.api.put(`editProfile/${docID}`,{\n    mode:'cors',\n    data:data,\n  })\n  }\n\n  \n  addOrder = (data) => {\n    return this.api.post('addOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginaccount = async (data) => {\n    return this.api.post('loginAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginemail = async (data) => {\n   \n    return this.api.post('loginEmail', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  \n  loginfb = async (data) => {\n   \n    return this.api.post('loginFB', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  \n  logingoogle = async (data) => {\n   \n    return this.api.post('loginGoogle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getOrder = (id) => {\n    return this.api.get(`getOrder/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  // ARTWORK\n  addartwork = (data) => {\n    return this.api.post('addArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getartwork = () => {\n    return this.api.get('getArtworks');\n  };\n\n  getartworkInfo = () => {\n    return this.api.get('getArtworkInfo');\n  };\n\n  getsingleartworkinfo = (id) => {\n    return this.api.get(`getSingleArtworkInfo/${id}`);\n  };\n\n  editArtwork = (data) => {\n    return this.api.post('editArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getArtistArtwork = (id) => {\n    return this.api.get(`getArtistArtwork/${id}`);\n  };\n\n  getRelatedWorkByCategory = (category) => {\n    return this.api.get(`getRelatedWorkByCategory/${category}`);\n  };\n\n  // CATEGORY\n  addCategory = (data) => {\n    return this.api.post('addCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editCategory = (data) => {\n    return this.api.post('editCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getCategories = () => {\n    return this.api.get('getCategories');\n  };\n\n  // STYLES\n  addStyle = (data) => {\n    return this.api.post('addStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editStyle = (data) => {\n    return this.api.post('editStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n\n  getStyles = () => {\n    return this.api.get('getStyles');\n  }\n\n  //Print Size\n  addprintsize = (data) => {\n    return this.api.post('addprintSize', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  getprintsize = () => {\n    return this.api.get('getprintSize');\n  };\n\n  editprintsize =(data)=>{\n    return this.api.post('editprintSize',{\n      mode:'cors',\n      data:data,\n    })\n  };\n\n  //ARTIST\n  getArtists = () => {\n    return this.api.get('getArtists');\n  };\n\n  getSingleArtists = (id) => {\n    return this.api.get(`getSingleArtists/${id}`);\n  };\n\n  // CART\n\n  addToCart = (data) => {\n    return this.api.post('addToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getToCart = (data) => {\n    return this.api.post('getToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editToCart = (id) => {\n    return this.api.delete(`editToCart/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  upload = (img) => {\n    return this.api.post('/upload', img, {\n      mode: 'cors',\n    });\n  };\n\n  getOrders = () => {\n    return this.api.get('getAllOrders', {\n      mode: 'cors',\n    });\n  };\n\n  followAccount = (data, id) => {\n    return this.api.post(`followAccount/${id}`, {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editOrder = (data) => {\n    return this.api.put('editOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getEmergingArtist = () => {\n    return this.api.get('getEmergingArtistArtwork', {\n      mode: 'cors',\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    return this.api.get(`getArtistFollowArtwork/${email}`, {\n      mode: 'cors',\n    });\n  };\n  addnotif = (data) => {\n    \n    return this.api.post('addNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n  getnotif = (id) => {\n    return this.api.get(`getNotif/${id}`);\n  };\n\n  getallnotif = () => {\n    return this.api.get(`getAllNotif`);\n  };\n\n  editnotif = (data) => {\n    return this.api.put('editNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n\n\naddmylists = (data) => {\n \n  return this.api.post('addMyLists', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetmylists = (id) => {\n \n  return this.api.get(`getMyLists/${id}`, {\n    mode: 'cors',\n  });\n};\n\ndeletemylists = (data,id) =>{\n  return this.api.delete(`deleteMyLists/${id}`,{\n    data:data,\n  })\n}\n\n\n\naddfeedback = (data) => {\n  return this.api.post('addFeedback', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetfeedback = () => {\n  return this.api.get('getFeedback');\n};\n\n\n\naddfollow = (data) => {\n  return this.api.post('addFollow', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\n// getfollow = (id) => {\n// console.log(id,'bbb')\n//   return this.api.get(`getFollow/${id}`, {\n//     mode: 'cors',\n//   });\n// };\n\ngetfollow = () => {\n  return this.api.get('getFollow');\n};\n\ndeletefollow = (data,id,followid) =>{\n \n  return this.api.delete(`deleteFollow/${id}/${followid}`,{\n    data:data,\n  })\n}\n\ngetallartworks = () => {\n  return this.api.get('getAllArtworks');\n};\n\naddartshare = (data) => {\n\n  return this.api.post('addartShare', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\n\ngetartshare= () => {\n  return this.api.get('getartShare');\n};\n\naddprintoption = (data) => {\n\n  return this.api.post('addPrintOpt', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetprintoption= () => {\n  return this.api.get('getPrintOpt');\n};\neditprintoption = (data) => {\n  return this.api.post('editPrintOpt', {\n    mode: 'cors',\n    data: data,\n  });\n};\n\ngetsalearts= () => {\n  return this.api.get('getSaleArts');\n};\n\n\n}\n\n\n\n\ndecorate(Api, {\n  getUsers: action,\n  addaccount: action,\n  getaccounts: action,\n  loginaccount: action,\n  loginemail: action,\n  loginfb: action,\n  logingoogle: action,\n  editAccount: action,\n  editprofile: action,\n  addartwork: action,\n  getartwork: action,\n  editArtwork: action,\n  getartworkInfo: action,\n  addCategory: action,\n  editCategory: action,\n  getCategories: action,\n  getArtists: action,\n  addToCart: action,\n  getToCart: action,\n  editToCart: action,\n  addStyle: action,\n  addprintsize:action,\n  getprintsize:action,\n  editprintsize:action,\n  getStyles: action,\n  editStyle: action,\n  getsingleartworkinfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  getOrders: action,\n  getOrder: action,\n  followAccount: action,\n  addOrder: action,\n  editOrder: action,\n  getEmergingArtist: action,\n  getArtistFollowArtwork: action,\n  addnotif:action,\n  getnotif:action,\n  editnotif:action,\n  addmylists:action,\n  getmylists:action,\n  deletemylists:action,\n  addfeedback:action,\n  getfeedback:action,\n  addfollow:action,\n  getfollow:action,\n  deletefollow:action,\n  getallartworks:action,\n  addartshare:action,\n  getartshare:action,\n  addprintoption:action,\n  getprintoption:action,\n  editprintoption:action,\n\n});\n\nexport default Api;\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, withRouter} from 'react-router-dom';\r\nimport {Provider} from 'mobx-react';\r\n\r\n//pages\r\nimport Landing from './pages/Landing/';\r\nimport Homepage from './pages/Homepage/';\r\nimport SingleArtist from './pages/SingleArtist/';\r\nimport ArtistReg from './pages/ArtistReg/';\r\nimport ArtGalReg from './pages/ArtGalReg/';\r\nimport UserReg from './pages/UserReg/';\r\nimport UploadWork from './pages/UploadWork/';\r\nimport SingleArt from './pages/SingleArt/';\r\nimport Artworks from './pages/Artworks/';\r\nimport Artists from './pages/Artists/';\r\nimport CProfile from './pages/CProfile/';\r\nimport CProfileEdit from './pages/CProfileEdit/';\r\nimport Order from './pages/Order/';\r\nimport RegVerify from './pages/RegVerify/';\r\nimport SubmitArt from './pages/SubmitArt/';\r\n\r\nimport ShopByPrice from './pages/ShopByPrice/';\r\nimport ShopByCategory from './pages/ShopByCategory/';\r\nimport MyLists from './pages/MyLists/'\r\nimport AllArtworks from './pages/AllArtworks/index.js'\r\nimport LatestArts from './pages/Latest/';\r\nimport Discover from './pages/Discover'\r\n//Admin\r\nimport AdminLogin from './admin/AdminLogin.js';\r\nimport AdminHome from './admin/Admin.js';\r\nimport {ToastContainer} from 'react-toastify';\r\n//PrintPartner\r\nimport PartnerLogin from './printingpartner/PartnerLogin.js';\r\nimport PrintingPartner from './printingpartner/PrintingPartner.js';\r\nimport ArtistHome from './ArtistPage/'\r\n\r\nimport ForgotPass from './components/ForgotPass'\r\nimport {StartingStore, Api} from './stores';\r\n\r\nconst api = new Api();\r\nconst startingStore = new StartingStore(api);\r\n\r\nconst stores = {\r\n  startingStore,\r\n};\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider {...stores}>\r\n        <ToastContainer\r\n          position='top-right'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Route exact path='/' component={Landing} />\r\n        <Route  path='/Home' component={Homepage} />\r\n        <Route  path='/Artist/:name' component={SingleArtist} />\r\n        <Route  path='/ArtistRegistration' component={ArtistReg} />\r\n        <Route  path='/UserRegistration' component={UserReg} />\r\n        <Route  path='/ArtistGalleryRegistration' component={ArtGalReg} />\r\n        <Route  path='/Upload' component={UploadWork} />\r\n        <Route  path='/Art/:id/:name' component={SingleArt} />\r\n        <Route  path='/Artworks' component={Artworks} />\r\n     \r\n        <Route  path='/Artists' component={Artists} />\r\n        <Route  path='/CProfile/:id' component={CProfile} />\r\n        <Route  path='/CProfileEdit/:id' component={CProfileEdit} />\r\n        <Route  path='/RegVerify' component={RegVerify} />\r\n        <Route  path='/SubmitArt' component={SubmitArt} />\r\n        <Route  path='/MyLists' component={MyLists} />\r\n\r\n        <Route  path='/ShopByPrice' component={ShopByPrice} />\r\n        <Route  path='/ShopByCategory' component={ShopByCategory} />\r\n        <Route  path='/AllArtworks' component={AllArtworks} />\r\n        <Route  path='/latestArtworks' component={LatestArts} />\r\n        <Route  path='/Discover' component={Discover} />\r\n\r\n        <Route  path='/Admin' component={AdminLogin} />\r\n        <Route  path='/AdminHome' component={AdminHome} />\r\n        <Route  path='/Order' component={Order} />\r\n        <Route  path='/PartnerLogin' component={PartnerLogin} />\r\n        <Route  path='/PrintingPartner' component={PrintingPartner} />\r\n        <Route  path='/ForgotPass' component={ForgotPass} />\r\n        <Route  path='/ArtistHome' component={ArtistHome} />\r\n        <ToastContainer />\r\n\r\n        {/* render={function() {\r\n              return <h1>Not Found</h1>;\r\n            }}\r\n          /> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Routes);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport './css/style.css';\r\nimport './css/normalize.css';\r\nimport './css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={'/'}>\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n\r\n        \r\n      </Router>\r\n   \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./css/style.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nconst routes = (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} />\r\n      <Redirect from=\"/\" to=\"/\" />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(routes, document.getElementById(\"root\"));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}