{"version":3,"sources":["images/artworks/art1.png","components/FbLogin.js","components/GoogleLogin/index.js","components/AddYoursLogin/index.js","components/Footer.js","components/Login.js","components/NavLogin.js","components/Search.js","components/OrderIcon.js","components/CNotif.js","components/NavLoginPost.js","components/Navbar.js","pages/Landing/index.js","pages/Homepage/index.js","pages/SingleArtist/index.js","components/RegisterFB/index.js","components/RegisterGmail/index.js","pages/ArtistReg/index.js","pages/ArtGalReg/index.js","pages/UserReg/index.js","components/UploadMult.js","pages/UploadWork/index.js","components/Notif.js","components/Cart.js","components/AddToBag.js","components/ViewCart.js","components/ViewRoom.js","components/CartLogin/index.js","pages/SingleArt/index.js","components/ArtworkFilter.js","pages/Artworks/index.js","pages/Artists/index.js","pages/CProfile/index.js","components/OrderDetails.js","components/Feedback/index.js","components/OrderTab.js","pages/CProfileEdit/index.js","pages/Order/index.js","pages/RegVerify/index.js","pages/SubmitArt/index.js","pages/ShopByPrice/index.js","pages/ShopByCategory/index.js","pages/MyLists/index.js","pages/Onsale/index.js","admin/AdminLogin.js","admin/DashCards/index.js","admin/sections/DownloadImage.js","admin/sections/ArtistTable.js","admin/sections/CustomerTable.js","admin/sections/ArtworkTable.js","admin/sections/OrderTable.js","admin/sections/PendingArtistTable.js","admin/sections/PendingArtworkTable.js","admin/sections/PendingOrderTable.js","admin/Dashboard.js","admin/sections/CompletedOrder.js","admin/sections/CancelledOrders/index.js","admin/sections/OrderTab/index.js","admin/OrdersTab.js","admin/sections/AddArtwork.js","admin/sections/ArchivedArtworks/index.js","admin/sections/ArtworkTab/index.js","admin/ArtworkTab.js","admin/sections/DeactivatedAccount/index.js","admin/sections/UsersTab/index.js","admin/sections/AddUser.js","admin/UserTab.js","admin/sections/AddArtist.js","admin/sections/DeactivatedArtist/index.js","admin/sections/ArtistsTab/index.js","admin/ArtistTab.js","admin/sections/AddCat.js","admin/sections/EditCat.js","admin/sections/EditStyle.js","admin/sections/EditPrintSize/index.js","admin/sections/CatTable.js","admin/CategoryTab.js","admin/sections/Notif.js","admin/sections/UserFeedback/index.js","admin/FeedbackTab.js","admin/MessagingTab.js","admin/sections/AccountSettings/index.js","admin/Admin.js","printingpartner/PartnerLogin.js","printingpartner/DashCards/index.js","printingpartner/sections/COrderDeli.js","printingpartner/sections/CPendingOrders.js","printingpartner/sections/OngoingOrders/index.js","printingpartner/Dashboard.js","printingpartner/sections/Printing/index.js","printingpartner/PrintingTab/index.js","printingpartner/OrderDeliverytab.js","printingpartner/sections/CCompletedOrder.js","printingpartner/CompletedOrderTab.js","printingpartner/sections/CCancelOrder.js","printingpartner/CancelOrdertab.js","printingpartner/sections/Notif.js","printingpartner/sections/ViewImage.js","printingpartner/sections/ViewData.js","printingpartner/sections/CHistory.js","printingpartner/History.js","printingpartner/sections/AccountSetting/index.js","printingpartner/MessageTab.js","printingpartner/PrintingPartner.js","ArtistPage/AccountSetting/index.js","ArtistPage/ArtworkManagement/ActiveArtworks/index.js","ArtistPage/ArtworkManagement/ArchivedArtworks/index.js","ArtistPage/ArtworkManagement/PendingArtwork/index.js","ArtistPage/ArtworkManagement/AddArtwork/index.js","ArtistPage/ArtworkManagement/index.js","ArtistPage/Notification/index.js","ArtistPage/DCards/index.js","ArtistPage/Profile/index.js","ArtistPage/Earnings/DownloadImage/index.js","ArtistPage/Earnings/index.js","ArtistPage/Messaging/index.js","ArtistPage/index.js","models/Model.js","models/Account.js","models/Artwork.js","models/Cart.js","models/Categories.js","models/Order.js","models/Style.js","models/User.js","models/PrintSize.js","models/Notif.js","models/MyLists.js","models/Feedback.js","models/UserFollow.js","stores/StartingStore.js","stores/Api.js","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FbLogin","state","isLoggedIn","userID","name","email","picture","responseFacebook","response","_this$props$startingS","_this","props","startingStore","account","loginFB","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","undefined","setTimeout","message","loading","then","error","setState","data","url","setProperty","res","mydata","JSON","parse","sessionStorage","getItem","accEmailAddress","history","push","success","componentClicked","console","log","fbContent","this","react_default","a","createElement","style","width","margin","background","padding","textAlign","marginBottom","src","alt","fontSize","facebook_login_with_button_default","appId","autoLoad","cssClass","fields","onClick","disableMobileRedirect","callback","icon","Facebook_default","className","color","Component","withRouter","inject","observer","GmailLogin","googleID","responseGoogle","loginGoogle","profileObj","googleId","givenName","imageUrl","getAccounts","googleContent","google_login_default","clientId","buttonText","onSuccess","onFailure","cookiePolicy","react","Login","modal1","toggle","nr","modalNumber","Object","defineProperty","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","loginAccount","changeHandler","value","btn","login","mdbreact_esm","isOpen","centered","onSubmit","type","label","required","onChange","password","class","id","for","components_FbLogin","GoogleLogin","Footer","href","moment","format","getFollow","NavLogin","Search","classCallCheck","_super","call","modal","suggestions","_this2","listOfArtworks","pArtworks","filter","art","artworkStatus","map","artworks","artworkDB","artworkID","title","artName","artist","artistName","img","artworkImg","year","artworkDateCreated","theme","artTheme","languages","toConsumableArray","row","concat","thme","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","lang","slice","toLocaleLowerCase","split","join","_this$state","inputProps","placeholder","_ref","newValue","filArt","filArtist","searchnow","window","location","reload","md","dist_default","border","onSuggestionsFetchRequested","_ref2","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","height","float","marginRight","paddingBottom","size","OrderIcon","listOfUserCart","CNotif","react_router_dom","to","Notifications","listOfNotif","notifCount","ntf","notifRecipient","accID","notifStatus","mynotif","notifInfo","key","notifMsg","notifDT","far","basic","paddingLeft","fontWeight","Navbar","collapse1","collapseID","toggleCollapse","prevState","toggleSingleCollapse","collapseId","objectSpread","userData","filterArtwork","filterOn","setItem","dark","expand","navbar","display","caret","NavLoginPost","components_Search","accFname","components_NavLogin","accLname","clear","components_CNotif","components_OrderIcon","lib_default","pageId","shouldShowDialog","loggedInGreeting","Landing","condition","isToggleOn","handleClick","bind","assertThisInitialized","scrollTo","listOfEmergingArtist","getPrintSize","_React$createElement","_this$props$startingS2","listOfUsers","ArtistOftheMonth","fil","accessType","acc_Status","usr","AOMid","AOM","pop","build_default","sameSite","Secure","cookieSecurity","cookieName","components_Navbar","marginTop","components_Login","pathname","artistid","image","artType","item","skeleton","fontStyle","reverse","AddYoursLogin","back_top","components_Footer","Homepage","getNotif","getToCart","getOrders","getMyLists","logged","followArtist","listofArtistInfo","listofFilteredUserArtworkCategories","listOfArtistFollowed","mylists","addMyLists","listOfMyLists","addFollow","userfollow","listOfFollowing","deleteFollow","addNotif","notif","addtoList","rtwrk","floor","artStyle","artPrice","follow","following","followingID","followerID","input","hash","len","charCodeAt","getHash","MatchRouteUserCategories","_this4","floating","rounded","MatchRouteEmergingArtist","_this5","MatchRouteArtistFollowed","_this6","getFollowing","borderRadius","outline","SingleArtist","checkFollower","follower","content","duration","followStatus","followed","setFollowed","getSingleArtists","getArtistArtwork","match","params","_this$props$startingS3","listofArtistArtwork","listofArtistCategories","getFollowers","profile_Img","active","marginLeft","_id","accAddress","birthYear","artistDescription","_","uniqBy","cat","FbReg","getEmail","addAccount","stat","user","textButton","withStyles","root","button","spacing","unit","instructions","facebookIcon","GmailRegister","familyName","ArtistReg","confPassword","handleChange","e","upload","accContact","onFileChange","onFileChangeP","profileImg","selectedFile","formData","FormData","append","files","URL","createObjectURL","formData2","accept","backgroundColor","htmlFor","rows","maxlength","accInstitution","ArtGalReg","textTransform","RegisterFB","RegisterGmail","UserReg","_Component","inherits","UserReg_createSuper","createClass","getStyles","getCategories","listOfCategories","listOfStyles","multiselect_react_dropdown_build","options","showCheckbox","displayValue","onSelect","list","listitem","categorySelected","catType","styleSelected","styleType","confirmPassword","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UploadMult","previewVisible","previewImage","fileList","handleCancel","handlePreview","_callee","regenerator_default","wrap","_context","prev","next","preview","originFileObj","sent","stop","uploadButton","es_upload","action","listType","onPreview","visible","footer","onCancel","React","UploadWork","artID","artImg","ArtByMe","imageFile","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","catch","artwork","_this3","listOfArtists","listOfPrintSize","paddingTop","artThemeSelected","artStyleSelected","artSizeSelected","printSize","artDescription","components_UploadMult","notify","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warn","OrderTab","selected","selectedCheckBox","totalPrice","partnerPercentage","setStatus","status","selectedValue","index","checked","total","parseFloat","artworkPaymentAmount","selectedArray","indexer","deleteItem","editToCart","addOrder","perctodec","order","totalValue","Notification","selectedCheck","listOfOrder","reduce","indexes","artworkQuantity","accImg","artistImg","accDescription","accFollowers","artworkName","artworkMaterial","artworkSize","artworkFramingOptions","artworkPrice","Number","toLocaleString","disabled","AddToBag","addTocart","cart","addToCart","cartData","date","getFullYear","disable","components_Cart","ViewCart","ViewRoom","modal14","selectedsize","Awidth","Aheight","SingleArt","artistInfoList","artistData","artworkInfo","artworkList","isMounted","selectedSize","getSingleArtworkInfo","listOfSingleArtwork","listRelatedWorkByCategory","getmyList","artSize","components_ViewRoom","Asize","_this2$state","changeSize","sizes","option","CartLogin","components_AddToBag","numEachPage","ArtworkFilter","minValue","maxValue","deleteMyLists","removeToLists","mylistsID","toJS","price","pagination","defaultCurrent","defaultPageSize","Artworks","Artworks_createSuper","setPrice","amt","arts","parseInt","setCategories","selectedCheckboxes","has","delete","add","newCategories","Array","from","includes","setPrintSize","categories","Set","categoryList","printSizeList","components_ArtworkFilter","Artists","Artists_createSuper","buffer","binary","Uint8Array","forEach","b","String","fromCharCode","btoa","isExpanded","dataSource","CProfile","listofUsers","Step","Steps","OrderDetails","pendingOrders","steps","checkSteps","_this$setState","orderID","progressDot","current","orderItems","currency","toString","replace","feedback","addFeedback","orderInfo","submitFeedback","feedbackNote","activeItem","tab","getOrderUser","listofUserOrder","editOrder","listOfOrders","items","orderStatus","listOfOrderReceived","Received","listOfOrderDelivered","listOfOrderCancelled","Rejected","cancelOrder","myorder","ord","link","role","tabId","components_OrderDetails","components_Feedback","CProfileEdit","pass","confPass","editAccount","getSingleEnthusiast","getOrder","AccountInfo","resp","valueDefault","confpassword","components_OrderTab","removeItem","Order","RegVerify","RegVerify_createSuper","apply","arguments","SubmitArt_createSuper","AdminLogin","DashCards","activeArtists","artEnthu","Orders","CancelledOrders","CompletedOrders","salesYTD","product","amount","paymentStatus","sum","record","totalAmount","sales","useStyles","makeStyles","paper","cont","palette","text","secondary","cont2","cont3","small","menuButton","hide","toolbar","alignItems","justifyContent","mixins","flexGrow","bullet","transform","pos","card","card2","flex","iconButton","search","DCards","classes","Grid","container","sm","xs","Card","CardContent","Typography","variant","MonetizationOnOutlined_default","SmsFailedOutlined_default","CollectionsBookmarkOutlined_default","DownloadImage","close","users","userDB","fname","address","deactivate","itm","ArtistsTable","columns","field","sort","maxWidth","acc_Documents","striped","bordered","Customer","CustomerTable","PendingArtwork","editArtwork","archive","PendingArtworkTable","no","artCategory","artDimension","dateAdded","direction","CompletedOrder","Corder","Delivery","orders","orderBy","orderDate","orderStat","paymentStat","CompletedOrderTable","hover","sections_DownloadImage","Deactivated","lname","approve","DeactivatedTable","PendingTable","getAllArtworks","PendingOrder","orderDB","PendingOrderTable","responsive","DashboardSection","admin_DashCards","Paper","sections_PendingOrderTable","sections_PendingArtworkTable","PendingArtistTable","CancelledOrder","CancelledOrderTable","OrderTable","sections_CompletedOrder","sections_CancelledOrders","OrdersTab","sections_OrderTab","AddArtwork","arworks","restore","ArtwrkTab","ArtworkTable","ArchivedArtworks","ArtworkTab","sections_AddArtwork","sections_ArtworkTab","UsrsTab","sections_CustomerTable","DeactivatedAccount","AddUser","accSuffix","User","UserTab_createSuper","sections_AddUser","UsersTab","AddArtist","ArtistTable","DeactivatedArtist","ArtistTab","ArtistTab_createSuper","sections_AddArtist","ArtistsTab","AddCat","modal2","addCategory","submitHandlerStyle","addStyle","submitHandlerSize","addPrintSize","printsize","_this$props$startingS4","EditCat","editCategory","catID","EditStyle","editStyle","styleID","editPrintSize","sizeID","CategoryTable","sections_EditCat","sections_EditStyle","EditPrintSize","CategoryTab","CategoryTab_createSuper","sections_AddCat","CatTable","editNotif","notifNum","notifData","dateNotif","notifID","Notif","UserFeedback","getFeedback","listOfFeedback","filtFeedback","fb","fbID","feedbackID","acID","acc","ordID","note","FeedbackTable","sender","FeedbackTab","sections_UserFeedback","AccountSettings","editProfile","SettingGrid","_React$useState","useState","_React$useState2","slicedToArray","setPass","_React$useState3","_React$useState4","setConfPass","edit","accData","getMyData","contact","byear","institution","justify","TextField","defaultValue","Admin","default","togglePills","getAllNotif","sections_Notif","Dashboard","admin_OrdersTab","admin_ArtworkTab","UserTab","admin_ArtistTab","admin_CategoryTab","admin_FeedbackTab","sections_AccountSettings","MessagingTab","PartnerLogin","partnerEarnings","LocalShippingOutlined_default","ForDelivery","done","ForDeliveryTable","PendingPrint","PendingPrintTable","OngoingOrder","OngoingOrderTable","pDashboardSection","printingpartner_DashCards","CPendingOrders","OngoingOrders","COrderDeli","Printing","PrintingTable","sections_Printing","OrderDeliverytab_createSuper","CCompletedOrder","CCancelOrder","ViewImage","ViewData","dateOfTransaction","sections_ViewImage","CHistory","listOfPrintOrders","PrintOrders","sections_ViewData","MessageTab_createSuper","PrintingPartner","printingpartner_sections_Notif","printingpartner_Dashboard","PrintingTab","OrderDeliverytab","CompletedOrderTab","CancelOrdertab","MessageTab","AccountSetting","minWidth","ArtworkManagement_AddArtwork","ArtworkManagement_PendingArtwork","ActiveArtworks","ArtworkManagement_ArchivedArtworks","Artwoks","gutterBottom","component","Brush_default","ArtistProfile","getArtwork","myprofile","pp","contactno","document","description","myFollowers","ArtistPage_DCards","Earnings","Earnings_DownloadImage","ArtistMessaging","ArtistPage_Notification","Profile","ArtworkManagement","ArtistPage_Earnings","Messaging","ArtistPage_AccountSetting","Model","validate","Joi","constructor","schema","skipFunctions","abortEarly","allowUnknown","property","handleProperties","deepProperty","Error","properties","prop","shift","assign","propertiesClone","keys","isObservableArray","isObservableObject","isBoxedObservable","details","decorate","Account","defaults","accPoints","username","accCategories","accStyles","regType","observable","Artwork","artworkPath","artRating","Cart","Categories","modeOfPayment","Style","firstName","lastName","phone","street","city","postalCode","dateRegistered","string","hex","object","number","iso","PrintSize","notifSender","notifSubject","MyLists","artistID","Feedback","UserFollow","followID","StartingStore","api","welcomeMessage","currentUser","listOfUserDocs","listofUserCategoriesArtwork","listofUserStyleArtwork","addaccount","getaccounts","removeUndefinedProps","us","stringify","doc","editprofile","loginaccount","loginEmail","loginemail","loginfb","logingoogle","addArtwork","addartwork","documents","getartwork","arrayBufferToBase64","getEmergingArtist","getsingleartworkinfo","styles","themes","union","getRelatedWorkByCategory","followAccount","addprintsize","getprintsize","editprintsize","currData","addnotif","getId","getnotif","getallnotif","editnotif","addmylists","getmylists","mytoken","deletemylists","addfeedback","getfeedback","addfollow","follow_ID","deletefollow","getfollow","getallartworks","obj","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName","Api","axios","create","baseURL","post","mode","get","docID","put","abrupt","_callee2","_context2","_callee3","_context3","_callee4","_context4","getartworkInfo","category","followid","getUsers","stores","Routes","mobxreact_esm","react_toastify_esm","newestOnTop","rtl","pauseOnFocusLoss","react_router","exact","path","SubmitArt","ShopByPrice","ShopByCategory","OnSale","AdminHome","ArtistHome","App","basename","src_Routes","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","routes","ReactDOM","render","getElementById","src_App","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d6b2f0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/art1.e322232c.png\";","import React, {Component} from 'react';\r\nimport FacebookLoginBtn from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass FbLogin extends Component {\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n   \r\n    let { startingStore: {  account ,loginFB ,getArtists,\r\n      getArtworkInfo,\r\n      getEmergingArtistArtwork,\r\n      getArtistFollowArtwork} } = this.props;\r\n    \r\n   \r\n    if (response.email === undefined || response.email === null ){\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n      }\r\n  else{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n\r\n    account.setProperty('accFname',this.state.name)\r\n    account.setProperty('accEmailAddress',this.state.email)\r\n\r\nif (this.state.isLoggedIn === true){\r\n\r\n    loginFB().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === 1) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/ArtistHome');\r\n      } else if (res === 2) {\r\n         getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 3) {\r\n        \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Please wait for your account approval', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 4) {\r\n       \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Account rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (res === false) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('No facebook account registered', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n    \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n    });\r\n  }else{\r\n    const success = () => {\r\n      message\r\n        .loading('Signing in..', 1.2)\r\n        .then(() => message.error('Please try again', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 500);\r\n  }\r\n  }\r\n    \r\n  };\r\n\r\n  componentClicked = () => console.log('clicked');\r\n\r\n  render() {\r\n    let fbContent;\r\n\r\n    if (this.state.isLoggedIn) {\r\n      fbContent = (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            margin: 'auto',\r\n            background: '#f4f4f4',\r\n            padding: '20px',\r\n           \r\n          }}\r\n        >\r\n         <div style={{textAlign:'center',marginBottom:'8px'}}><img src={this.state.picture} alt={this.state.name} /></div> \r\n         <div style={{textAlign:'center',marginBottom:'8px'}}>\r\n          <h6>Welcome to Art, Basically</h6>\r\n          <p style={{fontSize:'18px'}}>{ this.state.name}</p>\r\n          <p style={{fontSize:'15px'}}>{this.state.email}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      fbContent = (\r\n        <FacebookLoginBtn\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          cssClass=\"LoginFb\"\r\n          fields='name,email,picture'\r\n          onClick={this.componentClicked}\r\n          disableMobileRedirect={true}\r\n          callback={this.responseFacebook}\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (<div>{fbContent}</div>)\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(FbLogin)))","import React, {Component,Fragment} from 'react';\r\nimport GoogleLoginBtn from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\n\r\nimport {\r\n  \r\n  MDBIcon\r\n\r\n} from 'mdbreact';\r\nimport './../../css/style.css';\r\nimport './../../css/normalize.css';\r\nimport './../../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass GmailLogin extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    googleID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseGoogle = (response) => {\r\n console.log(response,'respp')\r\n let { startingStore: {  account ,loginGoogle ,getArtists,\r\n  getArtworkInfo,\r\n  getEmergingArtistArtwork,\r\n  getArtistFollowArtwork} } = this.props;\r\n\r\n    if(response !== undefined || response !== null){\r\n\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        googleID: response.profileObj.googleId,\r\n        name: response.profileObj.givenName,\r\n        email: response.profileObj.email,\r\n        picture: response.profileObj.imageUrl,\r\n      });\r\n     \r\n\r\n     \r\n\r\n\r\n        account.setProperty(\"accEmailAddress\", this.state.email)\r\n        account.setProperty(\"accFname\", this.state.name)\r\n\r\n        if (this.state.isLoggedIn === true){\r\n        loginGoogle().then((res) => {\r\n          let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n          getArtworkInfo();\r\n          getEmergingArtistArtwork();\r\n          getArtists();\r\n   \r\n          if (res === 1) {\r\n          \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/ArtistHome');\r\n          } \r\n          else if (res === 2){\r\n            getArtistFollowArtwork(mydata.accEmailAddress);\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n       \r\n              success();\r\n              setTimeout(() => {\r\n            this.props.history.push('/Home');\r\n          }, 50);\r\n          } \r\n          else if (res === 3){\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.error('Admin is validating your account', 2));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          \r\n          }\r\n          \r\n          else {\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('No account registered', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          }\r\n        });\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n  \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n\r\n    let googleContent = (\r\n      <GoogleLoginBtn\r\n      clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n      buttonText='Log in with Google'\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n    \r\n      icon={true}\r\n    />\r\n    );\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        \r\n   {googleContent}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailLogin)));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../FbLogin';\r\nimport GgLogin from '../../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\nlet btn = this.props.login;\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        {btn === 'ay'  ? (\r\n <MDBBtn\r\n onClick={this.toggle(1)}\r\n color='#FAE933'\r\n className='btnYellow'\r\n>\r\n Add Yours\r\n</MDBBtn>\r\n        )\r\n        :(  <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='#FAE933'\r\n          className='btnBlack'\r\n         >\r\n          Add your work now\r\n         </MDBBtn>)\r\n        }\r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GgLogin/>\r\n         \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import React, {Component} from 'react';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport moment from 'moment'\r\n class Footer extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className='footer clearfix'>\r\n        <div className='navfoot'>\r\n          <ul>\r\n            <li>Get to Know Us</li>\r\n            <li>\r\n              <a href='#!'>About Us</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Job Opportunities</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Contact Us</a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Make Money with Us</li>\r\n            <li>\r\n              <a href='#!'>Sell on Art, Basically</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Sell as a Gallery</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Sell &nbsp;Your Services on <br /> Art, Basically\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Advertise Your Products</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                See all <MDBIcon icon='caret-right' className='caret' />{' '}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Let Us Help You</li>\r\n            <li>\r\n              <a href='#!'>\r\n                Track&nbsp;Your Packages or <br /> View&nbsp;Your Orders\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Delivery Rates & <br /> Policies\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Returns & <br /> Replacements\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Customer Service</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='copyright'>\r\n          <p>Copyright © {moment().format(\"YYYY\")} Art,Basically Inc. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        \r\n        getFollow,\r\n\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n     \r\n      if (res === true) {\r\n      \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='#FAE933'\r\n          className='btn btnBlack loginbtn'\r\n        >\r\n          Login\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GgLogin />\r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nimport './../css/style.css';\r\nimport './../css/normalize.css';\r\nimport './../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBBtn onClick={this.toggle(1)} color='#fff' className='navlogin'>\r\n          Hello, Sign In\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <h3>LOGIN</h3>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GgLogin />\r\n        \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import Autosuggest from 'react-autosuggest';\r\n\r\nimport React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBCol,\r\n  MDBIcon,\r\n} from 'mdbreact';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {message} from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nclass Search extends Component {\r\n  componentDidMount(){\r\n    let {startingStore:{getArtworkInfo}}=this.props;\r\n    getArtworkInfo()\r\n  }\r\n  state = {\r\n    modal: false,\r\n  \r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  \r\n  constructor() {\r\n    super();\r\n  \r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n    \r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  render() {\r\n\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n\r\n        \r\n    function createData(artworkDB,id,title,artist, img,year,theme) {\r\n      return { artworkDB,id,title,artist, img,year,theme };\r\n    }\r\n\r\n    let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Approved').map(artworks =>{\r\n      return(createData(\r\n     artworks,artworks.artworkID,artworks.artName\r\n     ,artworks.artistName,artworks.artworkImg,artworks.artworkDateCreated,artworks.artTheme\r\n      ))\r\n    })\r\n\r\n  let  languages =  \r\n  [...pArtworks.map((row,i) => {\r\n \r\n    return(\r\n\r\n   {\r\n      name: `${row.title}`,\r\n      year: `${row.year}`,\r\n      img: `${row.img}`,\r\n      artist: `${row.artist}`,\r\n      theme:`${row.theme.map(thme => thme)}`,\r\n\r\n    \r\n\r\n   }\r\n   \r\n   ) })\r\n  ]\r\n    \r\n    // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  let getSuggestions = value => {\r\n      const inputValue = value.trim().toLowerCase();\r\n    \r\n      const inputLength = inputValue.length;\r\n    \r\n      return inputLength === 0 ? [] : languages.filter(lang =>\r\n\r\n        lang.name.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.artist.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.year.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.theme.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(' ').slice(-1).join(' ') === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(/\\s+/).slice(1,2).join(' ') === inputValue \r\n      \r\n      );\r\n    };\r\n    \r\n    // When suggestion is clicked, Autosuggest needs to populate the input\r\n    // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n    // input value for every given suggestion.\r\n  let   getSuggestionValue = suggestion => suggestion.name;\r\n    \r\n    // Use your imagination to render suggestions.\r\n  let renderSuggestion = suggestion => (\r\n      <div>\r\n       <img src={suggestion.img} style={{width:'50px',height:'50px',float:'left',marginRight:'8px',paddingBottom:'6px'}} />\r\n    {suggestion.name}<p style={{fontSize:'10px'}}> by {suggestion.artist}</p>\r\n     \r\n      </div>\r\n    );\r\n  \r\n  \r\n  let  onChange = (event, { newValue }) => {\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n\r\n\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: 'Search artworks',\r\n      value,\r\n      onChange: onChange\r\n    };\r\n    \r\n \r\n\r\n\r\n    \r\nlet filArt = listOfArtworks.filter(art => art.artName === this.state.value).map(art => art)\r\nlet filArtist = listOfArtworks.filter(art => art.artistName === this.state.value).map(art => art)\r\n  \r\n    let searchnow =()=>{\r\n     \r\n   if(filArt[0] !== undefined && filArtist[0] === undefined){\r\n  \r\n      this.props.history.push(`/Art/${filArt[0].artworkID}/${filArt[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else if (filArtist[0] !== undefined && filArt[0] === undefined) { \r\n      this.props.history.push(`/Artist/${filArtist[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1)\r\n          .then(() => message.error('Artwork or Artist not found', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='search'>\r\n        <MDBIcon icon='search' onClick={this.toggle} style={{color:'white'}}/>\r\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <MDBModalBody md='4' color='red'>\r\n            <MDBCol md='12'>\r\n              {/* <input\r\n                className='form-control'\r\n                type='text'\r\n                placeholder='Search'\r\n                aria-label='Search'\r\n                onChange={(e)=>{searchInput(e.target.value)}}\r\n              /> */}\r\n\r\n<Autosuggest\r\n style={{width:'80%',border:'1px solid red'}}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n            </MDBCol>\r\n            <MDBBtn size='md' color='dark' onClick={()=>{searchnow()}}>Search</MDBBtn>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Search)))\r\n","\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport React, { Component } from 'react'\r\nimport {inject,observer} from 'mobx-react'\r\nclass OrderIcon extends Component {\r\n    render() {\r\nlet {startingStore:{listOfUserCart}}=this.props;\r\n\r\n\r\n\r\n\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n           <Link\r\n                  \r\n                  to='/Order'\r\n                > \r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon   className=\"mr-3 i ibag h5\" />\r\n     \r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{listOfUserCart.length}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      </Link>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n   <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(OrderIcon))","import { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n let {startingStore:{listOfNotif}}=this.props;\r\n let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nlet notifCount = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').length\r\nlet mynotif = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n  return(\r\n    <Fragment key={i}>\r\n\r\n        <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n          <span className=\"time\">{notifInfo.notifDT}</span>\r\n        </MDBDropdownItem>\r\n \r\n    </Fragment>\r\n  )\r\n})\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon far icon=\"bell\" className=\"mr-3 i\" />\r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n    {mynotif}\r\n    \r\n    </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn,MDBNavLink} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (typeof res === 'string') {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(`/CProfile/${res}`);\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBNavLink onClick={this.toggle(1)} to='' className='inlinelink rborder btnYellow navbtn' style={{fontWeight:'bold'}}>\r\n        Post, Basically\r\n        </MDBNavLink>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n         <GgLogin/>\r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import {\r\n  MDBCollapse,\r\n  MDBDropdown, MDBDropdownItem,\r\n  MDBDropdownMenu, MDBDropdownToggle,\r\n  MDBHamburgerToggler, MDBNavbar,\r\n  MDBNavbarBrand, MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBBtn\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLogin from './NavLogin';\r\nimport Search from './Search';\r\nimport OrderIcon from './OrderIcon';\r\nimport CNotif from './CNotif';\r\nimport NavLoginPost from './NavLoginPost';\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: { filterArtwork},\r\n    } = this.props;\r\n\r\n    let filterOn = (type) => {\r\n      sessionStorage.setItem('type', type);\r\n      filterArtwork(type);\r\n    };\r\n    return (\r\n      <Fragment>\r\n     \r\n      <MDBNavbar dark expand='md' className='navcon'>\r\n        {userData !== null && userData !== undefined ? (\r\n         <MDBNavbarBrand>\r\n           <div>\r\n         <a href='/Home'>\r\n           <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='' />\r\n         </a>\r\n         </div>\r\n       </MDBNavbarBrand>\r\n            ) : (\r\n              <MDBNavbarBrand>\r\n              <a href='/'>\r\n                <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='' />\r\n              </a>\r\n            </MDBNavbarBrand>\r\n              )}\r\n\r\n        <MDBHamburgerToggler\r\n          color='#FAE933'\r\n          id='hamburger1'\r\n          onClick={() => this.toggleSingleCollapse('collapse1')}\r\n        />\r\n        <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n          <MDBNavbarNav className='nav-ul'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder '\r\n                to='/OnSale'\r\n                onClick={() => {\r\n                  filterOn('onSale');\r\n                }}\r\n              >\r\n                SALE\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('latest');\r\n                }}\r\n              >\r\n                Latest\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            {userData !== null && userData !== undefined ? (\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('foryou');\r\n                  }}\r\n                >\r\n                  For&nbsp;You\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n            ) : (\r\n                <MDBNavItem style={{ display: 'none' }}></MDBNavItem>\r\n              )}\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('discover');\r\n                }}\r\n              >\r\n                Discover\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBDropdown className='ddnav'>\r\n              <MDBDropdownToggle caret color='transparent'>\r\n                Shop By\r\n              </MDBDropdownToggle>\r\n              <MDBDropdownMenu basic className='ddnavMenu'>\r\n                <MDBDropdownItem href='/ShopByPrice'>Price</MDBDropdownItem>\r\n                <MDBDropdownItem href='/ShopByCategory'>Category</MDBDropdownItem>\r\n              </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n       \r\n            <MDBNavItem>\r\n    \r\n            \r\n                {userData !== null && userData !== undefined ? (<MDBNavLink\r\n          className='inlinelink rborder btnYellow navbtn'\r\n          to='/Upload'\r\n        >\r\n          Post, Basically\r\n        </MDBNavLink>)\r\n        : (<NavLoginPost />)}\r\n\r\n            </MDBNavItem> \r\n            \r\n              <MDBNavItem>\r\n                <MDBBtn color='dark' style={{color:'white'}}>\r\n            \r\n                  <Search />\r\n                 \r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n              <MDBDropdown className='ddnav'>\r\n\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownToggle color='transparent'>\r\n                    Hello, {userData.accFname}\r\n                  </MDBDropdownToggle>\r\n                ) : (\r\n                    <NavLogin />\r\n                  )}\r\n                  \r\n                {userData !== null && userData !== undefined ? (\r\n\r\n                  <MDBDropdownMenu basic className='ddnavMenu'>\r\n                    <MDBDropdownItem>\r\n                      <Link\r\n                        to={`/CProfileEdit/${userData.accFname} ${userData.accLname}`}\r\n                      >\r\n                        {' '}\r\n                      Account\r\n                    </Link>\r\n                    </MDBDropdownItem>\r\n             \r\n                    <MDBDropdownItem\r\n                      onClick={() => logout()\r\n                      }\r\n                      style={{paddingLeft:'25px',color:'#000000'}}\r\n                    >\r\n                Log Out\r\n                    </MDBDropdownItem>\r\n\r\n                  </MDBDropdownMenu>\r\n                ) : (\r\n                    <MDBDropdownMenu basic className='ddnavMenu'>\r\n                       <MDBDropdownItem>\r\n                 \r\n                    </MDBDropdownItem>\r\n                    </MDBDropdownMenu>\r\n                   \r\n                  )}\r\n              </MDBDropdown>\r\n              \r\n              {userData !== null && userData !== undefined ? (\r\n                <div className='row lbtn'>\r\n                  <MDBNavItem>\r\n                  \r\n\r\n                  <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('yourlists');\r\n                  }}\r\n                >\r\n                  Your Lists\r\n                </MDBNavLink>\r\n\r\n                  </MDBNavItem>\r\n                \r\n                  <MDBNavItem>\r\n                    <CNotif />\r\n                  </MDBNavItem>\r\n                  <MDBNavItem >\r\n           \r\n                    \r\n                     <OrderIcon/>\r\n                  \r\n                \r\n       \r\n                  </MDBNavItem>\r\n                </div>\r\n              ) : (\r\n                  <MDBNavItem style={{ display: 'none' }}>\r\n                \r\n                  </MDBNavItem>\r\n                )}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n      <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n    shouldShowDialog={true}\r\n    loggedInGreeting=\"Hi! How can we help you?\"\r\n  />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Navbar));\r\n","import { BackTop,Skeleton } from 'antd';\r\nimport { MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport CookieConsent from \"react-cookie-consent\";\r\nimport { Link } from 'react-router-dom';\r\nimport AYLogin from '../../components/AddYoursLogin/index.js';\r\nimport Footer from '../../components/Footer';\r\nimport Login from '../../components/Login';\r\nimport Navbar from '../../components/Navbar';\r\nimport {withRouter} from 'react-router-dom'\r\n class Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {\r\n     \r\n        listOfEmergingArtist,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getPrintSize,\r\n        getAccounts,\r\n        getArtists,\r\n        \r\n        \r\n\r\n      },\r\n    } = this.props;\r\n   \r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getPrintSize()\r\n      getAccounts()\r\n      getArtists(); \r\n  }\r\n\r\n  render() {\r\n \r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: {listOfArtworks,listOfUsers},\r\n    } = this.props;\r\n\r\n\r\n\r\n    let ArtistOftheMonth = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accFname} ${usr.accLname}`)})\r\n\r\n\r\n\r\n    let AOMid = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accID}`)})\r\n  \r\n    \r\n   \r\n    let AOM = ArtistOftheMonth.pop()\r\n    return (\r\n      <Fragment>\r\n        <CookieConsent\r\n        sameSite=\"none\" \r\n        Secure='true'\r\n        cookieSecurity={true}\r\n        location=\"bottom\"\r\n        buttonText=\"Allow cookies\"\r\n        cookieName=\"ABasicallyCookies\"\r\n        cookieName=\"G_ENABLED_IDPS\"\r\n        cookieName=\"G_AUTHUSER_H\"\r\n        cookieName=\"SEARCH_SAMESITE\"\r\n        cookieValue='true'\r\n      style={{ background: \"#2B373B\" }}\r\n      buttonStyle={{ color: \"#4e503b\", fontSize: \"13px\" }}\r\n      expires={999}\r\n        >\r\n          <h6 style={{color:'white'}}>Cookies on Art, Basically</h6>\r\n          <p style={{color:'white'}}>We use cookies to personalize contents, to provide social media features and to ensure that we give you the best experience on our website. We also share information about your use of our site with our social media partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services.</p>\r\n        </CookieConsent>\r\n\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='welcome'>\r\n            <h2>Welcome to Art, Basically</h2>\r\n            <p style={{marginTop:'-10px'}}>Create an account with us and start sharing your artworks!</p>\r\n            <h2 className='paddh4'>But first, are you</h2>\r\n            <div className='signinOpt'>\r\n            \r\n              <MDBNavLink to='/ArtistRegistration' className='btnYellow'>\r\n                Artist\r\n              </MDBNavLink>\r\n              <MDBNavLink to='ArtistGalleryRegistration' className='btnYellow'>\r\n                Art Enthusiast\r\n              </MDBNavLink>\r\n            </div>\r\n            <p className='inlinep'>\r\n              What would best fit your description?{' '}\r\n              <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n            </p>\r\n            <div className='signinOpt block'>\r\n              <p className='inlinep paddh4'>Already have an account?</p>\r\n              <Login />\r\n            </div>\r\n          </div>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n            <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${AOM}`,\r\n                          state: {artistName:AOM ,artistid:AOMid\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n                        \r\n                         \r\n                        { (listOfArtworks.length == 0 ) ? (<p></p>):(  <h2>{AOM}      </h2>)}\r\n               \r\n\r\n        \r\n                     \r\n                    </a>\r\n\r\n             \r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks.filter(fil => fil.accID === AOMid.pop()).slice(0,3).map((image,i) => {\r\n                   \r\n                  return (\r\n                    \r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname:  `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n          \r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n         \r\n            <ul className='col3img clearfix'>\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')         \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  return (\r\n\r\n                   (image !== null || image !== undefined)?(\r\n                      <Skeleton/>\r\n                   ):(\r\n                      <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                 \r\n                  </div>\r\n                    </li>\r\n                   )\r\n                   \r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest' id='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  \r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                             <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      </a>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n         \r\n                            \r\n                         <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                        \r\n                     \r\n                   \r\n                 \r\n                  </div>\r\n                      \r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            \r\n\r\n            {userData !== null && userData !== undefined ? (\r\n            <MDBNavLink to='/Upload' className='btnBlack'>\r\n            Add your work now\r\n          </MDBNavLink>)\r\n        : (<AYLogin login={'aywn'} />)}\r\n            <a href='/' className='learnmore' style={{color:'black'}}>\r\n              Learn More <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                             <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      </a>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                 \r\n                  </div>\r\n                      \r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='bttop'>\r\n         \r\n\r\n            {userData !== null && userData !== undefined ? (<MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>)\r\n        : (<AYLogin login={'ay'}/>)}\r\n            <BackTop style={{margin:'auto'}}>\r\n              {'     '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Landing)))\r\n","import {BackTop} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNotification,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nimport {message} from 'antd';\r\nimport moment from 'moment';\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/')\r\n    // }\r\n\r\n    let {\r\n      startingStore: {\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        listOfEmergingArtist,\r\n        getPrintSize,\r\n        getNotif,\r\n        getToCart,getOrders,\r\n        getMyLists,\r\n        getAccounts,\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    if (listOfEmergingArtist) {\r\n      getArtistFollowArtwork();\r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getPrintSize()\r\n      getNotif()\r\n      getToCart()\r\n      getOrders()\r\n      getMyLists()\r\n      getAccounts()\r\n      getFollow()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n       let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listOfArtworks,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        mylists,\r\n        addMyLists,\r\n        listOfMyLists,\r\n        listOfUsers,\r\n        addFollow,\r\n        userfollow,\r\n        listOfFollowing,\r\n        deleteFollow,\r\n        addNotif,\r\n        notif,\r\n        \r\n      },\r\n    } = this.props;\r\n\r\n    \r\n\r\n    let ArtistOftheMonth = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accFname} ${usr.accLname}`)})\r\n    let AOMid = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accID}`)})\r\n    \r\n\r\n\r\n   \r\n  \r\n let addtoList=(rtwrk)=>{\r\n\r\n  let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n\r\nif (getmyList === 0){\r\n   \r\n   mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n   mylists.setProperty('accID',logged.accID)\r\n   mylists.setProperty('artworkID',rtwrk.artworkID)\r\n \r\n   mylists.setProperty('artName',rtwrk.artName)\r\n   mylists.setProperty('artTheme',rtwrk.artTheme)\r\n   mylists.setProperty('artStyle',rtwrk.artStyle)\r\n   mylists.setProperty('artPrice',rtwrk.artPrice)\r\n   mylists.setProperty('artistID',rtwrk.accID)\r\n   mylists.setProperty('artistName',rtwrk.artistName)\r\n   mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n   mylists.setProperty('artType',rtwrk.artType)\r\n   mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n   \r\n   addMyLists()\r\n\r\n   const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork added to your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n}else{\r\n  const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork already on your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n \r\n}\r\n }\r\n\r\n function getHash(input){\r\n  var hash = 0, len = input.length;\r\n  for (var i = 0; i < len; i++) {\r\n    hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n    hash |= 0; // to 32bit integer\r\n  }\r\n\r\n        \r\n  return hash;\r\n}\r\n\r\n let follow =(following)=>{\r\n  let getFollowing = listOfFollowing.filter(data =>  data.followingID === AOMid && data.followerID === logged.accID)\r\n   if (getFollowing.length === 0){\r\n    userfollow.setProperty('followID', `${Math.floor(1000 + Math.random() * 9000)}`)\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    addFollow()\r\n  \r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: false,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n\r\n\r\n\r\n\r\n    notif.setProperty('notifID',`${getHash(logged.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',logged.accID)\r\n    notif.setProperty('notifRecipient',following)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${logged.accFname } started following you`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif()\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Following', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },500)\r\n\r\n   }else{\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    deleteFollow();\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Unfollow', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },50)\r\n   }\r\n   setTimeout(()=>{\r\n    window.location.reload(false);\r\n  },1500)\r\n\r\n   this.setState(function (prevState) {\r\n    return {\r\n      isToggleOn: true,\r\n      condition: !this.state.condition,\r\n    };\r\n  });\r\n \r\n\r\n }\r\n\r\n\r\n    function MatchRoute() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n        {listOfArtworks\r\n          .filter((item) => item.artistName === 'Cleon Peterson')\r\n          .reverse()\r\n          .slice(0, 3)\r\n          .map((image,i) => {\r\n         \r\n          \r\n            return (\r\n              <li key={i}>\r\n                <a href='#!' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                    <span className='type'>\r\n                      {image.artType === 'Secondary'\r\n                        ? 'Second Edition'\r\n                        : 'Original'}\r\n                    </span>\r\n                  </div>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    }}\r\n                  >\r\n                    <img src={image.artworkImg} alt='artwork'/>\r\n                   \r\n                  \r\n                  </Link>\r\n                </a>\r\n               \r\n                <div className='artistinfo clearfix pad10'>\r\n           \r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        console.log(image.artistName,'aa')\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n                    \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteUserCategories() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {/*  */}\r\n          {listofFilteredUserArtworkCategories\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteEmergingArtist() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfEmergingArtist\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n                  </a>\r\n                  <div className='artistinfo clearfix pad10'>\r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteArtistFollowed() {\r\n\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfArtistFollowed !== undefined\r\n            ? listOfArtistFollowed\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <a href='#!' className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })\r\n            : ''}\r\n        </ul>\r\n      );\r\n    }\r\n    let getFollowing = listOfFollowing.filter(data =>  data.followingID === AOMid && data.followerID === logged.accID)\r\n\r\n    let AOM = ArtistOftheMonth.pop()\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n              <h2>\r\n              <a\r\n                      href=''\r\n                     style={{marginRight:'8px'}}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${AOM}`,\r\n                          state: {artistName:AOM\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n               { (listOfArtworks.length == 0 ) ? (<p></p>):(  <h2 className='artistname'>{AOM}      </h2>)}\r\n                     \r\n                    </a>\r\n                    { (listOfArtworks.length == 0 ) ? (<p></p>):( \r\n                    <MDBBtn\r\n               color='primary'\r\n                  style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px'}}\r\n                outline\r\n                  floating\r\n                 \r\n                  title={getFollowing === '0' ? 'Follow' : 'Unfollow'}\r\n                  onClick={() =>\r\n                    // this.handleClick(followArtist(AOMid.pop()))\r\n                    follow(AOMid.pop())\r\n                  }\r\n                >\r\n               \r\n                  {getFollowing.length === 0 ? (\r\n                   <div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n                  ) : (\r\n                    'Following'\r\n                  )}\r\n                </MDBBtn> )}\r\n               \r\n                \r\n              </h2>\r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter(fil => fil.accID === AOMid.pop())\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            <MDBNavLink to='#!' className='btnBlack'>\r\n              Add your work now\r\n            </MDBNavLink>\r\n          \r\n            <a href='#1' className='learnmore' >\r\n             <span style={{color:'black'}}>Learn More</span>  <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='latest'>\r\n            <h3>Recommended for You</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'foryou')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteEmergingArtist />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Artists You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'artistyoufollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteArtistFollowed />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Categories You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'categoriesfollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <div className='bttop'>\r\n            <MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <MDBContainer className='notif'>\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            icon=\"envelope\"\r\n            title=\"Message\"\r\n            message=\"Jane: See? Just like this.\"\r\n            text=\"just now\"\r\n          /> */}\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='Recieved an order from Jane Doe'\r\n            text='Just now'\r\n          />\r\n          <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='New art submission'\r\n            text='2 seconds ago'\r\n          /> */}\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Homepage));\r\n","import React, { Component } from 'react';\r\nimport { MDBNavLink, MDBIcon, MDBBtn } from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport art from '../../images/artworks/art1.png';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Skeleton, message } from 'antd';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nclass SingleArtist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcondition: false,\r\n\t\t\tisToggleOn: true,\r\n\t\t\tfollowStatus: false\r\n\t\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n    let {\r\n\t\t\tstartingStore: {  followed,setFollowed }\r\n    } = this.props;\r\n    setFollowed()\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0,0)\r\n\t\tlet { startingStore: { getFollow,getSingleArtists, getArtistArtwork, getArtists, getArtworkInfo }} = this.props;\r\n\t\r\n\t\tgetSingleArtists(this.props.match.params.name);\r\n\t\tgetArtistArtwork(this.props.match.params.name);\r\n\t\tgetArtworkInfo();\r\n\t\tgetArtists();\r\n\t\tgetFollow();\r\n\t}\r\n\r\n\tcheckFollower = (follower) => {\r\n\t\tif (follower !== undefined && follower[0] !== '') {\r\n\t\t\treturn follower.length;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\r\n\tfollowArtist = () => {\r\n\t\tmessage.loading({ content: 'Loading...' });\r\n\t\tsetTimeout(() => {\r\n\t\t\tmessage.success({ content: 'Loaded!', duration: 2 });\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\t\tlet {\r\n\t\t\tstartingStore: { listOfFollowing,listofArtistInfo, listofArtistArtwork, listofArtistCategories, followArtist, followed }\r\n\t\t} = this.props;\r\n\r\n\t\tlet getFollowers = listOfFollowing.filter(data => data.followingID === this.props.artistid).length\r\n\t\treturn (\r\n\t\t\t<div className=\"home\">\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"maincon con\">\r\n\t\t\t\t\t<div className=\"artist\">\r\n\t\t\t\t\t\t<div className=\"artistprofile clearfix\">\r\n\t\t\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t\t\t<div className=\"artistpp\" >\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<img src={listofArtistInfo.profile_Img} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"artistInfo\">\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo.accFname !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n\t\t\t\t\t\t\t\t\t\t\t{userData === null || userData === undefined ?(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t   style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px',marginLeft:'16px'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t outline\r\n\t\t\t\t\t\t\t\t\t\t   floating\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t   title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n\t\t\t\t\t\t\t\t\t\t\t   onClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t this.handleClick(followArtist(listofArtistInfo._id))\r\n\t\t\t\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t   {this.state.isToggleOn ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n\t\t\t\t\t\t\t\t\t\t\t   ) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t 'Following'\r\n\t\t\t\t\t\t\t\t\t\t\t\t   )}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"bday\">\r\n\t\t\t\t\t\t\t\t\t\t\t{listofArtistInfo.accAddress}, born {listofArtistInfo.birthYear}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<span className=\"estart\">Established Artist</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t{getFollowers === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetFollowers\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>Followers</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t\t\t\t4.8/5\r\n\t\t\t\t\t\t\t\t\t\t<span>528k Ratings</span>\r\n\t\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"artistbio clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Biography</h4>\r\n\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t<p>{listofArtistInfo.artistDescription}</p>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"relatedcat clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Related Categories</h4>\r\n\t\t\t\t\t\t\t<div className=\"catlist\" style={{color:'black'}}>\r\n\t\t\t\t\t\t\t\t{listofArtistCategories[0] !== [] || listofArtistCategories[0] !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t_.uniqBy(listofArtistCategories).map((cat) => (\r\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">{cat}</MDBNavLink>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">No Categories</MDBNavLink>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<section className=\"bestsellers\">\r\n\t\t\t\t\t\t<h3>Best Sellers of {this.props.location.state.artistName}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Latest Work by {this.props.location.state.artistName}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Related Artist</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Rene Gagnon</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#1\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Eelus</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Banksy</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArtist)))\r\n","import React, {Component} from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nimport {withRouter} from 'react-router-dom'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit\r\n  },\r\n  facebookIcon: {\r\n    color: \"pink\"\r\n  }\r\n});\r\n\r\nclass FbReg extends Component {\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props;\r\n        getAccounts();\r\n      }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n    let {startingStore:{listOfUsers}}=this.props;\r\n\r\n    let getEmail = listOfUsers.filter(usr=> usr.accEmailAddress === response.email).length;\r\n\r\n    if (response.email === undefined || response.email === null){\r\n    console.log('error')\r\n    }\r\n    else if (getEmail !== 0){\r\n      const success = () => {\r\n        message\r\n          .loading('Validating..', 1.2)\r\n          .then(() => message.success('Account already registered', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 200);\r\n      this.props.history.push('/');\r\n    \r\n    }\r\nelse{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n  \r\n\r\n    if(response !== undefined || response != null){\r\n        console.log(response);\r\n        console.log(response.profileObj,);\r\n  \r\n        let { startingStore: { addAccount, account ,loginFB ,getArtists,\r\n          getArtworkInfo,\r\n          getEmergingArtistArtwork,\r\n          getArtistFollowArtwork,listOfUsers} } = this.props;\r\n  \r\n      let checkuser = listOfUsers.map(usr =>{\r\n        return usr.accEmailAddress\r\n      })\r\n  let fil = checkuser.filter(usr => usr === response.email).length\r\n  \r\n\r\n  if (fil === 0 || fil === null){\r\n    let stat ='';\r\n    if (this.props.user === 'Standard'){\r\n      stat = 'Active'\r\n\r\n    }else{\r\n      stat = 'Pending'\r\n    }\r\n        account.setProperty('accessType', this.props.user);\r\n        account.setProperty('acc_Status', stat);\r\n  \r\n        account.setProperty(\"accEmailAddress\", response.email)\r\n        account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n        account.setProperty(\"accFname\", response.name)\r\n        account.setProperty(\"profile_Img\", response.picture.data.url)\r\n        account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n        account.setProperty('regType','FBAccount')\r\n        addAccount().then(res => {\r\n          if(res === true){\r\n             \r\n            loginFB().then((res) => {\r\n              let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n              getArtworkInfo();\r\n              getEmergingArtistArtwork();\r\n              getArtists();\r\n              getArtistFollowArtwork(mydata.accEmailAddress);\r\n            if (res === 2) {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.success('Welcome to artBasically', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/Home');\r\n              }  else {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.error('Registration Unsuccessful', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/');\r\n              }\r\n            });\r\n  \r\n            \r\n      \r\n  \r\n          }\r\n        })\r\n      }else if(fil === 1){\r\n  \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Email already taken!', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/');\r\n          \r\n        \r\n      }\r\n  \r\n      }\r\n      else{\r\n        console.log('error')\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    \r\n\r\n   \r\n     \r\n   let fbContent = (\r\n        <FacebookLogin\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          fields='name,email,picture'\r\n          cssClass=\"FacebookReg\"\r\n          disableMobileRedirect={true}\r\n        \r\n          callback={this.responseFacebook}\r\n          textButton=\"Sign up with Facebook\"\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    \r\n\r\n    return (<div >{fbContent}</div>)\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(withStyles(styles)(FbReg))))","import React, {Component} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass GmailRegister extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n\r\n  responseGoogle = (response) => {\r\n \r\n\r\n    if(response !== undefined || response != null){\r\n   \r\n      let { startingStore: { addAccount, account ,loginGoogle,listOfUsers} } = this.props;\r\n\r\n    let checkuser = listOfUsers.map(usr =>{\r\n      return usr.accEmailAddress\r\n    })\r\nlet fil = checkuser.filter(usr => usr === response.profileObj.email).length\r\n\r\n\r\nif (fil === 0 || fil === null){\r\n      account.setProperty('accessType', this.props.user);\r\n      if (this.props.user === 'Artist'){\r\n      account.setProperty('acc_Status', 'Pending');\r\n      }else{\r\n        account.setProperty('acc_Status', 'Active');\r\n      }\r\n      account.setProperty(\"profile_Img\", response.profileObj.imageUrl)\r\n      account.setProperty(\"accEmailAddress\", response.profileObj.email)\r\n      account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n      account.setProperty(\"accFname\", response.profileObj.givenName)\r\n      account.setProperty(\"accLname\", response.profileObj.familyName)\r\n      account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n      account.setProperty('regType','GmailAccount')\r\n      addAccount().then(res => {\r\n        \r\n        if(res === true){\r\n           \r\n          loginGoogle().then((res) => {\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n            // getArtworkInfo();\r\n            // getEmergingArtistArtwork();\r\n            // getArtists();\r\n            // getArtistFollowArtwork(response.profileObj.email);\r\n            if (res === 1) {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 1000);\r\n              this.props.history.push('/ArtistHome');\r\n            } \r\n            else if (res === 2){\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n            \r\n                success();\r\n                setTimeout(() => {\r\n              this.props.history.push('/Home');\r\n            }, 100);\r\n            } \r\n            \r\n            \r\n            else {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Account created', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push('/RegVerify');\r\n              setTimeout(() => {\r\n                this.props.history.push('/');\r\n              }, 4500);\r\n            }\r\n          });\r\n\r\n          \r\n    \r\n\r\n        }\r\n      })\r\n    }else if(fil === 1){\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('Validating..', 1.2)\r\n              .then(() => message.error('Email already taken!', 1));\r\n          };\r\n  \r\n          setTimeout(() => {\r\n            success();\r\n          }, 1000);\r\n          // this.props.history.push('/');\r\n        \r\n      \r\n    }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n          buttonText='Sign up with Google'\r\n          onSuccess={this.responseGoogle}\r\n          onFailure={this.responseGoogle}\r\n          disableMobileRedirect={true}\r\n          cookiePolicy={'single_host_origin'}\r\n          className='btnGoogle'\r\n          icon={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailRegister)));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FBReg from '../../components/RegisterFB/'\r\nimport GmailReg from './../../components/RegisterGmail/'\r\nimport moment from 'moment'\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\n class ArtistReg extends Component {\r\n   \r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n \r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID = moment().format('MDYY') + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n \r\n   \r\n   \r\n    const formData = new FormData();\r\n    formData.append('artworkImg',  e.target.files[0]);\r\n    formData.append('type', 'artist');\r\n    upload(formData, 'docu');\r\n  }\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {startingStore:{listOfUsers,addAccount,account, upload}}=this.props;\r\n    \r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n\r\nif (filAccounts === 0){\r\n\r\n\r\n    if (this.state.password === this.state.confPassword ){\r\n\r\n\r\n\r\n    event.target.className += ' was-validated';\r\n\r\n    account.setProperty('acc_Status', 'Pending');\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    setTimeout(() => {\r\n    addAccount();\r\n  }, 4000);\r\n    const success = () => {\r\n    \r\n      message.success('Successfully submitted registration', 1);\r\n \r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n      this.props.history.push('/RegVerify');\r\n    }, 1000);\r\n    \r\n    \r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 4000);\r\n\r\n  }else{\r\n    const error = () => {\r\n    \r\n      message.error('Please check your password', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n      const error = () => {\r\n    \r\n      message.error('Your email or contact number is already taken', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n}\r\n\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Artist <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n\r\n\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n\r\n\r\n\r\n            <div className=\"page req clearfix\">\r\n<div className=\"container\">\r\n\t\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n\r\n\r\n\r\n              <MDBInput\r\n                label='First Name'\r\n               \r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='5'\r\n                style={{padding:'10px'}}\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n                   <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n             \r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n           \r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n            \r\n        \r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} required/>\r\n                <p className='req'>\r\n                  Acceptable documents includes image of your passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n\r\n\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                REGISTER\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistReg));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nimport FBReg from '../../components/RegisterFB/'\r\nimport GmailReg from './../../components/RegisterGmail/'\r\n\r\n class ArtGalReg extends Component {\r\n\r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n   \r\n\r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  submitHandler = (event) => {\r\n\r\n\r\n\r\n    event.preventDefault();\r\n   \r\n\r\n    let {\r\n      startingStore: {listOfUsers,addAccount, account},\r\n    } = this.props;\r\n\r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n    if (filAccounts === 0){\r\n\r\n    account.setProperty('accessType', 'Standard')\r\n    account.setProperty('acc_Status', 'Active')\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n    account.setProperty('accID',  `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    if (this.state.password === this.state.confPassword){\r\n      event.target.className += 'was-validated';\r\n    addAccount();\r\n\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('You have been successfully registered', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      success();\r\n    \r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 3000);\r\n  }else{\r\n    const error = () => {\r\n      // message.then(() =>\r\n      message.error('Please check your password', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n  const error = () => {\r\n\r\n  message.error('Your email or contact number is already taken', 2);\r\n\r\n};\r\nsetTimeout(() => {\r\n  error();\r\n\r\n}, 500);\r\n}\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Art Enthusiast <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start exploring the best artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n         \r\n        \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                style={{textTransform: 'capitalize'}}\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n  \r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n          \r\n              <FBReg user='Standard'/>\r\n              <GmailReg user='Standard'/>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                Register\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtGalReg));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nexport class UserReg extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n      console.log(list, listitem, 'category');\r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                User <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n            \r\n          \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='text'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n           \r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Full Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='usertype'\r\n                onChange={(accessType) =>\r\n                  account.setProperty('accessType', accessType.target.value)\r\n                }\r\n              >\r\n                <option> User Type </option>\r\n                <option value='Standard'> Art Gallery </option>\r\n                <option value='Artist'> Artist </option>\r\n                {/* <option value='Admin'> Admin </option> */}\r\n              </select>\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfCategories}\r\n                placeholder=\"Art Themes you'd like to follow\"\r\n                showCheckbox={true}\r\n                displayValue='catType'\r\n                onSelect={selectCategory}\r\n                // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n              />\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfStyles}\r\n                placeholder=\"Art Style you'd like to follow\"\r\n                showCheckbox={true}\r\n                onSelect={selectStyle}\r\n                displayValue='styleType'\r\n                // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n              />\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                onChange={(password) =>\r\n                  account.setProperty('password', password.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                onChange={(confirmPassword) =>\r\n                  account.setProperty(\r\n                    'confirmPassword',\r\n                    confirmPassword.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} />\r\n                <p className='req'>\r\n                  Acceptable documents include passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                SUBMIT\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UserReg));\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Icon, Modal } from 'antd';\r\n\r\nfunction getBase64 (file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass UploadMult extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: ''\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render () {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n          className=\"multsel\"\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadMult;","import React, {Component} from 'react';\r\nimport {MDBInput, MDBNavLink, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport UploadMult from '../../components/UploadMult';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport moment from 'moment';\r\n\r\nclass UploadWork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n      artImg:null,\r\n      ArtByMe:'',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtists();\r\n    getPrintSize()\r\n    getStyles();\r\n    getCategories();\r\n    getArtworkInfo();\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n    this.setState({\r\n      profileImg: URL.createObjectURL(event.target.files[0])\r\n    })\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n\r\n\r\n    this.setState({selectedFile: image});\r\n   \r\n  }\r\n  onSubmit(e) {\r\n    let userData= JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {upload, artwork,addNotif,notif},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    data.append('type', 'artwork');\r\n    \r\n    upload(data);\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('Artwork submitted', 1);\r\n      // );\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n    this.props.history.push('/SubmitArt');\r\n    setTimeout(() => {\r\n      this.props.history.push('/Upload');\r\n    }, 4000);\r\n\r\n\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\nnotif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\nnotif.setProperty('notifSender',userData.accID)\r\nnotif.setProperty('notifRecipient','admin-001')\r\nnotif.setProperty('notifSubject','Artwork')\r\nnotif.setProperty('notifMsg',`${userData.accFname} ${userData.accLname} submitted and artwork`)\r\nnotif.setProperty('notifDT',moment().format('MMM/DD/YYYY'))\r\nnotif.setProperty('notifStatus','unread')\r\n\r\naddNotif()\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n    let madeByMe= ()=>{\r\n     this.setState({ArtByMe:`${mydata.accFname} ${mydata.accLname}`})\r\n    }\r\n\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n   \r\n    artwork.setProperty('accID',mydata.accID)\r\n    artwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon'>\r\n          <div className='uploadart uploadwork clearfix'>\r\n            <h2>Upload Your Work</h2>\r\n            <form\r\n              onSubmit={this.onSubmit}\r\n              className='regform uploadform custform'\r\n            >\r\n              <div className='left'>\r\n                <div>\r\n                  <span  style={{marginBottom:'-8px'}}>Your Title</span>\r\n                  <MDBInput\r\n                      \r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>{\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback ' >\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}} class='custom-checkbox '>\r\n                <span>Artist</span>\r\n                <select\r\n                  value={this.state.ArtByMe}\r\n                  onChange={(artistName) =>\r\n                    artwork.setProperty('artistName', artistName.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <option>Artist</option>\r\n                  {listOfArtists.map((artist) => {\r\n                    return (\r\n                      <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                        {artist.accFname} {artist.accLname}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                <p className='inlinep' style={{marginLeft:'20px',marginTop:'-22px',paddingBottom:'22px'}}>\r\n                            <input\r\n                              type='checkbox'\r\n                              class='custom-control-input '\r\n                              id='anycat'\r\n                              onChange={()=>{madeByMe()}}\r\n                              \r\n                            />\r\n                            <label\r\n                              class='custom-control-label clabel'\r\n                              for='anycat'\r\n                              style={{fontSize:'12px',paddingTop:'4px'}}\r\n                            >\r\n                              Is this artwork made by you?\r\n                            </label>\r\n                        </p> \r\n                </div>\r\n                <div>\r\n                <span     style={{marginBottom:'-8px'}}>Year</span>\r\n                  <MDBInput\r\n              \r\n                    label='Year'\r\n                    type='number'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Themes</span>\r\n                  <p className='inlinep'>\r\n                    What themes would best help describe your artwork?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n              \r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art theme.\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span>Style</span>\r\n                  <p className='inlinep'>\r\n                    What styles are your artwork inspired by?{' '}\r\n                    <MDBNavLink to='#!' className='nobg'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art style.\r\n                  </div>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}}>\r\n                <span>Art Type</span>\r\n                <select\r\n                  className='usertype'\r\n                  onChange={(artType) =>\r\n                    artwork.setProperty('artType', artType.target.value)\r\n                  }\r\n                >\r\n                  <option> Art Type </option>\r\n                  <option value='Original'> Original </option>\r\n                  <option value='Secondary'> Secondary </option>\r\n                </select>\r\n                </div>\r\n                <div className='dim'>\r\n                  <span>Artwork Size</span>\r\n                 {/*  <ul>\r\n                    <li>\r\n                      <p>Unit of Measure</p>\r\n                      <select>\r\n                        <option>Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Length</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Width</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                  </ul> */}\r\n                         <Multiselect\r\n                 \r\n                 className='multsel'\r\n                 options={listOfPrintSize}\r\n                 placeholder='Printing Size'\r\n                 showCheckbox={true}\r\n                 displayValue='printSize'\r\n                 onSelect={selectArtSize}\r\n           \r\n               />\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span >Number of Copies</span>\r\n                  <p className='inlinep' style={{marginBottom:'-8px'}}>How many copies of your artworks are you selling?</p>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='number'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span>Authenticity Certificate</span>\r\n                  <p className='inlinep'>\r\n                    Do you have a document certifiying your artwork is original?\r\n                    Don’t know what this is?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <select>\r\n                    <option>No</option>\r\n                    <option>Yes</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <span style={{marginBottom:'-8px'}}>Price</span>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide the Art Price.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Description</span>\r\n                  <MDBInput\r\n                    label='How do you describe your current work?'\r\n                    type='textarea'\r\n                    rows='8'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n        \r\n                <div className='uploadreq clearfix'>\r\n                \r\n                  <div className='upload' >\r\n                    {/* <label htmlFor='submitart' for='submitart' disabled>\r\n                      Coming Soon\r\n                    </label>\r\n                    <input type='submit' id='submitart' disabled /> */}\r\n                    <MDBBtn type='submit' color='#fae933' style={{fontWeight:'bold'}}>\r\n                      Upload Your Work\r\n                    </MDBBtn>\r\n                  </div>\r\n\r\n                  <p style={{textAlign:'center',fontSize:'12px'}}>\r\n                    Your artwork will be sent to our team for review to see if\r\n                    it meets our standards. We will send you a notification if\r\n                    your artwork has already been uploaded to the site. Thank\r\n                    you for your patience. How long does the review take?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <div className='artsingle'>\r\n                  <span>Main Photo</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <img src={this.state.profileImg} style={{width:'500px',marginBottom:'16px'}}/>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                   \r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  {/* <UploadImage /> */}\r\n                </div>\r\n                <div className='artmult'>\r\n                  <span>More Photos of Your Artwork</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <UploadMult />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UploadWork));\r\n","import {toast} from 'react-toastify';\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case 'info':\r\n      toast.info(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 1200,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'success':\r\n      toast.success(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'warning':\r\n      toast.warn(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'error':\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    default:\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n  }\r\n};\r\n\r\nexport default notify;\r\n","import {MDBBtn, MDBCol, MDBIcon, MDBInput, MDBRow} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Notification from './Notif';\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass OrderTab extends Component {\r\n  state = {\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n    totalPrice: 0,\r\n    partnerPercentage:30,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n    getOrders();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      let total =\r\n        parseFloat(this.state.totalPrice) +\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        totalPrice: total,\r\n      });\r\n\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      let data = this.state.selected.filter((indexer) => {\r\n        if (indexer !== index) {\r\n          selectedArray.push(data);\r\n        }\r\n      });\r\n      let total =\r\n        parseFloat(this.state.totalPrice) -\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n        totalPrice: total <= 0 ? 0 : total,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n   \r\n    \r\n\r\n  addOrder = () => {\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n   let perctodec = this.state.partnerPercentage/100;\r\n   \r\n    let date = new Date();\r\n\r\n    let {\r\n      startingStore: {order, addOrder, editToCart,notif,addNotif},\r\n    } = this.props;\r\n\r\n  \r\n    let totalValue = perctodec * this.state.totalPrice;\r\n    console.log(perctodec,this.state.totalPrice,totalValue,'perc')\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    \r\n    order.setProperty('orderID',`${moment().format('YY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY,h:mm:ssa'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('totalAmount',this.state.totalPrice)\r\n    order.setProperty('partnerEarnings',totalValue)\r\n  \r\n    addOrder();\r\n    \r\n    let recipient = this.state.selected.map( ntf =>  (ntf.accID))\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient',userData.accID)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${userData.accFname } order an artwork(s)`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\naddNotif();\r\n    if (this.state.selected.length > 1) {\r\n      this.state.selected.map((item) => {\r\n        editToCart(item);\r\n     \r\n        Notification('success', 'Checkout Successfully');\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.1)\r\n            .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n           setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n      });\r\n    } else {\r\n      editToCart(this.state.selected[0]);\r\n\r\n      Notification('success', 'Checkout Successfully');\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.1)\r\n          .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n      setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n    }\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n\r\n  \r\n    let {\r\n      startingStore: {listOfOrder, listOfUserCart},\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n            {listOfUserCart.map((item, indexes) => {\r\n              if (listOfUserCart.length > 0) {\r\n                return (\r\n                  <MDBRow className='artlistorder' >\r\n                    <MDBCol md='1' >\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <MDBInput\r\n                          onChange={(data) => {\r\n                            this.selectedValue(\r\n                              indexes,\r\n                              data.target.checked,\r\n                              item\r\n                            );\r\n                          }}\r\n                          type='checkbox'\r\n                          id='checkbox1'\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='2' className='artimg colpad'>\r\n                      {item.artworkImg !== '' ? (\r\n                        <img src={item.artworkImg} alt='' />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='4' className='artdet colpad'>\r\n                      <a\r\n                        href='#!'\r\n                        onClick={() => {\r\n                          this.props.history.push({\r\n                            pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                            state: {\r\n                              artistName: `${item.accFname} ${item.accLname}`,\r\n                              accImg: this.state.artistImg,\r\n                              artistDescription: this.state.accDescription,\r\n                              birthYear: this.state.birthYear,\r\n                              accFollowers: this.state.accFollowers,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        {item.artistName} <MDBIcon icon='arrow-right' />\r\n                      </a>\r\n                      <br />\r\n                      <p>\"{item.artworkName}\"</p>\r\n                      <p>\r\n                        Variations: {item.artworkMaterial}, {item.artworkSize},\r\n                        {item.artworkFramingOptions}\r\n                      </p>\r\n                      <p>\r\n                        &#8369;\r\n                        {item.artworkPrice\r\n                          ? Number(\r\n                              parseFloat(item.artworkPrice)\r\n                            ).toLocaleString('en')\r\n                          : ''}\r\n                      </p>\r\n                    </MDBCol>\r\n                    <MDBCol md='1' className='quan colpad'>\r\n                      {item.artworkQuantity !== ''\r\n                        ? `x${item.artworkQuantity}`\r\n                        : ''}\r\n                    </MDBCol>\r\n                    <MDBCol md='3' className='colpad'>\r\n                      <MDBRow className='sub'>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          Subtotal\r\n                        </MDBCol>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          &#8369;\r\n                          {item.artworkPaymentAmount\r\n                            ? Number(\r\n                                parseFloat(item.artworkPaymentAmount)\r\n                              ).toLocaleString('en')\r\n                            : ''}\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                    </MDBCol>\r\n                    <MDBCol md='1'>\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <a\r\n                          href='#!'\r\n                          onClick={() => {\r\n                            this.deleteItem(item);\r\n                          }}\r\n                        >\r\n                          <MDBIcon icon='trash' />\r\n                        </a>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                );\r\n              } else {\r\n                return 'Cart is Empty';\r\n              }\r\n            })}\r\n\r\n            <div className='acts clearfix'>\r\n              {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t</MDBRow> */}\r\n              <MDBRow className='actsrowcart'>\r\n                <MDBCol md='5' className='total'>\r\n                  TOTAL\r\n                </MDBCol>\r\n                <MDBCol md='7' className='total'>\r\n                  &#8369;\r\n                  {this.state.totalPrice > 0\r\n                    ? Number(parseFloat(this.state.totalPrice)).toLocaleString(\r\n                        'en'\r\n                      )\r\n                    : Number(parseFloat(0)).toLocaleString('en')}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <div className='actsbtn'>\r\n                    <MDBBtn\r\n                      color='#fae933'\r\n                      size='sm'\r\n                      className='recieve'\r\n                      disabled={this.state.totalPrice > 0 ? false : true}\r\n                      onClick={() => {\r\n                        this.addOrder();\r\n                      }}\r\n                    >\r\n                      Checkout\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Cart from './Cart';\r\nimport notify from '../components/Notif';\r\nimport moment from 'moment'\r\nclass AddToBag extends Component {\r\n  state = {\r\n    modal1: false,\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = () => {\r\n    let nr = 1;\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  addTocart = () => {\r\n    let {\r\n      startingStore: {cart, addToCart},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    cart.setProperty('artistName', this.props.cartData.artistName);\r\n    cart.setProperty('artworkName', this.props.cartData.artName);\r\n    cart.setProperty('artworkImg', this.props.cartData.artworkImg);\r\n    cart.setProperty('artworkPrice', this.props.cartData.artPrice);\r\n    cart.setProperty(\r\n      'artworkPaymentAmount',\r\n      parseFloat(this.props.cartData.artPrice) *\r\n        parseFloat(cart.artworkQuantity)\r\n    );\r\n    cart.setProperty('accID', userData.accID);\r\n    cart.setProperty('dateOfTransaction', moment().format('MMM/DD/YYYY'))\r\n    if (cart.artworkQuantity !== '' || cart.artworkQuantity !== null) {\r\n      notify('success', 'Artwork added successfully');\r\n      addToCart();\r\n    } else {\r\n      notify('error', 'Unsuccessful adding artwork');\r\n      // ari di butang ang alert!!!!!!!!!!!!!!!!!!!!!!\r\n    }\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      // let data = this.state.selected.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedArray.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      // let indexes = this.state.selectedCheckBox.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedCheck.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n  addOrder = () => {\r\n    \r\n    let {\r\n      startingStore: {order, addOrder,notif,addNotif},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let date = new Date();\r\n\r\n    order.setProperty(\r\n      'orderID',\r\n      `${getHash(date.getFullYear())}-${Math.floor(1000 + Math.random() * 9000)}`\r\n    );\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('artworkPaymentAmount',this.state.totalPrice)\r\n    addOrder();\r\n\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient','admin-001')\r\n    notif.setProperty('notifSubject','Order')\r\n    notif.setProperty('notifMsg',`${userData.accFname} placed an order`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif();\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.selectedCheckBox,'selected')\r\n    let {\r\n      startingStore: {listOfUserCart},\r\n    } = this.props;\r\n\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          disabled={!this.props.disable}\r\n          onClick={() => {\r\n            this.toggle();\r\n            this.addTocart();\r\n          }}\r\n       color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n        >\r\n          Add to Bag\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => {\r\n              this.toggle();\r\n            }}\r\n          >\r\n            <h3>Cart</h3>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='cartord'>\r\n            <Cart />\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AddToBag)));\r\n","import {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Cart from './Cart';\r\n\r\nclass ViewCart extends Component {\r\n  state = {\r\n    modal1: false,\r\n    // selected: [],\r\n    // selectedCheckBox: []\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfUserCart, getToCart},\r\n    } = this.props;\r\n\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n  \r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='red'\r\n          size='md'\r\n          style={{borderRadius: '50px'}}\r\n        >\r\n          View Cart\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          size='lg'\r\n          centered\r\n          // className='cart'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            <h3>Cart</h3>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='cartord'>\r\n            <Cart />\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(ViewCart)));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBModal} from 'mdbreact';\r\n\r\nclass ViewRoom extends Component {\r\n\r\n  state = {\r\n    modal14: false,\r\n\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='viewroom'>\r\n        <a\r\n          href='#!'\r\n          onClick={this.toggle(14)}\r\n          className='viewinroom'\r\n          color='transparent'\r\n        >\r\n          View in Room\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='room'\r\n        >\r\n          <div className='living-con'>\r\n            <div className='frame' >\r\n            <p>{this.props.selectedsize}</p>\r\n              <img src={this.props.img} alt=''   \r\n              style={{margin:'auto',width:this.props.Awidth,height:this.props.Aheight}}\r\n          \r\n              />\r\n           \r\n            </div>\r\n       \r\n          </div>\r\n          <MDBBtn\r\n            onClick={this.toggle(14)}\r\n            className='closeviewinroom'\r\n            color='transparent'\r\n          >\r\n            Close \r\n          </MDBBtn>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewRoom;\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../FbLogin';\r\nimport GoogleLogin from '.././GoogleLogin/index';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getArtistFollowArtwork(account.accEmailAddress);\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n\r\n         <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          \r\n          color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n         >\r\n         Add to Bag\r\n         </MDBBtn>\r\n        \r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass' style={{marginBottom:'10px'}}> \r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GoogleLogin />\r\n         \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {Skeleton} from 'antd';\r\nimport {MDBIcon, MDBNavLink, MDBBtn, MDBLink} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {message} from 'antd';\r\nimport AddToBag from '../../components/AddToBag';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport ViewCart from '../../components/ViewCart';\r\nimport ViewRoom from '../../components/ViewRoom';\r\nimport art from '../../images/artworks/art1.png';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport LoginCart from './../../components/CartLogin/'\r\nimport {withRouter} from 'react-router-dom'\r\nclass SingleArt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n      condition: false,\r\n      isToggleOn: true,\r\n      selectedSize:'AP - portrait, 1.5x2',\r\n    height:'2cm',\r\n    width:'1.5cm',\r\n    };\r\n  \r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    \r\n  }\r\n  // state={\r\n  //   selectedSize:'AP - portrait, 1.5x2',\r\n  //   height:'2cm',\r\n  //   width:'1.5cm',\r\n  // }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    \r\n    let {\r\n      startingStore: {\r\n        getArtistArtwork,\r\n        getSingleArtists,\r\n        getSingleArtworkInfo,\r\n        getToCart,\r\n        getPrintSize,\r\n        \r\n      },\r\n    } = this.props;\r\n    getSingleArtworkInfo(this.props.match.params.id);\r\n    getSingleArtists(this.props.match.params.name);\r\n    getArtistArtwork(this.props.match.params.name);\r\n    getToCart();\r\n    getPrintSize();\r\n    \r\n    //   .then(response => {\r\n\r\n    //  })\r\n    // getToCart();\r\n  }\r\n\r\n  checkFollower = (follower) => {\r\n    if (follower !== undefined && follower[0] !== '') {\r\n      return follower.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  followArtist = () => {\r\n    message.loading({content: 'Loading...'});\r\n    setTimeout(() => {\r\n      message.success({content: 'Loaded!', duration: 2});\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        cart,\r\n        listOfSingleArtwork,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n        followArtist,\r\n        listRelatedWorkByCategory,\r\n        listOfMyLists,\r\n        listOfPrintSize,\r\n        addMyLists,\r\n        mylists\r\n       \r\n      },\r\n    } = this.props;\r\n\r\n    const options = [];\r\n    for (let i = 1; i <= 50; i++) {\r\n      options.push(i);\r\n    }\r\n\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    let changeSize =(size)=>{\r\n    let {height,width,selectedSize}=this.state;\r\n    console.log(size,'aa')\r\n      cart.setProperty('artworkSize',size)\r\n\r\n      if (size === 'AP - portrait, 1.5x2'){\r\n        this.setState({height:'2cm',width:'1.5cm',selectedSize:'AP - portrait, 1.5x2'})\r\n      }else if( size === 'AP - portrait, 3x4'){\r\n        this.setState({height:'4cm',width:'3cm',selectedSize:'AP - portrait, 3x4'})\r\n      }else if( size === 'B - square, 2x2'){\r\n        this.setState({height:'2cm',width:'2cm',selectedSize:'B - square, 2x2'})\r\n      }else if( size === 'B - square, 4x4'){\r\n        this.setState({height:'4cm',width:'4cm',selectedSize:'B - square, 4x4'})\r\n      }else if( size === 'CP - portrait, 2x3'){\r\n        this.setState({height:'3cm',width:'2cm',selectedSize:'CP - portrait, 2x3'})\r\n      }else if( size === 'CP - portrait, 4x6'){\r\n        this.setState({height:'6cm',width:'4cm',selectedSize:'CP - portrait, 4x6'})\r\n      }else if( size === 'DL - landscape, 2x1.5'){\r\n        this.setState({height:'1.5cm',width:'2cm',selectedSize:'DL - landscape, 2x1.5'})\r\n      }else if( size === 'DL - landscape, 4x3'){\r\n        this.setState({height:'3cm',width:'4cm',selectedSize:'DL - landscape, 4x3'})\r\n      }else if( size === 'EL - landscape, 3x2'){\r\n        this.setState({height:'2cm',width:'3cm',selectedSize:'EL - landscape, 3x2'})\r\n      }else if( size === 'EL - landscape, 6x4'){\r\n        this.setState({height:'4cm',width:'6cm',selectedSize:'EL - landscape, 6x4'})\r\n      }\r\n\r\n\r\n    }\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n     \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',logged.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else if(getmyList === 1){\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n     let artworkList = listofArtistArtwork.map(data => data.artSize)\r\n\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artcon'>\r\n            <div className='clearfix'>\r\n              <div className='left'>\r\n                <div className='artworkInfo'>\r\n                  <h2 className='title artistname'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artistName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn>\r\n                  </h2>\r\n                  <span className='arttitle'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    ,&nbsp;\r\n                  </span>\r\n                  <span className='year'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artworkDateCreated\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </span>\r\n                  <div className='artImg'>\r\n                    <img\r\n                      src={\r\n                        listOfSingleArtwork[0] !== undefined ? (\r\n                          listOfSingleArtwork[0].artworkImg\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )\r\n                      }\r\n                      alt=''\r\n                    />\r\n\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      <ul className='artOpt'>\r\n                        {' '}\r\n                        <li>\r\n                          <MDBLink to='#' onClick={()=>{addtoList(listOfSingleArtwork[0])}}>Add to List</MDBLink>\r\n                        </li>\r\n                        <li>\r\n                          <ViewRoom img={listOfSingleArtwork[0].artworkImg}  Aheight={this.state.height} Awidth={this.state.width} selectedsize = {this.state.selectedSize}/>\r\n                        </li>\r\n                        <li>\r\n                          <a href=''>Share</a>\r\n                        </li>{' '}\r\n                      </ul>\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </div>\r\n                  <div className='abtArtist'>\r\n                    <h4>About the Artist</h4>\r\n                    <span>\r\n                      {listOfSingleArtwork[0] !== undefined ? (\r\n                        listOfSingleArtwork[0].artistName\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                      , b.\r\n                      {listofArtistInfo.birthYear}.\r\n                    </span>\r\n                    <p>{listofArtistInfo.accDescription}</p>\r\n\r\n                    <a\r\n                      href=''\r\n                      className='seemore'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${listOfSingleArtwork[0].artistName}`,\r\n                          state: {\r\n                            artistName:\r\n                              listOfSingleArtwork[0] !== undefined\r\n                                ? listOfSingleArtwork[0].artistName\r\n                                : '',\r\n                            \"accImg\": listofArtistInfo.artistImg,\r\n                            \"artistDescription\": listofArtistInfo.accDescription,\r\n                            \"birthYear\": listofArtistInfo.birthYear,\r\n                            \"accFollowers\": listofArtistInfo.accFollowers\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Visit artist profile\r\n                      <MDBIcon icon='caret-right' />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <h2>\r\n                  Customize your  <br/> order.\r\n                </h2>\r\n                \r\n               \r\n              \r\n                <p className='inlinep' style={{marginTop:'-10px',paddingBottom:'22px'}}>\r\n                  Can't Decide? <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                </p>\r\n                <form\r\n                  onSubmit={this.submitHandler}\r\n                  className='regform uploadform custform'\r\n                >\r\n                  <div style={{marginBottom:'16px'}}>\r\n                    <span>Material</span>\r\n                    <select\r\n                      onChange={(artworkMaterial) =>\r\n                        cart.setProperty(\r\n                          'artworkMaterial',\r\n                          artworkMaterial.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Material\r\n                      </option>\r\n                      <option value='Print on Sintra (Matte)'>Print on Sintra (Matte)</option>\r\n                      <option value='Print on Sintra (Glossy)'>Print on Sintra (Glossy)</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      What material is the best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}} >\r\n                    <span>Size</span>\r\n            \r\n                    <select\r\n                      onChange={(Asize) => changeSize(Asize.target.value)}\r\n                    >\r\n                      {listOfPrintSize.map((sizes) => (\r\n                          <option key={sizes.printSize} value={sizes.printSize}>\r\n                            {  sizes.printSize == artworkList[0] ? \r\n                           ( \r\n                             `${sizes.printSize} Recommended`\r\n                            ):(\r\n                              sizes.printSize\r\n                            )\r\n                           \r\n                            }\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which size best fits your needs?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}}>\r\n                    <span>Framing Options</span>\r\n                    <select\r\n                      onChange={(artworkFramingOptions) =>\r\n                        cart.setProperty(\r\n                          'artworkFramingOptions',\r\n                          artworkFramingOptions.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Framing Options\r\n                      </option>\r\n                      <option value='Rustic Barnwood Distressed Wood'>\r\n                        Rustic Barnwood Distressed Wood\r\n                      </option>\r\n                      <option value='Natural Wood'>Natural Wood</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which framing option is best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}}>\r\n                    <span>Quantity</span>\r\n                    {listOfSingleArtwork.artType === 'Original' ? (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option selected value=''>\r\n                          Choose Quantity\r\n                        </option>\r\n                        <option value='1'>1</option>\r\n                      </select>\r\n                    ) : (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        {options.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    )}\r\n                    <a className='blacklink' href=''>\r\n                      This is part of a limited edition set of 12.\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Your total is</span>\r\n                    <span className='nopad'>\r\n                      PHP{' '}\r\n                      {Number(\r\n                        parseFloat(\r\n                          listOfSingleArtwork[0] !== undefined\r\n                            ? parseFloat(listOfSingleArtwork[0].artPrice) *\r\n                                parseFloat(cart.artworkQuantity)\r\n                            : '0.00'\r\n                        )\r\n                      ).toLocaleString('en')}\r\n                    </span>\r\n                    <a className='bluelink' href=''>\r\n                      How long will your order arrive?\r\n                    </a>\r\n                    <div style={{float: 'right'}}>\r\n                      {mydata === null ? (\r\n                        <LoginCart/>\r\n                      ):( \r\n                        \r\n                        <AddToBag\r\n                        cartData={listOfSingleArtwork[0]}\r\n                        disable={\r\n                          cart.artworkFramingOptions !== '' ? true : false\r\n                        }\r\n                      />)}\r\n                    \r\n                      {/* <ViewCart cartData={listOfSingleArtwork[0]} /> */}\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className='relcat'>\r\n            <h3>\r\n              Other Works by{' '}\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listOfSingleArtwork[0].artistName\r\n              ) : (\r\n                <Skeleton active />\r\n              )}\r\n            </h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listofArtistArtwork\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relcat'>\r\n            <h3>Related Works by Category</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listRelatedWorkByCategory[0] !== undefined ? (\r\n                listRelatedWorkByCategory\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relartist'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                  </div>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Rene Gagnon</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Eelus</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Banksy</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArt)))\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nimport art from '../images/artworks/art1.png';\r\nimport {message} from 'antd';\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n      minValue: 0,\r\n      maxValue: 10,\r\n    };\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    //new\r\n    this.setState({\r\n      minValue: (value - 1) * numEachPage,\r\n      maxValue: value * numEachPage,\r\n    });\r\n  };\r\n  componentDidMount(){\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nif (mydata === null){\r\n\r\n}else{\r\n  let{startingStore:{getMyLists}}=this.props;\r\n    getMyLists()\r\n  }\r\n  }\r\n\r\n  render() {\r\n   \r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfArtworks,\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        listOfMyLists,\r\n        mylists,\r\n        deleteMyLists,\r\n        addMyLists,\r\n     \r\n      },\r\n    } = this.props;\r\n\r\n\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',mydata.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n\r\n\r\n    let removeToLists = (list)=>{\r\n\r\nmylists.setProperty('mylistsID',list.mylistsID)\r\n\r\n\r\ndeleteMyLists()\r\n\r\nconst success = () => {\r\n  message\r\n    .loading('', 0.5)\r\n    .then(() => message.success('Artwork removed to your list', 3));\r\n};\r\nsetTimeout(() =>{\r\n  success()\r\n},100)\r\n\r\nsetTimeout(()=>{\r\n  window.location.reload(false);\r\n},1500)\r\n    }\r\n\r\n\r\n    \r\n\r\n    let artworks = () => {\r\n      if (this.props.type === 'foryou') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n               {/* <Image publicId={image.artworkImg} secure=\"true\"></Image>    */}\r\n               <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                \r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'bestseller') {\r\n        return toJS(listOfArtworks)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'discover') {\r\n        return toJS(listOfArtworks)\r\n          \r\n          .map((image,i) => {\r\n            \r\n            return(\r\n\r\n            <li key={i}>\r\n            \r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          )});\r\n      } else if (this.props.type === 'categoriesfollow') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'artistyoufollow') {\r\n        return toJS(listOfArtistFollowed)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'latest') {\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'Approved'))\r\n         .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }else if(this.props.type === 'yourlists'){\r\n        return toJS(listOfMyLists.filter(art=> art.accID === mydata.accID))\r\n        .reverse()\r\n         .map((image,i) => (\r\n           <li key={i}>\r\n             <a href='#!' className='artlink'>\r\n               <div className='artlabel'>\r\n                 <span className='new'>NEW</span>\r\n                 <span className='hot'>HOT</span>\r\n                 <span className='type'>\r\n                   {image.artType === 'Secondary'\r\n                     ? 'Second Edition'\r\n                     : 'Original'}\r\n                 </span>\r\n               </div>\r\n               <Link\r\n                 to={{\r\n                   pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                 }}\r\n               >\r\n                 <img src={image.artworkImg} alt='' />\r\n               </Link>\r\n             </a>\r\n             <div className='artistinfo clearfix pad10'>\r\n             <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n           \r\n           \r\n           <MDBBtn\r\n             className='ifollow'\r\n             color='transparent'\r\n             floating\r\n             rounded\r\n             style={{color:'red'}}\r\n             onClick={() => removeToLists(image)}\r\n           >\r\n             \r\n             <MDBIcon icon='minus' style={{color:'red'}}/>\r\n           </MDBBtn>\r\n         </div>\r\n           </li>\r\n         ));\r\n      }else if (this.props.type === 'onSale') {\r\n        console.log(listOfArtworks,'aaa')\r\n        let a =listOfArtworks.filter(art=> art.artworkStatus === 'onSale')\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'onSale'))\r\n         \r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  \r\n                  <span className='hot'>On Sale</span>\r\n                  <span className='new'>20% Off</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.price.length !== 0 ? (\r\n          <ul className='col3img clearfix'>\r\n            {this.props.price.map((image,i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                      <img src={image.artworkImg} alt='' />\r\n                    </Link>\r\n                  </a>\r\n                  <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                  href=''\r\n                \r\n                  onClick={() => {\r\n                    this.props.history.push({\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName\r\n                           \r\n               \r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                     <p>{image.artistName}</p>\r\n                 \r\n                </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n        )}\r\n\r\n        {/* <List defaultCurrent={1} pageSize={10} dataSource={listOfArtworks}/> */}\r\n\r\n        <div>\r\n          <Pagination //new\r\n            defaultCurrent={1}\r\n            defaultPageSize={numEachPage}\r\n            onChange={this.handleChange}\r\n            total={\r\n              this.props.type.length !== 0\r\n                ? this.props.type.length\r\n                : artworks.length\r\n            }\r\n            //\r\n          />\r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","import {MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter ,  listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Discover Emerging Artists </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }else if (type === 'yourlists'){\r\n        return <h3>My Lists</h3>;\r\n      }else{\r\n        console.log('error')\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n                <h4>Search by Filter</h4>\r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label class='custom-control-label' for='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n  \r\n\r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n           \r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import {BackTop, Pagination} from 'antd';\r\nimport {MDBIcon, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n    };\r\n  }\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  executeOnClick(isExpanded) {\r\n    console.log(isExpanded);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfUsers, followArtist, listofArtistInfo},\r\n    } = this.props;\r\n    let listOfArtists = listOfUsers.filter((artist) => {\r\n      if (artist.accessType === 'Artist') {\r\n        return artist;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artists'>\r\n          <section className='latest'>\r\n            <h3 style={{textAlign: 'center', padding: '20px 20px 50px 20px'}}>\r\n              All Artists\r\n            </h3>\r\n            <ul className='col3img colartists clearfix'>\r\n              {listOfArtists.map((image) => (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <img\r\n                      alt=''\r\n                      src={image.accImg}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>\r\n                      {image.accFname} {image.accLname}\r\n                    </p>\r\n                    {/* <a href=\"\" className=\"seeworks\"\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: '/Artist',\r\n                          state: {\r\n                            \"artistName\": this.state.artworkInfo[0] !== undefined ? this.state.artworkInfo[0].artistName : \"\",\r\n                            \"accImg\": this.state.artistImg,\r\n                            \"artistDescription\": this.state.accDescription,\r\n                            \"birthYear\": this.state.birthYear,\r\n                            \"accFollowers\": this.state.accFollowers\r\n                          }\r\n                        })\r\n                      }}\r\n                  > See Works &rarr; </a> */}\r\n                    <a\r\n                      href='#!'\r\n                      className='seeworks'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      See Works &rarr;\r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      onClick={() => followArtist(listofArtistInfo._id)}\r\n                    >\r\n                      <MDBIcon icon='plus' />\r\n                    </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n              {/* <li>\r\n                <a href=\"\" className=\"artlink\">\r\n                  <img src={artist} />\r\n                </a>\r\n                <a className=\"artistinfo clearfix pad10\">\r\n                  <p>Jane Doe</p>\r\n                  <MDBNavLink to=\"#!\" className=\"seeworks\"> See Works &rarr; </MDBNavLink>\r\n                  <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </section>\r\n\r\n          <Pagination dataSource={listOfArtists} total={listOfArtists} />\r\n\r\n          <div className='bttop clearfix'>\r\n            {/* <MDBNavLink to=\"/Upload\" className=\"btnYellow\">Add Yours</MDBNavLink> */}\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!'>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artists));\r\n","import React, {Component} from 'react';\r\nimport {MDBNavLink, MDBIcon} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Skeleton} from 'antd';\r\n\r\nclass CProfile extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts()\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listofUsers\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              <div className='left'>\r\n                <div className='artistpp'>\r\n                  {/* <img src={this.props.location.state.accImg} /> */}\r\n                  {/* {listofArtistInfo !== undefined ? (\r\n                    <img src={listofArtistInfo.accImg} alt='' />\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                </div>\r\n                <div className='artistInfo'>\r\n                  {/* {listofArtistInfo.accFname !== undefined ? (\r\n                    <h2 className='title'>\r\n                      {`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n                   \r\n                    </h2>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )}\r\n                  {listofArtistInfo !== undefined ? (\r\n                    <span className='bday'>\r\n                      {listofArtistInfo.accAddress}, born{' '}\r\n                      {listofArtistInfo.birthYear}\r\n                    </span>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                  <span className='estart'>Established Artist</span>\r\n                  <MDBNavLink\r\n                    to={`/CProfileEdit/${this.props.match.params.id}`}\r\n                    className='pencil'\r\n                  >\r\n                    <MDBIcon icon='pencil-alt' />\r\n                  </MDBNavLink>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    489\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className='artistbio clearfix'>\r\n              <h4 className='paddh4'>Biography</h4>\r\n              {/* {listofArtistInfo !== undefined ? (\r\n                <p>{listofArtistInfo.artistDescription}</p>\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </div>\r\n            <div className='relatedcat clearfix'>\r\n              <h4 className='paddh4'>Related Categories</h4>\r\n              <div className='catlist'>\r\n                {/* {listofArtistCategories[0] !== [] ||\r\n                listofArtistCategories[0] !== undefined ? (\r\n                  listofArtistCategories.map((cat) => (\r\n                    <MDBNavLink to='#!'>{cat}</MDBNavLink>\r\n                  ))\r\n                ) : (\r\n                  <MDBNavLink to='#!'>No Categories</MDBNavLink>\r\n                )} */}\r\n              </div>\r\n              <a href='#!' className='seemore'>\r\n                See More &nbsp;\r\n                <MDBIcon icon='caret-right' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers of {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Latest Work by {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Favorites</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Following</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                     \r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfile));\r\n","import React, {Component} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Steps} from 'antd';\r\nimport {\r\n  MDBRow,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport art from '../images/artworks/art1.png';\r\n\r\nconst {Step} = Steps;\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal1: false,\r\n    pendingOrders: undefined,\r\n    steps: 0,\r\n  };\r\n  checkSteps = (status) => {\r\n   \r\n    if (status === 'Pending') {\r\n      this.setState({\r\n        steps: 1,\r\n      });\r\n    } else if (status === 'PendingPrint') {\r\n      this.setState({\r\n        steps: 2,\r\n      });\r\n    }else if ( status === 'Printing') {\r\n      this.setState({\r\n        steps: 3,\r\n      });\r\n    } else if (status === 'ForDelivery') {\r\n      this.setState({\r\n        steps: 4,\r\n      });\r\n    } else if (status === 'Completed' || status === 'Received') {\r\n      this.setState({\r\n        steps: 5\r\n      });\r\n    } else if (status === 'PrintRejected' || status === 'Rejected') {\r\n      this.setState({\r\n        steps: 6,\r\n      });\r\n    }\r\n  };\r\n  toggle = (nr) => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n      pendingOrders: this.props.pendingOrders,\r\n      // steps: this.checkSteps(this.props.steps),\r\n    });\r\n    this.checkSteps(this.props.steps);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => this.toggle(1)}\r\n          color='#fae933'\r\n        >\r\n          Track order\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => this.toggle(1)}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() => this.toggle(1)}>\r\n            Track order\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='float-right'>\r\n              <p>\r\n                ORDER ID:{' '}\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderID\r\n                  : '00-000-XXXX'}\r\n              </p>\r\n            </div>\r\n\r\n            {this.state.steps === 6 ? (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Rejected'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n              </Steps>\r\n            ) : (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 2 ? 'finish' : 'wait'}\r\n                  title='Verified'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 3 ? 'finish' : 'wait'}\r\n                  title='Printing'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 4 ? 'finish' : 'wait'}\r\n                  title='Shipped'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps === 5 ? 'finish' : 'wait'}\r\n                  title='Completed'\r\n                />\r\n              </Steps>\r\n            )}\r\n\r\n            <div className='artlist'>\r\n              <div className='cartord'>\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderItems.map((item) => {\r\n                      return (\r\n                        <MDBRow className='artlistorder'>\r\n                          <MDBCol md='3' className='artimg colpad'>\r\n                            {item.artworkImg !== null ? (\r\n                              <img\r\n                                class='item-image'\r\n                                src={item.artworkImg}\r\n                                alt=''\r\n                              />\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </MDBCol>\r\n                          <MDBCol md='5' className='artdet colpad'>\r\n                            <a\r\n                              href='#!'\r\n                              onClick={() => {\r\n                                this.props.history.push({\r\n                                  pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                  state: {\r\n                                    artistName: `${item.accFname} ${item.accLname}`,\r\n                                    accImg: this.state.artistImg,\r\n                                    artistDescription: this.state\r\n                                      .accDescription,\r\n                                    birthYear: this.state.birthYear,\r\n                                    accFollowers: this.state.accFollowers,\r\n                                  },\r\n                                });\r\n                              }}\r\n                            >\r\n                              {' '}\r\n                              {\r\n                                item.artistName\r\n                              } <MDBIcon icon='arrow-right' />{' '}\r\n                            </a>\r\n                            <br />\r\n                            <p>\"{item.artworkName}\"</p>\r\n                            <p>\r\n                              Variations: {item.artworkMaterial},{' '}\r\n                              {item.artworkSize}, {item.artworkFramingOptions}\r\n                            </p>\r\n                            <p>&#8369; {item.artworkPaymentAmount}</p>\r\n                          </MDBCol>\r\n                          <MDBCol md='1' className='quan colpad'>\r\n                            x{item.artworkQuantity}\r\n                          </MDBCol>\r\n                          <MDBCol md='3' className='colpad'>\r\n                            <MDBRow>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                Subtotal\r\n                              </MDBCol>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                &#8369;{' '}\r\n                                {item.artworkPaymentAmount\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPaymentAmount)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </MDBCol>\r\n                            </MDBRow>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      );\r\n                    })\r\n                  : ''}\r\n              </div>\r\n\r\n              <div className='acts clearfix'>\r\n                {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t</MDBRow> */}\r\n                <MDBRow className='actsrow'>\r\n                  <MDBCol md='2' className='total'>\r\n                    Total\r\n                  </MDBCol>\r\n                  <MDBCol md='10' className='total'>\r\n                    {(this.state.pendingOrders !== undefined\r\n                      ? 'PHP ' +\r\n                        this.state.pendingOrders.orderItems.reduce(\r\n                          (a, b) =>\r\n                            parseFloat(a) + parseFloat(b.artworkPaymentAmount),\r\n                          0\r\n                        )\r\n                      : '0').toLocaleString('en-GB', {\r\n                        style: 'currency',\r\n                        currency: 'PHP',\r\n                      }).toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                {/* <div className='actsbtn'>\r\n                  <MDBBtn size='sm' className='recieve'>\r\n                    Order Received\r\n                  </MDBBtn>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            {/* <MDBTable style={{ textAlign: \"center\" }}>\r\n            <MDBTableHead>\r\n              <th>Material</th>\r\n              <th>Size</th>\r\n              <th>Framing Options</th>\r\n              <th>Quantity</th>\r\n              <th>Status</th>\r\n              <th>Price</th>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>Total Price</td>\r\n                <td>&#8369; 300,000</td>\r\n              </tr>\r\n            </MDBTableBody>\r\n          </MDBTable> */}\r\n          </MDBModalBody>\r\n          {/* <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={this.toggle(1)}>Close</MDBBtn>\r\n        </MDBModalFooter> */}\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n    MDBBtn,\r\n    MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment'\r\nimport {message} from 'antd'\r\n\r\n\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal: false,\r\n\r\n  };\r\n\r\n\r\n  render() {\r\nlet {startingStore:{feedback,addFeedback}}=this.props;\r\n\r\n  \r\n let toggle = () => {\r\n  \r\n    this.setState({modal: true});\r\n\r\n    feedback.setProperty('feedbackID',`fb${Math.floor(1000 + Math.random() * 9000)}`)\r\n    feedback.setProperty('accID',this.props.orderInfo.accID)\r\n   \r\n    feedback.setProperty('orderID',this.props.orderInfo.orderID)\r\n    feedback.setProperty('date',moment().format('MMM/DD/YYYY'))\r\n    \r\n  };   \r\n\r\n  let close = ()=>{\r\n\r\n    this.setState({modal: false});\r\n  }\r\n  let submitFeedback = ()=>{\r\n\r\n    addFeedback();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 1)\r\n        .then(() => message.success('Feedback sent', 3));\r\n    };\r\n\r\n \r\n    \r\n   setTimeout(()=>{\r\n   success()\r\n   },600)\r\n   setTimeout(()=>\r\n   this.setState({modal: false})\r\n    ,1500)\r\n\r\n  }\r\n              \r\n    \r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => toggle()}\r\n        \r\n        >\r\n          Send us feedback\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal}\r\n          toggle={() => toggle()}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() =>close()} style={{backgroundColor:'#231F20'}}>\r\n           <h6 style={{color:'white'}}>Feedback</h6> \r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\">\r\n            Please provide us feedback to improve Art,Basically.\r\n            </label>\r\n            <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"5\"\r\n            onChange={(feedbackNote) =>\r\n                feedback.setProperty('feedbackNote', feedbackNote.target.value)\r\n              }\r\n            />\r\n        </div>\r\n\r\n          </MDBModalBody>\r\n         <MDBModalFooter>\r\n          <MDBBtn color=\"#fae933\"  size='sm'  className='recieve'  onClick={()=>submitFeedback()}>Submit</MDBBtn>\r\n        </MDBModalFooter>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBRow,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport OrderDetails from './OrderDetails';\r\nimport Cart from './Cart';\r\nimport {message} from 'antd';\r\nimport Feedback from './Feedback/'\r\n\r\nclass OrderTab extends Component {\r\n  state = {\r\n    activeItem: '1',\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getOrderUser, getToCart},\r\n    } = this.props;\r\n    getOrderUser();\r\n    getToCart();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfSingleArtwork,\r\n        listOfUserCart,\r\n        listOfOrder,\r\n        listofUserOrder,\r\n        editOrder,\r\n        listOfOrders,\r\n      },\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    let pendingOrders = listofUserOrder.filter((items) => {\r\n      if (\r\n        items.orderStatus === 'Printing' || items.orderStatus === 'ForDelivery' ||\r\n        items.orderStatus.includes('Pending')\r\n      ) {\r\n        return items;\r\n      }\r\n    });\r\n\r\n    let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Completed' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    });\r\n\r\n\r\n    let listOfOrderDelivered = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Delivered' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    })\r\n\r\n    let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n      if (\r\n        Rejected.orderStatus === 'Rejected' && Rejected.accID === mydata._id ||\r\n        Rejected.orderStatus === 'PrintRejected' && Rejected.accID === mydata._id\r\n        ||\r\n        Rejected.orderStatus === 'Cancelled' && Rejected.accID === mydata._id\r\n      ) {\r\n        return Rejected;\r\n      }\r\n    })\r\n\r\n\r\n    let cancelOrder =( myorder) =>{\r\n      let filOrder = listofUserOrder.filter( ord => ord.orderID === myorder.orderID && ord.orderStatus === 'Printing' || ord.orderID === myorder.orderID && ord.orderStatus === 'ForDelivery').length\r\n\r\n      if (filOrder === 0){\r\n          editOrder(myorder._id, 'Cancelled', myorder.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 0.5)\r\n              .then(() => message.success('Order cancelled', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },500)\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.5)\r\n            .then(() => message.success('Cant cancel order. Your order is already on printing or delivery.', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n      }\r\n   \r\n    }\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <h4>My Orders</h4>\r\n        <MDBNav className='nav-tabs'>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '1'}\r\n              onClick={this.toggle('1')}\r\n              role='tab'\r\n                // className='ordernavlin k'\r\n            >\r\n              My Bag\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '2'}\r\n              onClick={this.toggle('2')}\r\n              role='tab'\r\n            >\r\n              Orders\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '3'}\r\n              onClick={this.toggle('3')}\r\n              role='tab'\r\n            >\r\n              Delivered\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '4'}\r\n              onClick={this.toggle('4')}\r\n              role='tab'\r\n            >\r\n              Completed\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '5'}\r\n              onClick={this.toggle('5')}\r\n              role='tab'\r\n            >\r\n              Cancelled\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '6'}\r\n              onClick={this.toggle('6')}\r\n              role='tab'\r\n            >\r\n              {/* <MDBIcon icon='history' /> */}\r\n               History\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n\r\n        <MDBTabContent activeItem={this.state.activeItem}>\r\n          <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <div className='artlist' >\r\n              <Cart cartData={listOfSingleArtwork[0]} />\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n            <div className='artlist pending '>\r\n              {pendingOrders.reverse().map((items, indexes) => (\r\n                <div className='cartord ' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              \r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        \r\n                        {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                      <div className='actsbtn'>\r\n                          <MDBBtn\r\n                            color='red'\r\n                            size='sm'\r\n                            className='det'\r\n                            onClick={() =>cancelOrder(items) }\r\n                          >\r\n                            Cancel order\r\n                          </MDBBtn>\r\n                          <OrderDetails\r\n                     \r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderDelivered.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='4' role='tabpanel' className='tabs complete'>\r\n            <div className='artlist'>\r\n              {listOfOrderReceived.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                                 <Feedback  orderInfo={items}/>\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='5' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderCancelled.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='6' role='tabpanel' className='tabs'>\r\n            <div className='artlist history'>\r\n              {listofUserOrder.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                            <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  {item.artworkPaymentAmount\r\n                                    ? parseFloat(\r\n                                        item.artworkPaymentAmount\r\n                                      ).toLocaleString('en-GB', {\r\n                                        style: 'currency',\r\n                                        currency: 'PHP',\r\n                                      })\r\n                                    : ''}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        &#8369;\r\n                        {\r\n                          +items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                   \r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBTabPane,\r\n  MDBTabContent,\r\n  MDBNav,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBInput,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message, Skeleton, Upload, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport art from '../../images/artworks/art1.png';\r\nimport { autorun } from 'mobx';\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass CProfileEdit extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {\r\n        getSingleEnthusiast,\r\n        getOrder,\r\n       \r\n      },\r\n    } = this.props;\r\n   \r\n     \r\n    getSingleEnthusiast(this.props.match.params.id);\r\n      getOrder();\r\n    \r\n  }\r\n\r\n  state = {\r\n    activeItem: '1',\r\n    loading: false,\r\n    pass:'',\r\n    confPass:'',\r\n  };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   \r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editAccount, account},\r\n    } = this.props;\r\n    account.setProperty('_id', this.props.data._id);\r\n    account.setProperty('accID', this.props.data.accID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited account..', 1.2)\r\n        .then(() => message.success('Successfully edited an Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        account,\r\n        editAccount,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n      },\r\n    } = this.props;\r\n\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className='ant-upload-text'>Upload Image</div>\r\n      </div>\r\n    );\r\n    const {imageUrl} = this.state;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n\r\n    let AccountInfo = ()=>{\r\n        \r\n\r\n          if (this.state.pass === this.state.confPass){\r\n\r\n         \r\n      account.setProperty('_id', userData._id);\r\n      account.setProperty('password',this.state.pass)\r\n      editAccount().then(resp=>{\r\n        if (resp === 'success'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      });\r\n\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cedit clearfix'>\r\n            <div className='clearfix chead'>\r\n              <h2>{this.props.match.params.id}</h2>\r\n              <MDBNavLink to='/Upload' className='btnYellow cuploadbtn'>\r\n                Upload Artwork\r\n              </MDBNavLink>\r\n            </div>\r\n            <div className='cmaincon'>\r\n              <MDBRow>\r\n                <MDBCol md='3' className='usertab'>\r\n                  <MDBNav className='nav-tabs mt-5 ctab'>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '1'}\r\n                        onClick={this.toggle('1')}\r\n                        role='tab'\r\n                      >\r\n                        Account Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '2'}\r\n                        onClick={this.toggle('2')}\r\n                        role='tab'\r\n                      >\r\n                        Profile Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '3'}\r\n                        onClick={this.toggle('3')}\r\n                        role='tab'\r\n                      >\r\n                        Orders\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '4'}\r\n                        onClick={this.toggle('4')}\r\n                        role='tab'\r\n                      >\r\n                       My Artworks\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    {/* <MDBNavItem>\r\n                      <MDBNavLink link to=\"#\" active={this.state.activeItem === \"5\"} onClick={this.toggle(\"5\")} role=\"tab\" >\r\n                        Collections\r\n                      </MDBNavLink>\r\n                    </MDBNavItem> */}\r\n                    <MDBNavItem>\r\n                      {/* <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '6'}\r\n                        onClick={this.toggle('6')}\r\n                        role='tab'\r\n                      >\r\n                        Favorites\r\n                      </MDBNavLink> */}\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '7'}\r\n                        onClick={this.toggle('7')}\r\n                        role='tab'\r\n                      >\r\n                        Log Out\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                  </MDBNav>\r\n                </MDBCol>\r\n\r\n                <MDBCol md='9' className='usertab'>\r\n                  <MDBTabContent\r\n                    activeItem={this.state.activeItem}\r\n                    className='ccon'\r\n                  >\r\n                    <MDBTabPane tabId='1' role='tabpanel'>\r\n                      {userData !== undefined ? (\r\n                        <form onSubmit={this.submitHandler}>\r\n                         \r\n                          <MDBInput\r\n                            label='Email Address'\r\n                            type='email'\r\n                            // hint={userData.accEmailAddress}\r\n                            valueDefault={userData.accEmailAddress}\r\n                            onChange={(accEmailAddress) =>\r\n                              account.setProperty(\r\n                                'accEmailAddress',\r\n                                accEmailAddress.target.value\r\n                              )\r\n                            }\r\n                            \r\n                          >\r\n                            <a href='#!' class='changee'>\r\n                              Change Email-Address\r\n                            </a>\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid email.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}\r\n                            onChange={(password) =>\r\n                              this.setState({pass:password.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Confirm New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}s\r\n                            onChange={(confpassword) =>\r\n                            this.setState({confPass:confpassword.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <div class='custom-control custom-checkbox'>\r\n                            <input\r\n                              type='checkbox'\r\n                              class='custom-control-input'\r\n                              id='anycat'\r\n                            />\r\n                            <label\r\n                              class='custom-control-label clabel'\r\n                              for='anycat'\r\n                            >\r\n                              Allow viewing of adult related content.\r\n                            </label>\r\n                          </div>\r\n                          <MDBBtn\r\n                            className='submitreg clearfix btnYellow'\r\n                            color='#FAE933'\r\n                            onClick={() => {AccountInfo()}}\r\n                          >\r\n                            Save Changes\r\n                          </MDBBtn>\r\n                        </form>\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='2' role='tabpanel'>\r\n                      <h4>Update Profile Picture</h4>\r\n                      {/* <Upload\r\n                        name='avatar'\r\n                        listType='picture-card'\r\n                        className='avatar-uploader cpup clearfix'\r\n                        showUploadList={false}\r\n                        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                        beforeUpload={beforeUpload}\r\n                        onChange={this.onFileChangeP}\r\n                      >\r\n                        {imageUrl ? (\r\n                          <img\r\n                            src={imageUrl}\r\n                            alt='avatar'\r\n                            style={{width: '100%'}}\r\n                          />\r\n                        ) : (\r\n                          uploadButton\r\n                        )}\r\n                      </Upload> */}\r\n\r\n\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n        <div  className='regform formbtn'>\r\n          <div className=\"page req clearfix\" >\r\n<div className=\"container\">\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n        </div>\r\n        \r\n\t\t\t\r\n                      <div>\r\n                        <h4>Personal Information</h4>\r\n\r\n                        <MDBInput\r\n                            label='First Name'\r\n                            type='text'\r\n                            // hint={listofArtistInfo.accFname}\r\n                            valueDefault={`${userData.accFname}`}\r\n                            onChange={(accFname) =>\r\n                              account.setProperty(\r\n                                'accFname',\r\n                                accFname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid first name.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Last Name'\r\n                            type='text'\r\n                            // hint={userData.accLname}\r\n                            valueDefault={userData.accLname}\r\n                            onChange={(accLname) =>\r\n                              account.setProperty(\r\n                                'accLname',\r\n                                accLname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid last name.\r\n                            </div>\r\n                          </MDBInput>\r\n\r\n                        <MDBInput\r\n                          label='Address'\r\n                          type='text'\r\n                          valueDefault={userData.accAddress}\r\n                          onChange={(accAddress) =>\r\n                            account.setProperty(\r\n                              'accAddress',\r\n                              accAddress.target.value\r\n                            )\r\n                          }\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid address.\r\n                          </div>\r\n                        </MDBInput>\r\n                        {/* <MDBInput\r\n                          type='textarea'\r\n                          label='Bio'\r\n                          rows='5'\r\n                          \r\n                        /> */}\r\n                        {/* <MDBInput\r\n                          label='Facebook'\r\n                          type='text'\r\n                          hint='e.g. https://www.facebook.com/artbasically'\r\n                       \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid facebook url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                        {/* <MDBInput\r\n                          label='Instagram'\r\n                          type='text'\r\n                          hint='e.g. https://www.instagram.com/artbasically'\r\n                        \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid instagram url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                      </div>\r\n                      <MDBBtn\r\n                        className='submitreg clearfix btnYellow'\r\n                        color='#FAE933'\r\n                        // type='submit'\r\n                        onClick={() => {\r\n                          account.setProperty('_id', userData._id);\r\n                          editAccount().then(resp=>{\r\n                            if (resp === 'success'){\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Changes saved', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }else{\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Try again', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }\r\n                          });\r\n                        }}\r\n                      >\r\n                        Save Changes\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='3' role='tabpanel'>\r\n                      <OrderTab />\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='4' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                  \r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    {/* <MDBTabPane tabId=\"5\" role=\"tabpanel\">\r\n                      <ul className=\"col3img rowart clearfix\">\r\n                        {listofArtistArtwork !== undefined ?\r\n                          listofArtistArtwork.map(art =>\r\n                            <li>\r\n                              <a href=\"\" className=\"artlink\">\r\n                                <img src={art.artworkImg} />\r\n                              </a>\r\n                              <div className=\"artistinfo clearfix pad10\">\r\n                                <p>{art.artName}</p>\r\n                                <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                              </div>\r\n                            </li>\r\n                          ) : <Skeleton active />\r\n                        }\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <img src={art} />\r\n                          </a>\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane> */}\r\n                    <MDBTabPane tabId='6' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .reverse()\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='7' role='tabpanel'>\r\n                      <p className='float-left outp'>\r\n                        Are you sure you want to Log Out?\r\n                      </p>\r\n                      <MDBBtn\r\n                        className='btnYellow'\r\n                        color='FAE933'\r\n                        onClick={() => {\r\n                          sessionStorage.removeItem('userData');\r\n                        }}\r\n                      >\r\n                        <Link to={`/`}> Confirm</Link>\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                  </MDBTabContent>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfileEdit));\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nclass Order extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrder},\r\n    } = this.props;\r\n    getOrder();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cart-items'>\r\n            <div className='clearfix'>\r\n              <OrderTab />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div >\r\n        <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default inject('startingStore')(observer(Order));\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your information will be evaluated by ArtBasically kindly wait for us\r\n          to contact you.\r\n          <br /> Thank you for your interest in joining us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your artwork will be evaluated by ArtBasically kindly wait for us to\r\n          contact you.\r\n          <br /> Thank you for sharing your artwork with us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import {MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by price </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n               \r\n                <form>\r\n         \r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label class='custom-control-label' for='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n         \r\n              \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import {MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n     \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize,getMyLists},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    getMyLists()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'yourlists') {\r\n        return <h3>My Lists</h3>;\r\n      }\r\n   \r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter  type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n\r\n","\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n     else if (type === 'onSale') {\r\n        return <h3>On Sale</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport {message} from 'antd';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nclass AdminLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('', 1)\r\n            .then(() => message.success('Welcome to Art Basically', 3));\r\n        };\r\n\r\n     \r\n        \r\n       setTimeout(()=>{\r\n       success()\r\n       },600)\r\n       setTimeout(()=>\r\n        this.props.history.push('/AdminHome')\r\n        ,1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 0.5)\r\n            .then(() => message.error('Email or password is incorrect', 1.5));\r\n        };\r\n        setTimeout(()=>{\r\n          success()\r\n          },600)\r\n        setTimeout(() => {\r\n          this.props.history.push('/Admin');\r\n        }, 1500);\r\n    \r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>ADMIN LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li className='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label className='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AdminLogin)))\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrderUser,getOrders}}=this.props;\r\n    getAccounts()\r\n    getOrderUser()\r\n    getOrders()\r\n  }\r\n\r\n\r\n    render() {\r\nlet {startingStore:{listOfUsers,listOfOrders}}=this.props;\r\n\r\nlet activeArtists = listOfUsers.filter (usr => usr.accessType === 'Artist' && usr.acc_Status === 'Active').length;\r\n\r\nlet artEnthu = listOfUsers.filter (usr => usr.accessType === 'Standard' && usr.acc_Status === 'Active').length;\r\nlet Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery').length;\r\nlet CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed' || ord.orderStatus === 'Rejected').length;\r\n\r\nlet CompletedOrders = listOfOrders.filter (ord => ord.orderStatus === 'Completed' ).length;\r\n\r\nlet salesYTD =  listOfOrders.map(product => {\r\n  \r\n  return (\r\n\r\n    listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n    .reduce((sum, record) => parseInt(sum) + parseInt(record.totalAmount) , 0)\r\n\r\n\r\n\r\n    );\r\n\r\n })\r\n const sales = `${salesYTD.pop()}`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} sm={12} xs={12}>\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nSales YTD\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>\r\n  {sales === 'undefined' ?(\r\n    '0'\r\n  ):(\r\n  sales.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")\r\n  )\r\n\r\n}\r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n{/* <PersonAddDisabledIcon style={{fontSize:\"3.5em\"}}/> */}\r\n<MDBIcon icon=\"users\" style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArt Enthusiasts\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{artEnthu.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n  <Grid container xs={12} sm={12}>\r\n\r\n  <Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"user-tie\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n    <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n   \r\n<Typography className={classes.title}   >\r\nArtists\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{activeArtists.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"clipboard-list\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Orders.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea > */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={5} sm={5}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<CollectionsBookmarkOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={7} sm={7} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCompleted Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{CompletedOrders.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import React, {Component} from 'react';\r\nimport {MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;\r\n","\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBModalFooter} from 'mdbreact';\nimport {inject, observer} from 'mobx-react';\nimport React, { Component, Fragment } from 'react'\nimport DownloadImage from './../sections/DownloadImage';\nimport {message} from 'antd';\n\n\n class Artists extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreinfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n          account.setProperty('accLname',itm.accLname)\n          account.setProperty('accAddress',itm.accAddress)\n          account.setProperty('birthYear',itm.birthYear)\n          account.setProperty('accInstitution',itm.accInstitution)\n          account.setProperty('artistDescription',itm.artistDescription)\n          account.setProperty('acc_Documents',itm.acc_Documents)\n          account.setProperty('profile_Img',itm.profile_Img)\n          account.setProperty('accEmailAddress',itm.accEmailAddress)\n          account.setProperty('password',itm.password)\n          this.setState({\n            modal: true\n          \n          });\n          };\n          let deactivate =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n\n      \n          }\n        \n\nconst ArtistsTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n       \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>moreinfo(row.userDB)} color='moreinfo'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}} onClick={()=>deactivate(row.userDB)} color='reject'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal} centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n                  <li>\n                    489\n                    <span>Followers</span>\n                  </li>\n                  {/* <li>\n                    4.8/5\n                    <span>528k Ratings</span>\n                  </li> */}\n                 \n                </ul>\n              </div>\n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <ArtistsTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Artists))\n\n\n\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBModalFooter\n} from 'mdbreact';\nimport {inject, observer} from 'mobx-react';\nimport React, { Component, Fragment } from 'react'\nimport DownloadImage from '../sections/DownloadImage';\nimport {message} from 'antd';\n\n\n class Customer extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Standard' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreInfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n              this.setState({\n                modal: true\n              \n              });\n          };\n          let deactivate =(itm)=>{\n         \n\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n          }\n        \n\nconst CustomerTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n      \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve'> More Info</MDBBtn>\n        <MDBBtn  onClick={()=>deactivate(row.userDB)} color='reject'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                \n          \n                </div>\n              </div>\n       \n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <CustomerTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Customer))\n\n\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead, MDBModalFooter} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\nimport {message} from 'antd';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n\r\n \r\n    function createData(artworkDB,id,title,artist, style,  price,action) {\r\n      return { artworkDB,id,title,artist, style,  price,action };\r\n    }\r\n\r\nlet pArtworks = listOfArtworks.filter((art) => {\r\n            if ( art.artworkStatus === 'Active') {\r\n              return art;\r\n            }\r\n          }).map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreInfo = (itm) => {\r\n          artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n          artwork.setProperty('artTheme',itm.artTheme)\r\n          artwork.setProperty('artSize',itm.artSize)\r\n          artwork.setProperty('artCategory',itm.artCategory)\r\n          artwork.setProperty('artworkID',itm.artworkID)\r\n          artwork.setProperty('artName',itm.artName)\r\n          artwork.setProperty('artDescription',itm.artDescription)\r\n          artwork.setProperty('artPrice',itm.artPrice)\r\n          artwork.setProperty('artistName',itm.artistName)\r\n          artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n          artwork.setProperty('artDimension',itm.artDimension)\r\n          artwork.setProperty('artType',itm.artType)\r\n          artwork.setProperty('dateAdded',itm.dateAdded)\r\n          artwork.setProperty('artworkImg',itm.artworkImg)\r\n          this.setState({\r\n            modal: !this.state.modal\r\n          });\r\n       \r\n          };\r\n\r\n          let  close = () => {\r\n            this.setState({\r\n              modal: false\r\n            });\r\n            };\r\n\r\n          let archive =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('artworkStatus','Archived');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Archived', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`,\r\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject'> Archive</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  \r\n<MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Approved' || Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order Stat',\r\n        field: 'orderStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        orderStat:`${row.orderStat}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBModalFooter\n} from 'mdbreact';\nimport {inject, observer} from 'mobx-react';\nimport React, { Component, Fragment } from 'react'\n\nimport {message} from 'antd';\nimport {withRouter} from 'react-router-dom'\n\n class Deactivated extends Component {\n  state = {\n    modal: false,\n    \n   \n  };\ncomponentDidMount(){\n  let{startingStore:{getAccounts}}=this.props;\n  getAccounts();\n}\n\n  \n\n\n\n  render() {\n\n  \n   let close =()=>{\n    this.setState({\n      modal: false\n    });\n   }\n\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname,lname, email, address,action) {\n      return { userDB,id,fname,lname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Pending') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,users.accFname,users.accLname\n           ,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n          let  info = (itm) => {\n            this.setState({\n              modal: true\n            \n            });\n  \n              account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n            \n        \n           \n          }\n      \n        let  approve = (itm) => {\n        \n       account.setProperty('_id',itm._id)\n       account.setProperty('acc_Status','Active')\n\n\n\n      editAccount().then((resp) => {\n       \n        if (resp === 'success') {\n                const success = () => {\n        message\n          .loading('', 1)\n          .then(() => message.success('Account Approved', 3));\n      };\n\n      setTimeout(() =>{\n        success();\n      },1000)\n     \n    \n          setTimeout(()=>{\n            window.location.reload(false);\n          },1500)\n        } else {\n          const error = () => {\n            message\n            .loading('', 1)\n            .then(() => message.success('Try Again', 3));\n          };\n          setTimeout(() => {\n            error();\n          }, 200)\n      \n        }\n      });\n          }\n\n         \n         \n         \n         \n          let reject =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Rejected')\n            editAccount()\n            const success = () => {\n              message\n                .loading('', 1)\n                .then(() => message.success('Account Rejected', 3));\n            };\n\n            setTimeout(() =>{\n              success()\n           \n            },1000)\n            setTimeout(()=>{\n              window.location.reload(false);\n            },1500)\n       \n          }\n        \n\n\nconst DeactivatedTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname} ${row.lname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'340px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.userDB)} color='approve'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}}  onClick={()=>{approve(row.userDB)}} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>{reject(row.userDB)}} color='reject'> Reject</MDBBtn>\n        </div>,\n      \n      \n     }\n     \n     ) })\n    ]\n\n  }\n  return(\n    <Fragment>\n  <MDBDataTable\n  striped\n  bordered\n  small\n  data={data}\n/>\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n          \n                </ul>\n              </div>\n            </div>\n            <div className=' clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n        </Fragment>\n  )\n}\n\n  function PendingTable(){\n\n  return (\n    <Fragment>\n<DeactivatedTable/>\n\n\n    \n  </Fragment>\n  );\n\n}\nreturn (\n  <PendingTable/>\n)\n}\n}\n\n\n\nexport default withRouter(inject('startingStore')(observer(Deactivated)))\n\n\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead, MDBModalFooter} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {message} from 'antd';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getAllArtworks, getArtists, getStyles, getCategories},\r\n    } = this.props;\r\n    \r\n    getAllArtworks();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n\r\n \r\n    function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n      return { artworkDB,id,title,artist, style, date, price,action };\r\n    }\r\n\r\nlet filArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending')\r\n\r\n\r\nlet pArtworks = filArtworks.map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n\r\n          let  info = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n        let  approve = (data) => {\r\n         \r\n\r\n\r\n\r\n\r\n          artwork.setProperty('_id', data._id);\r\n          artwork.setProperty('accID',data.accID)\r\n          artwork.setProperty('artworkStatus','Active');\r\n\r\n          editArtwork();\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Arwork Approved', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('accID',data.accID)\r\n            artwork.setProperty('artworkStatus','Rejected');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      }, {\r\n        label: 'Date Added',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        id: `${row.id}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`,\r\n        date:`${row.date}`,\r\n        action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve'> Info</MDBBtn><MDBBtn style={{float:'left'}}  onClick={()=>approve(row.artworkDB)} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.artworkDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n  \r\n  <MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n","\r\n\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\nimport {message} from 'antd';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport moment from 'moment'\r\n\r\n class PendingOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   let {\r\n  //     startingStore: {getOrders, getAccounts},\r\n  //   } = this.props;\r\n   \r\n  //   getAccounts();\r\n  //   getOrders();\r\n  // }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder,notif,addNotif}} = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData')) \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let date = new Date();\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Pending' ) {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( `${user.accFname} ${user.accLname}`\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'PendingPrint', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Order Approved', 3));\r\n          };\r\n\r\n\r\n          notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n          notif.setProperty('notifSender','admin-001')\r\n          notif.setProperty('notifRecipient','print-001')\r\n          notif.setProperty('notifSubject','Printing')\r\n          notif.setProperty('notifMsg','New item to print')\r\n          notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n          notif.setProperty('notifStatus','unread')\r\naddNotif()\r\n\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n\r\n            notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n            notif.setProperty('notifSender','admin-001')\r\n            notif.setProperty('notifRecipient',userData.accID)\r\n            notif.setProperty('notifSubject','Order')\r\n            notif.setProperty('notifMsg','Order Rejected')\r\n            notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n            notif.setProperty('notifStatus','unread')\r\n  addNotif()\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n    \r\n          let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n\r\nconst PendingOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:\r\n        <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.orderDB)} color='yellow'> Items</MDBBtn> <MDBBtn style={{float:'left'}} onClick={()=>approve(row.orderDB)} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n\r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n   \r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      responsive\r\n      data={data}\r\n    />\r\n\r\n <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingOrder))","import React from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBFormInline,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport DashCard from './DashCards'\r\nimport ArtistTable from './sections/ArtistTable';\r\nimport CustomerTable from './sections/CustomerTable';\r\nimport ArtworkTable from './sections/ArtworkTable';\r\n\r\nimport OrderTable from './sections/OrderTable';\r\nimport PendingArtistTable from './sections/PendingArtistTable';\r\nimport PendingArtworkTable from './sections/PendingArtworkTable';\r\nimport PendingOrderTable from './sections/PendingOrderTable';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nconst DashboardSection = () => {\r\n  return (\r\n    <div>\r\n      <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n            \r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBFormInline className='md-form m-0 adminsearch'>\r\n              {/* <input\r\n                className='form-control form-control-sm'\r\n                type='search'\r\n                placeholder='Type your query'\r\n                aria-label='Search'\r\n              /> */}\r\n              {/* <MDBBtn size='sm' color='#FAE933' className='my-0' type='submit'>\r\n                <MDBIcon icon='search' />\r\n              </MDBBtn> */}\r\n            </MDBFormInline>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      <div class='mb-4'>\r\n<DashCard/>\r\n</div>\r\n<Grid container  xs={12} sm={12}>\r\n  <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n    \r\n  <Paper>\r\n    <div class='p-2 '>\r\n<h3>Pending Orders</h3>\r\n      <PendingOrderTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid> \r\n\r\n\r\n\r\n      <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Pending Arworks</h3>\r\n      <PendingArtworkTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Artist Membership Requests</h3>\r\n      <PendingArtistTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>   \r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSection;\r\n"," import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from './DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from '../../sections/DownloadImage';\r\n   class CancelledOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Cancelled') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const CancelledOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data) => (\r\n                <tr>\r\n                  <td>\r\n                    <img\r\n                      style={{width: '100% ', height: 'auto'}}\r\n                      src={data.artworkImg}\r\n                      alt=''\r\n                    />\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <CancelledOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(CancelledOrder))","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Pending from './../PendingOrderTable'\r\n  import Orders from './../OrderTable'\r\n  import Completed from './../CompletedOrder'\r\n  import Cancelled from './../CancelledOrders'\r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>My Orders</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Orders\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Completed\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '4'}\r\n                onClick={this.toggle('4')}\r\n                role='tab'\r\n              >\r\n                Cancelled\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Orders/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n            <Completed/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='4' role='tabpanel' className='tabs'>\r\n            <Cancelled/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import React, {Component} from 'react';\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBIcon,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n  MDBFormInline,\n  MDBBtn,\n} from 'mdbreact';\nimport OrderTable from './sections/OrderTable';\nimport PendingOrderTable from './sections/PendingOrderTable';\nimport Completed from './sections/CompletedOrder'\nimport OrderTabs from './sections/OrderTab'\n\nclass OrdersTab extends Component {\n  render() {\n    return (\n      <div>\n        <div className='adminbreadcrumb'>\n          <MDBCard>\n            <MDBCardBody\n              id='breadcrumb'\n              className='d-flex align-items-center justify-content-between'\n            >\n              <MDBBreadcrumb>\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\n                <MDBBreadcrumbItem active>Orders</MDBBreadcrumbItem>\n              </MDBBreadcrumb>\n        \n            </MDBCardBody>\n          </MDBCard>\n        </div>\n        <MDBCard>\n          <MDBCardBody>\n      <OrderTabs/>\n      </MDBCardBody>\n      </MDBCard>\n      </div>\n    );\n  }\n}\n\nexport default OrdersTab;\n","import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {upload, artwork},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    artwork.setProperty('artworkID', this.getUniqueID());\r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Successfully added an Artwork', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    artwork.setProperty('accID',mydata.accID)\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\r\n\r\n    // console.log(categoryList)\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          ADD ARTWORK\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>ADD ARTWORK</MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='text'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  {/* <SelectTheme theme = {categoryList} style = {styleList}/> */}\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={(catType) =>\r\n                    // //   artwork.setProperty('catType', catType.target.value)\r\n                    // }\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Dimension'\r\n                    type='text'\r\n                    onChange={(artDimension) =>\r\n                      artwork.setProperty(\r\n                        'artDimension',\r\n                        artDimension.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='text'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='text'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                    <img src={this.state.selectedFile} alt='' />\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead, MDBModalFooter} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  import { Grid } from '@material-ui/core';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n      } = this.props;\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => {\r\n              if (art.artworkStatus === 'Archived') {\r\n                return art;\r\n              }\r\n            }).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n         \r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Active');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n  <MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Pending from './../PendingArtworkTable';\r\n  import Artworks from './../ArtworkTable'\r\n  import ArchivedArtwors from './../ArchivedArtworks'\r\n\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artwork Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddArtwork from './sections/AddArtwork';\r\nimport ArtworkTabs from './sections/ArtworkTab';\r\n class ArtworkTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtwork />\r\n      \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <ArtworkTabs/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArtworkTab;\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Standard' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n           \r\n  \r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n    \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n         \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  ","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Customers from './../CustomerTable';\r\n import Deactivated from './../DeactivatedAccount'\r\n \r\n\r\n  \r\n  class UsrsTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Customer Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Customer\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Customers/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n           <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(UsrsTab)));\r\n  ","import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass AddUser extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    // this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n     \r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD USER \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD USER \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(accessType) =>\r\n                      account.setProperty('accessType', accessType.target.value)\r\n                    }\r\n                  >\r\n                    <option> User Type </option>\r\n                    <option value='Standard'> Standard </option>\r\n                    <option value='Curator'> Curator </option>\r\n                    <option value='Admin'> Admin </option>\r\n                  </select>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder=\"Art Themes you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder=\"Art Style you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n                  />\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddUser));\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport UserTab from './sections/UsersTab';\r\nimport AddUser from './sections/AddUser';\r\n\r\nexport class User extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Customer</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n          \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddUser/>\r\n       \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <UserTab />\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nclass AddArtist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    // let {\r\n    //   startingStore: {account},\r\n    // } = this.props;\r\n    this.setState({selectedFile: e.target.files[0]});\r\n\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  onSubmit = () => {\r\n    let {\r\n      startingStore: {account, addAccount},\r\n    } = this.props;\r\n    //   //e.preventDefault()\r\n\r\n    //   // axios.post(\"https://artbasically.herokuapp.com/artworkRoute/uploadProfile\", formData, {\r\n    //   // }).then(res => {\r\n    //   //   console.log(res)\r\n    //   // })\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    formData.append('type', 'artist');\r\n    upload(formData);\r\n\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artist Registration..', 1.2)\r\n        .then(() => message.success('Successfully added an Artist Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.onSubmit();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD ARTIST \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD ARTIST \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    placeholder='Prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    type='textarea'\r\n                    label='Biography'\r\n                    rows='3'\r\n                    onChange={(artistDescription) =>\r\n                      account.setProperty(\r\n                        'artistDescription',\r\n                        artistDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a short Bio.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtist));\r\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Artist' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreinfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n  \r\n          \r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n        \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreinfo(row.userDB)} color='moreinfo'>More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  \r\n  ","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Pending from './../PendingArtistTable'\r\n  import Artists from './../ArtistTable'\r\n  import Deactivated from './../DeactivatedArtist'\r\n \r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n \r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artist Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artists\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artists/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n          <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport AddArtist from './sections/AddArtist';\r\n\r\nimport ArtistsTab from './sections/ArtistsTab'\r\nexport class ArtistTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artist</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n         \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtist />\r\n   \r\n   <MDBCard>\r\n     <MDBCardBody>\r\n<ArtistsTab/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArtistTab\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass AddCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n    modal2: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting theme..', 1.2)\r\n        .then(() => message.success('Successfully added a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addCategory();\r\n  };\r\n\r\n  submitHandlerStyle = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting style..', 1.2)\r\n        .then(() => message.success('Successfully added a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addStyle();\r\n  };\r\n\r\n  submitHandlerSize = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting printing size..', 1.2)\r\n        .then(() => message.success('Printing size added', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addPrintSize();\r\n  };\r\n\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {addCategory},\r\n    } = this.props;\r\n    e.preventDefault();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Theme..', 1.2)\r\n        .then(() => message.success('Successfully added a Theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n\r\n    addCategory();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories, style,printsize},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Theme\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n            <MDBModalHeader toggle={this.toggle(1)}>\r\n              Add Theme\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandler} className='formbtn'>\r\n                <MDBInput\r\n                  label='Theme Name'\r\n                  type='text'\r\n                  onChange={(catType) =>\r\n                    categories.setProperty('catType', catType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add  Style\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add  Style\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerStyle} className='formbtn'>\r\n                <MDBInput\r\n                  label='Style Name'\r\n                  type='text'\r\n                  onChange={(styleType) =>\r\n                    style.setProperty('styleType', styleType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Printing Size\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add Printing Size\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerSize} className='formbtn'>\r\n                <MDBInput\r\n                  label='Printing Size'\r\n                  type='text'\r\n                  onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddCat));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.props.data.catID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited theme..', 1.2)\r\n        .then(() => message.success('Successfully edited a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editCategory();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART CATEGORY\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Category Name'\r\n                type='text'\r\n                valueDefault={this.props.data.catType}\r\n                // value={this.props.data.catType}\r\n                onChange={(catType) =>\r\n                  categories.setProperty('catType', catType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Category Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditCat));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.props.data.styleID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited style..', 1.2)\r\n        .then(() => message.success('Successfully edited a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editStyle();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {style},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART STYLE\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Style Name'\r\n                type='text'\r\n                valueDefault={this.props.data.styleType}\r\n                // value={this.props.data.catType}\r\n                onChange={(styleType) =>\r\n                  style.setProperty('styleType', styleType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.props.data.sizeID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited print size..', 1.2)\r\n        .then(() => message.success('Print size has been modified', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editPrintSize();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printsize},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            Edit Print Size\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Print Size'\r\n                type='text'\r\n                valueDefault={this.props.data.printSize}\r\n                // value={this.props.data.catType}\r\n                onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBRow,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport EditCat from './EditCat';\r\nimport EditStyle from './EditStyle';\r\nimport EditPrintSize from './EditPrintSize'\r\n\r\nclass CategoryTable extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getCategories, getStyles,getPrintSize},\r\n    } = this.props;\r\n    getCategories();\r\n    getStyles();\r\n    getPrintSize();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n  \r\n    // let listOfCustomers = listOfCategories.filter(artist => {\r\n    //   if (artist.accessType !== \"artist\") {\r\n    //     return artist;\r\n    //   }\r\n    // })\r\n    return (\r\n      <div className='clearfix'>\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Theme List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Theme Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfCategories.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.catType}</td>\r\n                        <td className='edittd'>\r\n                          <EditCat data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Style List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Style Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfStyles.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.styleType}</td>\r\n                        <td className='edittd'>\r\n                          <EditStyle data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Printing Size</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Size</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfPrintSize.map((data,index) => {\r\n\r\n                        let no = index +1;\r\nreturn(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.printSize}</td>\r\n                        <td className='edittd'>\r\n                          <EditPrintSize data={data} />\r\n                        </td>\r\n                      </tr>\r\n)  })}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CategoryTable));\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport AddCat from './sections/AddCat';\r\nimport CatTable from './sections/CatTable';\r\n\r\nexport class CategoryTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Categories</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddCat />\r\n        <CatTable />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryTab\r\n","\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nclass Notifications extends Component {\r\n\r\n\r\n\r\n  render() {\r\nlet{startingStore:{listOfNotif,notif,editNotif}}=this.props;\r\n\r\nlet notifNum = listOfNotif.filter(notif => notif.notifStatus === 'unread').length;\r\n\r\nlet  notifClicked =(notifInfo)=>{\r\n  editNotif(notifInfo._id, 'read', notifInfo.notifID)\r\n \r\n}\r\n\r\n\r\n\r\nlet notifData = listOfNotif.filter(notif => notif.notifStatus === 'unread').map((info,i) =>{\r\n  let dateToday = moment().format('MMM/DD/YY')\r\n  let dateNotif = '';\r\n  if (dateToday.slice(0,9) === info.notifDT.slice(0,9)){\r\n    dateNotif = `Today, ${info.notifDT.slice(10,20)}`\r\n  }else{\r\n    dateNotif = info.notifDT;\r\n  }\r\n  return(\r\n    <Fragment key={i}>\r\n   <MDBDropdownItem className=\"newnotif\" onClick={()=>{notifClicked(info)}}>\r\n     {info.notifMsg}\r\n          <span className=\"time\">{dateNotif}</span>\r\n        </MDBDropdownItem>\r\n    </Fragment>\r\n  )\r\n})\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n  <MDBBadge color=\"danger\" className=\"ml-2\">{notifNum}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic >\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     \r\n  {notifData}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBModalFooter,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class UserFeedback extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getFeedback,getAccounts},\r\n      } = this.props;\r\n   getFeedback()\r\n   getAccounts()\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfFeedback,feedback,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(fbID,acID,ordID,date, note) {\r\n        return { fbID,acID,ordID,date, note };\r\n      }\r\n  \r\n  let filtFeedback = listOfFeedback.map(fb =>{\r\n              return(createData(\r\n             fb.feedbackID,listOfUsers.filter(usr => usr._id === fb.accID) .map(acc => `${acc.accFname} ${acc.accLname}`)\r\n             ,fb.orderID,fb.date\r\n             ,fb.feedbackNote\r\n              ))\r\n            })\r\n\r\n\r\n            let  toggle = (itm) => {\r\n        \r\n                this.setState({\r\n                  modal: !this.state.modal,\r\n                  items:itm\r\n                });\r\n              feedback.setProperty('feedbackNote',itm)\r\n              };\r\n              let close =()=>{\r\n                this.setState({\r\n                  modal: false,\r\n                \r\n                });\r\n              }\r\n  \r\n    \r\n  \r\n  const FeedbackTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Sender',\r\n          field: 'sender',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order No.',\r\n          field: 'order',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Feedback',\r\n          field: 'fb',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        }\r\n  \r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...filtFeedback.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          sender: `${row.acID}`,\r\n         order: `${row.ordID}`,\r\n        \r\n          date: `${row.date}`,\r\n          fb: <div ><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.note)} color='yellow'>View</MDBBtn> </div>,\r\n    \r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal\r\n    size='md'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n      style={{backgroundColor:'#231F20'}}\r\n    >\r\n      <h5 style={{color:'white'}}> User Feedback</h5> \r\n    </MDBModalHeader>\r\n    <MDBModalBody >\r\n    <p style={{margin:'8px'}}>{feedback.feedbackNote}</p>\r\n    </MDBModalBody>\r\n    <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" size='sm' onClick={()=>close()}>Close</MDBBtn>\r\n           \r\n          </MDBModalFooter>\r\n  </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <FeedbackTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(UserFeedback))\r\n  \r\n  ","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n \r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n} from 'mdbreact';\r\nimport Feedback from './sections/UserFeedback'\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Users Feedback</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    <Feedback/>\r\n\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n \r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n} from 'mdbreact';\r\n\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    \r\n\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem, MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n      return (createData(\r\n          data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}>Save Changes</MDBBtn></div>\r\n      ))\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n   \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","import React, {Component} from 'react';\r\n\r\nimport {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNavbar,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBHamburgerToggler,\r\n  MDBCollapse,\r\n  MDBNotification,\r\n  MDBContainer,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\n\r\nimport Dashboard from './Dashboard';\r\nimport OrdersTab from './OrdersTab';\r\nimport ArtworkTab from './ArtworkTab';\r\nimport UserTab from './UserTab';\r\nimport ArtistTab from './ArtistTab';\r\nimport CategoryTab from './CategoryTab';\r\nimport Notif from './sections/Notif';\r\nimport Feedback from './FeedbackTab'\r\nimport Messaging from './MessagingTab'\r\n// import Message from './sections/Message';\r\nimport '../css/admin.css';\r\nimport MyAccount from './sections/AccountSettings/'\r\nimport {inject,observer} from 'mobx-react'\r\nimport {withRouter} from 'react-router-dom'\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/Admin')\r\n    // }\r\n\r\n    let {startingStore:{getOrders, getAccounts,getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize,getAllNotif}}=this.props;\r\n    getAccounts();\r\n    getOrders();\r\n    getAllNotif();\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n    getPrintSize()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/Admin';\r\n  }\r\n    return (\r\n      <div>\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav'  style={{backgroundColor:'#231F20'}}>\r\n              <a href='/AdminHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Admin</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='bell' className='mr-3' />\r\n                    Orders\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='user' className='mr-3' />\r\n                    Customer\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='user-tie' className='mr-3' />\r\n                    Artists\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='th-large' className='mr-3' />\r\n                    Categories\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '9'}\r\n                    onClick={this.togglePills('default', '9')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '8'}\r\n                    onClick={this.togglePills('default', '8')}\r\n                  >\r\n                    <MDBIcon icon='comment-alt' className='mr-3' />\r\n                    Feedback\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <OrdersTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <UserTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <ArtistTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n              <CategoryTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='8'>\r\n              <Feedback />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n              <MyAccount />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='9'>\r\n              <Messaging />\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport {withRouter} from 'react-router-dom';\r\nclass PartnerLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      if (res === 3) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PrintingPartner');\r\n      },1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Email or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PartnerLogin');\r\n      },1500)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li class='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                class='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label class='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PartnerLogin)))\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {observer,inject} from 'mobx-react'\r\nimport { number } from 'joi';\r\nclass DashCards extends Component {\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrders,getOrderUser}}=this.props;\r\n    getOrders()\r\n    getOrderUser()\r\n    getAccounts()\r\n  }\r\n\r\n    render() {\r\n      let {startingStore:{listOfOrders,listOfUsers}}=this.props;\r\n      let Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery' || ord.orderStatus === 'Printing').length;\r\n      let CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed').length;\r\n\r\n\r\n      let salesYTD =  listOfOrders.map(product => {\r\n  \r\n        return (\r\n      \r\n          listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n          .reduce((sum, record) => parseInt(sum) + parseInt(record.partnerEarnings) , 0)\r\n      \r\n      \r\n      \r\n          );\r\n      \r\n       })\r\n       const sales = `${salesYTD.pop()}`;\r\n    //  let percent = 30;\r\n    //  let perctodec = percent/100;\r\n    //  let totalValue = perctodec * sales;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 17,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nEarnings YTD\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>\r\n  \r\n  {\r\n    sales == 'undefined' ?(\r\n      '0'\r\n    ):(\r\n      sales.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    )\r\n  }\r\n\r\n  \r\n  \r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Orders.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {message} from 'antd';\r\n\r\n\r\n class ForDelivery extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'ForDelivery') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreinfo = (itm) => {\r\n        \r\n       \r\n          };\r\n          let done =(itm)=>{\r\n            editOrder(itm._id, 'Completed', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Completed', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst ForDeliveryTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>moreinfo(row.orderDB)} color='approve'>More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>done(row.orderDB)} color='reject'> Done</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <ForDeliveryTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(ForDelivery))\r\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {message} from 'antd';\r\n\r\n\r\n class PendingPrint extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'Printing', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Approved to print', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingPrintTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Approve</MDBBtn>\r\n        <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingPrintTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingPrint))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from '../../../admin/sections/DownloadImage';\r\n  \r\n   class OngoingOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Printing' || Delivery.orderStatus === 'Delivery') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const OngoingOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data,i) => (\r\n                <tr key={i}>\r\n                  <td>\r\n              \r\n                  <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <OngoingOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(OngoingOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React from 'react';\r\nimport DashCards from './DashCards';\r\nimport FinishedProd from './sections/COrderDeli';\r\n\r\nimport CPendingOrders from './sections/CPendingOrders';\r\nimport OngoingProd from './sections/OngoingOrders';\r\n\r\nconst pDashboardSection = () => {\r\n  return (\r\n    <div style={{marginTop:'16px'}}>\r\n      <div className='printbreadcrumb' style={{marginBottom:'16px'}}>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n  \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n      <div class='mb-4'>\r\n      <DashCards/>\r\n      </div>\r\n\r\n\r\n      <Grid container  xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Pending Orders</h3>\r\n <CPendingOrders />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Ongoing Production</h3>\r\n <OngoingProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      \r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Finished Production</h3>\r\n <FinishedProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      </Grid>  \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pDashboardSection;\r\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  \r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class Printing extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrders, getAccounts},\r\n      } = this.props;\r\n     \r\n      getAccounts();\r\n      getOrders();\r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n  \r\n      \r\n      function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n        return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((order) => {\r\n              if (order.orderStatus === 'Printing') {\r\n                return order;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  approve = (itm) => {\r\n            editOrder(itm._id, 'ForDelivery', itm.accID)\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Done Printing', 3));\r\n            };\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n            };\r\n            let reject =(itm)=>{\r\n              editOrder(itm._id, 'Rejected', itm.accID)\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Order Rejected', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n              setTimeout(()=>{\r\n                window.location.reload(false);\r\n              },1500)\r\n            }\r\n          \r\n  \r\n  const PrintingTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Done</MDBBtn>\r\n          <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Cancel</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PrintingTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Printing))","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport Printing from './../sections/Printing';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Printing</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n   \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n \r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Printing</h3>\r\n <Printing/>\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport COrderDeli from './sections/COrderDeli';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Orders for Delivery</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n\r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Orders to delivery</h3>\r\n <COrderDeli />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data,i) => (\r\n              <tr key={i}>\r\n                <td>\r\n            \r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport CCompletedOrder from './sections/CCompletedOrder';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Completed Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n    \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n     \r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Completed Orders</h3>\r\n <CCompletedOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CancelledOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Cancelled' || Delivery.orderStatus === 'Rejected') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CancelledOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                    \r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CancelledOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CancelledOrder))","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport CCancelOrder from './sections/CCancelOrder';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Cancelled Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n       \r\n\r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Cancelled Orders</h3>\r\n <CCancelOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React from 'react';\r\nimport {\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from 'mdbreact';\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className='topicons'>\r\n      <MDBDropdownToggle color='transparent'>\r\n        <MDBIcon icon='bell' className='mr-3' style={{color:'white'}}/>\r\n        <MDBBadge color='danger' className='ml-2'>\r\n          4\r\n        </MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className='title'>NOTIFICATIONS</div>\r\n        <MDBDropdownItem className='newnotif'>\r\n          Recieved an order from Jane Doe\r\n          <span className='time'>just now</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem className='newnotif'>\r\n          New art submission\r\n          <span className='time'>2 seconds ago</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 3<span className='time'>13:28</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 4<span className='time'>15:01</span>\r\n        </MDBDropdownItem>\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n};\r\n\r\nexport default Notif;\r\n","import React, {Component} from 'react';\r\nimport {MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\n\r\nclass ViewImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage iconbtn'>\r\n          {' '}\r\n          Download Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewImage;\r\n","import React, {Component} from 'react';\r\nimport ViewImage from '../sections/ViewImage';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n} from 'mdbreact';\r\n\r\nclass ViewData extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    // let {\r\n    //   startingStore: {listOfOrders},\r\n    // } = this.props;\r\n    // let listOfPending = listOfOrders.filter(Pending => {\r\n    //   if (Pending.paymentStatus === \"Pending\") {\r\n    //     return Pending;\r\n    //   }\r\n    // })\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage iconbtn'>\r\n          {' '}\r\n          Order Details\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          size='lg'\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <h3>Order Items</h3>\r\n              <MDBTable hover className='tablescroll'>\r\n                <MDBTableHead color='blue-grey lighten-4'>\r\n                  <tr>\r\n                    <th>Artwork</th>\r\n                    <th>Artist Name </th>\r\n                    <th>Artwork Name</th>\r\n                    <th>Date of Transaction</th>\r\n                    <th>Artwork Size</th>\r\n                    <th>Payment Amount</th>\r\n                    <th>Artwork Material</th>\r\n                    <th>Framing Options</th>\r\n                    <th>Quantity</th>\r\n                    <th>Download Artwork</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n\r\n                <MDBTableBody>\r\n                  {this.props.data.map((data) => (\r\n                    <tr>\r\n                      <td>\r\n                    \r\n                      <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                      </td>\r\n                      <td>{data.artistName}</td>\r\n                      <td> {data.artworkName}</td>\r\n                      <td> {data.dateOfTransaction}</td>\r\n                      <td> {data.artworkSize}</td>\r\n                      <td> {data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                      <td>{data.artworkMaterial}</td>\r\n                      <td>{data.artworkFramingOptions}</td>\r\n                      <td>{data.artworkQuantity}</td>\r\n                      <td className='oactions'>\r\n                        <ViewImage data={data.artworkImg} />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ViewData));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBRow,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport ViewData from '../sections/ViewData';\r\n\r\nclass CHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n    // getCategories();\r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  // checkList = (id) => {\r\n  //   let src = '';\r\n  //   // let imgsrc = this.state.img.filter((img) => {\r\n  //   // \tif (img[1][0] === id) {\r\n  //   // \t\tsrc += img[0];\r\n  //   // \t}\r\n  //   // });\r\n  //   console.log(this.state.img, 'sdsdsds');\r\n  //   return src;\r\n  // };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfOrders, editOrder, listOfUsers},\r\n    } = this.props;\r\n    let listOfPrintOrders = listOfOrders.filter((PrintOrders) => {\r\n      if (\r\n        PrintOrders.orderStatus === 'PrintRejected' &&\r\n        'Delivery' &&\r\n        'Completed'\r\n      ) {\r\n        return PrintOrders;\r\n      }\r\n    });\r\n\r\n    let findName = (accID) => {\r\n      let aw = listOfUsers.map((user) => {\r\n        if (user._id === accID) {\r\n          return `${user.accFname} ${user.accLname}`;\r\n        }\r\n      });\r\n      return aw;\r\n    };\r\n\r\n    return (\r\n      <MDBRow className='mb-4'>\r\n        <MDBCol md='12'>\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <h3>Orders History</h3>\r\n              <MDBTable hover className='tablescroll'>\r\n                <MDBTableHead color='blue-grey lighten-4'>\r\n                  <tr>\r\n                    <th>Order ID </th>\r\n                    <th>Account ID </th>\r\n                    <th>Ordered by</th>\r\n                    <th>Order Date</th>\r\n                    <th>Status</th>\r\n                    <th>Payment Status</th>\r\n                    <th className='act'>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {listOfPrintOrders.reverse().map((data) => (\r\n                    <tr>\r\n                      <td>{data.orderID}</td>\r\n                      <td>{data.accID}</td>\r\n                      <td> {findName(data.accID)} </td>\r\n                      <td>{data.orderDate}</td>\r\n                      <td>{data.orderStatus}</td>\r\n                      <td>{data.paymentStatus}</td>\r\n                      <td className='oactions'>\r\n                        <span>\r\n                          <ViewData data={data.orderItems} />{' '}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CHistory));\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport History from './sections/CHistory';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>History</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n              <MDBFormInline className=\"md-form m-0 printpsearch\">\r\n                <input className=\"form-control form-control-sm\" type=\"search\" placeholder=\"Type your query\" aria-label=\"Search\" />\r\n                <MDBBtn size=\"sm\" color=\"#FAE933\" className=\"my-0\" type=\"submit\"><MDBIcon icon=\"search\" /></MDBBtn>\r\n              </MDBFormInline>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <History />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem, MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\n\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\nlet getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n    \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\n// import Messaging from './sections/Messaging';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n       \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        {/* <Messaging /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;","import React, {Component} from 'react';\r\n\r\nimport {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNavbar,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBHamburgerToggler,\r\n  MDBCollapse,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport Dashboard from './Dashboard';\r\nimport PrintingTab from './PrintingTab';\r\nimport OrderDeliverytab from './OrderDeliverytab';\r\nimport CompletedOrderTab from './CompletedOrderTab';\r\nimport CancelOrdertab from './CancelOrdertab';\r\nimport Notif from './sections/Notif';\r\nimport History from './History';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport MyAccount from './sections/AccountSetting/'\r\nimport '../css/printart.css';\r\nimport {withRouter} from 'react-router-dom'\r\nimport MessageTab from './MessageTab'\r\n\r\nclass PrintingPartner extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/PartnerLogin')\r\n    // }\r\n\r\n    getOrders();\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/PartnerLogin';\r\n  }\r\n    return (\r\n      <div className='admin'>\r\n        <MDBNavbar className='position-fixed' dark expand='md'>\r\n          <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n            <a href='/PrintingPartner' className='logo-wrapper ablogo'>\r\n              <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n              <p style={{color:'white'}}>Printing</p>\r\n            </a>\r\n            <div className='topcon'>\r\n              {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n              <MDBNavItem>\r\n                <Notif />\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBBtn\r\n                  onClick={() => logout()}\r\n                  color='transparent'\r\n                  className='btnYellow logout'\r\n                >\r\n                  Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n            </div>\r\n          </MDBNav>\r\n          <MDBHamburgerToggler\r\n            color='#FAE933'\r\n            id='hamburger1'\r\n            onClick={() => this.toggleSingleCollapse('collapse1')}\r\n          />\r\n          <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n            <MDBNav\r\n              className='nav-pills sidebar-fixed position-fixed adminside'\r\n              id='pills-tab'\r\n              role='tablist'\r\n            >\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '1'}\r\n                  onClick={this.togglePills('default', '1')}\r\n                >\r\n                  <MDBIcon icon='chart-pie' className='mr-3' />\r\n                  Dashboard\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '2'}\r\n                  onClick={this.togglePills('default', '2')}\r\n                >\r\n                  <MDBIcon icon='print' className='mr-3' />\r\n                  Printing\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '3'}\r\n                  onClick={this.togglePills('default', '3')}\r\n                >\r\n                  <MDBIcon icon='truck' className='mr-3' />\r\n                  Delivery\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '4'}\r\n                  onClick={this.togglePills('default', '4')}\r\n                >\r\n                  <MDBIcon icon='calendar-check' className='mr-3' />\r\n                  Completed\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '5'}\r\n                  onClick={this.togglePills('default', '5')}\r\n                >\r\n                  <MDBIcon icon='ban' className='mr-3' />\r\n                  Cancelled\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              {/* <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '6'}\r\n                  onClick={this.togglePills('default', '6')}\r\n                >\r\n                  <MDBIcon icon='th-large' className='mr-3' />\r\n                  History\r\n                </MDBNavLink>\r\n              </MDBNavItem> */}\r\n\r\n              <MDBNavItem>\r\n\r\n              <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n            </MDBNav>\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='2'>\r\n              <PrintingTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <OrderDeliverytab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <CompletedOrderTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <CancelOrdertab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n      <MessageTab/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n      <MyAccount/>\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PrintingPartner)))\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem, MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n\r\n   \r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass] = React.useState('')\r\n  const [confPass,setConfPass] = React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Institution :</span>   <TextField type='text' defaultValue={row.institution}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' style={{minWidth:'300px'}} defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password' style={{minWidth:'300px'}}     onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'15px'}}>Confirm Password :</span> <TextField type='password' style={{minWidth:'300px'}}   onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable , MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style,  price,action) {\r\n        return { artworkDB,id,title,artist, style,  price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Approved' &&  art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n         \r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n\r\n            let archive =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Archived', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject'> Archive</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()}>Artwork Information</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core'; \r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n     \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Archived' && art.accID === mydata.accID).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n         \r\n            };\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()}>Artwork Information</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable , MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n  \r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n   \r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending' && art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n            let  info = (itm) => {\r\n\r\n              artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n              };\r\n              let  close= () => {\r\n       \r\n                this.setState({\r\n                  modal: false\r\n                });\r\n                };\r\n     \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          id: `${row.id}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`,\r\n          action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve'>More Info</MDBBtn></div>\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped  \r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()}>Artwork Information</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4} >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  ","import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport moment from 'moment'\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {upload, artwork},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    console.log(this.state.selectedFile,'sdasd')\r\n    data.append('artworkImg',this.state.selectedFile);\r\n    \r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Artwork submitted', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\n    let date = new Date();\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\nartwork.setProperty('accID',mydata.accID)\r\nartwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n \r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#262626'}}><span style={{color:'white'}}> Register Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>{\r\n                    \r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='number'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n            \r\n              \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n               \r\n                  />\r\n                  </div>\r\n                  \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                  style={{width:'95%'}}\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                 \r\n                  />\r\n                   </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n              \r\n                     <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfPrintSize}\r\n                    placeholder='Printing Size'\r\n                    showCheckbox={true}\r\n                    displayValue='printSize'\r\n                    onSelect={selectArtSize}\r\n              \r\n                  />\r\n                  </div>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <img src={this.state.selectedFile}/>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Quantity'\r\n                    type='number'\r\n                 \r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                    style={{width:'95%'}}\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                    <img src={this.state.selectedFile} alt='' />\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import {\r\n    MDBCard,\r\n  MDBCardBody,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem,\r\n    MDBTabContent,\r\n    MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Artworks from './ActiveArtworks';\r\nimport ArchivedArtwors from './ArchivedArtworks';\r\nimport Pending from './PendingArtwork';\r\nimport AddArtwork from './AddArtwork'\r\nimport Grid from '@material-ui/core/Grid';\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {   \r\n      let {\r\n        startingStore: {getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize},\r\n      } = this.props;\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n      getPrintSize()\r\n  \r\n    }\r\n  \r\n    render() {\r\n    \r\n  \r\n      return (\r\n<Fragment>\r\n        <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n        <div className='orderconAdmin' style={{marginTop:'16px'}}>\r\n        <Grid container sm={12}>\r\n            <Grid item sm={6}>\r\n        <h4>Artwork Lists</h4>\r\n        </Grid>\r\n        <Grid item sm={6} >\r\n            <div style={{float:'right'}}>\r\n<AddArtwork/>\r\n</div>\r\n</Grid> \r\n</Grid> \r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>   \r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import React, { Component, Fragment } from 'react'\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n    let {startingStore:{listOfNotif}}=this.props;\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n   \r\n   let notifCount = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').length\r\n  \r\n   let mynotif = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n     return(\r\n       <Fragment key={i}>\r\n   \r\n           <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n             <span className=\"time\">{notifInfo.notifDT}</span>\r\n           </MDBDropdownItem>\r\n    \r\n       </Fragment>\r\n     )\r\n   })\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n        <MDBBadge color=\"danger\" className=\"ml-2 bell\" >{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n      <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     {mynotif}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts}}=this.props;\r\n  }\r\n\r\n    render() {\r\n        let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n      let {startingStore:{listofUserOrder,listOfUsers,listOfArtworks}}=this.props;\r\n      let Artwoks = listOfArtworks.filter(art => art.accID === mydata.accID).length\r\n      let Orders = listofUserOrder.filter (ord => ord.orderItems.accID === mydata.accID).length;\r\n   \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Typography className={classes.title}  gutterBottom style={{float:\"right\"}}>\r\nEarnings YTD\r\n</Typography>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\",color:\"white\"}}/>\r\n{/* <span style={{textAlign:\"right\",color:\"white\"}}> &#8369;{sales.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</span> */}\r\n</Typography>\r\n\r\n<Typography variant=\"body2\" component=\"p\">\r\n\r\n\r\n\r\n</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<BrushIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArtworks \r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Artwoks.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOrders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Orders.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import React, {Component, Fragment} from 'react';\r\nimport {MDBNavLink, MDBIcon, MDBCard, MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBCardBody} from 'mdbreact';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Skeleton} from 'antd';\r\nimport DCards from './../DCards'\r\nclass ArtistProfile extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts,getArtwork,getOrders,getFollow},\r\n    } = this.props;\r\n    getAccounts()\r\n    getArtwork()\r\n    getOrders()\r\n   \r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listOfUsers,listOfFollowing\r\n      },\r\n    } = this.props;\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\nfunction createData(userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img) {\r\n  return { userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img };\r\n}\r\nlet myprofile = listOfUsers.filter(pp => pp.accID === mydata.accID).map(info =>{\r\n\r\n  return(createData(\r\n    info,info.accID,info.accFname,info.accLname,info.accEmailAddress,info.accAddress,info.accContact,info.birthYear,info.accInstitution,info.acc_Documents,info.artistDescription,info.profile_Img\r\n\r\n\r\n  )\r\n  )\r\n})\r\n\r\n\r\nlet myFollowers = listOfFollowing.filter(data => data.followingID === mydata.accID).length;\r\n    return (\r\n<Fragment>\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n            \r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      {myprofile.map((row,index) => {\r\n\r\n        return(\r\n        \r\n        \r\n        \r\n          <Fragment>\r\n\r\n   \r\n      <MDBCard style={{marginTop:'15px',marginBottom:'20px'}}>\r\n    \r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              \r\n   \r\n\r\n     \r\n\r\n              <div className='left' key={index}>\r\n                <div className='artistpp'>\r\n                \r\n               \r\n                <img \r\n      src={row.profile_Img}\r\n      alt=\"profilePic\"\r\n      />\r\n                  ) \r\n                </div>\r\n                <div className='artistInfo'>\r\n                <h2 className='title'>\r\n                 {row.fname} {row.lname}\r\n                 <span className='bday'>\r\n                      {row.address}, born{' '}\r\n                      {row.birthYear}\r\n                    </span>\r\n                    <span className='bday'>\r\n                  {row.institution}\r\n                </span>\r\n                    </h2>\r\n              \r\n\r\n                  <span className='estart'>Established Artist</span>\r\n               \r\n                </div>\r\n                <div style={{marginTop:'16px'}}>\r\n                  <p> {row.description}</p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    {myFollowers === 0 ? (\r\n                      '0'\r\n                    ):(\r\n                      {myFollowers}\r\n                    )}\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n\r\n            \r\n\r\n    \r\n\r\n            </div>\r\n          \r\n          </div>\r\n        \r\n        \r\n          </MDBCard>\r\n      \r\n      <DCards/>\r\n\r\n      </Fragment>\r\n      )})}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistProfile));\r\n","import React, {Component} from 'react';\r\nimport {MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from './DownloadImage';\r\n class Earnings extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n   \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n\r\n  \r\n            if (Delivery.orderItems.filter(ord => ord.accID === mydata.accID)) {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n          let myorder = listOfOrders.map( ord => ord.orderItems)\r\n      //  let a = myorder[0].map(ord => ord)\r\n   \r\n\r\n// console.log(a[0],'dataa')\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n     \r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Amount',\r\n        field: 'amount',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => \r\n      {\r\n      \r\n        let total =row.items.filter(ord => ord.accID === '92420-650').reduce((sum, record) => parseInt(sum) + parseInt(record.artworkPaymentAmount) , 0)\r\n        \r\n        \r\n       \r\n      return(\r\n\r\n\r\n    \r\n       {\r\n \r\n\r\n\r\n\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        amount:`${total.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     )})\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n             <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Sold Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n      <MDBCard>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n</MDBCard>\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(Earnings))","import React, {Component, Fragment} from 'react';\r\nimport {MDBNavLink, MDBIcon, MDBCard, MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBCardBody} from 'mdbreact';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nclass ArtistMessaging extends Component {\r\n  componentDidMount() {\r\n\r\n   \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n<Fragment>\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n     \r\n      \r\n \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistMessaging));\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n  MDBNavbar, MDBNavItem,\r\n  MDBNavLink,\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/admin.css';\r\nimport Settings from './AccountSetting';\r\nimport ArtworkTab from './ArtworkManagement';\r\nimport Notif from './Notification';\r\nimport Profile from './Profile';\r\nimport EarningsTab from './Earnings'\r\nimport Messages from './Messaging'\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAllNotif}}=this.props\r\n    getAllNotif()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n    return (\r\n      <div>\r\n     <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n  />\r\n\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n              <a href='/ArtistHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Artist</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n               \r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='coins' className='mr-3' />\r\n                    Sold Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n     \r\n    \r\n           \r\n                <MDBNavItem>\r\n\r\n\r\n                <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              {/* <Dashboard /> */}\r\n              <Profile/>\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <EarningsTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <Messages/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <Settings />\r\n            </MDBTabPane>\r\n         \r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","/* eslint no-param-reassign: [\"error\"] */\n\nimport Joi from 'joi';\nimport {\n  toJS,\n  isObservableArray,\n  isObservableObject,\n  isBoxedObservable,\n  action,\n  decorate,\n} from 'mobx';\n\nclass Model {\n  constructor(props) {\n    Object.assign(this, props);\n  }\n\n  static get schema() {\n    return {};\n  }\n\n  validate = () => (\n    Joi.validate(\n      this,\n      this.constructor.schema,\n      {\n        skipFunctions: true,\n        abortEarly: false,\n        allowUnknown: false,\n      },\n    )\n  );\n\n  setProperty = (property, value) => {\n    this.handleProperties(property, value);\n  };\n\n  // get toJS of each property that is an observable\n  get toJSproperties() {\n    let propertiesClone = {};\n\n    Object.keys(this).forEach((prop) => {\n      const value = this[prop];\n      if (isObservableArray(value) || isObservableObject(value) || isBoxedObservable(value)) {\n        propertiesClone = { ...propertiesClone, [prop]: toJS(value) };\n      }\n    });\n\n    return { ...this, ...propertiesClone };\n  }\n\n  get errors() {\n    const { error } = this.validate();\n\n    if (error) {\n      const { details } = error;\n      return details;\n    }\n\n    return [];\n  }\n\n  get isValid() {\n    const { error } = this.validate();\n    return error === null;\n  }\n\n  handleProperties = (property, value, deepProperty = undefined) => {\n    if (typeof property !== 'string') {\n      throw new Error('accepts property of type string');\n    }\n\n    const properties = property.split('.');\n    const prop = properties.shift();\n\n    if (properties.length > 0) {\n      if (deepProperty) {\n        return this.handleProperties(properties.join('.'), value, deepProperty[prop]);\n      }\n      return this.handleProperties(properties.join('.'), value, this[prop]);\n    }\n    if (deepProperty) {\n      (deepProperty[prop] = value);\n      return true;\n    }\n    this[prop] = value;\n    return true;\n  }\n}\n\ndecorate(Model, {\n  setProperty: action,\n});\n\nexport default Model;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Account extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      accID: '',\r\n      accFname: '',\r\n      accLname: '',\r\n      accSuffix: '',\r\n      accAddress: '',\r\n      accEmailAddress: '',\r\n      accessType: '',\r\n      accInstitution: '',\r\n      accFollowers: '0',\r\n      accPoints: '0',\r\n      password: '',\r\n      username: '',\r\n      accContact: '',\r\n      profile_Img: undefined,\r\n      accCategories: [],\r\n      accStyles: [],\r\n      dateAdded: '',\r\n      acc_Status: '',\r\n      acc_Documents: '',\r\n      regType: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Account, {\r\n  _id: observable,\r\n  accID: observable,\r\n  accFname: observable,\r\n  accLname: observable,\r\n  accSuffix: observable,\r\n  accAddress: observable,\r\n  accEmailAddress: observable,\r\n  accessType: observable,\r\n  accInstitution: observable,\r\n  accFollowers: observable,\r\n  accPoints: observable,\r\n  password: observable,\r\n  username: observable,\r\n  accContact: observable,\r\n  profile_Img: observable,\r\n  accCategories: observable,\r\n  accStyles: observable,\r\n  dateAdded: observable,\r\n  acc_Status: observable,\r\n  acc_Documents: observable,\r\n  regType: observable,\r\n});\r\n\r\nexport default Account;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Artwork extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      artworkPath: '',\r\n      artDescription: '',\r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artDimension: '',\r\n      artRating: '',\r\n      accID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n      artworkStatus: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Artwork, {\r\n  _id: observable,\r\n  artworkPath: observable,\r\n  artDescription: observable,\r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artDimension: observable,\r\n  artRating: observable,\r\n  accID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n  artworkStatus: observable,\r\n});\r\n\r\nexport default Artwork;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Cart extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      artistName: '',\r\n      dateOfTransaction: '',\r\n      artworkName: '',\r\n      artworkMaterial: '',\r\n      artworkFramingOptions: '',\r\n      artworkQuantity: '1',\r\n      artworkSize: '',\r\n      artworkPrice: '',\r\n      artworkPaymentAmount: '',\r\n      artworkImg: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Cart, {\r\n  accID: observable,\r\n  artistName: observable,\r\n  dateOfTransaction: observable,\r\n  artworkName: observable,\r\n  artworkMaterial: observable,\r\n  artworkFramingOptions: observable,\r\n  artworkQuantity: observable,\r\n  artworkSize: observable,\r\n  artworkPaymentAmount: observable,\r\n  artworkImg: observable,\r\n  artworkPrice: observable,\r\n});\r\n\r\nexport default Cart;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Categories extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      catID: ' ',\r\n      catType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Categories, {\r\n  catID: observable,\r\n  catType: observable,\r\n});\r\n\r\nexport default Categories;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Order extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      orderID: '',\r\n      modeOfPayment: '',\r\n      orderDate: '',\r\n      orderItems: '',\r\n      orderStatus: '',\r\n      paymentStatus: '',\r\n      totalAmount:'',\r\n      partnerEarnings:'',\r\n      \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Order, {\r\n  accID: observable,\r\n  orderID: observable,\r\n  modeOfPayment: observable,\r\n  orderDate: observable,\r\n  orderItems: observable,\r\n  orderStatus: observable,\r\n  paymentStatus: observable,\r\n  totalAmount:observable,\r\n  partnerEarnings:observable,\r\n});\r\n\r\nexport default Order;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Style extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      styleID: ' ',\r\n      styleType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Style, {\r\n  styleID: observable,\r\n  styleType: observable,\r\n});\r\n\r\nexport default Style;\r\n","import Joi from \"joi\";\nimport { decorate, observable } from \"mobx\";\nimport Model from \"./Model\";\n\nclass User extends Model {\n  constructor(props) {\n    const defaults = {\n      _id: undefined,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      phone: 0,\n      address: {\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        postalCode: 0\n      },\n      dateRegistered: undefined\n    };\n    super({ ...defaults, ...props });\n  }\n\n  static get schema() {\n    return {\n      _id: Joi.string()\n        .hex()\n        .length(20),\n      firstName: Joi.string().required(),\n      lastName: Joi.string().required(),\n      email: Joi.email().required(),\n      password: Joi.string().required(),\n      phone: Joi.string().required(),\n      address: Joi.object().keys({\n        street: Joi.string(),\n        city: Joi.string(),\n        state: Joi.string(),\n        postalCode: Joi.number()\n      }),\n      date: Joi.date()\n        .iso()\n        .required()\n    };\n  }\n}\n\ndecorate(User, {\n  firstName: observable,\n  lastName: observable,\n  email: observable,\n  password: observable,\n  phone: observable,\n  address: observable,\n  date: observable,\n});\n\nexport default User;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass PrintSize extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      sizeID: ' ',\r\n      printSize: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(PrintSize, {\r\n  sizeID: observable,\r\n  printSize: observable,\r\n});\r\n\r\nexport default PrintSize;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Notification extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      notifID: '',\r\n      notifSender: ' ',\r\n      notifRecipient:'',\r\n      notifSubject:'',\r\n      notifMsg:'',\r\n      notifDT:'',\r\n      notifStatus:'',\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Notification, {\r\n  notifID: observable,\r\n  notifSender: observable,\r\n  notifRecipient:observable,\r\n  notifSubject:observable,\r\n  notifMsg:observable,\r\n  notifDT:observable,\r\n  notifStatus:observable,\r\n});\r\n\r\nexport default Notification;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass MyLists extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      mylistsID:'',\r\n      accID:'',\r\n     \r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artRating: '',\r\n      artistID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n\r\n\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(MyLists, {\r\n  _id: observable,\r\n  mylistsID:observable,\r\n  accID:observable,\r\n \r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artRating: observable,\r\n  artistID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n\r\n\r\n});\r\n\r\nexport default MyLists;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Feedback extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      feedbackID: '',\r\n      accID: '',\r\n      orderID: '',\r\n      artworkID:'',\r\n      date: '',\r\n      feedbackNote: '',\r\n   \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Feedback, {\r\n  feedbackID: observable,\r\n  accID: observable,\r\n  orderID: observable,\r\n  artworkID:observable,\r\n  date: observable,\r\n  feedbackNote: observable,\r\n\r\n});\r\n\r\nexport default Feedback;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass UserFollow extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: undefined,\r\n      followID:'',\r\n      followerID:'',\r\n      followingID:'',\r\n    \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(UserFollow, {\r\n  _id: observable,\r\n  followID:observable,\r\n  follower:observable,\r\n  followingID:observable,\r\n \r\n});\r\n\r\nexport default UserFollow;\r\n","import _ from 'lodash';\nimport {action, decorate, observable, toJS} from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nimport PrintSize from './../models/PrintSize'\nimport Notification from './../models/Notif'\nimport MyLists from './../models/MyLists'\nimport Feedback from './../models/Feedback'\nimport UserFollow from './../models/UserFollow'\n\nclass StartingStore {\n  account = new Account();\n  artwork = new Artwork();\n  categories = new Categories();\n  style = new Style();\n  cart = new Cart();\n  order = new Order();\n  printsize = new PrintSize();\n  notif = new Notification();\n  mylists= new MyLists();\n  feedback = new Feedback();\n  userfollow = new UserFollow();\n  listOfFollowing = [];\n  listOfFeedback = [];\n  listOfMyLists =[];\n  listOfNotif=[];\n  listOfPrintSize =[];\n  listOfOrders = [];\n  welcomeMessage = 'Welcome!';\n  listOfUsers = [];\n  listOfArtworks = [];\n  listOfCategories = [];\n  listOfStyles = [];\n  listOfOrder = [];\n  listOfArtists = [];\n  currentUser = new User();\n  listOfUserDocs = [];\n  listOfUserCart = [];\n  listofArtistArtwork = [];\n  listOfSingleArtwork = [];\n  listofArtistInfo = [];\n  listofArtistCategories = [];\n  listofUserCategoriesArtwork = [];\n  listofFilteredUserArtworkCategories = [];\n  listOfEmergingArtist = [];\n  listofUserOrder = [];\n  filter = false;\n  listofUserStyleArtwork = [];\n  followed = false;\n  listRelatedWorkByCategory = [];\n\n  img = undefined;\n  api = undefined;\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n    return obj;\n  }\n  setFollowed = () => {\n    this.followed = !this.followed;\n  };\n  filterArtwork = (type) => {\n    this.filter = type;\n  };\n  addAccount = () => {\n  \n      return new Promise ((resolve,reject) =>{\n     \n      this.api.addaccount(this.account)\n      .then(resp => {\n      \n        \n        if (resp.data !== false ) {  \n          this.listOfUsers = resp.data; \n          resolve(true);       \n          } \n  else {         \n   resolve(false);      \n   }  \n       \n      })\n    })\n\n  };\n\n  getAccounts = () => {\n    this.api.getaccounts().then((resp) => {\n    \n      this.listOfUsers = resp.data;\n    });\n  };\n\n  editAccount = () => {\n    return new Promise((resolve, reject) => {\n    this.api\n      .editAccount(this.removeUndefinedProps(this.account))\n      .then((resp) => {\n        let user = resp.data.filter((us) => us._id === this.account._id);\n       \n        resolve('success')\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    });\n  };\n\n  editProfile = () => {\n    return new Promise((resolve,reject) =>{\n\n   \n\n    let doc = this.listOfUsers.filter(data=> {\n   \n      if (data.accID === this.account.accID){\n        \n          return data._id\n      }\n    })\n\n\n \n \n    this.api.editprofile(this.account , doc[0]._id)\n    .then(resp => {\n \n      this.listOfUsers=resp.data\n      resolve('true')\n    })\n\n  })\n  }\n\n  // editProfile = () => {\n   \n  //   this.api.editprofile(this.account).then((resp) => {\n  //     this.listOfUsers = resp.data;\n     \n  //   });\n  // };\n\n\n  loginAccount = () => {\n    return new Promise((resolve, reject) => {\n      this.api.loginaccount(this.account).then((resp) => {\n       \n        if (resp.data.accessType === 'Admin') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(true);\n        } else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        } else if (resp.data.accessType === 'PrintingPartner') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(3);\n        } else if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n        \n          resolve(4)\n        } else if (resp.data.acc_Status === 'Pending'){\n          resolve(5)\n         \n        } else if (resp.data.acc_Status === 'Rejected'){\n          resolve(6)\n         \n        }else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginEmail = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginemail(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginFB = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginfb(this.account)\n     \n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(4)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n  loginGoogle = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.logingoogle(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addArtwork = () => {\n  \n    this.api.addartwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n    \n\n    });\n  };\n\n  upload = (img, documents) => {\n\n    return new Promise((resolve, reject) => {\n      return this.api.upload(img).then((resp) => {\n   \n        if (documents === 'docu') {\n          this.account.setProperty('acc_Documents', resp.data.url);\n        }else if(documents === 'profile'){\n          this.account.setProperty('profile_Img', resp.data.url);\n        } else {\n          this.artwork.setProperty('artworkImg', resp.data.url);\n          this.account.setProperty('accImg', resp.data.url);\n        }\n  \n        if (this.artwork.artName === '') {\n          this.addAccount();\n        } else {\n          this.addArtwork();\n        }\n      });\n    });\n  };\n\n  getArtwork = () => {\n    this.api.getartwork().then((resp) => {\n      this.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n \n    });\n  };\n\n  getEmergingArtistArtwork = () => {\n    this.api.getEmergingArtist().then((resp) => {\n      this.listOfEmergingArtist = resp.data;\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    if (userData !== null) {\n      this.api\n        .getArtistFollowArtwork(email ? email : userData.accEmailAddress)\n        .then((resp) => {\n          this.listOfArtistFollowed = resp.data;\n        });\n    }\n  };\n\n  getArtworkInfo = () => {\n    // return new Promise((resolve, reject) => {\n    //   this.api.getartworkInfo().then((resp) => {\n    //     let userData = JSON.parse(sessionStorage.getItem('userData'));\n    //     let artCategories = [];\n    //     let categories = [];\n\n    //     this.listOfArtworks = resp.data.map((art) => {\n    //       artCategories.push(art.artTheme[0]);\n    //       return art;\n    //     });\n\n    //     let cat = artCategories.filter((art) => {\n    //       if (art === '' || categories.includes(art)) {\n    //       } else {\n    //         categories.push(art);\n    //       }\n    //     });\n\n    //     if (userData === null || userData === false) {\n    //       let listofUserCategoriesArtwork = resp.data\n    //         .filter((item) => item.artworkStatus !== 'Pending')\n    //         .map((art) => {\n    //           this.listofFilteredUserArtworkCategories.push(art);\n    //           return art;\n    //         });\n    //     } else {\n    //       let listofUserCategoriesArtwork = resp.data\n    //         .filter((item) => item.artworkStatus !== 'Pending')\n    //         .filter((art) => {\n    //           userData['accCategories'].map((cat) => {\n    //             if (art.artTheme.includes(cat)) {\n    //               this.listofFilteredUserArtworkCategories.push(art);\n\n    //               return art;\n    //             }\n    //           });\n    //         });\n       \n    //       this.listofFilteredUserArtworkCategories = _.uniqBy(\n    //         this.listofFilteredUserArtworkCategories,\n    //         (a) => a.artName\n    //       );\n    //     }\n\n    //     if (resp.data !== false) {\n    //       resolve(resp.data);\n    //     } else {\n    //       resolve(false);\n    //     }\n    //   });\n    // });\n  };\n\n  getSingleArtworkInfo = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getsingleartworkinfo(id).then((resp) => {\n        this.listOfSingleArtwork = resp.data;\n\n        if (resp.data !== false) {\n          let listOfSingleArtwork = resp.data;\n          let styles = [];\n          let themes = [];\n          if (resp.data.length > 1) {\n            resp.data.map((item) => {\n              item.artStyle.map((style) => styles.push(style));\n              item.artTheme.map((theme) => themes.push(theme));\n            });\n            let categories = _.union(themes.concat(styles));\n            this.getRelatedWorkByCategory(JSON.stringify(categories));\n          } else {\n            if (resp.data.artStyle !== undefined) {\n              // resp.data.artStyle.map((style) => styles.push(style));\n              // resp.data.artTheme.map((theme) => themes.push(theme));\n\n              let categories = _.union(\n                listOfSingleArtwork.artTheme.concat(\n                  listOfSingleArtwork.artStyle\n                )\n              );\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            }\n          }\n\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  followArtist = (artist) => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.followAccount(userData, artist).then((resp) => {\n        if (resp.data !== false) {\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addOrder = () => {\n \n    this.api.addOrder(this.order).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editArtwork = () => {\n   \n    this.api.editArtwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n     \n    });\n  };\n\n  //Category\n\n  addCategory = () => {\n    this.api.addCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n \n    });\n  };\n\n  editCategory = () => {\n    this.api.editCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n\n  getCategories = () => {\n    this.api.getCategories().then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n  getOrderUser = () => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrder(userData._id).then((resp) => {\n        this.listofUserOrder = resp.data;\n       \n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Style\n\n  addStyle = () => {\n    this.api.addStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  editStyle = () => {\n    this.api.editStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  getStyles = () => {\n    this.api.getStyles().then((resp) => {\n      this.listOfStyles = resp.data;\n    \n    });\n  };\n\n  //PrintSize\n\n  addPrintSize = () => {\n    this.api.addprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n  getPrintSize = () => {\n    this.api.getprintsize().then((resp) => {\n      this.listOfPrintSize = resp.data;\n    \n    });\n  };\n\n  editPrintSize = () => {\n    this.api.editprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n\n  //Artist\n  getArtists = (artist) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtists().then((resp) => {\n        this.listOfArtists = resp.data;\n\n        if (resp.data !== false && artist !== '') {\n          resolve(\n            resp.data.filter(\n              (art) => `${art.accFname} ${art.accLname}` === artist\n            )\n          );\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtists = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n          if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n            this.followed = true;\n          }\n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getSingleEnthusiast = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n        \n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getArtistArtwork = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtistArtwork(id).then((resp) => {\n        let listOfCategories = [];\n        if (resp.data !== false && id !== '') {\n          this.listofArtistArtwork = resp.data;\n\n          listOfCategories = resp.data.map((art) => {\n            if (art.artTheme[0] !== '') {\n              return art.artTheme[0];\n            }\n          });\n          this.listofArtistCategories = listOfCategories.filter((cat) => {\n            return cat !== undefined;\n          });\n     \n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getRelatedWorkByCategory = (cat) => {\n    \n    return new Promise((resolve, reject) => {\n      this.api.getRelatedWorkByCategory(cat).then((resp) => {\n        if (resp.data !== false && cat !== '') {\n          this.listRelatedWorkByCategory = resp.data;\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Cart\n\n  addToCart = () => {\n    this.api.addToCart(this.cart).then((resp) => {\n      this.listOfUserCart = resp.data;\n    });\n  };\n\n  getToCart = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    this.api.getToCart(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfUserCart = resp.data.filter(\n          (item) => item.artworkQuantity !== ''\n        );\n      }\n    });\n  };\n\n  editToCart = (data) => {\n \n    let currData = toJS(data);\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n \n    this.api.editToCart(currData._id).then((resp) => {\n      if (resp.data !== false) {\n        this.getToCart(userData);\n      }\n    });\n  };\n\n  // ORDERS\n  getOrders = () => {\n    // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n \n    this.api.getOrders().then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrders = resp.data;\n      }\n    });\n  };\n  getOrder = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n    this.api.getOrders(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editOrder = (id, status, account) => {\n    let data = {id: id, status: status, account: account};\n    this.api.editOrder(data).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  addNotif = () => { \n    return new Promise((resolve, reject) => {   \n      this.api.addnotif(this.notif)\n      .then(resp => {    \n         this.listOfNotif = resp.data\n   \n         if (resp.data !== false ) {   \n                  resolve(resp.data);       \n                  } \n         else {         \n           resolve(false);      \n           }  \n           });\n          })\n    }\n\n    getNotif = () => { \n   \n      return new Promise((resolve, reject) => {   \n        let getId = JSON.parse(sessionStorage.getItem('userData'))\n     \n        this.api.getnotif(getId.accID)\n        .then(resp => {    \n        \n           this.listOfNotif = resp.data\n     \n           if (resp.data !== false ) {   \n                    resolve(resp.data);       \n                    } \n           else {         \n             resolve(false);      \n             }  \n             });\n            })\n      }\n\n      getAllNotif = () => {\n        this.api.getallnotif()\n        .then(resp => {\n    \n         this.listOfNotif=resp.data\n        \n      \n        })\n\n      }\n\n\n      editNotif = (id, status, notif) => {\n        \n        let data = {id: id, status: status, notif: notif};\n     \n        this.api.editnotif(data).then((resp) => {\n          if (resp.data !== false) {\n            this.listOfNotif = resp.data;\n          }\n        });\n      }\n\n      addMyLists = () => { \n        return new Promise((resolve, reject) => {   \n          this.api.addmylists(this.mylists)\n          .then(resp => {    \n             this.listOfMyLists = resp.data\n       \n             if (resp.data !== false ) {   \n                      resolve(resp.data);       \n                      } \n             else {         \n               resolve(false);      \n               }  \n               });\n              })\n        }\n\n        getMyLists = () => { \n   \n          return new Promise((resolve, reject) => {   \n            let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n            this.api.getmylists(getId.accID)\n            .then(resp => {    \n          \n               this.listOfMyLists = resp.data\n         \n               if (resp.data !== false ) {   \n                        resolve(resp.data);       \n                        } \n               else {         \n                 resolve(false);      \n                 }  \n                 });\n                })\n          }\n\n\n          deleteMyLists =() =>{\n            let mytoken =this.listOfMyLists.filter(data =>{\n            \n              if (data.mylistsID === this.mylists.mylistsID){\n                return data._id\n              }\n            })\n          \n            this.api.deletemylists(this.mylists ,mytoken[0]._id)\n            .then(resp => {\n\n              this.listOfMyLists=resp.data\n            })\n          }\n\n          addFeedback = () => { \n         \n            return new Promise((resolve, reject) => {   \n              this.api.addfeedback(this.feedback)\n              .then(resp => {    \n                 this.listOfFeedback = resp.data\n           \n                 if (resp.data !== false ) {   \n                          resolve(resp.data);       \n                          } \n                 else {         \n                   resolve(false);      \n                   }  \n                   });\n                  })\n            }\n\n\n        \n            getFeedback = () => {\n              this.api.getfeedback().then((resp) => {\n                this.listOfFeedback = resp.data;\n              \n              });\n            };\n\n\n\n            addFollow = () => { \n         \n              return new Promise((resolve, reject) => {   \n                this.api.addfollow(this.userfollow)\n                .then(resp => {    \n                   this.listOfFollowing = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              \n          deleteFollow =() =>{\n            return new Promise((resolve, reject) => {   \n\n             let getuserId = JSON.parse(sessionStorage.getItem('userData'))\n            let follow =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data._id\n              }\n            })\n\n            let follow_ID =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data.followID\n              }\n            })\n           \n          \n            this.api.deletefollow(this.userfollow ,follow[0]._id,follow_ID[0].followID)\n            .then(resp => {\n\n              resolve('deleted')\n            })\n\n          })\n          }\n\n    \n\n\n\n          // getFollow = () => { \n   \n          //   return new Promise((resolve, reject) => {   \n          //     let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n          //     this.api.getfollow(getId.accID)\n          //     .then(resp => {    \n          //   console.log(resp.data,'aaa')\n          //        this.listOfFollowing = resp.data\n           \n          //        if (resp.data !== false ) {   \n          //                 resolve(resp.data);       \n          //                 } \n          //        else {         \n          //          resolve(false);      \n          //          }  \n          //          });\n          //         })\n          //   }\n\n              \n            getFollow = () => {\n              this.api.getfollow().then((resp) => {\n                this.listOfFollowing = resp.data;\n              \n              });\n            };\n\n            getAllArtworks = () => {\n              return new Promise((resolve, reject) => {\n              this.api.getallartworks().then((resp) => {\n        \n                this.listOfArtworks = resp.data;\n                  \n              });\n            })\n            }\n\n\n            \n\n\n\n\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  editProfile: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n  addPrintSize:action,\n  getPrintSize:action,\n  editPrintSize:action,\n  loginAccount:action,\n  loginEmail:action,\n  loginFB:action,\n  loginGoogle:action,\n  notif:observable,\n  listOfNotif:observable,\n  addNotif:action,\n  getNotif:action,\n  getAllNotif:action,\n  editNotif:action,\n  mylists:observable,\n  listOfMyLists :observable,\n  addMyLists:action,\n  getMyLists:action,\n  deleteMyLists:action,\n  feedback:observable,\n  listOfFeedback:observable,\n  addFeedback:action,\n  getFeedback:action,\n  getSingleEnthusiast:action,  \n  userfollow:observable,\n  listOfFollowing:observable,    \n  addFollow:action,   \n  deleteFollow:action,   \n  getFollow:action,        \n  getAllArtworks:action,                                    \n});\n\nexport default StartingStore;\n","import axios from 'axios';\nimport {action, decorate} from 'mobx';\n\nclass Api {\n  api = axios.create({\n    baseURL: '/api',\n  });\n\n  // ACCOUNT\n  addaccount = (data) => {\n    return this.api.post('/addAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getaccounts = () => {\n    return this.api.get('/getAccounts');\n  };\n\n  editAccount = (data) => {\n    return this.api.post('/editAccount', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editprofile = (data ,docID)=>{\n    \n    return this.api.put(`/editProfile/${docID}`,{\n    mode:'cors',\n    data:data,\n  })\n  }\n\n  \n  addOrder = (data) => {\n    return this.api.post('/addOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginaccount = async (data) => {\n    return this.api.post('/loginAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginemail = async (data) => {\n   \n    return this.api.post('/loginEmail', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  \n  loginfb = async (data) => {\n   \n    return this.api.post('/loginFB', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  \n  logingoogle = async (data) => {\n   \n    return this.api.post('/loginGoogle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getOrder = (id) => {\n    return this.api.get(`/getOrder/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  // ARTWORK\n  addartwork = (data) => {\n    return this.api.post('/addArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getartwork = () => {\n    return this.api.get('/getArtworks');\n  };\n\n  getartworkInfo = () => {\n    return this.api.get('/getArtworkInfo');\n  };\n\n  getsingleartworkinfo = (id) => {\n    return this.api.get(`/getSingleArtworkInfo/${id}`);\n  };\n\n  editArtwork = (data) => {\n    return this.api.post('/editArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getArtistArtwork = (id) => {\n    return this.api.get(`/getArtistArtwork/${id}`);\n  };\n\n  getRelatedWorkByCategory = (category) => {\n    return this.api.get(`/getRelatedWorkByCategory/${category}`);\n  };\n\n  // CATEGORY\n  addCategory = (data) => {\n    return this.api.post('/addCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editCategory = (data) => {\n    return this.api.post('/editCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getCategories = () => {\n    return this.api.get('/getCategories');\n  };\n\n  // STYLES\n  addStyle = (data) => {\n    return this.api.post('/addStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editStyle = (data) => {\n    return this.api.post('/editStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getStyles = () => {\n    return this.api.get('/getStyles');\n  };\n\n  //Print Size\n  addprintsize = (data) => {\n    return this.api.post('/addprintSize', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  getprintsize = () => {\n    return this.api.get('/getprintSize');\n  };\n  editprintsize =(data)=>{\n    return this.api.post('/editprintSize'),{\n      mode:'cors',\n      data:data,\n    }\n  }\n\n  //ARTIST\n  getArtists = () => {\n    return this.api.get('/getArtists');\n  };\n\n  getSingleArtists = (id) => {\n    return this.api.get(`/getSingleArtists/${id}`);\n  };\n\n  // CART\n\n  addToCart = (data) => {\n    return this.api.post('/addToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getToCart = (data) => {\n    return this.api.post('/getToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editToCart = (id) => {\n    return this.api.delete(`/editToCart/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  upload = (img) => {\n    return this.api.post('/upload', img, {\n      mode: 'cors',\n    });\n  };\n\n  getOrders = () => {\n    return this.api.get('/getAllOrders', {\n      mode: 'cors',\n    });\n  };\n\n  followAccount = (data, id) => {\n    return this.api.post(`/followAccount/${id}`, {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editOrder = (data) => {\n    return this.api.put('/editOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getEmergingArtist = () => {\n    return this.api.get('/getEmergingArtistArtwork', {\n      mode: 'cors',\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    return this.api.get(`/getArtistFollowArtwork/${email}`, {\n      mode: 'cors',\n    });\n  };\n  addnotif = (data) => {\n    \n    return this.api.post('/addNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n  getnotif = (id) => {\n    return this.api.get(`/getNotif/${id}`);\n  };\n\n  getallnotif = () => {\n    return this.api.get(`/getAllNotif`);\n  };\n\n  editnotif = (data) => {\n    return this.api.put('/editNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n\n\naddmylists = (data) => {\n \n  return this.api.post('/addMyLists', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetmylists = (id) => {\n \n  return this.api.get(`/getMyLists/${id}`, {\n    mode: 'cors',\n  });\n};\n\ndeletemylists = (data,id) =>{\n  return this.api.delete(`/deleteMyLists/${id}`,{\n    data:data,\n  })\n}\n\n\n\naddfeedback = (data) => {\n  return this.api.post('/addFeedback', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetfeedback = () => {\n  return this.api.get('/getFeedback');\n};\n\n\n\naddfollow = (data) => {\n  return this.api.post('/addFollow', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\n// getfollow = (id) => {\n// console.log(id,'bbb')\n//   return this.api.get(`/getFollow/${id}`, {\n//     mode: 'cors',\n//   });\n// };\n\ngetfollow = () => {\n  return this.api.get('/getFollow');\n};\n\ndeletefollow = (data,id,followid) =>{\n \n  return this.api.delete(`/deleteFollow/${id}/${followid}`,{\n    data:data,\n  })\n}\n\ngetallartworks = () => {\n  return this.api.get('/getAllArtworks');\n};\n\n}\n\n\n\n\ndecorate(Api, {\n  getUsers: action,\n  addaccount: action,\n  getaccounts: action,\n  loginaccount: action,\n  loginemail: action,\n  loginfb: action,\n  logingoogle: action,\n  editAccount: action,\n  editprofile: action,\n  addartwork: action,\n  getartwork: action,\n  editArtwork: action,\n  getartworkInfo: action,\n  addCategory: action,\n  editCategory: action,\n  getCategories: action,\n  getArtists: action,\n  addToCart: action,\n  getToCart: action,\n  editToCart: action,\n  addStyle: action,\n  addprintsize:action,\n  getprintsize:action,\n  editprintsize:action,\n  getStyles: action,\n  editStyle: action,\n  getsingleartworkinfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  getOrders: action,\n  getOrder: action,\n  followAccount: action,\n  addOrder: action,\n  editOrder: action,\n  getEmergingArtist: action,\n  getArtistFollowArtwork: action,\n  addnotif:action,\n  getnotif:action,\n  editnotif:action,\n  addmylists:action,\n  getmylists:action,\n  deletemylists:action,\n  addfeedback:action,\n  getfeedback:action,\n  addfollow:action,\n  getfollow:action,\n  deletefollow:action,\n  getallartworks:action,\n});\n\nexport default Api;\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, withRouter} from 'react-router-dom';\r\nimport {Provider} from 'mobx-react';\r\n\r\n//pages\r\nimport Landing from './pages/Landing/';\r\nimport Homepage from './pages/Homepage/';\r\nimport SingleArtist from './pages/SingleArtist/';\r\nimport ArtistReg from './pages/ArtistReg/';\r\nimport ArtGalReg from './pages/ArtGalReg/';\r\nimport UserReg from './pages/UserReg/';\r\nimport UploadWork from './pages/UploadWork/';\r\nimport SingleArt from './pages/SingleArt/';\r\nimport Artworks from './pages/Artworks/';\r\nimport Artists from './pages/Artists/';\r\nimport CProfile from './pages/CProfile/';\r\nimport CProfileEdit from './pages/CProfileEdit/';\r\nimport Order from './pages/Order/';\r\nimport RegVerify from './pages/RegVerify/';\r\nimport SubmitArt from './pages/SubmitArt/';\r\n\r\nimport ShopByPrice from './pages/ShopByPrice/';\r\nimport ShopByCategory from './pages/ShopByCategory/';\r\nimport MyLists from './pages/MyLists/'\r\nimport OnSale from './pages/Onsale'\r\n//Admin\r\nimport AdminLogin from './admin/AdminLogin.js';\r\nimport AdminHome from './admin/Admin.js';\r\nimport {ToastContainer} from 'react-toastify';\r\n//PrintPartner\r\nimport PartnerLogin from './printingpartner/PartnerLogin.js';\r\nimport PrintingPartner from './printingpartner/PrintingPartner.js';\r\nimport ArtistHome from './ArtistPage/'\r\n\r\nimport {StartingStore, Api} from './stores';\r\n\r\nconst api = new Api();\r\nconst startingStore = new StartingStore(api);\r\n\r\nconst stores = {\r\n  startingStore,\r\n};\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider {...stores}>\r\n        <ToastContainer\r\n          position='top-right'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Route exact path='/' component={Landing} />\r\n        <Route exact path='/Home' component={Homepage} />\r\n        <Route exact path='/Artist/:name' component={SingleArtist} />\r\n        <Route exact path='/ArtistRegistration' component={ArtistReg} />\r\n        <Route exact path='/UserRegistration' component={UserReg} />\r\n        <Route exact path='/ArtistGalleryRegistration' component={ArtGalReg} />\r\n        <Route exact path='/Upload' component={UploadWork} />\r\n        <Route exact path='/Art/:id/:name' component={SingleArt} />\r\n        <Route exact path='/Artworks' component={Artworks} />\r\n     \r\n        <Route exact path='/Artists' component={Artists} />\r\n        <Route exact path='/CProfile/:id' component={CProfile} />\r\n        <Route exact path='/CProfileEdit/:id' component={CProfileEdit} />\r\n        <Route exact path='/RegVerify' component={RegVerify} />\r\n        <Route exact path='/SubmitArt' component={SubmitArt} />\r\n        <Route exact path='/MyLists' component={MyLists} />\r\n\r\n        <Route exact path='/ShopByPrice' component={ShopByPrice} />\r\n        <Route exact path='/ShopByCategory' component={ShopByCategory} />\r\n        <Route exact path='/OnSale' component={OnSale} />\r\n\r\n        <Route exact path='/Admin' component={AdminLogin} />\r\n        <Route exact path='/AdminHome' component={AdminHome} />\r\n        <Route exact path='/Order' component={Order} />\r\n        <Route exact path='/PartnerLogin' component={PartnerLogin} />\r\n        <Route exact path='/PrintingPartner' component={PrintingPartner} />\r\n\r\n        <Route exact path='/ArtistHome' component={ArtistHome} />\r\n        <ToastContainer />\r\n\r\n        {/* render={function() {\r\n              return <h1>Not Found</h1>;\r\n            }}\r\n          /> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Routes);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport './css/style.css';\r\nimport './css/normalize.css';\r\nimport './css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n\r\n      <Router basename={'/'}>\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n\r\n        \r\n      </Router>\r\n   \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./css/style.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nconst routes = (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} />\r\n      <Redirect from=\"/\" to=\"/\" />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(routes, document.getElementById(\"root\"));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}