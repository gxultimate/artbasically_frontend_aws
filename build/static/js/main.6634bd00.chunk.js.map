{"version":3,"sources":["components/FbLogin.js","components/GoogleLogin/index.js","components/AddYoursLogin/index.js","components/Footer.js","components/Login.js","components/NavLogin.js","components/Search.js","components/OrderIcon.js","components/CNotif.js","components/NavLoginPost.js","components/Navbar.js","pages/Landing/index.js","pages/Homepage/index.js","images/artworks/art1.png","pages/SingleArtist/index.js","components/RegisterFB/index.js","components/RegisterGmail/index.js","pages/ArtistReg/index.js","pages/ArtGalReg/index.js","pages/UserReg/index.js","components/UploadMult.js","pages/UploadWork/index.js","components/Notif.js","components/Cart.js","components/AddToBag.js","components/ViewCart.js","components/ViewRoom.js","components/CartLogin/index.js","pages/SingleArt/index.js","components/ArtworkFilter.js","pages/Artworks/index.js","pages/Artists/index.js","pages/CProfile/index.js","components/OrderDetails.js","components/Feedback/index.js","components/OrderTab.js","pages/CProfileEdit/index.js","pages/Order/index.js","pages/RegVerify/index.js","pages/SubmitArt/index.js","pages/ShopByPrice/index.js","pages/ShopByCategory/index.js","pages/MyLists/index.js","pages/Onsale/index.js","admin/AdminLogin.js","admin/DashCards/index.js","admin/sections/DownloadImage.js","admin/sections/ArtistTable.js","admin/sections/CustomerTable.js","admin/sections/ArtworkTable.js","admin/sections/OrderTable.js","admin/sections/PendingArtistTable.js","admin/sections/PendingArtworkTable.js","admin/sections/PendingOrderTable.js","admin/Dashboard.js","admin/sections/CompletedOrder.js","admin/sections/CancelledOrders/index.js","admin/sections/OrderTab/index.js","admin/OrdersTab.js","admin/sections/AddArtwork.js","admin/sections/ArchivedArtworks/index.js","admin/sections/ArtworkTab/index.js","admin/ArtworkTab.js","admin/sections/DeactivatedAccount/index.js","admin/sections/UsersTab/index.js","admin/sections/AddUser.js","admin/UserTab.js","admin/sections/AddArtist.js","admin/sections/DeactivatedArtist/index.js","admin/sections/ArtistsTab/index.js","admin/ArtistTab.js","admin/sections/AddCat.js","admin/sections/EditCat.js","admin/sections/EditStyle.js","admin/sections/EditPrintSize/index.js","admin/sections/CatTable.js","admin/CategoryTab.js","admin/sections/Notif.js","admin/sections/UserFeedback/index.js","admin/FeedbackTab.js","admin/MessagingTab.js","admin/sections/AccountSettings/index.js","admin/Admin.js","printingpartner/PartnerLogin.js","printingpartner/DashCards/index.js","printingpartner/sections/COrderDeli.js","printingpartner/sections/CPendingOrders.js","printingpartner/sections/OngoingOrders/index.js","printingpartner/Dashboard.js","printingpartner/sections/Printing/index.js","printingpartner/PrintingTab/index.js","printingpartner/OrderDeliverytab.js","printingpartner/sections/CCompletedOrder.js","printingpartner/CompletedOrderTab.js","printingpartner/sections/CCancelOrder.js","printingpartner/CancelOrdertab.js","printingpartner/sections/Notif.js","printingpartner/sections/ViewImage.js","printingpartner/sections/ViewData.js","printingpartner/sections/CHistory.js","printingpartner/sections/AccountSetting/index.js","printingpartner/History.js","printingpartner/MessageTab.js","printingpartner/PrintingPartner.js","ArtistPage/AccountSetting/index.js","ArtistPage/ArtworkManagement/ActiveArtworks/index.js","ArtistPage/ArtworkManagement/ArchivedArtworks/index.js","ArtistPage/ArtworkManagement/PendingArtwork/index.js","ArtistPage/ArtworkManagement/AddArtwork/index.js","ArtistPage/ArtworkManagement/index.js","ArtistPage/Notification/index.js","ArtistPage/DCards/index.js","ArtistPage/Profile/index.js","ArtistPage/Earnings/DownloadImage/index.js","ArtistPage/Earnings/index.js","ArtistPage/Messaging/index.js","ArtistPage/index.js","models/Model.js","models/Account.js","models/Artwork.js","models/Cart.js","models/Categories.js","models/Order.js","models/Style.js","models/User.js","models/PrintSize.js","models/Notif.js","models/MyLists.js","models/Feedback.js","models/UserFollow.js","stores/StartingStore.js","stores/Api.js","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["FbLogin","state","isLoggedIn","userID","name","email","picture","responseFacebook","response","props","startingStore","account","loginFB","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","undefined","setTimeout","message","loading","then","error","setState","data","url","setProperty","res","mydata","JSON","parse","sessionStorage","getItem","accEmailAddress","history","push","success","componentClicked","console","log","fbContent","this","style","width","margin","background","padding","textAlign","marginBottom","src","alt","fontSize","appId","autoLoad","cssClass","fields","onClick","disableMobileRedirect","callback","icon","className","color","Component","withRouter","inject","observer","GmailLogin","googleID","responseGoogle","loginGoogle","profileObj","googleId","givenName","imageUrl","getAccounts","googleContent","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Login","modal1","toggle","nr","modalNumber","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","loginAccount","changeHandler","value","btn","login","isOpen","centered","onSubmit","type","label","required","onChange","password","class","id","for","Footer","href","moment","format","getFollow","NavLogin","Search","modal","suggestions","listOfArtworks","pArtworks","filter","art","artworkStatus","map","artworks","artworkDB","artworkID","title","artName","artist","artistName","img","artworkImg","year","artworkDateCreated","theme","artTheme","languages","row","thme","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","lang","slice","toLocaleLowerCase","split","join","inputProps","placeholder","newValue","filArt","filArtist","searchnow","window","location","reload","md","border","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","height","float","marginRight","paddingBottom","size","OrderIcon","listOfUserCart","CNotif","to","Notifications","listOfNotif","notifCount","ntf","notifRecipient","accID","notifStatus","mynotif","notifInfo","notifMsg","notifDT","far","basic","paddingLeft","fontWeight","Navbar","collapse1","collapseID","toggleCollapse","prevState","toggleSingleCollapse","collapseId","userData","filterArtwork","filterOn","setItem","dark","expand","navbar","display","caret","NavLoginPost","accFname","accLname","clear","pageId","shouldShowDialog","loggedInGreeting","Landing","condition","isToggleOn","handleClick","bind","scrollTo","listOfEmergingArtist","getPrintSize","listOfUsers","ArtistOftheMonth","fil","accessType","acc_Status","usr","AOMid","AOM","pop","sameSite","Secure","cookieSecurity","cookieName","marginTop","pathname","artistid","image","artType","item","fontStyle","reverse","Homepage","getNotif","getToCart","getOrders","getMyLists","logged","followArtist","listofArtistInfo","listofFilteredUserArtworkCategories","listOfArtistFollowed","mylists","addMyLists","listOfMyLists","addFollow","userfollow","listOfFollowing","deleteFollow","addNotif","notif","addtoList","rtwrk","floor","artStyle","artPrice","follow","following","followingID","followerID","input","hash","len","charCodeAt","getHash","MatchRouteUserCategories","floating","rounded","MatchRouteEmergingArtist","MatchRouteArtistFollowed","getFollowing","borderRadius","outline","SingleArtist","checkFollower","follower","content","duration","followStatus","followed","setFollowed","getSingleArtists","getArtistArtwork","match","params","listofArtistArtwork","listofArtistCategories","getFollowers","profile_Img","active","marginLeft","_id","accAddress","birthYear","artistDescription","_","uniqBy","cat","FbReg","getEmail","addAccount","stat","user","textButton","withStyles","root","button","spacing","unit","instructions","facebookIcon","GmailRegister","familyName","ArtistReg","confPassword","handleChange","e","upload","accContact","onFileChange","onFileChangeP","profileImg","selectedFile","formData","FormData","append","files","URL","createObjectURL","formData2","accept","backgroundColor","htmlFor","rows","maxlength","accInstitution","ArtGalReg","textTransform","UserReg","getStyles","getCategories","listOfCategories","listOfStyles","options","showCheckbox","displayValue","onSelect","list","listitem","categorySelected","catType","styleSelected","styleType","confirmPassword","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UploadMult","previewVisible","previewImage","fileList","handleCancel","handlePreview","a","preview","originFileObj","uploadButton","action","listType","onPreview","visible","footer","onCancel","React","UploadWork","artID","artImg","ArtByMe","imageFile","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","catch","artwork","listOfArtists","listOfPrintSize","paddingTop","artThemeSelected","artStyleSelected","artSizeSelected","printSize","artDescription","notify","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warn","OrderTab","selected","selectedCheckBox","totalPrice","partnerPercentage","setStatus","status","selectedValue","index","checked","total","parseFloat","artworkPaymentAmount","selectedArray","indexer","deleteItem","editToCart","addOrder","perctodec","order","totalValue","Notification","selectedCheck","listOfOrder","reduce","indexes","artworkQuantity","accImg","artistImg","accDescription","accFollowers","artworkName","artworkMaterial","artworkSize","artworkFramingOptions","artworkPrice","Number","toLocaleString","disabled","AddToBag","addTocart","cart","addToCart","cartData","date","getFullYear","disable","ViewCart","ViewRoom","modal14","selectedsize","Awidth","Aheight","GoogleLogin","SingleArt","artistInfoList","artistData","artworkInfo","artworkList","isMounted","selectedSize","getSingleArtworkInfo","listOfSingleArtwork","listRelatedWorkByCategory","getmyList","artSize","Asize","changeSize","sizes","option","ArtworkFilter","minValue","maxValue","deleteMyLists","removeToLists","mylistsID","toJS","price","defaultCurrent","defaultPageSize","Artworks","setPrice","amt","arts","parseInt","setCategories","selectedCheckboxes","has","delete","add","newCategories","Array","from","includes","setPrintSize","categories","Set","categoryList","printSizeList","Artists","buffer","binary","call","Uint8Array","forEach","b","String","fromCharCode","btoa","isExpanded","dataSource","CProfile","listofUsers","Step","Steps","OrderDetails","pendingOrders","steps","checkSteps","orderID","progressDot","current","orderItems","currency","feedback","addFeedback","orderInfo","submitFeedback","feedbackNote","activeItem","tab","getOrderUser","listofUserOrder","editOrder","listOfOrders","items","orderStatus","listOfOrderReceived","Received","listOfOrderDelivered","listOfOrderCancelled","Rejected","cancelOrder","myorder","ord","link","role","tabId","CProfileEdit","pass","confPass","editAccount","getSingleEnthusiast","getOrder","AccountInfo","resp","valueDefault","confpassword","removeItem","Order","RegVerify","AdminLogin","DashCards","activeArtists","artEnthu","Orders","CancelledOrders","CompletedOrders","salesYTD","product","amount","paymentStatus","sum","record","totalAmount","sales","useStyles","makeStyles","paper","cont","palette","text","secondary","cont2","cont3","small","menuButton","hide","toolbar","alignItems","justifyContent","mixins","flexGrow","bullet","transform","pos","card","card2","flex","iconButton","search","DCards","classes","Grid","container","sm","xs","Card","CardContent","Typography","variant","DownloadImage","close","users","userDB","fname","address","deactivate","itm","ArtistsTable","columns","field","sort","maxWidth","acc_Documents","striped","bordered","Customer","CustomerTable","PendingArtwork","editArtwork","archive","PendingArtworkTable","no","artCategory","artDimension","dateAdded","direction","CompletedOrder","Corder","Delivery","orders","orderBy","orderDate","orderStat","paymentStat","CompletedOrderTable","hover","Deactivated","lname","approve","DeactivatedTable","PendingTable","getAllArtworks","PendingOrder","orderDB","createData","PendingOrderTable","responsive","DashboardSection","Paper","PendingArtistTable","CancelledOrder","CancelledOrderTable","OrdersTab","AddArtwork","arworks","restore","ArtwrkTab","ArtworkTab","UsrsTab","AddUser","accSuffix","User","AddArtist","ArtistTab","ArtistsTab","AddCat","modal2","addCategory","submitHandlerStyle","addStyle","submitHandlerSize","addPrintSize","printsize","EditCat","editCategory","catID","EditStyle","editStyle","styleID","editPrintSize","sizeID","CategoryTable","EditPrintSize","CategoryTab","CatTable","editNotif","notifNum","notifData","dateNotif","notifID","Notif","UserFeedback","getFeedback","listOfFeedback","filtFeedback","fb","fbID","feedbackID","acID","acc","ordID","note","FeedbackTable","sender","FeedbackTab","AccountSettings","editProfile","SettingGrid","useState","setPass","setConfPass","edit","accData","getMyData","contact","byear","institution","justify","TextField","defaultValue","Admin","default","togglePills","getAllNotif","Dashboard","UserTab","PartnerLogin","partnerEarnings","ForDelivery","done","ForDeliveryTable","PendingPrint","PendingPrintTable","OngoingOrder","OngoingOrderTable","pDashboardSection","CPendingOrders","Printing","PrintingTable","COrderDeli","CCompletedOrder","CCancelOrder","ViewImage","ViewData","dateOfTransaction","CHistory","listOfPrintOrders","PrintOrders","PrintingPartner","PrintingTab","OrderDeliverytab","CompletedOrderTab","CancelOrdertab","MessageTab","minWidth","Artwoks","gutterBottom","component","ArtistProfile","getArtwork","myprofile","pp","contactno","document","description","myFollowers","Earnings","ArtistMessaging","Profile","Model","validate","Joi","constructor","schema","skipFunctions","abortEarly","allowUnknown","property","handleProperties","deepProperty","Error","properties","prop","shift","Object","assign","propertiesClone","keys","isObservableArray","isObservableObject","isBoxedObservable","details","decorate","Account","defaults","accPoints","username","accCategories","accStyles","regType","observable","Artwork","artworkPath","artRating","Cart","Categories","modeOfPayment","Style","firstName","lastName","phone","street","city","postalCode","dateRegistered","string","hex","object","number","iso","PrintSize","notifSender","notifSubject","MyLists","artistID","Feedback","UserFollow","followID","StartingStore","api","welcomeMessage","currentUser","listOfUserDocs","listofUserCategoriesArtwork","listofUserStyleArtwork","addaccount","getaccounts","removeUndefinedProps","us","stringify","doc","editprofile","loginaccount","loginEmail","loginemail","loginfb","logingoogle","addArtwork","addartwork","documents","getartwork","arrayBufferToBase64","getEmergingArtist","getsingleartworkinfo","styles","themes","union","concat","getRelatedWorkByCategory","followAccount","addprintsize","getprintsize","editprintsize","currData","addnotif","getId","getnotif","getallnotif","editnotif","addmylists","getmylists","mytoken","deletemylists","addfeedback","getfeedback","addfollow","follow_ID","deletefollow","getfollow","getallartworks","obj","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName","Api","axios","create","baseURL","post","mode","get","docID","put","getartworkInfo","category","followid","getUsers","stores","Routes","newestOnTop","rtl","pauseOnFocusLoss","exact","path","SubmitArt","ShopByPrice","ShopByCategory","OnSale","AdminHome","ArtistHome","App","basename","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","routes","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6634bd00.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport FacebookLoginBtn from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nclass FbLogin extends Component {\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n   \r\n    let { startingStore: {  account ,loginFB ,getArtists,\r\n      getArtworkInfo,\r\n      getEmergingArtistArtwork,\r\n      getArtistFollowArtwork} } = this.props;\r\n    \r\n   \r\n    if (response.email === undefined || response.email === null ){\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n      }\r\n  else{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n\r\n    account.setProperty('accFname',this.state.name)\r\n    account.setProperty('accEmailAddress',this.state.email)\r\n\r\nif (this.state.isLoggedIn === true){\r\n\r\n    loginFB().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === 1) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/ArtistHome');\r\n      } else if (res === 2) {\r\n         getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Welcome to artBasically', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 3) {\r\n        \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Please wait for your account approval', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      }else if (res === 4) {\r\n       \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Account rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (res === false) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('No facebook account registered', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n    \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n    });\r\n  }else{\r\n    const success = () => {\r\n      message\r\n        .loading('Signing in..', 1.2)\r\n        .then(() => message.error('Please try again', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 500);\r\n  }\r\n  }\r\n    \r\n  };\r\n\r\n  componentClicked = () => console.log('clicked');\r\n\r\n  render() {\r\n    let fbContent;\r\n\r\n    if (this.state.isLoggedIn) {\r\n      fbContent = (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            margin: 'auto',\r\n            background: '#f4f4f4',\r\n            padding: '20px',\r\n           \r\n          }}\r\n        >\r\n         <div style={{textAlign:'center',marginBottom:'8px'}}><img src={this.state.picture} alt={this.state.name} /></div> \r\n         <div style={{textAlign:'center',marginBottom:'8px'}}>\r\n          <h6>Welcome to Art, Basically</h6>\r\n          <p style={{fontSize:'18px'}}>{ this.state.name}</p>\r\n          <p style={{fontSize:'15px'}}>{this.state.email}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      fbContent = (\r\n        <FacebookLoginBtn\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          cssClass=\"LoginFb\"\r\n          fields='name,email,picture'\r\n          onClick={this.componentClicked}\r\n          disableMobileRedirect={true}\r\n          callback={this.responseFacebook}\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (<div>{fbContent}</div>)\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(FbLogin)))","import React, {Component,Fragment} from 'react';\r\nimport GoogleLoginBtn from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\n\r\nimport {\r\n  \r\n  MDBIcon\r\n\r\n} from 'mdbreact';\r\nimport './../../css/style.css';\r\nimport './../../css/normalize.css';\r\nimport './../../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass GmailLogin extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    googleID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseGoogle = (response) => {\r\n console.log(response,'respp')\r\n let { startingStore: {  account ,loginGoogle ,getArtists,\r\n  getArtworkInfo,\r\n  getEmergingArtistArtwork,\r\n  getArtistFollowArtwork} } = this.props;\r\n\r\n    if(response !== undefined || response !== null){\r\n\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        googleID: response.profileObj.googleId,\r\n        name: response.profileObj.givenName,\r\n        email: response.profileObj.email,\r\n        picture: response.profileObj.imageUrl,\r\n      });\r\n     \r\n\r\n     \r\n\r\n\r\n        account.setProperty(\"accEmailAddress\", this.state.email)\r\n        account.setProperty(\"accFname\", this.state.name)\r\n\r\n        if (this.state.isLoggedIn === true){\r\n        loginGoogle().then((res) => {\r\n          let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n          getArtworkInfo();\r\n          getEmergingArtistArtwork();\r\n          getArtists();\r\n   \r\n          if (res === 1) {\r\n          \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/ArtistHome');\r\n          } \r\n          else if (res === 2){\r\n            getArtistFollowArtwork(mydata.accEmailAddress);\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Welcome to artBasically', 1));\r\n            };\r\n    \r\n       \r\n              success();\r\n              setTimeout(() => {\r\n            this.props.history.push('/Home');\r\n          }, 50);\r\n          } \r\n          else if (res === 3){\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.error('Admin is validating your account', 2));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          \r\n          }\r\n          \r\n          else {\r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('No account registered', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 200);\r\n           \r\n            setTimeout(() => {\r\n              this.props.history.push('/');\r\n            }, 1000);\r\n          }\r\n        });\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Please try again', 1));\r\n        };\r\n  \r\n        setTimeout(() => {\r\n          success();\r\n        }, 500);\r\n      }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n\r\n    let googleContent = (\r\n      <GoogleLoginBtn\r\n      clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n      buttonText='Log in with Google'\r\n      onSuccess={this.responseGoogle}\r\n      onFailure={this.responseGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n    \r\n      icon={true}\r\n    />\r\n    );\r\n\r\n\r\n    return (\r\n      <Fragment>\r\n        \r\n   {googleContent}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailLogin)));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../FbLogin';\r\nimport GgLogin from '../../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n    \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\nlet btn = this.props.login;\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        {btn === 'ay'  ? (\r\n <MDBBtn\r\n onClick={this.toggle(1)}\r\n color='#FAE933'\r\n className='btnYellow'\r\n>\r\n Add Yours\r\n</MDBBtn>\r\n        )\r\n        :(  <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='#FAE933'\r\n          className='btnBlack'\r\n         >\r\n          Add your work now\r\n         </MDBBtn>)\r\n        }\r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GgLogin/>\r\n         \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import React, {Component} from 'react';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport moment from 'moment'\r\n class Footer extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className='footer clearfix'>\r\n        <div className='navfoot'>\r\n          <ul>\r\n            <li>Get to Know Us</li>\r\n            <li>\r\n              <a href='#!'>About Us</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Job Opportunities</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Contact Us</a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Make Money with Us</li>\r\n            <li>\r\n              <a href='#!'>Sell on Art, Basically</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Sell as a Gallery</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Sell &nbsp;Your Services on <br /> Art, Basically\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Advertise Your Products</a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                See all <MDBIcon icon='caret-right' className='caret' />{' '}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>Let Us Help You</li>\r\n            <li>\r\n              <a href='#!'>\r\n                Track&nbsp;Your Packages or <br /> View&nbsp;Your Orders\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Delivery Rates & <br /> Policies\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>\r\n                Returns & <br /> Replacements\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#!'>Customer Service</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='copyright'>\r\n          <p>Copyright © {moment().format(\"YYYY\")} Art,Basically Inc. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        \r\n        getFollow,\r\n\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getFollow();\r\n     \r\n      if (res === true) {\r\n      \r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='#FAE933'\r\n          className='btn btnBlack loginbtn'\r\n        >\r\n          Login\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GgLogin />\r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nimport './../css/style.css';\r\nimport './../css/normalize.css';\r\nimport './../css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBBtn onClick={this.toggle(1)} color='#fff' className='navlogin'>\r\n          Hello, Sign In\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <h3>LOGIN</h3>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GgLogin />\r\n        \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import Autosuggest from 'react-autosuggest';\r\n\r\nimport React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBCol,\r\n  MDBIcon,\r\n} from 'mdbreact';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {message} from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nclass Search extends Component {\r\n  componentDidMount(){\r\n    let {startingStore:{getArtworkInfo}}=this.props;\r\n    getArtworkInfo()\r\n  }\r\n  state = {\r\n    modal: false,\r\n  \r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  \r\n  constructor() {\r\n    super();\r\n  \r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n    \r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  render() {\r\n\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n\r\n        \r\n    function createData(artworkDB,id,title,artist, img,year,theme) {\r\n      return { artworkDB,id,title,artist, img,year,theme };\r\n    }\r\n\r\n    let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Approved').map(artworks =>{\r\n      return(createData(\r\n     artworks,artworks.artworkID,artworks.artName\r\n     ,artworks.artistName,artworks.artworkImg,artworks.artworkDateCreated,artworks.artTheme\r\n      ))\r\n    })\r\n\r\n  let  languages =  \r\n  [...pArtworks.map((row,i) => {\r\n \r\n    return(\r\n\r\n   {\r\n      name: `${row.title}`,\r\n      year: `${row.year}`,\r\n      img: `${row.img}`,\r\n      artist: `${row.artist}`,\r\n      theme:`${row.theme.map(thme => thme)}`,\r\n\r\n    \r\n\r\n   }\r\n   \r\n   ) })\r\n  ]\r\n    \r\n    // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  let getSuggestions = value => {\r\n      const inputValue = value.trim().toLowerCase();\r\n    \r\n      const inputLength = inputValue.length;\r\n    \r\n      return inputLength === 0 ? [] : languages.filter(lang =>\r\n\r\n        lang.name.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.artist.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.year.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.theme.toLowerCase().slice(0, inputLength) === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(' ').slice(-1).join(' ') === inputValue ||\r\n        lang.name.toLocaleLowerCase().split(/\\s+/).slice(1,2).join(' ') === inputValue \r\n      \r\n      );\r\n    };\r\n    \r\n    // When suggestion is clicked, Autosuggest needs to populate the input\r\n    // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n    // input value for every given suggestion.\r\n  let   getSuggestionValue = suggestion => suggestion.name;\r\n    \r\n    // Use your imagination to render suggestions.\r\n  let renderSuggestion = suggestion => (\r\n      <div>\r\n       <img src={suggestion.img} style={{width:'50px',height:'50px',float:'left',marginRight:'8px',paddingBottom:'6px'}} />\r\n    {suggestion.name}<p style={{fontSize:'10px'}}> by {suggestion.artist}</p>\r\n     \r\n      </div>\r\n    );\r\n  \r\n  \r\n  let  onChange = (event, { newValue }) => {\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n  \r\n  let  onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n\r\n\r\n    const { value, suggestions } = this.state;\r\n\r\n    // Autosuggest will pass through all these props to the input.\r\n    const inputProps = {\r\n      placeholder: 'Search artworks',\r\n      value,\r\n      onChange: onChange\r\n    };\r\n    \r\n \r\n\r\n\r\n    \r\nlet filArt = listOfArtworks.filter(art => art.artName === this.state.value).map(art => art)\r\nlet filArtist = listOfArtworks.filter(art => art.artistName === this.state.value).map(art => art)\r\n  \r\n    let searchnow =()=>{\r\n     \r\n   if(filArt[0] !== undefined && filArtist[0] === undefined){\r\n  \r\n      this.props.history.push(`/Art/${filArt[0].artworkID}/${filArt[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else if (filArtist[0] !== undefined && filArt[0] === undefined) { \r\n      this.props.history.push(`/Artist/${filArtist[0].artistName}`);\r\n      window.location.reload(false);\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1)\r\n          .then(() => message.error('Artwork or Artist not found', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='search'>\r\n        <MDBIcon icon='search' onClick={this.toggle} style={{color:'white'}}/>\r\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <MDBModalBody md='4' color='red'>\r\n            <MDBCol md='12'>\r\n              {/* <input\r\n                className='form-control'\r\n                type='text'\r\n                placeholder='Search'\r\n                aria-label='Search'\r\n                onChange={(e)=>{searchInput(e.target.value)}}\r\n              /> */}\r\n\r\n<Autosuggest\r\n style={{width:'80%',border:'1px solid red'}}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n            </MDBCol>\r\n            <MDBBtn size='md' color='dark' onClick={()=>{searchnow()}}>Search</MDBBtn>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Search)))\r\n","\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport React, { Component } from 'react'\r\nimport {inject,observer} from 'mobx-react'\r\nclass OrderIcon extends Component {\r\n    render() {\r\nlet {startingStore:{listOfUserCart}}=this.props;\r\n\r\n\r\n\r\n\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n           <Link\r\n                  \r\n                  to='/Order'\r\n                > \r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon   className=\"mr-3 i ibag h5\" />\r\n     \r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{listOfUserCart.length}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      </Link>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n   <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(OrderIcon))","import { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n let {startingStore:{listOfNotif}}=this.props;\r\n let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nlet notifCount = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').length\r\nlet mynotif = listOfNotif.filter(ntf =>ntf.notifRecipient === mydata.accID && ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n  return(\r\n    <Fragment key={i}>\r\n\r\n        <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n          <span className=\"time\">{notifInfo.notifDT}</span>\r\n        </MDBDropdownItem>\r\n \r\n    </Fragment>\r\n  )\r\n})\r\nconst CNotif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons cicon\">\r\n      <MDBDropdownToggle color=\"transparent\" className=\"btnpadd\">\r\n        <MDBIcon far icon=\"bell\" className=\"mr-3 i\" />\r\n  <MDBBadge color=\"danger\" className=\"ml-2 bell\">{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n    {mynotif}\r\n    \r\n    </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CNotif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn,MDBNavLink} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GgLogin from '../components/GoogleLogin/';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n     \r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (typeof res === 'string') {\r\n        getArtistFollowArtwork(mydata.accEmailAddress);\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(`/CProfile/${res}`);\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBNavLink onClick={this.toggle(1)} to='' className='inlinelink rborder btnYellow navbtn' style={{fontWeight:'bold'}}>\r\n        Post, Basically\r\n        </MDBNavLink>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n         <GgLogin/>\r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n","import {\r\n  MDBCollapse,\r\n  MDBDropdown, MDBDropdownItem,\r\n  MDBDropdownMenu, MDBDropdownToggle,\r\n  MDBHamburgerToggler, MDBNavbar,\r\n  MDBNavbarBrand, MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBBtn\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavLogin from './NavLogin';\r\nimport Search from './Search';\r\nimport OrderIcon from './OrderIcon';\r\nimport CNotif from './CNotif';\r\nimport NavLoginPost from './NavLoginPost';\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: { filterArtwork},\r\n    } = this.props;\r\n\r\n    let filterOn = (type) => {\r\n      sessionStorage.setItem('type', type);\r\n      filterArtwork(type);\r\n    };\r\n    return (\r\n      <Fragment>\r\n     \r\n      <MDBNavbar dark expand='md' className='navcon'>\r\n        {userData !== null && userData !== undefined ? (\r\n         <MDBNavbarBrand>\r\n         <a href='/Home'>\r\n           <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='' />\r\n         </a>\r\n       </MDBNavbarBrand>\r\n            ) : (\r\n              <MDBNavbarBrand>\r\n              <a href='/'>\r\n                <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009259/Webimg/logo_itryl9.png' className='logo' alt='' />\r\n              </a>\r\n            </MDBNavbarBrand>\r\n              )}\r\n\r\n        <MDBHamburgerToggler\r\n          color='#FAE933'\r\n          id='hamburger1'\r\n          onClick={() => this.toggleSingleCollapse('collapse1')}\r\n        />\r\n        <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n          <MDBNavbarNav className='nav-ul'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder '\r\n                to='/OnSale'\r\n                onClick={() => {\r\n                  filterOn('onSale');\r\n                }}\r\n              >\r\n                SALE\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('latest');\r\n                }}\r\n              >\r\n                Latest\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            {userData !== null && userData !== undefined ? (\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('foryou');\r\n                  }}\r\n                >\r\n                  For&nbsp;You\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n            ) : (\r\n                <MDBNavItem style={{ display: 'none' }}></MDBNavItem>\r\n              )}\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('discover');\r\n                }}\r\n              >\r\n                Discover\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBDropdown className='ddnav'>\r\n              <MDBDropdownToggle caret color='transparent'>\r\n                Shop By\r\n              </MDBDropdownToggle>\r\n              <MDBDropdownMenu basic className='ddnavMenu'>\r\n                <MDBDropdownItem href='/ShopByPrice'>Price</MDBDropdownItem>\r\n                <MDBDropdownItem href='/ShopByCategory'>Category</MDBDropdownItem>\r\n              </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n       \r\n            <MDBNavItem>\r\n    \r\n            \r\n                {userData !== null && userData !== undefined ? (<MDBNavLink\r\n          className='inlinelink rborder btnYellow navbtn'\r\n          to='/Upload'\r\n        >\r\n          Post, Basically\r\n        </MDBNavLink>)\r\n        : (<NavLoginPost />)}\r\n\r\n            </MDBNavItem> \r\n            \r\n              <MDBNavItem>\r\n                <MDBBtn color='dark' style={{color:'white'}}>\r\n            \r\n                  <Search />\r\n                 \r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n              <MDBDropdown className='ddnav'>\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownToggle color='transparent'>\r\n                    Hello, {userData.accFname}\r\n                  </MDBDropdownToggle>\r\n                ) : (\r\n                    <NavLogin />\r\n                  )}\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownMenu basic className='ddnavMenu'>\r\n                    <MDBDropdownItem>\r\n                      <Link\r\n                        to={`/CProfileEdit/${userData.accFname} ${userData.accLname}`}\r\n                      >\r\n                        {' '}\r\n                      Account\r\n                    </Link>\r\n                    </MDBDropdownItem>\r\n             \r\n                    <MDBDropdownItem\r\n                      onClick={() => logout()\r\n                      }\r\n                      style={{paddingLeft:'25px',color:'#000000'}}\r\n                    >\r\n                Log Out\r\n                    </MDBDropdownItem>\r\n                  </MDBDropdownMenu>\r\n                ) : (\r\n                    <MDBDropdownMenu basic className='ddnavMenu'>\r\n            \r\n                    </MDBDropdownMenu>\r\n                  )}\r\n              </MDBDropdown>\r\n              {userData !== null && userData !== undefined ? (\r\n                <div className='row lbtn'>\r\n                  <MDBNavItem>\r\n                  \r\n\r\n                  <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('yourlists');\r\n                  }}\r\n                >\r\n                  Your Lists\r\n                </MDBNavLink>\r\n\r\n                  </MDBNavItem>\r\n                \r\n                  <MDBNavItem>\r\n                    <CNotif />\r\n                  </MDBNavItem>\r\n                  <MDBNavItem >\r\n           \r\n                    \r\n                     <OrderIcon/>\r\n                  \r\n                \r\n       \r\n                  </MDBNavItem>\r\n                </div>\r\n              ) : (\r\n                  <MDBNavItem style={{ display: 'none' }}>\r\n                \r\n                  </MDBNavItem>\r\n                )}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n      <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n    shouldShowDialog=\"true\"\r\n    loggedInGreeting=\"Hi! How can we help you?\"\r\n\r\n    \r\n  />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Navbar));\r\n","import { BackTop,Skeleton } from 'antd';\r\nimport { MDBIcon, MDBNavLink } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport CookieConsent from \"react-cookie-consent\";\r\nimport { Link } from 'react-router-dom';\r\nimport AYLogin from '../../components/AddYoursLogin/index.js';\r\nimport Footer from '../../components/Footer';\r\nimport Login from '../../components/Login';\r\nimport Navbar from '../../components/Navbar';\r\nimport {withRouter} from 'react-router-dom'\r\n class Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {\r\n     \r\n        listOfEmergingArtist,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getPrintSize,\r\n        getAccounts,\r\n        getArtists,\r\n        \r\n        \r\n\r\n      },\r\n    } = this.props;\r\n   \r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getPrintSize()\r\n      getAccounts()\r\n      getArtists(); \r\n  }\r\n\r\n  render() {\r\n \r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: {listOfArtworks,listOfUsers},\r\n    } = this.props;\r\n\r\n\r\n\r\n    let ArtistOftheMonth = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accFname} ${usr.accLname}`)})\r\n\r\n\r\n\r\n    let AOMid = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accID}`)})\r\n  \r\n    \r\n   \r\n    let AOM = ArtistOftheMonth.pop()\r\n    return (\r\n      <Fragment>\r\n        <CookieConsent\r\n        sameSite=\"none\" \r\n        Secure='true'\r\n        cookieSecurity={true}\r\n        location=\"bottom\"\r\n        buttonText=\"Allow cookies\"\r\n        cookieName=\"ABasicallyCookies\"\r\n        cookieName=\"G_ENABLED_IDPS\"\r\n        cookieName=\"G_AUTHUSER_H\"\r\n        cookieName=\"SEARCH_SAMESITE\"\r\n        cookieValue='true'\r\n      style={{ background: \"#2B373B\" }}\r\n      buttonStyle={{ color: \"#4e503b\", fontSize: \"13px\" }}\r\n      expires={999}\r\n        >\r\n          <h6 style={{color:'white'}}>Cookies on Art, Basically</h6>\r\n          <p style={{color:'white'}}>We use cookies to personalize contents, to provide social media features and to ensure that we give you the best experience on our website. We also share information about your use of our site with our social media partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services.</p>\r\n        </CookieConsent>\r\n\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='welcome'>\r\n            <h2>Welcome to Art, Basically</h2>\r\n            <p style={{marginTop:'-10px'}}>Create an account with us and start sharing your artworks!</p>\r\n            <h2 className='paddh4'>But first, are you</h2>\r\n            <div className='signinOpt'>\r\n            \r\n              <MDBNavLink to='/ArtistRegistration' className='btnYellow'>\r\n                Artist\r\n              </MDBNavLink>\r\n              <MDBNavLink to='ArtistGalleryRegistration' className='btnYellow'>\r\n                Art Enthusiast\r\n              </MDBNavLink>\r\n            </div>\r\n            <p className='inlinep'>\r\n              What would best fit your description?{' '}\r\n              <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n            </p>\r\n            <div className='signinOpt block'>\r\n              <p className='inlinep paddh4'>Already have an account?</p>\r\n              <Login />\r\n            </div>\r\n          </div>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n            <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${AOM}`,\r\n                          state: {artistName:AOM ,artistid:AOMid\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n                        \r\n                         \r\n                        { (listOfArtworks.length == 0 ) ? (<p></p>):(  <h2>{AOM}      </h2>)}\r\n               \r\n\r\n        \r\n                     \r\n                    </a>\r\n\r\n             \r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks.filter(fil => fil.accID === AOMid.pop()).slice(0,3).map((image,i) => {\r\n                   \r\n                  return (\r\n                    \r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname:  `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n          \r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n         \r\n            <ul className='col3img clearfix'>\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')         \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  return (\r\n\r\n                   (image !== null || image !== undefined)?(\r\n                      <Skeleton/>\r\n                   ):(\r\n                      <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                 \r\n                  </div>\r\n                    </li>\r\n                   )\r\n                   \r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest' id='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  \r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                             <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      </a>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n         \r\n                            \r\n                         <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                        \r\n                     \r\n                   \r\n                 \r\n                  </div>\r\n                      \r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            \r\n\r\n            {userData !== null && userData !== undefined ? (\r\n            <MDBNavLink to='/Upload' className='btnBlack'>\r\n            Add your work now\r\n          </MDBNavLink>)\r\n        : (<AYLogin login={'aywn'} />)}\r\n            <a href='/' className='learnmore' style={{color:'black'}}>\r\n              Learn More <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                             <img src={image.artworkImg} alt='artwork'/>\r\n                        \r\n                        </Link>\r\n                      </a>\r\n                     \r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                 \r\n                  </div>\r\n                      \r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='bttop'>\r\n         \r\n\r\n            {userData !== null && userData !== undefined ? (<MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>)\r\n        : (<AYLogin login={'ay'}/>)}\r\n            <BackTop style={{margin:'auto'}}>\r\n              {'     '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Landing)))\r\n","import {BackTop} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNotification,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nimport {message} from 'antd';\r\nimport moment from 'moment';\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/')\r\n    // }\r\n\r\n    let {\r\n      startingStore: {\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        listOfEmergingArtist,\r\n        getPrintSize,\r\n        getNotif,\r\n        getToCart,getOrders,\r\n        getMyLists,\r\n        getAccounts,\r\n        getFollow,\r\n      },\r\n    } = this.props;\r\n    if (listOfEmergingArtist) {\r\n      getArtistFollowArtwork();\r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getPrintSize()\r\n      getNotif()\r\n      getToCart()\r\n      getOrders()\r\n      getMyLists()\r\n      getAccounts()\r\n      getFollow()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n       let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listOfArtworks,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        mylists,\r\n        addMyLists,\r\n        listOfMyLists,\r\n        listOfUsers,\r\n        addFollow,\r\n        userfollow,\r\n        listOfFollowing,\r\n        deleteFollow,\r\n        addNotif,\r\n        notif,\r\n        \r\n      },\r\n    } = this.props;\r\n\r\n    \r\n\r\n    let ArtistOftheMonth = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accFname} ${usr.accLname}`)})\r\n    let AOMid = listOfUsers.filter(fil => fil.accessType === 'Artist' && fil.acc_Status === 'Active').map(usr =>  {return (`${usr.accID}`)})\r\n    \r\n\r\n\r\n   \r\n  \r\n let addtoList=(rtwrk)=>{\r\n\r\n  let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n\r\nif (getmyList === 0){\r\n   \r\n   mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n   mylists.setProperty('accID',logged.accID)\r\n   mylists.setProperty('artworkID',rtwrk.artworkID)\r\n \r\n   mylists.setProperty('artName',rtwrk.artName)\r\n   mylists.setProperty('artTheme',rtwrk.artTheme)\r\n   mylists.setProperty('artStyle',rtwrk.artStyle)\r\n   mylists.setProperty('artPrice',rtwrk.artPrice)\r\n   mylists.setProperty('artistID',rtwrk.accID)\r\n   mylists.setProperty('artistName',rtwrk.artistName)\r\n   mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n   mylists.setProperty('artType',rtwrk.artType)\r\n   mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n   \r\n   addMyLists()\r\n\r\n   const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork added to your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n}else{\r\n  const success = () => {\r\n    message\r\n      .loading('', 0.5)\r\n      .then(() => message.success('Artwork already on your list', 3));\r\n  };\r\n  setTimeout(() =>{\r\n    success()\r\n  },500)\r\n \r\n}\r\n }\r\n\r\n function getHash(input){\r\n  var hash = 0, len = input.length;\r\n  for (var i = 0; i < len; i++) {\r\n    hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n    hash |= 0; // to 32bit integer\r\n  }\r\n\r\n        \r\n  return hash;\r\n}\r\n\r\n let follow =(following)=>{\r\n  let getFollowing = listOfFollowing.filter(data =>  data.followingID === AOMid && data.followerID === logged.accID)\r\n   if (getFollowing.length === 0){\r\n    userfollow.setProperty('followID', `${Math.floor(1000 + Math.random() * 9000)}`)\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    addFollow()\r\n  \r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: false,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n\r\n\r\n\r\n\r\n    notif.setProperty('notifID',`${getHash(logged.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',logged.accID)\r\n    notif.setProperty('notifRecipient',following)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${logged.accFname } started following you`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif()\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Following', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },500)\r\n\r\n   }else{\r\n    userfollow.setProperty('followerID',logged.accID)\r\n    userfollow.setProperty('followingID',following)\r\n    deleteFollow();\r\n    const success = () => {\r\n      message\r\n        .loading('', 0.5)\r\n        .then(() => message.success('Unfollow', 3));\r\n    };\r\n    setTimeout(() =>{\r\n      success()\r\n    },50)\r\n   }\r\n   setTimeout(()=>{\r\n    window.location.reload(false);\r\n  },1500)\r\n\r\n   this.setState(function (prevState) {\r\n    return {\r\n      isToggleOn: true,\r\n      condition: !this.state.condition,\r\n    };\r\n  });\r\n \r\n\r\n }\r\n\r\n\r\n    function MatchRoute() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n        {listOfArtworks\r\n          .filter((item) => item.artistName === 'Cleon Peterson')\r\n          .reverse()\r\n          .slice(0, 3)\r\n          .map((image,i) => {\r\n         \r\n          \r\n            return (\r\n              <li key={i}>\r\n                <a href='#!' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                    <span className='type'>\r\n                      {image.artType === 'Secondary'\r\n                        ? 'Second Edition'\r\n                        : 'Original'}\r\n                    </span>\r\n                  </div>\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                    }}\r\n                  >\r\n                    <img src={image.artworkImg} alt='artwork'/>\r\n                   \r\n                  \r\n                  </Link>\r\n                </a>\r\n               \r\n                <div className='artistinfo clearfix pad10'>\r\n           \r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        console.log(image.artistName,'aa')\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n                    \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteUserCategories() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {/*  */}\r\n          {listofFilteredUserArtworkCategories\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteEmergingArtist() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfEmergingArtist\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                        <img src={image.artworkImg} alt='artwork'/>\r\n                    </Link>\r\n                  </a>\r\n                  <div className='artistinfo clearfix pad10'>\r\n                  <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteArtistFollowed() {\r\n\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfArtistFollowed !== undefined\r\n            ? listOfArtistFollowed\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <a href='#!' className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })\r\n            : ''}\r\n        </ul>\r\n      );\r\n    }\r\n    let getFollowing = listOfFollowing.filter(data =>  data.followingID === AOMid && data.followerID === logged.accID)\r\n\r\n    let AOM = ArtistOftheMonth.pop()\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n              <h2>\r\n              <a\r\n                      href=''\r\n                     style={{marginRight:'8px'}}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${AOM}`,\r\n                          state: {artistName:AOM\r\n             \r\n                          }\r\n                        });\r\n                      }}\r\n                    >\r\n               { (listOfArtworks.length == 0 ) ? (<p></p>):(  <h2 className='artistname'>{AOM}      </h2>)}\r\n                     \r\n                    </a>\r\n                    { (listOfArtworks.length == 0 ) ? (<p></p>):( \r\n                    <MDBBtn\r\n               color='primary'\r\n                  style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px'}}\r\n                outline\r\n                  floating\r\n                 \r\n                  title={getFollowing === '0' ? 'Follow' : 'Unfollow'}\r\n                  onClick={() =>\r\n                    // this.handleClick(followArtist(AOMid.pop()))\r\n                    follow(AOMid.pop())\r\n                  }\r\n                >\r\n               \r\n                  {getFollowing.length === 0 ? (\r\n                   <div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n                  ) : (\r\n                    'Following'\r\n                  )}\r\n                </MDBBtn> )}\r\n               \r\n                \r\n              </h2>\r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter(fil => fil.accID === AOMid.pop())\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                \r\n                .slice(0, 3)\r\n                .map((image,i) => {\r\n                   \r\n                  return (\r\n                    <li key={i}>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                    \r\n\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n\r\n\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/*  */}\r\n              {listOfArtworks\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                            <img src={image.artworkImg} alt='artwork'/>\r\n                        </Link>\r\n                      </a>\r\n                      <div className='artistinfo clearfix pad10'>\r\n                      <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            <MDBNavLink to='#!' className='btnBlack'>\r\n              Add your work now\r\n            </MDBNavLink>\r\n          \r\n            <a href='#1' className='learnmore' >\r\n             <span style={{color:'black'}}>Learn More</span>  <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='latest'>\r\n            <h3>Recommended for You</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'foryou')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteEmergingArtist />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Artists You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'artistyoufollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteArtistFollowed />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Categories You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'categoriesfollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <div className='bttop'>\r\n            <MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!' style={{color:'black'}}>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <MDBContainer className='notif'>\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            icon=\"envelope\"\r\n            title=\"Message\"\r\n            message=\"Jane: See? Just like this.\"\r\n            text=\"just now\"\r\n          /> */}\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='Recieved an order from Jane Doe'\r\n            text='Just now'\r\n          />\r\n          <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='New art submission'\r\n            text='2 seconds ago'\r\n          /> */}\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Homepage));\r\n","export default __webpack_public_path__ + \"static/media/art1.87a26908.png\";","import React, { Component } from 'react';\r\nimport { MDBNavLink, MDBIcon, MDBBtn } from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport art from '../../images/artworks/art1.png';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Skeleton, message } from 'antd';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nclass SingleArtist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcondition: false,\r\n\t\t\tisToggleOn: true,\r\n\t\t\tfollowStatus: false\r\n\t\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n    let {\r\n\t\t\tstartingStore: {  followed,setFollowed }\r\n    } = this.props;\r\n    setFollowed()\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.scrollTo(0,0)\r\n\t\tlet { startingStore: { getFollow,getSingleArtists, getArtistArtwork, getArtists, getArtworkInfo }} = this.props;\r\n\t\r\n\t\tgetSingleArtists(this.props.match.params.name);\r\n\t\tgetArtistArtwork(this.props.match.params.name);\r\n\t\tgetArtworkInfo();\r\n\t\tgetArtists();\r\n\t\tgetFollow();\r\n\t}\r\n\r\n\tcheckFollower = (follower) => {\r\n\t\tif (follower !== undefined && follower[0] !== '') {\r\n\t\t\treturn follower.length;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\r\n\tfollowArtist = () => {\r\n\t\tmessage.loading({ content: 'Loading...' });\r\n\t\tsetTimeout(() => {\r\n\t\t\tmessage.success({ content: 'Loaded!', duration: 2 });\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\t\tlet {\r\n\t\t\tstartingStore: { listOfFollowing,listofArtistInfo, listofArtistArtwork, listofArtistCategories, followArtist, followed }\r\n\t\t} = this.props;\r\n\r\n\t\tlet getFollowers = listOfFollowing.filter(data => data.followingID === this.props.artistid).length\r\n\t\treturn (\r\n\t\t\t<div className=\"home\">\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"maincon con\">\r\n\t\t\t\t\t<div className=\"artist\">\r\n\t\t\t\t\t\t<div className=\"artistprofile clearfix\">\r\n\t\t\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t\t\t<div className=\"artistpp\" >\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<img src={listofArtistInfo.profile_Img} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"artistInfo\">\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo.accFname !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"title\">\r\n\t\t\t\t\t\t\t\t\t\t\t{`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n\t\t\t\t\t\t\t\t\t\t\t{userData === null || userData === undefined ?(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t   style={{borderRadius:'5px',width:'50px',height:'25px',fontSize:'8px',margin:0,padding:'2px',marginLeft:'16px'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t outline\r\n\t\t\t\t\t\t\t\t\t\t   floating\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t   title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n\t\t\t\t\t\t\t\t\t\t\t   onClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t this.handleClick(followArtist(listofArtistInfo._id))\r\n\t\t\t\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t\t   {this.state.isToggleOn ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div > <MDBIcon icon='plus'  style={{float:'left',fontSize:'9px',color:'#4285F4',marginTop:'2px'}}/><p style={{fontSize:'9px',color:'#4285F4'}}>Follow</p></div>\r\n\t\t\t\t\t\t\t\t\t\t\t   ) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t 'Following'\r\n\t\t\t\t\t\t\t\t\t\t\t\t   )}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"bday\">\r\n\t\t\t\t\t\t\t\t\t\t\t{listofArtistInfo.accAddress}, born {listofArtistInfo.birthYear}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<span className=\"estart\">Established Artist</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t{getFollowers === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\tgetFollowers\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>Followers</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t\t\t\t\t4.8/5\r\n\t\t\t\t\t\t\t\t\t\t<span>528k Ratings</span>\r\n\t\t\t\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"artistbio clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Biography</h4>\r\n\t\t\t\t\t\t\t{listofArtistInfo !== undefined ? (\r\n\t\t\t\t\t\t\t\t<p>{listofArtistInfo.artistDescription}</p>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"relatedcat clearfix\">\r\n\t\t\t\t\t\t\t<h4 className=\"paddh4\">Related Categories</h4>\r\n\t\t\t\t\t\t\t<div className=\"catlist\" style={{color:'black'}}>\r\n\t\t\t\t\t\t\t\t{listofArtistCategories[0] !== [] || listofArtistCategories[0] !== undefined ? (\r\n\t\t\t\t\t\t\t\t\t_.uniqBy(listofArtistCategories).map((cat) => (\r\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">{cat}</MDBNavLink>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#!\">No Categories</MDBNavLink>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<section className=\"bestsellers\">\r\n\t\t\t\t\t\t<h3>Best Sellers of {this.props.location.state.artistName}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Latest Work by {this.props.location.state.artistName}</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t{listofArtistArtwork !== undefined ? (\r\n\t\t\t\t\t\t\t\tlistofArtistArtwork.slice(0, 3).map((art) => (\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpathname: `/Art/${art.artworkID}/${art.artistName}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t <img src={art.artworkImg} alt='artwork'/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{art.artName}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Skeleton active />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"latestwork\">\r\n\t\t\t\t\t\t<h3>Related Artist</h3>\r\n\t\t\t\t\t\t<a href=\"#!\" className=\"seemore\">\r\n\t\t\t\t\t\t\tSee More &nbsp;\r\n\t\t\t\t\t\t\t<MDBIcon icon=\"caret-right\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<ul className=\"col3img clearfix\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"artlabel\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"new\">NEW</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hot\">HOT</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Rene Gagnon</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#1\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Eelus</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a href=\"#!\" className=\"artlink\">\r\n\t\t\t\t\t\t\t\t\t<img src={art} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<div className=\"artistinfo\">\r\n\t\t\t\t\t\t\t\t\t<p>Banksy</p>\r\n\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"ifollow\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"transparent\"\r\n\t\t\t\t\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => followArtist(listofArtistInfo._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MDBIcon icon=\"plus\" />\r\n\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArtist)))\r\n","import React, {Component} from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nimport {withRouter} from 'react-router-dom'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"90%\"\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit\r\n  },\r\n  facebookIcon: {\r\n    color: \"pink\"\r\n  }\r\n});\r\n\r\nclass FbReg extends Component {\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props;\r\n        getAccounts();\r\n      }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n  responseFacebook = (response) => {\r\n    let {startingStore:{listOfUsers}}=this.props;\r\n\r\n    let getEmail = listOfUsers.filter(usr=> usr.accEmailAddress === response.email).length;\r\n\r\n    if (response.email === undefined || response.email === null){\r\n    console.log('error')\r\n    }\r\n    else if (getEmail !== 0){\r\n      const success = () => {\r\n        message\r\n          .loading('Validating..', 1.2)\r\n          .then(() => message.success('Account already registered', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 200);\r\n      this.props.history.push('/');\r\n    \r\n    }\r\nelse{\r\n    this.setState({\r\n      isLoggedIn: true,\r\n      userID: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n    });\r\n  \r\n\r\n    if(response !== undefined || response != null){\r\n        console.log(response);\r\n        console.log(response.profileObj,);\r\n  \r\n        let { startingStore: { addAccount, account ,loginFB ,getArtists,\r\n          getArtworkInfo,\r\n          getEmergingArtistArtwork,\r\n          getArtistFollowArtwork,listOfUsers} } = this.props;\r\n  \r\n      let checkuser = listOfUsers.map(usr =>{\r\n        return usr.accEmailAddress\r\n      })\r\n  let fil = checkuser.filter(usr => usr === response.email).length\r\n  \r\n\r\n  if (fil === 0 || fil === null){\r\n    let stat ='';\r\n    if (this.props.user === 'Standard'){\r\n      stat = 'Active'\r\n\r\n    }else{\r\n      stat = 'Pending'\r\n    }\r\n        account.setProperty('accessType', this.props.user);\r\n        account.setProperty('acc_Status', stat);\r\n  \r\n        account.setProperty(\"accEmailAddress\", response.email)\r\n        account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n        account.setProperty(\"accFname\", response.name)\r\n        account.setProperty(\"profile_Img\", response.picture.data.url)\r\n        account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n        account.setProperty('regType','FBAccount')\r\n        addAccount().then(res => {\r\n          if(res === true){\r\n             \r\n            loginFB().then((res) => {\r\n              let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n              getArtworkInfo();\r\n              getEmergingArtistArtwork();\r\n              getArtists();\r\n              getArtistFollowArtwork(mydata.accEmailAddress);\r\n            if (res === 2) {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.success('Welcome to artBasically', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/Home');\r\n              }  else {\r\n                const success = () => {\r\n                  message\r\n                    .loading('Validating..', 1.2)\r\n                    .then(() => message.error('Registration Unsuccessful', 1));\r\n                };\r\n        \r\n                setTimeout(() => {\r\n                  success();\r\n                }, 200);\r\n                this.props.history.push('/');\r\n              }\r\n            });\r\n  \r\n            \r\n      \r\n  \r\n          }\r\n        })\r\n      }else if(fil === 1){\r\n  \r\n            const success = () => {\r\n              message\r\n                .loading('Validating..', 1.2)\r\n                .then(() => message.error('Email already taken!', 1));\r\n            };\r\n    \r\n            setTimeout(() => {\r\n              success();\r\n            }, 1000);\r\n            this.props.history.push('/');\r\n          \r\n        \r\n      }\r\n  \r\n      }\r\n      else{\r\n        console.log('error')\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n\r\n    \r\n\r\n   \r\n     \r\n   let fbContent = (\r\n        <FacebookLogin\r\n          appId='216207193165878'\r\n          autoLoad={false}\r\n          fields='name,email,picture'\r\n          cssClass=\"FacebookReg\"\r\n          disableMobileRedirect={true}\r\n        \r\n          callback={this.responseFacebook}\r\n          textButton=\"Sign up with Facebook\"\r\n          icon={<FacebookIcon className='fbicon' style={{color:'white'}}/>}\r\n        />\r\n      );\r\n    \r\n\r\n    return (<div >{fbContent}</div>)\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(withStyles(styles)(FbReg))))","import React, {Component} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass GmailRegister extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  state = {\r\n    isLoggedIn: false,\r\n    userID: '',\r\n    name: '',\r\n    email: '',\r\n    picture: '',\r\n  };\r\n\r\n\r\n  responseGoogle = (response) => {\r\n \r\n\r\n    if(response !== undefined || response != null){\r\n   \r\n      let { startingStore: { addAccount, account ,loginGoogle,listOfUsers} } = this.props;\r\n\r\n    let checkuser = listOfUsers.map(usr =>{\r\n      return usr.accEmailAddress\r\n    })\r\nlet fil = checkuser.filter(usr => usr === response.profileObj.email).length\r\n\r\n\r\nif (fil === 0 || fil === null){\r\n      account.setProperty('accessType', this.props.user);\r\n      if (this.props.user === 'Artist'){\r\n      account.setProperty('acc_Status', 'Pending');\r\n      }else{\r\n        account.setProperty('acc_Status', 'Active');\r\n      }\r\n      account.setProperty(\"profile_Img\", response.profileObj.imageUrl)\r\n      account.setProperty(\"accEmailAddress\", response.profileObj.email)\r\n      account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n      account.setProperty(\"accFname\", response.profileObj.givenName)\r\n      account.setProperty(\"accLname\", response.profileObj.familyName)\r\n      account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n      account.setProperty('regType','GmailAccount')\r\n      addAccount().then(res => {\r\n        \r\n        if(res === true){\r\n           \r\n          loginGoogle().then((res) => {\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n            // getArtworkInfo();\r\n            // getEmergingArtistArtwork();\r\n            // getArtists();\r\n            // getArtistFollowArtwork(response.profileObj.email);\r\n            if (res === 1) {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 1000);\r\n              this.props.history.push('/ArtistHome');\r\n            } \r\n            else if (res === 2){\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Welcome to artBasically', 1));\r\n              };\r\n      \r\n            \r\n                success();\r\n                setTimeout(() => {\r\n              this.props.history.push('/Home');\r\n            }, 100);\r\n            } \r\n            \r\n            \r\n            else {\r\n              const success = () => {\r\n                message\r\n                  .loading('Validating..', 1.2)\r\n                  .then(() => message.error('Account created', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push('/RegVerify');\r\n              setTimeout(() => {\r\n                this.props.history.push('/');\r\n              }, 4500);\r\n            }\r\n          });\r\n\r\n          \r\n    \r\n\r\n        }\r\n      })\r\n    }else if(fil === 1){\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('Validating..', 1.2)\r\n              .then(() => message.error('Email already taken!', 1));\r\n          };\r\n  \r\n          setTimeout(() => {\r\n            success();\r\n          }, 1000);\r\n          // this.props.history.push('/');\r\n        \r\n      \r\n    }\r\n\r\n    }\r\n    else{\r\n      const success = () => {\r\n        message\r\n          .loading('Signing in..', 1.2)\r\n          .then(() => message.error('Please try again', 1));\r\n      };\r\n\r\n      setTimeout(() => {\r\n        success();\r\n      }, 500);\r\n    }\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId='652149429118-9a2b3e9c3rcvr7ebaaf5kpamjro2akj5.apps.googleusercontent.com'\r\n          buttonText='Sign up with Google'\r\n          onSuccess={this.responseGoogle}\r\n          onFailure={this.responseGoogle}\r\n          disableMobileRedirect={true}\r\n          cookiePolicy={'single_host_origin'}\r\n          className='btnGoogle'\r\n          icon={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailRegister)));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FBReg from '../../components/RegisterFB/'\r\nimport GmailReg from './../../components/RegisterGmail/'\r\nimport moment from 'moment'\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\n class ArtistReg extends Component {\r\n   \r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n \r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID = moment().format('MDYY') + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n \r\n   \r\n   \r\n    const formData = new FormData();\r\n    formData.append('artworkImg',  e.target.files[0]);\r\n    formData.append('type', 'artist');\r\n    upload(formData, 'docu');\r\n  }\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {startingStore:{listOfUsers,addAccount,account, upload}}=this.props;\r\n    \r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n\r\nif (filAccounts === 0){\r\n\r\n\r\n    if (this.state.password === this.state.confPassword ){\r\n\r\n\r\n\r\n    event.target.className += ' was-validated';\r\n\r\n    account.setProperty('acc_Status', 'Pending');\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    setTimeout(() => {\r\n    addAccount();\r\n  }, 4000);\r\n    const success = () => {\r\n    \r\n      message.success('Successfully submitted registration', 1);\r\n \r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n      this.props.history.push('/RegVerify');\r\n    }, 1000);\r\n    \r\n    \r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 4000);\r\n\r\n  }else{\r\n    const error = () => {\r\n    \r\n      message.error('Please check your password', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n      const error = () => {\r\n    \r\n      message.error('Your email or contact number is already taken', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n}\r\n\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Artist <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n\r\n\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n\r\n\r\n\r\n            <div className=\"page req clearfix\">\r\n<div className=\"container\">\r\n\t\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n\r\n\r\n\r\n              <MDBInput\r\n                label='First Name'\r\n               \r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='5'\r\n                style={{padding:'10px'}}\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n                   <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n             \r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n           \r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n            \r\n        \r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} required/>\r\n                <p className='req'>\r\n                  Acceptable documents includes image of your passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n\r\n\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                REGISTER\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistReg));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nimport FBReg from '../../components/RegisterFB/'\r\nimport GmailReg from './../../components/RegisterGmail/'\r\n\r\n class ArtGalReg extends Component {\r\n\r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n   \r\n\r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  submitHandler = (event) => {\r\n\r\n\r\n\r\n    event.preventDefault();\r\n   \r\n\r\n    let {\r\n      startingStore: {listOfUsers,addAccount, account},\r\n    } = this.props;\r\n\r\n\r\n    let filAccounts = listOfUsers.filter(usr => usr.accContact === account.accContact && account.acc_Status === 'Active' || usr.accEmailAddress === account.accEmailAddress && account.acc_Status === 'Active').length\r\n\r\n\r\n    if (filAccounts === 0){\r\n\r\n    account.setProperty('accessType', 'Standard')\r\n    account.setProperty('acc_Status', 'Active')\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'))\r\n    account.setProperty('accID',  `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    account.setProperty('password',this.state.password)\r\n    account.setProperty('regType','LocalAccount')\r\n    if (this.state.password === this.state.confPassword){\r\n      event.target.className += 'was-validated';\r\n    addAccount();\r\n\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('You have been successfully registered', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      success();\r\n    \r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 3000);\r\n  }else{\r\n    const error = () => {\r\n      // message.then(() =>\r\n      message.error('Please check your password', 2);\r\n      // );\r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n\r\n}else{\r\n  const error = () => {\r\n\r\n  message.error('Your email or contact number is already taken', 2);\r\n\r\n};\r\nsetTimeout(() => {\r\n  error();\r\n\r\n}, 500);\r\n}\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Art Enthusiast <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start exploring the best artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n         \r\n        \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                style={{textTransform: 'capitalize'}}\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n  \r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                style={{textTransform: 'capitalize'}}\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n          \r\n              <FBReg user='Standard'/>\r\n              <GmailReg user='Standard'/>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                Register\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtGalReg));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nexport class UserReg extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n      console.log(list, listitem, 'category');\r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                User <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n            \r\n          \r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='text'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n           \r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Full Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='usertype'\r\n                onChange={(accessType) =>\r\n                  account.setProperty('accessType', accessType.target.value)\r\n                }\r\n              >\r\n                <option> User Type </option>\r\n                <option value='Standard'> Art Gallery </option>\r\n                <option value='Artist'> Artist </option>\r\n                {/* <option value='Admin'> Admin </option> */}\r\n              </select>\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfCategories}\r\n                placeholder=\"Art Themes you'd like to follow\"\r\n                showCheckbox={true}\r\n                displayValue='catType'\r\n                onSelect={selectCategory}\r\n                // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n              />\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfStyles}\r\n                placeholder=\"Art Style you'd like to follow\"\r\n                showCheckbox={true}\r\n                onSelect={selectStyle}\r\n                displayValue='styleType'\r\n                // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n              />\r\n\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                onChange={(password) =>\r\n                  account.setProperty('password', password.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                onChange={(confirmPassword) =>\r\n                  account.setProperty(\r\n                    'confirmPassword',\r\n                    confirmPassword.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} />\r\n                <p className='req'>\r\n                  Acceptable documents include passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                SUBMIT\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UserReg));\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Upload, Icon, Modal } from 'antd';\r\n\r\nfunction getBase64 (file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nclass UploadMult extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: ''\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  render () {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n          className=\"multsel\"\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadMult;","import React, {Component} from 'react';\r\nimport {MDBInput, MDBNavLink, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport UploadMult from '../../components/UploadMult';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport moment from 'moment';\r\n\r\nclass UploadWork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n      artImg:null,\r\n      ArtByMe:'',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtists();\r\n    getPrintSize()\r\n    getStyles();\r\n    getCategories();\r\n    getArtworkInfo();\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n    this.setState({\r\n      profileImg: URL.createObjectURL(event.target.files[0])\r\n    })\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n\r\n\r\n    this.setState({selectedFile: image});\r\n   \r\n  }\r\n  onSubmit(e) {\r\n    let userData= JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {upload, artwork,addNotif,notif},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    data.append('type', 'artwork');\r\n    \r\n    upload(data);\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('Artwork submitted', 1);\r\n      // );\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n    this.props.history.push('/SubmitArt');\r\n    setTimeout(() => {\r\n      this.props.history.push('/Upload');\r\n    }, 4000);\r\n\r\n\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\nnotif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\nnotif.setProperty('notifSender',userData.accID)\r\nnotif.setProperty('notifRecipient','admin-001')\r\nnotif.setProperty('notifSubject','Artwork')\r\nnotif.setProperty('notifMsg',`${userData.accFname} ${userData.accLname} submitted and artwork`)\r\nnotif.setProperty('notifDT',moment().format('MMM/DD/YYYY'))\r\nnotif.setProperty('notifStatus','unread')\r\n\r\naddNotif()\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n    let madeByMe= ()=>{\r\n     this.setState({ArtByMe:`${mydata.accFname} ${mydata.accLname}`})\r\n    }\r\n\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n   \r\n    artwork.setProperty('accID',mydata.accID)\r\n    artwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon'>\r\n          <div className='uploadart uploadwork clearfix'>\r\n            <h2>Upload Your Work</h2>\r\n            <form\r\n              onSubmit={this.onSubmit}\r\n              className='regform uploadform custform'\r\n            >\r\n              <div className='left'>\r\n                <div>\r\n                  <span  style={{marginBottom:'-8px'}}>Your Title</span>\r\n                  <MDBInput\r\n                      \r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>{\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback ' >\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}} class='custom-checkbox '>\r\n                <span>Artist</span>\r\n                <select\r\n                  value={this.state.ArtByMe}\r\n                  onChange={(artistName) =>\r\n                    artwork.setProperty('artistName', artistName.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <option>Artist</option>\r\n                  {listOfArtists.map((artist) => {\r\n                    return (\r\n                      <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                        {artist.accFname} {artist.accLname}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                <p className='inlinep' style={{marginLeft:'20px',marginTop:'-22px',paddingBottom:'22px'}}>\r\n                            <input\r\n                              type='checkbox'\r\n                              class='custom-control-input '\r\n                              id='anycat'\r\n                              onChange={()=>{madeByMe()}}\r\n                              \r\n                            />\r\n                            <label\r\n                              class='custom-control-label clabel'\r\n                              for='anycat'\r\n                              style={{fontSize:'12px',paddingTop:'4px'}}\r\n                            >\r\n                              Is this artwork made by you?\r\n                            </label>\r\n                        </p> \r\n                </div>\r\n                <div>\r\n                <span     style={{marginBottom:'-8px'}}>Year</span>\r\n                  <MDBInput\r\n              \r\n                    label='Year'\r\n                    type='number'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Themes</span>\r\n                  <p className='inlinep'>\r\n                    What themes would best help describe your artwork?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n              \r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art theme.\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <span>Style</span>\r\n                  <p className='inlinep'>\r\n                    What styles are your artwork inspired by?{' '}\r\n                    <MDBNavLink to='#!' className='nobg'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                  <div className='invalid-feedback'>\r\n                    Please provide atleast 1 art style.\r\n                  </div>\r\n                </div>\r\n                <div style={{marginBottom:'10px'}}>\r\n                <span>Art Type</span>\r\n                <select\r\n                  className='usertype'\r\n                  onChange={(artType) =>\r\n                    artwork.setProperty('artType', artType.target.value)\r\n                  }\r\n                >\r\n                  <option> Art Type </option>\r\n                  <option value='Original'> Original </option>\r\n                  <option value='Secondary'> Secondary </option>\r\n                </select>\r\n                </div>\r\n                <div className='dim'>\r\n                  <span>Artwork Size</span>\r\n                 {/*  <ul>\r\n                    <li>\r\n                      <p>Unit of Measure</p>\r\n                      <select>\r\n                        <option>Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Length</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                    <li>\r\n                      <p>Width</p>\r\n                      <select>\r\n                        <option>in Centimeters</option>\r\n                      </select>\r\n                    </li>\r\n                  </ul> */}\r\n                         <Multiselect\r\n                 \r\n                 className='multsel'\r\n                 options={listOfPrintSize}\r\n                 placeholder='Printing Size'\r\n                 showCheckbox={true}\r\n                 displayValue='printSize'\r\n                 onSelect={selectArtSize}\r\n           \r\n               />\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span >Number of Copies</span>\r\n                  <p className='inlinep' style={{marginBottom:'-8px'}}>How many copies of your artworks are you selling?</p>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='number'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div className='selcon'>\r\n                  <span>Authenticity Certificate</span>\r\n                  <p className='inlinep'>\r\n                    Do you have a document certifiying your artwork is original?\r\n                    Don’t know what this is?\r\n                    <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                  </p>\r\n                  <select>\r\n                    <option>No</option>\r\n                    <option>Yes</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <span style={{marginBottom:'-8px'}}>Price</span>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide the Art Price.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n                <div>\r\n                  <span>Description</span>\r\n                  <MDBInput\r\n                    label='How do you describe your current work?'\r\n                    type='textarea'\r\n                    rows='8'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                </div>\r\n        \r\n                <div className='uploadreq clearfix'>\r\n                \r\n                  <div className='upload' >\r\n                    {/* <label htmlFor='submitart' for='submitart' disabled>\r\n                      Coming Soon\r\n                    </label>\r\n                    <input type='submit' id='submitart' disabled /> */}\r\n                    <MDBBtn type='submit' color='#fae933' style={{fontWeight:'bold'}}>\r\n                      Upload Your Work\r\n                    </MDBBtn>\r\n                  </div>\r\n\r\n                  <p style={{textAlign:'center',fontSize:'12px'}}>\r\n                    Your artwork will be sent to our team for review to see if\r\n                    it meets our standards. We will send you a notification if\r\n                    your artwork has already been uploaded to the site. Thank\r\n                    you for your patience. How long does the review take?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <div className='artsingle'>\r\n                  <span>Main Photo</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <img src={this.state.profileImg} style={{width:'500px',marginBottom:'16px'}}/>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                   \r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  {/* <UploadImage /> */}\r\n                </div>\r\n                <div className='artmult'>\r\n                  <span>More Photos of Your Artwork</span>\r\n                  <p>\r\n                    Your image should have a resolution of at least 834 px by\r\n                    532 px. Having trouble with taking the best photo?\r\n                    <MDBNavLink to='#!' className='nobg inlines'>\r\n                      We can help.\r\n                    </MDBNavLink>\r\n                  </p>\r\n                  <UploadMult />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UploadWork));\r\n","import {toast} from 'react-toastify';\r\n\r\nconst notify = (type, message) => {\r\n  switch (type) {\r\n    case 'info':\r\n      toast.info(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 1200,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'success':\r\n      toast.success(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'warning':\r\n      toast.warn(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    case 'error':\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      break;\r\n    default:\r\n      toast.error(`${message}`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n  }\r\n};\r\n\r\nexport default notify;\r\n","import {MDBBtn, MDBCol, MDBIcon, MDBInput, MDBRow} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Notification from './Notif';\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass OrderTab extends Component {\r\n  state = {\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n    totalPrice: 0,\r\n    partnerPercentage:30,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n    getOrders();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      let total =\r\n        parseFloat(this.state.totalPrice) +\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        totalPrice: total,\r\n      });\r\n\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      let data = this.state.selected.filter((indexer) => {\r\n        if (indexer !== index) {\r\n          selectedArray.push(data);\r\n        }\r\n      });\r\n      let total =\r\n        parseFloat(this.state.totalPrice) -\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n        totalPrice: total <= 0 ? 0 : total,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n   \r\n    \r\n\r\n  addOrder = () => {\r\n\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n   let perctodec = this.state.partnerPercentage/100;\r\n   \r\n    let date = new Date();\r\n\r\n    let {\r\n      startingStore: {order, addOrder, editToCart,notif,addNotif},\r\n    } = this.props;\r\n\r\n  \r\n    let totalValue = perctodec * this.state.totalPrice;\r\n    console.log(perctodec,this.state.totalPrice,totalValue,'perc')\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    \r\n    order.setProperty('orderID',`${moment().format('YY')}-${ Math.floor(100 + Math.random() * 900)}`)\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY,h:mm:ssa'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('totalAmount',this.state.totalPrice)\r\n    order.setProperty('partnerEarnings',totalValue)\r\n  \r\n    addOrder();\r\n    \r\n    let recipient = this.state.selected.map( ntf =>  (ntf.accID))\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient',userData.accID)\r\n    notif.setProperty('notifSubject','Placed order')\r\n    notif.setProperty('notifMsg',`${userData.accFname } order an artwork(s)`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\naddNotif();\r\n    if (this.state.selected.length > 1) {\r\n      this.state.selected.map((item) => {\r\n        editToCart(item);\r\n     \r\n        Notification('success', 'Checkout Successfully');\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.1)\r\n            .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n           setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n      });\r\n    } else {\r\n      editToCart(this.state.selected[0]);\r\n\r\n      Notification('success', 'Checkout Successfully');\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.1)\r\n          .then(() => message.success('Cancellation of order will be disabled if your order is already on printing or delivery process', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n      setTimeout(() => {\r\n        this.props.history.push('/Order')\r\n           }, 1000);\r\n    }\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n\r\n  \r\n    let {\r\n      startingStore: {listOfOrder, listOfUserCart},\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n            {listOfUserCart.map((item, indexes) => {\r\n              if (listOfUserCart.length > 0) {\r\n                return (\r\n                  <MDBRow className='artlistorder' >\r\n                    <MDBCol md='1' >\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <MDBInput\r\n                          onChange={(data) => {\r\n                            this.selectedValue(\r\n                              indexes,\r\n                              data.target.checked,\r\n                              item\r\n                            );\r\n                          }}\r\n                          type='checkbox'\r\n                          id='checkbox1'\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='2' className='artimg colpad'>\r\n                      {item.artworkImg !== '' ? (\r\n                        <img src={item.artworkImg} alt='' />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='4' className='artdet colpad'>\r\n                      <a\r\n                        href='#!'\r\n                        onClick={() => {\r\n                          this.props.history.push({\r\n                            pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                            state: {\r\n                              artistName: `${item.accFname} ${item.accLname}`,\r\n                              accImg: this.state.artistImg,\r\n                              artistDescription: this.state.accDescription,\r\n                              birthYear: this.state.birthYear,\r\n                              accFollowers: this.state.accFollowers,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        {item.artistName} <MDBIcon icon='arrow-right' />\r\n                      </a>\r\n                      <br />\r\n                      <p>\"{item.artworkName}\"</p>\r\n                      <p>\r\n                        Variations: {item.artworkMaterial}, {item.artworkSize},\r\n                        {item.artworkFramingOptions}\r\n                      </p>\r\n                      <p>\r\n                        &#8369;\r\n                        {item.artworkPrice\r\n                          ? Number(\r\n                              parseFloat(item.artworkPrice)\r\n                            ).toLocaleString('en')\r\n                          : ''}\r\n                      </p>\r\n                    </MDBCol>\r\n                    <MDBCol md='1' className='quan colpad'>\r\n                      {item.artworkQuantity !== ''\r\n                        ? `x${item.artworkQuantity}`\r\n                        : ''}\r\n                    </MDBCol>\r\n                    <MDBCol md='3' className='colpad'>\r\n                      <MDBRow className='sub'>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          Subtotal\r\n                        </MDBCol>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          &#8369;\r\n                          {item.artworkPaymentAmount\r\n                            ? Number(\r\n                                parseFloat(item.artworkPaymentAmount)\r\n                              ).toLocaleString('en')\r\n                            : ''}\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                    </MDBCol>\r\n                    <MDBCol md='1'>\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <a\r\n                          href='#!'\r\n                          onClick={() => {\r\n                            this.deleteItem(item);\r\n                          }}\r\n                        >\r\n                          <MDBIcon icon='trash' />\r\n                        </a>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                );\r\n              } else {\r\n                return 'Cart is Empty';\r\n              }\r\n            })}\r\n\r\n            <div className='acts clearfix'>\r\n              {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t</MDBRow> */}\r\n              <MDBRow className='actsrowcart'>\r\n                <MDBCol md='5' className='total'>\r\n                  TOTAL\r\n                </MDBCol>\r\n                <MDBCol md='7' className='total'>\r\n                  &#8369;\r\n                  {this.state.totalPrice > 0\r\n                    ? Number(parseFloat(this.state.totalPrice)).toLocaleString(\r\n                        'en'\r\n                      )\r\n                    : Number(parseFloat(0)).toLocaleString('en')}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <div className='actsbtn'>\r\n                    <MDBBtn\r\n                      color='#fae933'\r\n                      size='sm'\r\n                      className='recieve'\r\n                      disabled={this.state.totalPrice > 0 ? false : true}\r\n                      onClick={() => {\r\n                        this.addOrder();\r\n                      }}\r\n                    >\r\n                      Checkout\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Cart from './Cart';\r\nimport notify from '../components/Notif';\r\nimport moment from 'moment'\r\nclass AddToBag extends Component {\r\n  state = {\r\n    modal1: false,\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = () => {\r\n    let nr = 1;\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  addTocart = () => {\r\n    let {\r\n      startingStore: {cart, addToCart},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    cart.setProperty('artistName', this.props.cartData.artistName);\r\n    cart.setProperty('artworkName', this.props.cartData.artName);\r\n    cart.setProperty('artworkImg', this.props.cartData.artworkImg);\r\n    cart.setProperty('artworkPrice', this.props.cartData.artPrice);\r\n    cart.setProperty(\r\n      'artworkPaymentAmount',\r\n      parseFloat(this.props.cartData.artPrice) *\r\n        parseFloat(cart.artworkQuantity)\r\n    );\r\n    cart.setProperty('accID', userData.accID);\r\n    cart.setProperty('dateOfTransaction', moment().format('MMM/DD/YYYY'))\r\n    if (cart.artworkQuantity !== '' || cart.artworkQuantity !== null) {\r\n      notify('success', 'Artwork added successfully');\r\n      addToCart();\r\n    } else {\r\n      notify('error', 'Unsuccessful adding artwork');\r\n      // ari di butang ang alert!!!!!!!!!!!!!!!!!!!!!!\r\n    }\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      // let data = this.state.selected.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedArray.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      // let indexes = this.state.selectedCheckBox.filter((data, indexer) => {\r\n      // \tif (indexer !== index) {\r\n      // \t\tselectedCheck.push(data);\r\n      // \t}\r\n      // });\r\n\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n  addOrder = () => {\r\n    \r\n    let {\r\n      startingStore: {order, addOrder,notif,addNotif},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n   \r\n\r\n    \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let date = new Date();\r\n\r\n    order.setProperty(\r\n      'orderID',\r\n      `${getHash(date.getFullYear())}-${Math.floor(1000 + Math.random() * 9000)}`\r\n    );\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', moment().format('MMM/DD/YYYY'));\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    order.setProperty('artworkPaymentAmount',this.state.totalPrice)\r\n    addOrder();\r\n\r\n    notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n    notif.setProperty('notifSender',userData.accID)\r\n    notif.setProperty('notifRecipient','admin-001')\r\n    notif.setProperty('notifSubject','Order')\r\n    notif.setProperty('notifMsg',`${userData.accFname} placed an order`)\r\n    notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n    notif.setProperty('notifStatus','unread')\r\n\r\n    addNotif();\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.selectedCheckBox,'selected')\r\n    let {\r\n      startingStore: {listOfUserCart},\r\n    } = this.props;\r\n\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          disabled={!this.props.disable}\r\n          onClick={() => {\r\n            this.toggle();\r\n            this.addTocart();\r\n          }}\r\n       color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n        >\r\n          Add to Bag\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => {\r\n            this.toggle();\r\n          }}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader\r\n            toggle={() => {\r\n              this.toggle();\r\n            }}\r\n          >\r\n            <h3>Cart</h3>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='cartord'>\r\n            <Cart />\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AddToBag)));\r\n","import {MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Cart from './Cart';\r\n\r\nclass ViewCart extends Component {\r\n  state = {\r\n    modal1: false,\r\n    // selected: [],\r\n    // selectedCheckBox: []\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfUserCart, getToCart},\r\n    } = this.props;\r\n\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n  \r\n    return (\r\n      <div className='btnmodal'>\r\n        <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          color='red'\r\n          size='md'\r\n          style={{borderRadius: '50px'}}\r\n        >\r\n          View Cart\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          size='lg'\r\n          centered\r\n          // className='cart'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            <h3>Cart</h3>\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='cartord'>\r\n            <Cart />\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(ViewCart)));\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBModal} from 'mdbreact';\r\n\r\nclass ViewRoom extends Component {\r\n\r\n  state = {\r\n    modal14: false,\r\n\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className='viewroom'>\r\n        <a\r\n          href='#!'\r\n          onClick={this.toggle(14)}\r\n          className='viewinroom'\r\n          color='transparent'\r\n        >\r\n          View in Room\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='room'\r\n        >\r\n          <div className='living-con'>\r\n            <div className='frame' >\r\n            <p>{this.props.selectedsize}</p>\r\n              <img src={this.props.img} alt=''   \r\n              style={{margin:'auto',width:this.props.Awidth,height:this.props.Aheight}}\r\n          \r\n              />\r\n           \r\n            </div>\r\n       \r\n          </div>\r\n          <MDBBtn\r\n            onClick={this.toggle(14)}\r\n            className='closeviewinroom'\r\n            color='transparent'\r\n          >\r\n            Close \r\n          </MDBBtn>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewRoom;\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../FbLogin';\r\nimport GoogleLogin from '.././GoogleLogin/index';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getArtistFollowArtwork(account.accEmailAddress);\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n       \r\n        this.props.history.push('/Home');\r\n       \r\n      }, 500);\r\n      } else if \r\n      // (typeof res === 'string')\r\n      ( res === 4)\r\n       {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        setTimeout(() => {\r\n          // this.props.history.push(`/CProfile/${res}`);\r\n          this.props.history.push('/ArtistHome');\r\n         \r\n        }, 500);\r\n      } else if(res === 5){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Please wait for your account confirmation', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else if(res === 6){\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Your account request rejected', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.5)\r\n            .then(() => message.error('Username or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n\r\n    return (\r\n      <div className='btnmodal'>\r\n\r\n         <MDBBtn\r\n          onClick={this.toggle(1)}\r\n          \r\n          color='yellow'\r\n          size='md'\r\n          style={{borderRadius: '50px',color:'black',fontWeight:'bold',fontSize:'15px'}}\r\n         >\r\n         Add to Bag\r\n         </MDBBtn>\r\n        \r\n       \r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass' style={{marginBottom:'10px'}}> \r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GoogleLogin />\r\n         \r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Login)));\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {Skeleton} from 'antd';\r\nimport {MDBIcon, MDBNavLink, MDBBtn, MDBLink} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {message} from 'antd';\r\nimport AddToBag from '../../components/AddToBag';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\nimport ViewCart from '../../components/ViewCart';\r\nimport ViewRoom from '../../components/ViewRoom';\r\nimport art from '../../images/artworks/art1.png';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport LoginCart from './../../components/CartLogin/'\r\nimport {withRouter} from 'react-router-dom'\r\nclass SingleArt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n      condition: false,\r\n      isToggleOn: true,\r\n      selectedSize:'AP - portrait, 1.5x2',\r\n    height:'2cm',\r\n    width:'1.5cm',\r\n    };\r\n  \r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    \r\n  }\r\n  // state={\r\n  //   selectedSize:'AP - portrait, 1.5x2',\r\n  //   height:'2cm',\r\n  //   width:'1.5cm',\r\n  // }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    \r\n    let {\r\n      startingStore: {\r\n        getArtistArtwork,\r\n        getSingleArtists,\r\n        getSingleArtworkInfo,\r\n        getToCart,\r\n        getPrintSize,\r\n        \r\n      },\r\n    } = this.props;\r\n    getSingleArtworkInfo(this.props.match.params.id);\r\n    getSingleArtists(this.props.match.params.name);\r\n    getArtistArtwork(this.props.match.params.name);\r\n    getToCart();\r\n    getPrintSize();\r\n    \r\n    //   .then(response => {\r\n\r\n    //  })\r\n    // getToCart();\r\n  }\r\n\r\n  checkFollower = (follower) => {\r\n    if (follower !== undefined && follower[0] !== '') {\r\n      return follower.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  followArtist = () => {\r\n    message.loading({content: 'Loading...'});\r\n    setTimeout(() => {\r\n      message.success({content: 'Loaded!', duration: 2});\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        cart,\r\n        listOfSingleArtwork,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n        followArtist,\r\n        listRelatedWorkByCategory,\r\n        listOfMyLists,\r\n        listOfPrintSize,\r\n        addMyLists,\r\n        mylists\r\n       \r\n      },\r\n    } = this.props;\r\n\r\n    const options = [];\r\n    for (let i = 1; i <= 50; i++) {\r\n      options.push(i);\r\n    }\r\n\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    let changeSize =(size)=>{\r\n    let {height,width,selectedSize}=this.state;\r\n    console.log(size,'aa')\r\n      cart.setProperty('artworkSize',size)\r\n\r\n      if (size === 'AP - portrait, 1.5x2'){\r\n        this.setState({height:'2cm',width:'1.5cm',selectedSize:'AP - portrait, 1.5x2'})\r\n      }else if( size === 'AP - portrait, 3x4'){\r\n        this.setState({height:'4cm',width:'3cm',selectedSize:'AP - portrait, 3x4'})\r\n      }else if( size === 'B - square, 2x2'){\r\n        this.setState({height:'2cm',width:'2cm',selectedSize:'B - square, 2x2'})\r\n      }else if( size === 'B - square, 4x4'){\r\n        this.setState({height:'4cm',width:'4cm',selectedSize:'B - square, 4x4'})\r\n      }else if( size === 'CP - portrait, 2x3'){\r\n        this.setState({height:'3cm',width:'2cm',selectedSize:'CP - portrait, 2x3'})\r\n      }else if( size === 'CP - portrait, 4x6'){\r\n        this.setState({height:'6cm',width:'4cm',selectedSize:'CP - portrait, 4x6'})\r\n      }else if( size === 'DL - landscape, 2x1.5'){\r\n        this.setState({height:'1.5cm',width:'2cm',selectedSize:'DL - landscape, 2x1.5'})\r\n      }else if( size === 'DL - landscape, 4x3'){\r\n        this.setState({height:'3cm',width:'4cm',selectedSize:'DL - landscape, 4x3'})\r\n      }else if( size === 'EL - landscape, 3x2'){\r\n        this.setState({height:'2cm',width:'3cm',selectedSize:'EL - landscape, 3x2'})\r\n      }else if( size === 'EL - landscape, 6x4'){\r\n        this.setState({height:'4cm',width:'6cm',selectedSize:'EL - landscape, 6x4'})\r\n      }\r\n\r\n\r\n    }\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n     \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',logged.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else if(getmyList === 1){\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n     let artworkList = listofArtistArtwork.map(data => data.artSize)\r\n\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artcon'>\r\n            <div className='clearfix'>\r\n              <div className='left'>\r\n                <div className='artworkInfo'>\r\n                  <h2 className='title artistname'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artistName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn>\r\n                  </h2>\r\n                  <span className='arttitle'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    ,&nbsp;\r\n                  </span>\r\n                  <span className='year'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artworkDateCreated\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </span>\r\n                  <div className='artImg'>\r\n                    <img\r\n                      src={\r\n                        listOfSingleArtwork[0] !== undefined ? (\r\n                          listOfSingleArtwork[0].artworkImg\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )\r\n                      }\r\n                      alt=''\r\n                    />\r\n\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      <ul className='artOpt'>\r\n                        {' '}\r\n                        <li>\r\n                          <MDBLink to='#' onClick={()=>{addtoList(listOfSingleArtwork[0])}}>Add to List</MDBLink>\r\n                        </li>\r\n                        <li>\r\n                          <ViewRoom img={listOfSingleArtwork[0].artworkImg}  Aheight={this.state.height} Awidth={this.state.width} selectedsize = {this.state.selectedSize}/>\r\n                        </li>\r\n                        <li>\r\n                          <a href=''>Share</a>\r\n                        </li>{' '}\r\n                      </ul>\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </div>\r\n                  <div className='abtArtist'>\r\n                    <h4>About the Artist</h4>\r\n                    <span>\r\n                      {listOfSingleArtwork[0] !== undefined ? (\r\n                        listOfSingleArtwork[0].artistName\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                      , b.\r\n                      {listofArtistInfo.birthYear}.\r\n                    </span>\r\n                    <p>{listofArtistInfo.accDescription}</p>\r\n\r\n                    <a\r\n                      href=''\r\n                      className='seemore'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${listOfSingleArtwork[0].artistName}`,\r\n                          state: {\r\n                            artistName:\r\n                              listOfSingleArtwork[0] !== undefined\r\n                                ? listOfSingleArtwork[0].artistName\r\n                                : '',\r\n                            \"accImg\": listofArtistInfo.artistImg,\r\n                            \"artistDescription\": listofArtistInfo.accDescription,\r\n                            \"birthYear\": listofArtistInfo.birthYear,\r\n                            \"accFollowers\": listofArtistInfo.accFollowers\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Visit artist profile\r\n                      <MDBIcon icon='caret-right' />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <h2>\r\n                  Customize your  <br/> order.\r\n                </h2>\r\n                \r\n               \r\n              \r\n                <p className='inlinep' style={{marginTop:'-10px',paddingBottom:'22px'}}>\r\n                  Can't Decide? <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                </p>\r\n                <form\r\n                  onSubmit={this.submitHandler}\r\n                  className='regform uploadform custform'\r\n                >\r\n                  <div style={{marginBottom:'16px'}}>\r\n                    <span>Material</span>\r\n                    <select\r\n                      onChange={(artworkMaterial) =>\r\n                        cart.setProperty(\r\n                          'artworkMaterial',\r\n                          artworkMaterial.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Material\r\n                      </option>\r\n                      <option value='Print on Sintra (Matte)'>Print on Sintra (Matte)</option>\r\n                      <option value='Print on Sintra (Glossy)'>Print on Sintra (Glossy)</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      What material is the best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}} >\r\n                    <span>Size</span>\r\n            \r\n                    <select\r\n                      onChange={(Asize) => changeSize(Asize.target.value)}\r\n                    >\r\n                      {listOfPrintSize.map((sizes) => (\r\n                          <option key={sizes.printSize} value={sizes.printSize}>\r\n                            {  sizes.printSize == artworkList[0] ? \r\n                           ( \r\n                             `${sizes.printSize} Recommended`\r\n                            ):(\r\n                              sizes.printSize\r\n                            )\r\n                           \r\n                            }\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which size best fits your needs?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}}>\r\n                    <span>Framing Options</span>\r\n                    <select\r\n                      onChange={(artworkFramingOptions) =>\r\n                        cart.setProperty(\r\n                          'artworkFramingOptions',\r\n                          artworkFramingOptions.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Framing Options\r\n                      </option>\r\n                      <option value='Rustic Barnwood Distressed Wood'>\r\n                        Rustic Barnwood Distressed Wood\r\n                      </option>\r\n                      <option value='Natural Wood'>Natural Wood</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which framing option is best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div  style={{marginBottom:'16px'}}>\r\n                    <span>Quantity</span>\r\n                    {listOfSingleArtwork.artType === 'Original' ? (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option selected value=''>\r\n                          Choose Quantity\r\n                        </option>\r\n                        <option value='1'>1</option>\r\n                      </select>\r\n                    ) : (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        {options.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    )}\r\n                    <a className='blacklink' href=''>\r\n                      This is part of a limited edition set of 12.\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Your total is</span>\r\n                    <span className='nopad'>\r\n                      PHP{' '}\r\n                      {Number(\r\n                        parseFloat(\r\n                          listOfSingleArtwork[0] !== undefined\r\n                            ? parseFloat(listOfSingleArtwork[0].artPrice) *\r\n                                parseFloat(cart.artworkQuantity)\r\n                            : '0.00'\r\n                        )\r\n                      ).toLocaleString('en')}\r\n                    </span>\r\n                    <a className='bluelink' href=''>\r\n                      How long will your order arrive?\r\n                    </a>\r\n                    <div style={{float: 'right'}}>\r\n                      {mydata === null ? (\r\n                        <LoginCart/>\r\n                      ):( \r\n                        \r\n                        <AddToBag\r\n                        cartData={listOfSingleArtwork[0]}\r\n                        disable={\r\n                          cart.artworkFramingOptions !== '' ? true : false\r\n                        }\r\n                      />)}\r\n                    \r\n                      {/* <ViewCart cartData={listOfSingleArtwork[0]} /> */}\r\n                     \r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className='relcat'>\r\n            <h3>\r\n              Other Works by{' '}\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listOfSingleArtwork[0].artistName\r\n              ) : (\r\n                <Skeleton active />\r\n              )}\r\n            </h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listofArtistArtwork\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relcat'>\r\n            <h3>Related Works by Category</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listRelatedWorkByCategory[0] !== undefined ? (\r\n                listRelatedWorkByCategory\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relartist'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                  </div>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Rene Gagnon</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Eelus</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Banksy</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(SingleArt)))\r\n","import React, {Component} from 'react';\r\nimport {MDBBtn, MDBIcon, MDBNavLink} from 'mdbreact';\r\nimport {BackTop} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {toJS} from 'mobx';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Pagination} from 'antd'; //new\r\nimport art from '../images/artworks/art1.png';\r\nimport {message} from 'antd';\r\nconst numEachPage = 10;\r\nclass ArtworkFilter extends Component {\r\n  constructor(props) {\r\n    //new\r\n    super(props);\r\n    this.state = {\r\n      minValue: 0,\r\n      maxValue: 10,\r\n    };\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    //new\r\n    this.setState({\r\n      minValue: (value - 1) * numEachPage,\r\n      maxValue: value * numEachPage,\r\n    });\r\n  };\r\n  componentDidMount(){\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\nif (mydata === null){\r\n\r\n}else{\r\n  let{startingStore:{getMyLists}}=this.props;\r\n    getMyLists()\r\n  }\r\n  }\r\n\r\n  render() {\r\n   \r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfArtworks,\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n        listOfMyLists,\r\n        mylists,\r\n        deleteMyLists,\r\n        addMyLists,\r\n     \r\n      },\r\n    } = this.props;\r\n\r\n\r\n\r\n    let addtoList=(rtwrk)=>{\r\n\r\n      let getmyList = listOfMyLists.filter( art => art.artworkID === rtwrk.artworkID).length\r\n    \r\n    if (getmyList === 0){\r\n       \r\n       mylists.setProperty('mylistsID',`${rtwrk.artworkID.slice(0,4)}-${Math.floor(1000 + Math.random() * 900)}`)\r\n       mylists.setProperty('accID',mydata.accID)\r\n       mylists.setProperty('artworkID',rtwrk.artworkID)\r\n     \r\n       mylists.setProperty('artName',rtwrk.artName)\r\n       mylists.setProperty('artTheme',rtwrk.artTheme)\r\n       mylists.setProperty('artStyle',rtwrk.artStyle)\r\n       mylists.setProperty('artPrice',rtwrk.artPrice)\r\n       mylists.setProperty('artistID',rtwrk.accID)\r\n       mylists.setProperty('artistName',rtwrk.artistName)\r\n       mylists.setProperty('artworkDateCreated',rtwrk.artworkDateCreated)\r\n       mylists.setProperty('artType',rtwrk.artType)\r\n       mylists.setProperty('artworkImg',rtwrk.artworkImg)\r\n       \r\n       addMyLists()\r\n    \r\n       const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork added to your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 0.5)\r\n          .then(() => message.success('Artwork already on your list', 3));\r\n      };\r\n      setTimeout(() =>{\r\n        success()\r\n      },500)\r\n     \r\n    }\r\n     }\r\n\r\n\r\n    let removeToLists = (list)=>{\r\n\r\nmylists.setProperty('mylistsID',list.mylistsID)\r\n\r\n\r\ndeleteMyLists()\r\n\r\nconst success = () => {\r\n  message\r\n    .loading('', 0.5)\r\n    .then(() => message.success('Artwork removed to your list', 3));\r\n};\r\nsetTimeout(() =>{\r\n  success()\r\n},100)\r\n\r\nsetTimeout(()=>{\r\n  window.location.reload(false);\r\n},1500)\r\n    }\r\n\r\n\r\n    \r\n\r\n    let artworks = () => {\r\n      if (this.props.type === 'foryou') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n               {/* <Image publicId={image.artworkImg} secure=\"true\"></Image>    */}\r\n               <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                \r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'bestseller') {\r\n        return toJS(listOfArtworks)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'discover') {\r\n        return toJS(listOfArtworks)\r\n          \r\n          .map((image,i) => {\r\n            \r\n            return(\r\n\r\n            <li key={i}>\r\n            \r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n                \r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n              </div>\r\n            </li>\r\n          )});\r\n      } else if (this.props.type === 'categoriesfollow') {\r\n        return toJS(listofFilteredUserArtworkCategories)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'artistyoufollow') {\r\n        return toJS(listOfArtistFollowed)\r\n          .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      } else if (this.props.type === 'latest') {\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'Approved'))\r\n         .reverse()\r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  <span className='new'>NEW</span>\r\n                  <span className='hot'>HOT</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }else if(this.props.type === 'yourlists'){\r\n        return toJS(listOfMyLists.filter(art=> art.accID === mydata.accID))\r\n        .reverse()\r\n         .map((image,i) => (\r\n           <li key={i}>\r\n             <a href='#!' className='artlink'>\r\n               <div className='artlabel'>\r\n                 <span className='new'>NEW</span>\r\n                 <span className='hot'>HOT</span>\r\n                 <span className='type'>\r\n                   {image.artType === 'Secondary'\r\n                     ? 'Second Edition'\r\n                     : 'Original'}\r\n                 </span>\r\n               </div>\r\n               <Link\r\n                 to={{\r\n                   pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                 }}\r\n               >\r\n                 <img src={image.artworkImg} alt='' />\r\n               </Link>\r\n             </a>\r\n             <div className='artistinfo clearfix pad10'>\r\n             <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n           \r\n           \r\n           <MDBBtn\r\n             className='ifollow'\r\n             color='transparent'\r\n             floating\r\n             rounded\r\n             style={{color:'red'}}\r\n             onClick={() => removeToLists(image)}\r\n           >\r\n             \r\n             <MDBIcon icon='minus' style={{color:'red'}}/>\r\n           </MDBBtn>\r\n         </div>\r\n           </li>\r\n         ));\r\n      }else if (this.props.type === 'onSale') {\r\n        console.log(listOfArtworks,'aaa')\r\n        let a =listOfArtworks.filter(art=> art.artworkStatus === 'onSale')\r\n        return toJS(listOfArtworks.filter(art=> art.artworkStatus === 'onSale'))\r\n         \r\n          .map((image,i) => (\r\n            <li key={i}>\r\n              <a href='#!' className='artlink'>\r\n                <div className='artlabel'>\r\n                  \r\n                  <span className='hot'>On Sale</span>\r\n                  <span className='new'>20% Off</span>\r\n                  <span className='type'>\r\n                    {image.artType === 'Secondary'\r\n                      ? 'Second Edition'\r\n                      : 'Original'}\r\n                  </span>\r\n                </div>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                  }}\r\n                >\r\n                  <img src={image.artworkImg} alt='' />\r\n                </Link>\r\n              </a>\r\n              <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname'>{image.artName}</p>\r\n                     \r\n                    </a>\r\n\r\n                    \r\n                    <br/>\r\n                       \r\n                        <a\r\n                      href=''\r\n                    \r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.artistName}`,\r\n                          state: {artistName:image.artistName}\r\n                        });\r\n                      }}\r\n                    >\r\n                         <p className='artistname' style={{fontSize:'10px',fontStyle:'italic'}}>by {image.artistName}</p>\r\n                     \r\n                    </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n            </li>\r\n          ));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.price.length !== 0 ? (\r\n          <ul className='col3img clearfix'>\r\n            {this.props.price.map((image,i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                      <img src={image.artworkImg} alt='' />\r\n                    </Link>\r\n                  </a>\r\n                  <div className='artistinfo clearfix pad10'>\r\n              \r\n              <a\r\n                  href=''\r\n                \r\n                  onClick={() => {\r\n                    this.props.history.push({\r\n                      pathname: `/Artist/${image.artistName}`,\r\n                      state: {artistName:image.artistName\r\n                           \r\n               \r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                     <p>{image.artistName}</p>\r\n                 \r\n                </a>\r\n            \r\n            \r\n                <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title='Add To My Lists' \r\n                     onClick={()=>{addtoList(image)}}\r\n                    >\r\n                    \r\n                        <MDBIcon icon='plus' />\r\n                    \r\n                      </MDBBtn>\r\n          </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <ul className='col3img clearfix'>\r\n            {artworks()}\r\n\r\n          </ul>\r\n        )}\r\n\r\n        {/* <List defaultCurrent={1} pageSize={10} dataSource={listOfArtworks}/> */}\r\n\r\n        <div>\r\n          <Pagination //new\r\n            defaultCurrent={1}\r\n            defaultPageSize={numEachPage}\r\n            onChange={this.handleChange}\r\n            total={\r\n              this.props.type.length !== 0\r\n                ? this.props.type.length\r\n                : artworks.length\r\n            }\r\n            //\r\n          />\r\n        </div>\r\n\r\n        <div className='bttop clearfix'>\r\n          <MDBNavLink to='/Upload' className='btnYellow'>\r\n            Add Yours\r\n          </MDBNavLink>\r\n          <BackTop>\r\n            {' '}\r\n            <a href='#!'>\r\n              Back to Top <MDBIcon icon='caret-right' />{' '}\r\n            </a>{' '}\r\n          </BackTop>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtworkFilter));\r\n","import {MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter ,  listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Discover Emerging Artists </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }else if (type === 'yourlists'){\r\n        return <h3>My Lists</h3>;\r\n      }else{\r\n        console.log('error')\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n                <h4>Search by Filter</h4>\r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label class='custom-control-label' for='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n\r\n  \r\n\r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n           \r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import {BackTop, Pagination} from 'antd';\r\nimport {MDBIcon, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n    };\r\n  }\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  executeOnClick(isExpanded) {\r\n    console.log(isExpanded);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfUsers, followArtist, listofArtistInfo},\r\n    } = this.props;\r\n    let listOfArtists = listOfUsers.filter((artist) => {\r\n      if (artist.accessType === 'Artist') {\r\n        return artist;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artists'>\r\n          <section className='latest'>\r\n            <h3 style={{textAlign: 'center', padding: '20px 20px 50px 20px'}}>\r\n              All Artists\r\n            </h3>\r\n            <ul className='col3img colartists clearfix'>\r\n              {listOfArtists.map((image) => (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <img\r\n                      alt=''\r\n                      src={image.accImg}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>\r\n                      {image.accFname} {image.accLname}\r\n                    </p>\r\n                    {/* <a href=\"\" className=\"seeworks\"\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: '/Artist',\r\n                          state: {\r\n                            \"artistName\": this.state.artworkInfo[0] !== undefined ? this.state.artworkInfo[0].artistName : \"\",\r\n                            \"accImg\": this.state.artistImg,\r\n                            \"artistDescription\": this.state.accDescription,\r\n                            \"birthYear\": this.state.birthYear,\r\n                            \"accFollowers\": this.state.accFollowers\r\n                          }\r\n                        })\r\n                      }}\r\n                  > See Works &rarr; </a> */}\r\n                    <a\r\n                      href='#!'\r\n                      className='seeworks'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      See Works &rarr;\r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      onClick={() => followArtist(listofArtistInfo._id)}\r\n                    >\r\n                      <MDBIcon icon='plus' />\r\n                    </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n              {/* <li>\r\n                <a href=\"\" className=\"artlink\">\r\n                  <img src={artist} />\r\n                </a>\r\n                <a className=\"artistinfo clearfix pad10\">\r\n                  <p>Jane Doe</p>\r\n                  <MDBNavLink to=\"#!\" className=\"seeworks\"> See Works &rarr; </MDBNavLink>\r\n                  <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </section>\r\n\r\n          <Pagination dataSource={listOfArtists} total={listOfArtists} />\r\n\r\n          <div className='bttop clearfix'>\r\n            {/* <MDBNavLink to=\"/Upload\" className=\"btnYellow\">Add Yours</MDBNavLink> */}\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!'>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artists));\r\n","import React, {Component} from 'react';\r\nimport {MDBNavLink, MDBIcon} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Skeleton} from 'antd';\r\n\r\nclass CProfile extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts()\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listofUsers\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              <div className='left'>\r\n                <div className='artistpp'>\r\n                  {/* <img src={this.props.location.state.accImg} /> */}\r\n                  {/* {listofArtistInfo !== undefined ? (\r\n                    <img src={listofArtistInfo.accImg} alt='' />\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                </div>\r\n                <div className='artistInfo'>\r\n                  {/* {listofArtistInfo.accFname !== undefined ? (\r\n                    <h2 className='title'>\r\n                      {`${listofArtistInfo.accFname} ${listofArtistInfo.accLname}`}\r\n                   \r\n                    </h2>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )}\r\n                  {listofArtistInfo !== undefined ? (\r\n                    <span className='bday'>\r\n                      {listofArtistInfo.accAddress}, born{' '}\r\n                      {listofArtistInfo.birthYear}\r\n                    </span>\r\n                  ) : (\r\n                    <Skeleton active />\r\n                  )} */}\r\n                  <span className='estart'>Established Artist</span>\r\n                  <MDBNavLink\r\n                    to={`/CProfileEdit/${this.props.match.params.id}`}\r\n                    className='pencil'\r\n                  >\r\n                    <MDBIcon icon='pencil-alt' />\r\n                  </MDBNavLink>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    489\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className='artistbio clearfix'>\r\n              <h4 className='paddh4'>Biography</h4>\r\n              {/* {listofArtistInfo !== undefined ? (\r\n                <p>{listofArtistInfo.artistDescription}</p>\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </div>\r\n            <div className='relatedcat clearfix'>\r\n              <h4 className='paddh4'>Related Categories</h4>\r\n              <div className='catlist'>\r\n                {/* {listofArtistCategories[0] !== [] ||\r\n                listofArtistCategories[0] !== undefined ? (\r\n                  listofArtistCategories.map((cat) => (\r\n                    <MDBNavLink to='#!'>{cat}</MDBNavLink>\r\n                  ))\r\n                ) : (\r\n                  <MDBNavLink to='#!'>No Categories</MDBNavLink>\r\n                )} */}\r\n              </div>\r\n              <a href='#!' className='seemore'>\r\n                See More &nbsp;\r\n                <MDBIcon icon='caret-right' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <section className='bestsellers'>\r\n            <h3>Best Sellers of {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Latest Work by {this.props.match.params.id}</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Favorites</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Following</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n          <section className='latestwork'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {/* {listofArtistArtwork !== undefined ? (\r\n                listofArtistArtwork.map((art) => (\r\n                  <li>\r\n                    <a href='#!' className='artlink'>\r\n                      <div className='artlabel'>\r\n                        <span className='new'>NEW</span>\r\n                        <span className='hot'>HOT</span>\r\n                      </div>\r\n                      <img src={art.artworkImg} alt='artwork'/>\r\n                     \r\n                    </a>\r\n                    <div className='artistinfo'>\r\n                      <p>{art.artName}</p>\r\n                      <MDBNavLink to='#!' className='ifollow'></MDBNavLink>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <Skeleton active />\r\n              )} */}\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfile));\r\n","import React, {Component} from 'react';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Steps} from 'antd';\r\nimport {\r\n  MDBRow,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport art from '../images/artworks/art1.png';\r\n\r\nconst {Step} = Steps;\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal1: false,\r\n    pendingOrders: undefined,\r\n    steps: 0,\r\n  };\r\n  checkSteps = (status) => {\r\n   \r\n    if (status === 'Pending') {\r\n      this.setState({\r\n        steps: 1,\r\n      });\r\n    } else if (status === 'PendingPrint') {\r\n      this.setState({\r\n        steps: 2,\r\n      });\r\n    }else if ( status === 'Printing') {\r\n      this.setState({\r\n        steps: 3,\r\n      });\r\n    } else if (status === 'ForDelivery') {\r\n      this.setState({\r\n        steps: 4,\r\n      });\r\n    } else if (status === 'Completed' || status === 'Received') {\r\n      this.setState({\r\n        steps: 5\r\n      });\r\n    } else if (status === 'PrintRejected' || status === 'Rejected') {\r\n      this.setState({\r\n        steps: 6,\r\n      });\r\n    }\r\n  };\r\n  toggle = (nr) => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n      pendingOrders: this.props.pendingOrders,\r\n      // steps: this.checkSteps(this.props.steps),\r\n    });\r\n    this.checkSteps(this.props.steps);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => this.toggle(1)}\r\n          color='#fae933'\r\n        >\r\n          Track order\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={() => this.toggle(1)}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() => this.toggle(1)}>\r\n            Track order\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='float-right'>\r\n              <p>\r\n                ORDER ID:{' '}\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderID\r\n                  : '00-000-XXXX'}\r\n              </p>\r\n            </div>\r\n\r\n            {this.state.steps === 6 ? (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Rejected'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n              </Steps>\r\n            ) : (\r\n              <Steps progressDot current={3}>\r\n                <Step\r\n                  status={this.state.steps >= 1 ? 'finish' : 'wait'}\r\n                  title='Order Placed'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 2 ? 'finish' : 'wait'}\r\n                  title='Verified'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 3 ? 'finish' : 'wait'}\r\n                  title='Printing'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps >= 4 ? 'finish' : 'wait'}\r\n                  title='Shipped'\r\n                  // description='04-20-2020 09:20'\r\n                />\r\n                <Step\r\n                  status={this.state.steps === 5 ? 'finish' : 'wait'}\r\n                  title='Completed'\r\n                />\r\n              </Steps>\r\n            )}\r\n\r\n            <div className='artlist'>\r\n              <div className='cartord'>\r\n                {this.state.pendingOrders !== undefined\r\n                  ? this.state.pendingOrders.orderItems.map((item) => {\r\n                      return (\r\n                        <MDBRow className='artlistorder'>\r\n                          <MDBCol md='3' className='artimg colpad'>\r\n                            {item.artworkImg !== null ? (\r\n                              <img\r\n                                class='item-image'\r\n                                src={item.artworkImg}\r\n                                alt=''\r\n                              />\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                          </MDBCol>\r\n                          <MDBCol md='5' className='artdet colpad'>\r\n                            <a\r\n                              href='#!'\r\n                              onClick={() => {\r\n                                this.props.history.push({\r\n                                  pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                  state: {\r\n                                    artistName: `${item.accFname} ${item.accLname}`,\r\n                                    accImg: this.state.artistImg,\r\n                                    artistDescription: this.state\r\n                                      .accDescription,\r\n                                    birthYear: this.state.birthYear,\r\n                                    accFollowers: this.state.accFollowers,\r\n                                  },\r\n                                });\r\n                              }}\r\n                            >\r\n                              {' '}\r\n                              {\r\n                                item.artistName\r\n                              } <MDBIcon icon='arrow-right' />{' '}\r\n                            </a>\r\n                            <br />\r\n                            <p>\"{item.artworkName}\"</p>\r\n                            <p>\r\n                              Variations: {item.artworkMaterial},{' '}\r\n                              {item.artworkSize}, {item.artworkFramingOptions}\r\n                            </p>\r\n                            <p>&#8369; {item.artworkPaymentAmount}</p>\r\n                          </MDBCol>\r\n                          <MDBCol md='1' className='quan colpad'>\r\n                            x{item.artworkQuantity}\r\n                          </MDBCol>\r\n                          <MDBCol md='3' className='colpad'>\r\n                            <MDBRow>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                Subtotal\r\n                              </MDBCol>\r\n                              <MDBCol md='6' className='colpad2'>\r\n                                &#8369;{' '}\r\n                                {item.artworkPaymentAmount\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPaymentAmount)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </MDBCol>\r\n                            </MDBRow>\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      );\r\n                    })\r\n                  : ''}\r\n              </div>\r\n\r\n              <div className='acts clearfix'>\r\n                {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t\t\t</MDBRow> */}\r\n                <MDBRow className='actsrow'>\r\n                  <MDBCol md='2' className='total'>\r\n                    Total\r\n                  </MDBCol>\r\n                  <MDBCol md='10' className='total'>\r\n                    {(this.state.pendingOrders !== undefined\r\n                      ? 'PHP ' +\r\n                        this.state.pendingOrders.orderItems.reduce(\r\n                          (a, b) =>\r\n                            parseFloat(a) + parseFloat(b.artworkPaymentAmount),\r\n                          0\r\n                        )\r\n                      : '0').toLocaleString('en-GB', {\r\n                        style: 'currency',\r\n                        currency: 'PHP',\r\n                      })}\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                {/* <div className='actsbtn'>\r\n                  <MDBBtn size='sm' className='recieve'>\r\n                    Order Received\r\n                  </MDBBtn>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            {/* <MDBTable style={{ textAlign: \"center\" }}>\r\n            <MDBTableHead>\r\n              <th>Material</th>\r\n              <th>Size</th>\r\n              <th>Framing Options</th>\r\n              <th>Quantity</th>\r\n              <th>Status</th>\r\n              <th>Price</th>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Canvas</td>\r\n                <td>30.48 cm x 45.72 cm</td>\r\n                <td>Rustic Barnwood Distressed Wood</td>\r\n                <td>x1</td>\r\n                <td>Paid</td>\r\n                <td>&#8369; 150,000</td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>Total Price</td>\r\n                <td>&#8369; 300,000</td>\r\n              </tr>\r\n            </MDBTableBody>\r\n          </MDBTable> */}\r\n          </MDBModalBody>\r\n          {/* <MDBModalFooter>\r\n          <MDBBtn color=\"danger\" onClick={this.toggle(1)}>Close</MDBBtn>\r\n        </MDBModalFooter> */}\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n    MDBBtn,\r\n    MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBModalFooter\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment'\r\nimport {message} from 'antd'\r\n\r\n\r\n\r\nclass OrderDetails extends Component {\r\n  state = {\r\n    modal: false,\r\n\r\n  };\r\n\r\n\r\n  render() {\r\nlet {startingStore:{feedback,addFeedback}}=this.props;\r\n\r\n  \r\n let toggle = () => {\r\n  \r\n    this.setState({modal: true});\r\n\r\n    feedback.setProperty('feedbackID',`fb${Math.floor(1000 + Math.random() * 9000)}`)\r\n    feedback.setProperty('accID',this.props.orderInfo.accID)\r\n   \r\n    feedback.setProperty('orderID',this.props.orderInfo.orderID)\r\n    feedback.setProperty('date',moment().format('MMM/DD/YYYY'))\r\n    \r\n  };   \r\n\r\n  let close = ()=>{\r\n\r\n    this.setState({modal: false});\r\n  }\r\n  let submitFeedback = ()=>{\r\n\r\n    addFeedback();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('', 1)\r\n        .then(() => message.success('Feedback sent', 3));\r\n    };\r\n\r\n \r\n    \r\n   setTimeout(()=>{\r\n   success()\r\n   },600)\r\n   setTimeout(()=>\r\n   this.setState({modal: false})\r\n    ,1500)\r\n\r\n  }\r\n              \r\n    \r\n    return (\r\n      <div className='orderdetails'>\r\n        <MDBBtn\r\n          color='#fae933'\r\n          size='sm'\r\n          className='recieve'\r\n          onClick={() => toggle()}\r\n        \r\n        >\r\n          Send us feedback\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal}\r\n          toggle={() => toggle()}\r\n          size='lg'\r\n          centered\r\n        >\r\n          <MDBModalHeader toggle={() =>close()} style={{backgroundColor:'#231F20'}}>\r\n           <h6 style={{color:'white'}}>Feedback</h6> \r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlTextarea1\">\r\n            Please provide us feedback to improve Art,Basically.\r\n            </label>\r\n            <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"5\"\r\n            onChange={(feedbackNote) =>\r\n                feedback.setProperty('feedbackNote', feedbackNote.target.value)\r\n              }\r\n            />\r\n        </div>\r\n\r\n          </MDBModalBody>\r\n         <MDBModalFooter>\r\n          <MDBBtn color=\"#fae933\"  size='sm'  className='recieve'  onClick={()=>submitFeedback()}>Submit</MDBBtn>\r\n        </MDBModalFooter>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderDetails)));\r\n","import {\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBRow,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport OrderDetails from './OrderDetails';\r\nimport Cart from './Cart';\r\nimport {message} from 'antd';\r\nimport Feedback from './Feedback/'\r\n\r\nclass OrderTab extends Component {\r\n  state = {\r\n    activeItem: '1',\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n  };\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {getOrderUser, getToCart},\r\n    } = this.props;\r\n    getOrderUser();\r\n    getToCart();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  render() {\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    let {\r\n      startingStore: {\r\n        listOfSingleArtwork,\r\n        listOfUserCart,\r\n        listOfOrder,\r\n        listofUserOrder,\r\n        editOrder,\r\n        listOfOrders,\r\n      },\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    let pendingOrders = listofUserOrder.filter((items) => {\r\n      if (\r\n        items.orderStatus === 'Printing' || items.orderStatus === 'ForDelivery' ||\r\n        items.orderStatus.includes('Pending')\r\n      ) {\r\n        return items;\r\n      }\r\n    });\r\n\r\n    let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Completed' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    });\r\n\r\n\r\n    let listOfOrderDelivered = listOfOrders.filter((Received) => {\r\n      if (Received.orderStatus === 'Delivered' && Received.accID === mydata._id) {\r\n        return Received;\r\n      }\r\n    })\r\n\r\n    let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n      if (\r\n        Rejected.orderStatus === 'Rejected' && Rejected.accID === mydata._id ||\r\n        Rejected.orderStatus === 'PrintRejected' && Rejected.accID === mydata._id\r\n        ||\r\n        Rejected.orderStatus === 'Cancelled' && Rejected.accID === mydata._id\r\n      ) {\r\n        return Rejected;\r\n      }\r\n    })\r\n\r\n\r\n    let cancelOrder =( myorder) =>{\r\n      let filOrder = listofUserOrder.filter( ord => ord.orderID === myorder.orderID && ord.orderStatus === 'Printing' || ord.orderID === myorder.orderID && ord.orderStatus === 'ForDelivery').length\r\n\r\n      if (filOrder === 0){\r\n          editOrder(myorder._id, 'Cancelled', myorder.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 0.5)\r\n              .then(() => message.success('Order cancelled', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },500)\r\n      }else{\r\n        const success = () => {\r\n          message\r\n            .loading('', 0.5)\r\n            .then(() => message.success('Cant cancel order. Your order is already on printing or delivery.', 3));\r\n        };\r\n        setTimeout(() =>{\r\n          success()\r\n        },500)\r\n      }\r\n   \r\n    }\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <h4>My Orders</h4>\r\n        <MDBNav className='nav-tabs'>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '1'}\r\n              onClick={this.toggle('1')}\r\n              role='tab'\r\n                // className='ordernavlin k'\r\n            >\r\n              My Bag\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '2'}\r\n              onClick={this.toggle('2')}\r\n              role='tab'\r\n            >\r\n              Orders\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '3'}\r\n              onClick={this.toggle('3')}\r\n              role='tab'\r\n            >\r\n              Delivered\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '4'}\r\n              onClick={this.toggle('4')}\r\n              role='tab'\r\n            >\r\n              Completed\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '5'}\r\n              onClick={this.toggle('5')}\r\n              role='tab'\r\n            >\r\n              Cancelled\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink\r\n              link\r\n              to='#'\r\n              active={this.state.activeItem === '6'}\r\n              onClick={this.toggle('6')}\r\n              role='tab'\r\n            >\r\n              {/* <MDBIcon icon='history' /> */}\r\n               History\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNav>\r\n\r\n        <MDBTabContent activeItem={this.state.activeItem}>\r\n          <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <div className='artlist' >\r\n              <Cart cartData={listOfSingleArtwork[0]} />\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n            <div className='artlist pending '>\r\n              {pendingOrders.reverse().map((items, indexes) => (\r\n                <div className='cartord ' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              \r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        \r\n                        {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                      <div className='actsbtn'>\r\n                          <MDBBtn\r\n                            color='red'\r\n                            size='sm'\r\n                            className='det'\r\n                            onClick={() =>cancelOrder(items) }\r\n                          >\r\n                            Cancel order\r\n                          </MDBBtn>\r\n                          <OrderDetails\r\n                     \r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderDelivered.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n\r\n          <MDBTabPane tabId='4' role='tabpanel' className='tabs complete'>\r\n            <div className='artlist'>\r\n              {listOfOrderReceived.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2' style={{fontSize:'12px'}}>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                                 <Feedback  orderInfo={items}/>\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                         \r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='5' role='tabpanel' className='tabs'>\r\n            <div className='artlist cancelled'>\r\n              {listOfOrderCancelled.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                                <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                &#8369;\r\n                                  {item.artworkPaymentAmount}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                      {\r\n                          (+items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )).toLocaleString('en-GB', {\r\n                            style: 'currency',\r\n                            currency: 'PHP',\r\n                          })\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n\r\n          <MDBTabPane tabId='6' role='tabpanel' className='tabs'>\r\n            <div className='artlist history'>\r\n              {listofUserOrder.reverse().map((items, indexes) => (\r\n                <div className='cartord' style={{border:'1px solid #C8C8C8',marginTop:'16px'}}>\r\n                  {items !== undefined\r\n                    ? items.orderItems.map((item) => {\r\n                        return (\r\n                          <MDBRow className='artlistorder'>\r\n                            <MDBCol md='3' className='artimg colpad'>\r\n                              {item.artworkImg ? (\r\n                            <img src={item.artworkImg} alt='artwork'/>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                            </MDBCol>\r\n                            <MDBCol md='5' className='artdet colpad'>\r\n                              <a\r\n                                href='#!'\r\n                                onClick={() => {\r\n                                  this.props.history.push({\r\n                                    pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                                    state: {\r\n                                      artistName: `${item.accFname} ${item.accLname}`,\r\n                                      accImg: this.state.artistImg,\r\n                                      artistDescription: this.state\r\n                                        .accDescription,\r\n                                      birthYear: this.state.birthYear,\r\n                                      accFollowers: this.state.accFollowers,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.artistName} <MDBIcon icon='arrow-right' />\r\n                              </a>\r\n                              <br />\r\n                              <p>\"{item.artworkName}\"</p>\r\n                              <p>\r\n                                Variations: {item.artworkMaterial},{' '}\r\n                                {item.artworkSize}, {item.artworkFramingOptions}\r\n                              </p>\r\n                              <p>\r\n                                &#8369;\r\n                                {item.artworkPrice\r\n                                  ? Number(\r\n                                      parseFloat(item.artworkPrice)\r\n                                    ).toLocaleString('en')\r\n                                  : ''}\r\n                              </p>\r\n                            </MDBCol>\r\n                            <MDBCol md='1' className='quan colpad'>\r\n                              x{item.artworkQuantity}\r\n                            </MDBCol>\r\n                            <MDBCol md='3' className='colpad'>\r\n                              <MDBRow className='sub'>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  Subtotal\r\n                                </MDBCol>\r\n                                <MDBCol md='6' className='colpad2'>\r\n                                  {item.artworkPaymentAmount\r\n                                    ? parseFloat(\r\n                                        item.artworkPaymentAmount\r\n                                      ).toLocaleString('en-GB', {\r\n                                        style: 'currency',\r\n                                        currency: 'PHP',\r\n                                      })\r\n                                    : ''}\r\n                                </MDBCol>\r\n                              </MDBRow>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                        );\r\n                      })\r\n                    : ''}\r\n                  <div className='acts clearfix' style={{marginBottom: '30px'}}>\r\n                    {/* <MDBRow>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n                         <MDBCol md=\"6\" className=\"colpad2\">\r\n                           &#8369; 500\r\n                         </MDBCol>\r\n                       </MDBRow> */}\r\n                    <MDBRow className='actsrow'>\r\n                      <MDBCol md='5' className='total'>\r\n                        TOTAL\r\n                      </MDBCol>\r\n                      <MDBCol md='7' className='total'>\r\n                        &#8369;\r\n                        {\r\n                          +items.orderItems.reduce(\r\n                            (a, b) =>\r\n                              parseFloat(a) +\r\n                              parseFloat(b.artworkPaymentAmount),\r\n                            0\r\n                          )\r\n                        }\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <div className='actsbtn'>\r\n                          {/* <MDBBtn\r\n                            color='#fae933'\r\n                            size='sm'\r\n                            className='recieve'\r\n                            onClick={() =>\r\n                              editOrder(items._id, 'Received', items.accID)\r\n                            }\r\n                          >\r\n                            Order Received\r\n                          </MDBBtn> */}\r\n                   \r\n                          <OrderDetails\r\n                            pendingOrders={items}\r\n                            steps={items.orderStatus}\r\n                          />\r\n\r\n                        </div>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </MDBTabPane>\r\n        </MDBTabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBTabPane,\r\n  MDBTabContent,\r\n  MDBNav,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBInput,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message, Skeleton, Upload, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport art from '../../images/artworks/art1.png';\r\nimport { autorun } from 'mobx';\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass CProfileEdit extends Component {\r\n  componentDidMount() {\r\n    window.scrollTo(0,0)\r\n    let {\r\n      startingStore: {\r\n        getSingleEnthusiast,\r\n        getOrder,\r\n       \r\n      },\r\n    } = this.props;\r\n   \r\n     \r\n    getSingleEnthusiast(this.props.match.params.id);\r\n      getOrder();\r\n    \r\n  }\r\n\r\n  state = {\r\n    activeItem: '1',\r\n    loading: false,\r\n    pass:'',\r\n    confPass:'',\r\n  };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n   \r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: 'https://res.cloudinary.com/startupprojectph/image/upload/v1602125547/Webimg/Ea3jz_1WoAANHhD_jtefyt.png',\r\n      accID: '',\r\n      selectedFile: null,\r\n    \r\n \r\n    };\r\n   \r\n  }\r\n\r\n\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editAccount, account},\r\n    } = this.props;\r\n    account.setProperty('_id', this.props.data._id);\r\n    account.setProperty('accID', this.props.data.accID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited account..', 1.2)\r\n        .then(() => message.success('Successfully edited an Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onFileChangeP(e) {\r\n    let {\r\n      startingStore: { upload},\r\n    } = this.props;\r\n    \r\n   \r\n    this.setState({profileImg: URL.createObjectURL(e.target.files[0])});\r\n    \r\n    const formData2 = new FormData();\r\n    formData2.append('artworkImg',  e.target.files[0]);\r\n    formData2.append('type', 'artist');\r\n    upload(formData2, 'profile');\r\n\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        account,\r\n        editAccount,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n      },\r\n    } = this.props;\r\n\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className='ant-upload-text'>Upload Image</div>\r\n      </div>\r\n    );\r\n    const {imageUrl} = this.state;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n\r\n    let AccountInfo = ()=>{\r\n        \r\n\r\n          if (this.state.pass === this.state.confPass){\r\n\r\n         \r\n      account.setProperty('_id', userData._id);\r\n      account.setProperty('password',this.state.pass)\r\n      editAccount().then(resp=>{\r\n        if (resp === 'success'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      });\r\n\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cedit clearfix'>\r\n            <div className='clearfix chead'>\r\n              <h2>{this.props.match.params.id}</h2>\r\n              <MDBNavLink to='/Upload' className='btnYellow cuploadbtn'>\r\n                Upload Artwork\r\n              </MDBNavLink>\r\n            </div>\r\n            <div className='cmaincon'>\r\n              <MDBRow>\r\n                <MDBCol md='3' className='usertab'>\r\n                  <MDBNav className='nav-tabs mt-5 ctab'>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '1'}\r\n                        onClick={this.toggle('1')}\r\n                        role='tab'\r\n                      >\r\n                        Account Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '2'}\r\n                        onClick={this.toggle('2')}\r\n                        role='tab'\r\n                      >\r\n                        Profile Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '3'}\r\n                        onClick={this.toggle('3')}\r\n                        role='tab'\r\n                      >\r\n                        Orders\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '4'}\r\n                        onClick={this.toggle('4')}\r\n                        role='tab'\r\n                      >\r\n                       My Artworks\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    {/* <MDBNavItem>\r\n                      <MDBNavLink link to=\"#\" active={this.state.activeItem === \"5\"} onClick={this.toggle(\"5\")} role=\"tab\" >\r\n                        Collections\r\n                      </MDBNavLink>\r\n                    </MDBNavItem> */}\r\n                    <MDBNavItem>\r\n                      {/* <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '6'}\r\n                        onClick={this.toggle('6')}\r\n                        role='tab'\r\n                      >\r\n                        Favorites\r\n                      </MDBNavLink> */}\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '7'}\r\n                        onClick={this.toggle('7')}\r\n                        role='tab'\r\n                      >\r\n                        Log Out\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                  </MDBNav>\r\n                </MDBCol>\r\n\r\n                <MDBCol md='9' className='usertab'>\r\n                  <MDBTabContent\r\n                    activeItem={this.state.activeItem}\r\n                    className='ccon'\r\n                  >\r\n                    <MDBTabPane tabId='1' role='tabpanel'>\r\n                      {userData !== undefined ? (\r\n                        <form onSubmit={this.submitHandler}>\r\n                         \r\n                          <MDBInput\r\n                            label='Email Address'\r\n                            type='email'\r\n                            // hint={userData.accEmailAddress}\r\n                            valueDefault={userData.accEmailAddress}\r\n                            onChange={(accEmailAddress) =>\r\n                              account.setProperty(\r\n                                'accEmailAddress',\r\n                                accEmailAddress.target.value\r\n                              )\r\n                            }\r\n                            \r\n                          >\r\n                            <a href='#!' class='changee'>\r\n                              Change Email-Address\r\n                            </a>\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid email.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}\r\n                            onChange={(password) =>\r\n                              this.setState({pass:password.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Confirm New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}s\r\n                            onChange={(confpassword) =>\r\n                            this.setState({confPass:confpassword.target.value})\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <div class='custom-control custom-checkbox'>\r\n                            <input\r\n                              type='checkbox'\r\n                              class='custom-control-input'\r\n                              id='anycat'\r\n                            />\r\n                            <label\r\n                              class='custom-control-label clabel'\r\n                              for='anycat'\r\n                            >\r\n                              Allow viewing of adult related content.\r\n                            </label>\r\n                          </div>\r\n                          <MDBBtn\r\n                            className='submitreg clearfix btnYellow'\r\n                            color='#FAE933'\r\n                            onClick={() => {AccountInfo()}}\r\n                          >\r\n                            Save Changes\r\n                          </MDBBtn>\r\n                        </form>\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='2' role='tabpanel'>\r\n                      <h4>Update Profile Picture</h4>\r\n                      {/* <Upload\r\n                        name='avatar'\r\n                        listType='picture-card'\r\n                        className='avatar-uploader cpup clearfix'\r\n                        showUploadList={false}\r\n                        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                        beforeUpload={beforeUpload}\r\n                        onChange={this.onFileChangeP}\r\n                      >\r\n                        {imageUrl ? (\r\n                          <img\r\n                            src={imageUrl}\r\n                            alt='avatar'\r\n                            style={{width: '100%'}}\r\n                          />\r\n                        ) : (\r\n                          uploadButton\r\n                        )}\r\n                      </Upload> */}\r\n\r\n\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n        <div  className='regform formbtn'>\r\n          <div className=\"page req clearfix\" >\r\n<div className=\"container\">\r\n\t\t\t\t\t{/* <h6 className=\"heading\">Profile Picture</h6> */}\r\n\t\t\t\t\t<div className=\"img-holder\">\r\n\t\t\t\t\t\t<img src={this.state.profileImg} alt=\"\" id=\"img\" className=\"img\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"input\" onChange={this.onFileChangeP} required></input>\r\n\t\t\t\t\t<div className=\"label\">\r\n          <label className=\"image-upload btnYellow\" style={{backgroundColor:'#FAE933',border:'1px solid black'}} htmlFor=\"input\">\r\n\t\t\t\r\n\t\t\t\t\t\tChoose your photo\r\n\t\t\t\t\t</label>\r\n          </div>\r\n\t\t\t\t</div>\r\n        </div>\r\n        </div>\r\n        \r\n\t\t\t\r\n                      <div>\r\n                        <h4>Personal Information</h4>\r\n\r\n                        <MDBInput\r\n                            label='First Name'\r\n                            type='text'\r\n                            // hint={listofArtistInfo.accFname}\r\n                            valueDefault={`${userData.accFname}`}\r\n                            onChange={(accFname) =>\r\n                              account.setProperty(\r\n                                'accFname',\r\n                                accFname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid first name.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Last Name'\r\n                            type='text'\r\n                            // hint={userData.accLname}\r\n                            valueDefault={userData.accLname}\r\n                            onChange={(accLname) =>\r\n                              account.setProperty(\r\n                                'accLname',\r\n                                accLname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid last name.\r\n                            </div>\r\n                          </MDBInput>\r\n\r\n                        <MDBInput\r\n                          label='Address'\r\n                          type='text'\r\n                          valueDefault={userData.accAddress}\r\n                          onChange={(accAddress) =>\r\n                            account.setProperty(\r\n                              'accAddress',\r\n                              accAddress.target.value\r\n                            )\r\n                          }\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid address.\r\n                          </div>\r\n                        </MDBInput>\r\n                        {/* <MDBInput\r\n                          type='textarea'\r\n                          label='Bio'\r\n                          rows='5'\r\n                          \r\n                        /> */}\r\n                        {/* <MDBInput\r\n                          label='Facebook'\r\n                          type='text'\r\n                          hint='e.g. https://www.facebook.com/artbasically'\r\n                       \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid facebook url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                        {/* <MDBInput\r\n                          label='Instagram'\r\n                          type='text'\r\n                          hint='e.g. https://www.instagram.com/artbasically'\r\n                        \r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid instagram url.\r\n                          </div>\r\n                        </MDBInput> */}\r\n                      </div>\r\n                      <MDBBtn\r\n                        className='submitreg clearfix btnYellow'\r\n                        color='#FAE933'\r\n                        // type='submit'\r\n                        onClick={() => {\r\n                          account.setProperty('_id', userData._id);\r\n                          editAccount().then(resp=>{\r\n                            if (resp === 'success'){\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Changes saved', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }else{\r\n                              const success = () => {\r\n                                message\r\n                                  .loading('', 1)\r\n                                  .then(() => message.success('Try again', 1));\r\n                              };\r\n                          \r\n                              setTimeout(() => {\r\n                                success();\r\n                              }, 0);\r\n                            }\r\n                          });\r\n                        }}\r\n                      >\r\n                        Save Changes\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='3' role='tabpanel'>\r\n                      <OrderTab />\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='4' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                  \r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                        {/* <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li> */}\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    {/* <MDBTabPane tabId=\"5\" role=\"tabpanel\">\r\n                      <ul className=\"col3img rowart clearfix\">\r\n                        {listofArtistArtwork !== undefined ?\r\n                          listofArtistArtwork.map(art =>\r\n                            <li>\r\n                              <a href=\"\" className=\"artlink\">\r\n                                <img src={art.artworkImg} />\r\n                              </a>\r\n                              <div className=\"artistinfo clearfix pad10\">\r\n                                <p>{art.artName}</p>\r\n                                <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                              </div>\r\n                            </li>\r\n                          ) : <Skeleton active />\r\n                        }\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <img src={art} />\r\n                          </a>\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane> */}\r\n                    <MDBTabPane tabId='6' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .reverse()\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                <img src={art.artworkImg} alt='artwork'/>\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='7' role='tabpanel'>\r\n                      <p className='float-left outp'>\r\n                        Are you sure you want to Log Out?\r\n                      </p>\r\n                      <MDBBtn\r\n                        className='btnYellow'\r\n                        color='FAE933'\r\n                        onClick={() => {\r\n                          sessionStorage.removeItem('userData');\r\n                        }}\r\n                      >\r\n                        <Link to={`/`}> Confirm</Link>\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                  </MDBTabContent>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfileEdit));\r\n","import React, {Component} from 'react';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport OrderTab from '../../components/OrderTab';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nclass Order extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrder},\r\n    } = this.props;\r\n    getOrder();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cart-items'>\r\n            <div className='clearfix'>\r\n              <OrderTab />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div >\r\n        <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default inject('startingStore')(observer(Order));\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your information will be evaluated by ArtBasically kindly wait for us\r\n          to contact you.\r\n          <br /> Thank you for your interest in joining us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport class RegVerify extends Component {\r\n  render() {\r\n    return (\r\n      <div className='ver'>\r\n        <a href='/Home'>\r\n          <img src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' alt='' />\r\n        </a>\r\n        <p>\r\n          Your artwork will be evaluated by ArtBasically kindly wait for us to\r\n          contact you.\r\n          <br /> Thank you for sharing your artwork with us!\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegVerify;\r\n","import {MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nclass Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by price </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n               \r\n                <form>\r\n         \r\n\r\n                  <h5>Price</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anyprice'\r\n                      />\r\n                      <label class='custom-control-label' for='anyprice'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange1'\r\n                        onChange={() => {\r\n                          this.setPrice(['0', '5000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange1'>\r\n                        PHP0 - PHP5,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange2'\r\n                        onChange={() => {\r\n                          this.setPrice(['5000', '10000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange2'>\r\n                        PHP5,000 - PHP10,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange3'\r\n                        onChange={() => {\r\n                          this.setPrice(['10000', '20000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange3'>\r\n                        PHP10,000 - PHP20,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange4'\r\n                        onChange={() => {\r\n                          this.setPrice(['20000', '30000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange4'>\r\n                        PHP20,000 - PHP30,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange5'\r\n                        onChange={() => {\r\n                          this.setPrice(['30000', '40000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange5'>\r\n                        PHP30,000 - PHP40,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange6'\r\n                        onChange={() => {\r\n                          this.setPrice(['40000', '50000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange6'>\r\n                        PHP40,000 - PHP50,000\r\n                      </label>\r\n                    </li>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='pricerange7'\r\n                        onChange={() => {\r\n                          this.setPrice(['50000', '1000000']);\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='pricerange7'>\r\n                        PHP50,000 and Up\r\n                      </label>\r\n                    </li>\r\n                  </ul>\r\n         \r\n              \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import {MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n     \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  \r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize,getMyLists},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    getMyLists()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'yourlists') {\r\n        return <h3>My Lists</h3>;\r\n      }\r\n   \r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter  type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n\r\n","\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ArtworkFilter from '../../components/ArtworkFilter';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\n class Artworks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      price: [],\r\n      categories: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtists, getArtworkInfo, getCategories,getPrintSize},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getCategories();\r\n    getPrintSize()\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n  \r\n\r\n  setPrice = (amt) => {\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    let filteredArtwork = listOfArtworks.filter((art) => {\r\n      if (\r\n        parseInt(art.artPrice) >= parseInt(amt[0]) &&\r\n        parseInt(art.artPrice) <= parseInt(amt[1])\r\n      ) {\r\n        arts.push(art);\r\n      }\r\n    });\r\n    this.setState({price: arts});\r\n  };\r\n\r\n  setCategories = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artTheme.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n  setPrintSize = (amt) => {\r\n    if (this.selectedCheckboxes.has(amt)) {\r\n      this.selectedCheckboxes.delete(amt);\r\n    } else {\r\n      this.selectedCheckboxes.add(amt);\r\n    }\r\n    let {\r\n      startingStore: {listOfArtworks},\r\n    } = this.props;\r\n    let arts = [];\r\n    if (amt === 'none' || this.selectedCheckboxes.length === 0) {\r\n      this.setState({price: listOfArtworks});\r\n    } else {\r\n      let newCategories = Array.from(this.selectedCheckboxes);\r\n      let filteredArtwork = listOfArtworks.filter((art) => {\r\n        newCategories.map((cat) => {\r\n          if (art.artSize.includes(cat)) {\r\n            arts.push(art);\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({price: arts});\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, filter,listOfPrintSize},\r\n    } = this.props;\r\n    let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    let printSizeList = listOfPrintSize.map((size) => size.printSize);\r\n    let type = filter !== false ? filter : sessionStorage.getItem('type');\r\n    let h3Type = () => {\r\n      if (type === 'discover') {\r\n        return <h3>Shop by category </h3>;\r\n      } else if (type === 'foryou') {\r\n        return <h3>Recommended For You</h3>;\r\n      } else if (type === 'latest') {\r\n        return <h3>Latest Artworks</h3>;\r\n      } else if (type === 'categoriesfollow') {\r\n        return <h3>Categories You Follow</h3>;\r\n      } else if (type === 'artistyoufollow') {\r\n        return <h3>Artist You Follow</h3>;\r\n      } else if (type === 'bestseller') {\r\n        return <h3>Best Sellers</h3>;\r\n      }\r\n     else if (type === 'onSale') {\r\n        return <h3>On Sale</h3>;\r\n      }\r\n    };\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artworks'>\r\n          <div className='aside'>\r\n            <div className='filter'>\r\n              <div className='filter'>\r\n              \r\n                <form>\r\n                  <h5>Category</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                      <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anycat'\r\n                        onChange={() => {\r\n                          this.setCategories('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anycat'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {categoryList.map((cat) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={cat}\r\n                          onChange={() => {\r\n                            this.setCategories(cat);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={cat}>\r\n                          {cat}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n          \r\n\r\n    \r\n                  <h5>Orientation/Size</h5>\r\n                  <ul>\r\n                    <li class='custom-control custom-checkbox'>\r\n                    <input\r\n                        type='checkbox'\r\n                        class='custom-control-input'\r\n                        id='anysize'\r\n                        onChange={() => {\r\n                          this.setPrintSize('none');\r\n                        }}\r\n                      />\r\n                      <label class='custom-control-label' for='anysize'>\r\n                        Any\r\n                      </label>\r\n                    </li>\r\n                    {printSizeList.map((size) => (\r\n                      <li class='custom-control custom-checkbox'>\r\n                        <input\r\n                          type='checkbox'\r\n                          class='custom-control-input'\r\n                          id={size}\r\n                          onChange={() => {\r\n                            this.setPrintSize(size);\r\n                          }}\r\n                        />\r\n                        <label class='custom-control-label' for={size}>\r\n                          {size}\r\n                        </label>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                 \r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='main'>\r\n            <section className='latest'>\r\n              {h3Type()}\r\n              <ArtworkFilter price={this.state.price} type={type} />\r\n            </section>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artworks));\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport {message} from 'antd';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nclass AdminLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('', 1)\r\n            .then(() => message.success('Welcome to Art Basically', 3));\r\n        };\r\n\r\n     \r\n        \r\n       setTimeout(()=>{\r\n       success()\r\n       },600)\r\n       setTimeout(()=>\r\n        this.props.history.push('/AdminHome')\r\n        ,1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 0.5)\r\n            .then(() => message.error('Email or password is incorrect', 1.5));\r\n        };\r\n        setTimeout(()=>{\r\n          success()\r\n          },600)\r\n        setTimeout(() => {\r\n          this.props.history.push('/Admin');\r\n        }, 1500);\r\n    \r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>ADMIN LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li className='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                className='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label className='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(AdminLogin)))\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport { MDBIcon } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrderUser,getOrders}}=this.props;\r\n    getAccounts()\r\n    getOrderUser()\r\n    getOrders()\r\n  }\r\n\r\n\r\n    render() {\r\nlet {startingStore:{listOfUsers,listOfOrders}}=this.props;\r\n\r\nlet activeArtists = listOfUsers.filter (usr => usr.accessType === 'Artist' && usr.acc_Status === 'Active').length;\r\n\r\nlet artEnthu = listOfUsers.filter (usr => usr.accessType === 'Standard' && usr.acc_Status === 'Active').length;\r\nlet Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery').length;\r\nlet CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed' || ord.orderStatus === 'Rejected').length;\r\n\r\nlet CompletedOrders = listOfOrders.filter (ord => ord.orderStatus === 'Completed' ).length;\r\n\r\nlet salesYTD =  listOfOrders.map(product => {\r\n  \r\n  return (\r\n\r\n    listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n    .reduce((sum, record) => parseInt(sum) + parseInt(record.totalAmount) , 0)\r\n\r\n\r\n\r\n    );\r\n\r\n })\r\n const sales = `${salesYTD.pop()}`;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  \r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} sm={12} xs={12}>\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nSales YTD\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>\r\n  {sales === 'undefined' ?(\r\n    '0'\r\n  ):(\r\n  sales\r\n  )\r\n\r\n}\r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n{/* <PersonAddDisabledIcon style={{fontSize:\"3.5em\"}}/> */}\r\n<MDBIcon icon=\"users\" style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArt Enthusiasts\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{artEnthu}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n  <Grid container xs={12} sm={12}>\r\n\r\n  <Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"user-tie\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n    <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n   \r\n<Typography className={classes.title}   >\r\nArtists\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{activeArtists}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MDBIcon icon=\"clipboard-list\" style={{fontSize:\"3.3em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea > */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={5} sm={5}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<CollectionsBookmarkOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={7} sm={7} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCompleted Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{CompletedOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import React, {Component} from 'react';\r\nimport {MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;\r\n","\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBModalFooter} from 'mdbreact';\nimport {inject, observer} from 'mobx-react';\nimport React, { Component, Fragment } from 'react'\nimport DownloadImage from './../sections/DownloadImage';\nimport {message} from 'antd';\n\n\n class Artists extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreinfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n          account.setProperty('accLname',itm.accLname)\n          account.setProperty('accAddress',itm.accAddress)\n          account.setProperty('birthYear',itm.birthYear)\n          account.setProperty('accInstitution',itm.accInstitution)\n          account.setProperty('artistDescription',itm.artistDescription)\n          account.setProperty('acc_Documents',itm.acc_Documents)\n          account.setProperty('profile_Img',itm.profile_Img)\n          account.setProperty('accEmailAddress',itm.accEmailAddress)\n          account.setProperty('password',itm.password)\n          this.setState({\n            modal: true\n          \n          });\n          };\n          let deactivate =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n\n      \n          }\n        \n\nconst ArtistsTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n       \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>moreinfo(row.userDB)} color='moreinfo'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}} onClick={()=>deactivate(row.userDB)} color='reject'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal} centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n                  <li>\n                    489\n                    <span>Followers</span>\n                  </li>\n                  {/* <li>\n                    4.8/5\n                    <span>528k Ratings</span>\n                  </li> */}\n                 \n                </ul>\n              </div>\n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <ArtistsTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Artists))\n\n\n\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBModalFooter\n} from 'mdbreact';\nimport {inject, observer} from 'mobx-react';\nimport React, { Component, Fragment } from 'react'\nimport DownloadImage from '../sections/DownloadImage';\nimport {message} from 'antd';\n\n\n class Customer extends Component {\n  state = {\n    modal: false,\n    items:[]\n   \n  };\n\n   componentDidMount() {   \n    let {\n      startingStore: {getAccounts},\n    } = this.props;\n    getAccounts();\n \n\n  }\n  \n\n  render() {\n    let close =()=>{\n      this.setState({\n        modal: false\n      });\n     }\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname, email, address,action) {\n      return { userDB,id,fname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Standard' && usr.acc_Status === 'Active') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,`${users.accFname} ${users.accLname}`\n           ,users.accEmailAddress,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n        let  moreInfo = (itm) => {\n         \n          account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n              this.setState({\n                modal: true\n              \n              });\n          };\n          let deactivate =(itm)=>{\n         \n\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Deactivated')\n     editAccount()\n            const success = () => {\n             message\n               .loading('', 1)\n               .then(() => message.success('Account Deactivated', 3));\n           };\n     \n           setTimeout(() =>{\n             success()\n           },1000)\n          }\n        \n\nconst CustomerTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n      \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve'> More Info</MDBBtn>\n        <MDBBtn  onClick={()=>deactivate(row.userDB)} color='reject'> Deactivate</MDBBtn></div>,\n      \n\n     }\n     \n     ) })\n    ]\n\n  };\n\n  return (\n    <Fragment>\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n    />\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                \n          \n                </div>\n              </div>\n       \n            </div>\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n  </Fragment>\n  );\n}\n\nreturn (\n  <CustomerTable/>\n)\n}\n}\n\n\n\nexport default inject('startingStore')(observer(Customer))\n\n\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead, MDBModalFooter} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\nimport {message} from 'antd';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    } = this.props;\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n\r\n \r\n    function createData(artworkDB,id,title,artist, style,  price,action) {\r\n      return { artworkDB,id,title,artist, style,  price,action };\r\n    }\r\n\r\nlet pArtworks = listOfArtworks.filter((art) => {\r\n            if ( art.artworkStatus === 'Active') {\r\n              return art;\r\n            }\r\n          }).map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreInfo = (itm) => {\r\n          artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n          artwork.setProperty('artTheme',itm.artTheme)\r\n          artwork.setProperty('artSize',itm.artSize)\r\n          artwork.setProperty('artCategory',itm.artCategory)\r\n          artwork.setProperty('artworkID',itm.artworkID)\r\n          artwork.setProperty('artName',itm.artName)\r\n          artwork.setProperty('artDescription',itm.artDescription)\r\n          artwork.setProperty('artPrice',itm.artPrice)\r\n          artwork.setProperty('artistName',itm.artistName)\r\n          artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n          artwork.setProperty('artDimension',itm.artDimension)\r\n          artwork.setProperty('artType',itm.artType)\r\n          artwork.setProperty('dateAdded',itm.dateAdded)\r\n          artwork.setProperty('artworkImg',itm.artworkImg)\r\n          this.setState({\r\n            modal: !this.state.modal\r\n          });\r\n       \r\n          };\r\n\r\n          let  close = () => {\r\n            this.setState({\r\n              modal: false\r\n            });\r\n            };\r\n\r\n          let archive =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('artworkStatus','Archived');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Archived', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price}`,\r\n        action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject'> Archive</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  \r\n<MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Approved' || Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order Stat',\r\n        field: 'orderStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        orderStat:`${row.orderStat}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBModalFooter\n} from 'mdbreact';\nimport {inject, observer} from 'mobx-react';\nimport React, { Component, Fragment } from 'react'\n\nimport {message} from 'antd';\nimport {withRouter} from 'react-router-dom'\n\n class Deactivated extends Component {\n  state = {\n    modal: false,\n    \n   \n  };\ncomponentDidMount(){\n  let{startingStore:{getAccounts}}=this.props;\n  getAccounts();\n}\n\n  \n\n\n\n  render() {\n\n  \n   let close =()=>{\n    this.setState({\n      modal: false\n    });\n   }\n\n    let { startingStore: {listOfUsers,editAccount, account}} = this.props;\n\n    \n    function createData(userDB,id,fname,lname, email, address,action) {\n      return { userDB,id,fname,lname, email, address,action };\n    }\n\nlet users = listOfUsers.filter((usr) => {\n            if (usr.accessType === 'Artist' && usr.acc_Status === 'Pending') {\n              return usr;\n            }\n          }).map(users =>{\n            return(createData(\n           users,users.accID\n           ,users.accFname,users.accLname\n           ,users.accEmailAddress,users.accAddress\n\n\n            ))\n          })\n\n\n          let  info = (itm) => {\n            this.setState({\n              modal: true\n            \n            });\n  \n              account.setProperty('accFname',itm.accFname)\n              account.setProperty('accLname',itm.accLname)\n              account.setProperty('accAddress',itm.accAddress)\n              account.setProperty('birthYear',itm.birthYear)\n              account.setProperty('accInstitution',itm.accInstitution)\n              account.setProperty('artistDescription',itm.artistDescription)\n              account.setProperty('acc_Documents',itm.acc_Documents)\n              account.setProperty('profile_Img',itm.profile_Img)\n              account.setProperty('accEmailAddress',itm.accEmailAddress)\n              account.setProperty('password',itm.password)\n            \n        \n           \n          }\n      \n        let  approve = (itm) => {\n        \n       account.setProperty('_id',itm._id)\n       account.setProperty('acc_Status','Active')\n\n\n\n      editAccount().then((resp) => {\n       \n        if (resp === 'success') {\n                const success = () => {\n        message\n          .loading('', 1)\n          .then(() => message.success('Account Approved', 3));\n      };\n\n      setTimeout(() =>{\n        success();\n      },1000)\n     \n    \n          setTimeout(()=>{\n            window.location.reload(false);\n          },1500)\n        } else {\n          const error = () => {\n            message\n            .loading('', 1)\n            .then(() => message.success('Try Again', 3));\n          };\n          setTimeout(() => {\n            error();\n          }, 200)\n      \n        }\n      });\n          }\n\n         \n         \n         \n         \n          let reject =(itm)=>{\n            account.setProperty('_id',itm._id)\n            account.setProperty('acc_Status','Rejected')\n            editAccount()\n            const success = () => {\n              message\n                .loading('', 1)\n                .then(() => message.success('Account Rejected', 3));\n            };\n\n            setTimeout(() =>{\n              success()\n           \n            },1000)\n            setTimeout(()=>{\n              window.location.reload(false);\n            },1500)\n       \n          }\n        \n\n\nconst DeactivatedTable = () => {\n  const data = {\n    columns: [\n      {\n        label: 'ID',\n        field: 'id',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Name',\n        field: 'fname',\n        sort: 'asc',\n        width: 'auto'\n      },\n     \n\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Address',\n        field: 'address',\n        sort: 'asc',\n        width: 'auto'\n      },\n      {\n        label: 'Action',\n        field: 'action',\n        sort: 'asc',\n        width: 'auto'\n      },\n    \n    ],\n    rows: \n   \n    [...users.map((row,i) => {\n     \n      return(\n\n     {\n        id: `${row.id}`,\n        fname: `${row.fname} ${row.lname}`,\n      \n      \n        email: `${row.email}`,\n        address: `${row.address}`,\n        action:<div style={{maxWidth:'340px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.userDB)} color='approve'>More Info</MDBBtn>\n        <MDBBtn style={{float:'left'}}  onClick={()=>{approve(row.userDB)}} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>{reject(row.userDB)}} color='reject'> Reject</MDBBtn>\n        </div>,\n      \n      \n     }\n     \n     ) })\n    ]\n\n  }\n  return(\n    <Fragment>\n  <MDBDataTable\n  striped\n  bordered\n  small\n  data={data}\n/>\n\n<MDBModal isOpen={this.state.modal}  centered>\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}> Artist's Profile</span></MDBModalHeader>\n        \n          <MDBModalBody>\n\n                <div className='artist'>\n            <div className='artistprofile clearfix'>\n              <div className='left'>\n                <div className='artistpp'>\n              \n                  \n                    <img \n      src={account.profile_Img}\n      alt=\"profilePic\"\n      />\n               \n                </div>\n                <div className='artistInfo'>\n                 <h2 className='title'>\n                      {`${account.accFname} ${account.accLname}`}\n                  \n                    </h2>\n               \n                \n                    <span className='bday'>\n                      {account.accAddress}, born{' '}\n                      {account.birthYear}\n                    </span>\n                 \n                  <span className='estart'>Established Artist</span>\n          \n                </div>\n              </div>\n              <div className='right'>\n                <ul>\n          \n                </ul>\n              </div>\n            </div>\n            <div className=' clearfix'>\n              <h4 className='paddh4'>Biography</h4>\n          \n                <p>{account.artistDescription}</p>\n            \n            </div>\n\n            <div className='artistbio clearfix'>\n              <h4 className='paddh4'>Document</h4>\n          \n              <img \n      src={account.acc_Documents}\n      alt=\"profilePic\"\n      style={{width:'100%',maxWidth:'900px',height:'100%'}}\n      />\n            \n            </div>\n   \n          </div>\n      \n        \n      \n          </MDBModalBody>\n           \n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\n            \n          </MDBModalFooter>\n        </MDBModal>\n        </Fragment>\n  )\n}\n\n  function PendingTable(){\n\n  return (\n    <Fragment>\n<DeactivatedTable/>\n\n\n    \n  </Fragment>\n  );\n\n}\nreturn (\n  <PendingTable/>\n)\n}\n}\n\n\n\nexport default withRouter(inject('startingStore')(observer(Deactivated)))\n\n\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead, MDBModalFooter} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {message} from 'antd';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n class PendingArtwork extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n   componentDidMount() {   \r\n    let {\r\n      startingStore: {getAllArtworks, getArtists, getStyles, getCategories},\r\n    } = this.props;\r\n    \r\n    getAllArtworks();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n\r\n \r\n    function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n      return { artworkDB,id,title,artist, style, date, price,action };\r\n    }\r\n\r\nlet filArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending')\r\n\r\n\r\nlet pArtworks = filArtworks.map(artworks =>{\r\n            return(createData(\r\n           artworks,artworks.artworkID,artworks.artName\r\n           ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n           ,artworks.artPrice\r\n            ))\r\n          })\r\n\r\n\r\n\r\n          let  info = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n        let  approve = (data) => {\r\n         \r\n\r\n\r\n\r\n\r\n          artwork.setProperty('_id', data._id);\r\n          artwork.setProperty('accID',data.accID)\r\n          artwork.setProperty('artworkStatus','Active');\r\n\r\n          editArtwork();\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Arwork Approved', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(data)=>{\r\n            artwork.setProperty('_id', data._id);\r\n            artwork.setProperty('accID',data.accID)\r\n            artwork.setProperty('artworkStatus','Rejected');\r\n  \r\n            editArtwork();\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Arwork Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingArtworkTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'No.',\r\n        field: 'no',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Title',\r\n        field: 'title',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Artist',\r\n        field: 'artist',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Style',\r\n        field: 'style',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Price',\r\n        field: 'price',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      }, {\r\n        label: 'Date Added',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...pArtworks.map((row,i) => {\r\n      let no = i+1;\r\n      return(\r\n\r\n     {\r\n        no: `${no}`,\r\n        id: `${row.id}`,\r\n        title: `${row.title}`,\r\n        artist: `${row.artist}`,\r\n      \r\n        style: `${row.style}`,\r\n        price: `${row.price}`,\r\n        date:`${row.date}`,\r\n        action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve'> Info</MDBBtn><MDBBtn style={{float:'left'}}  onClick={()=>approve(row.artworkDB)} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.artworkDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ) })\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n  \r\n  <MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingArtworkTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingArtwork))\r\n","\r\n\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\nimport {message} from 'antd';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport moment from 'moment'\r\n\r\n class PendingOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   let {\r\n  //     startingStore: {getOrders, getAccounts},\r\n  //   } = this.props;\r\n   \r\n  //   getAccounts();\r\n  //   getOrders();\r\n  // }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder,notif,addNotif}} = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData')) \r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n    let date = new Date();\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Pending' ) {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( `${user.accFname} ${user.accLname}`\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'PendingPrint', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Order Approved', 3));\r\n          };\r\n\r\n\r\n          notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n          notif.setProperty('notifSender','admin-001')\r\n          notif.setProperty('notifRecipient','print-001')\r\n          notif.setProperty('notifSubject','Printing')\r\n          notif.setProperty('notifMsg','New item to print')\r\n          notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n          notif.setProperty('notifStatus','unread')\r\naddNotif()\r\n\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n\r\n            notif.setProperty('notifID',`${getHash(userData.accFname.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`)\r\n            notif.setProperty('notifSender','admin-001')\r\n            notif.setProperty('notifRecipient',userData.accID)\r\n            notif.setProperty('notifSubject','Order')\r\n            notif.setProperty('notifMsg','Order Rejected')\r\n            notif.setProperty('notifDT',moment().format('MMM/DD/YY,h:mm:ssa'))\r\n            notif.setProperty('notifStatus','unread')\r\n  addNotif()\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n    \r\n          let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n\r\nconst PendingOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 200\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:\r\n        <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.orderDB)} color='yellow'> Items</MDBBtn> <MDBBtn style={{float:'left'}} onClick={()=>approve(row.orderDB)} color='approve'> Approve</MDBBtn><MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n\r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n   \r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      responsive\r\n      data={data}\r\n    />\r\n\r\n <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingOrder))","import React from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBFormInline,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport DashCard from './DashCards'\r\nimport ArtistTable from './sections/ArtistTable';\r\nimport CustomerTable from './sections/CustomerTable';\r\nimport ArtworkTable from './sections/ArtworkTable';\r\n\r\nimport OrderTable from './sections/OrderTable';\r\nimport PendingArtistTable from './sections/PendingArtistTable';\r\nimport PendingArtworkTable from './sections/PendingArtworkTable';\r\nimport PendingOrderTable from './sections/PendingOrderTable';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nconst DashboardSection = () => {\r\n  return (\r\n    <div>\r\n      <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n            \r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n            <MDBFormInline className='md-form m-0 adminsearch'>\r\n              {/* <input\r\n                className='form-control form-control-sm'\r\n                type='search'\r\n                placeholder='Type your query'\r\n                aria-label='Search'\r\n              /> */}\r\n              {/* <MDBBtn size='sm' color='#FAE933' className='my-0' type='submit'>\r\n                <MDBIcon icon='search' />\r\n              </MDBBtn> */}\r\n            </MDBFormInline>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      <div class='mb-4'>\r\n<DashCard/>\r\n</div>\r\n<Grid container  xs={12} sm={12}>\r\n  <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n    \r\n  <Paper>\r\n    <div class='p-2 '>\r\n<h3>Pending Orders</h3>\r\n      <PendingOrderTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid> \r\n\r\n\r\n\r\n      <Grid item xs={12} sm={12} style={{marginBottom:'12px'}}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Pending Arworks</h3>\r\n      <PendingArtworkTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Artist Membership Requests</h3>\r\n      <PendingArtistTable />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>   \r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSection;\r\n"," import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from './DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from '../../sections/DownloadImage';\r\n   class CancelledOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Cancelled') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const CancelledOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data) => (\r\n                <tr>\r\n                  <td>\r\n                    <img\r\n                      style={{width: '100% ', height: 'auto'}}\r\n                      src={data.artworkImg}\r\n                      alt=''\r\n                    />\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <CancelledOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(CancelledOrder))","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Pending from './../PendingOrderTable'\r\n  import Orders from './../OrderTable'\r\n  import Completed from './../CompletedOrder'\r\n  import Cancelled from './../CancelledOrders'\r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>My Orders</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Orders\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Completed\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '4'}\r\n                onClick={this.toggle('4')}\r\n                role='tab'\r\n              >\r\n                Cancelled\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Orders/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n            <Completed/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='4' role='tabpanel' className='tabs'>\r\n            <Cancelled/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import React, {Component} from 'react';\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBIcon,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n  MDBFormInline,\n  MDBBtn,\n} from 'mdbreact';\nimport OrderTable from './sections/OrderTable';\nimport PendingOrderTable from './sections/PendingOrderTable';\nimport Completed from './sections/CompletedOrder'\nimport OrderTabs from './sections/OrderTab'\n\nclass OrdersTab extends Component {\n  render() {\n    return (\n      <div>\n        <div className='adminbreadcrumb'>\n          <MDBCard>\n            <MDBCardBody\n              id='breadcrumb'\n              className='d-flex align-items-center justify-content-between'\n            >\n              <MDBBreadcrumb>\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\n                <MDBBreadcrumbItem active>Orders</MDBBreadcrumbItem>\n              </MDBBreadcrumb>\n        \n            </MDBCardBody>\n          </MDBCard>\n        </div>\n        <MDBCard>\n          <MDBCardBody>\n      <OrderTabs/>\n      </MDBCardBody>\n      </MDBCard>\n      </div>\n    );\n  }\n}\n\nexport default OrdersTab;\n","import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {upload, artwork},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    artwork.setProperty('artworkID', this.getUniqueID());\r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Successfully added an Artwork', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    artwork.setProperty('accID',mydata.accID)\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\r\n\r\n    // console.log(categoryList)\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          ADD ARTWORK\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>ADD ARTWORK</MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='text'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  {/* <SelectTheme theme = {categoryList} style = {styleList}/> */}\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={(catType) =>\r\n                    // //   artwork.setProperty('catType', catType.target.value)\r\n                    // }\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Dimension'\r\n                    type='text'\r\n                    onChange={(artDimension) =>\r\n                      artwork.setProperty(\r\n                        'artDimension',\r\n                        artDimension.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='text'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='text'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                    <img src={this.state.selectedFile} alt='' />\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead, MDBModalFooter} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  import { Grid } from '@material-ui/core';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n      } = this.props;\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => {\r\n              if (art.artworkStatus === 'Archived') {\r\n                return art;\r\n              }\r\n            }).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n        \r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n         \r\n            };\r\n\r\n            let  close = () => {\r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Active');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n  <MDBModal isOpen={this.state.modal} centered>\r\n          <MDBModalHeader toggle={()=>close()} style={{backgroundColor:'#231F20',textAlign:'center'}}><span style={{color:'white'}}>Artwork Information</span></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : </h6>\r\n    <p>{artwork.artDescription}</p>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Pending from './../PendingArtworkTable';\r\n  import Artworks from './../ArtworkTable'\r\n  import ArchivedArtwors from './../ArchivedArtworks'\r\n\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artwork Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport AddArtwork from './sections/AddArtwork';\r\nimport ArtworkTabs from './sections/ArtworkTab';\r\n class ArtworkTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtwork />\r\n      \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <ArtworkTabs/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArtworkTab;\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Standard' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n           \r\n  \r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n    \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n         \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.userDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  ","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Customers from './../CustomerTable';\r\n import Deactivated from './../DeactivatedAccount'\r\n \r\n\r\n  \r\n  class UsrsTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrderUser, getToCart},\r\n      } = this.props;\r\n      getOrderUser();\r\n      getToCart();\r\n    }\r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n      let {\r\n        startingStore: {\r\n          listOfSingleArtwork,\r\n          listOfUserCart,\r\n          listOfOrder,\r\n          listofUserOrder,\r\n          editOrder,\r\n          listOfOrders,\r\n        },\r\n      } = this.props;\r\n      let totalPrice = listOfUserCart.reduce(\r\n        (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n        0\r\n      );\r\n  \r\n      let pendingOrders = listofUserOrder.filter((items) => {\r\n        if (\r\n          items.orderStatus === 'Delivery' ||\r\n          items.orderStatus.includes('Pending')\r\n        ) {\r\n          return items;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderReceived = listOfOrders.filter((Received) => {\r\n        if (Received.orderStatus === 'Received') {\r\n          return Received;\r\n        }\r\n      });\r\n  \r\n      let listOfOrderCancelled = listOfOrders.filter((Rejected) => {\r\n        if (\r\n          Rejected.orderStatus === 'Rejected' ||\r\n          Rejected.orderStatus === 'PrintRejected'\r\n        ) {\r\n          return Rejected;\r\n        }\r\n      });\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Customer Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Customer\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Customers/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n           <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(UsrsTab)));\r\n  ","import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass AddUser extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    // this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n     \r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD USER \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD USER \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(accessType) =>\r\n                      account.setProperty('accessType', accessType.target.value)\r\n                    }\r\n                  >\r\n                    <option> User Type </option>\r\n                    <option value='Standard'> Standard </option>\r\n                    <option value='Curator'> Curator </option>\r\n                    <option value='Admin'> Admin </option>\r\n                  </select>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder=\"Art Themes you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder=\"Art Style you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n                  />\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddUser));\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport UserTab from './sections/UsersTab';\r\nimport AddUser from './sections/AddUser';\r\n\r\nexport class User extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Customer</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n          \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddUser/>\r\n       \r\n        <MDBCard>\r\n     <MDBCardBody>\r\n     <UserTab />\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nclass AddArtist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    // let {\r\n    //   startingStore: {account},\r\n    // } = this.props;\r\n    this.setState({selectedFile: e.target.files[0]});\r\n\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  onSubmit = () => {\r\n    let {\r\n      startingStore: {account, addAccount},\r\n    } = this.props;\r\n    //   //e.preventDefault()\r\n\r\n    //   // axios.post(\"https://artbasically.herokuapp.com/artworkRoute/uploadProfile\", formData, {\r\n    //   // }).then(res => {\r\n    //   //   console.log(res)\r\n    //   // })\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    formData.append('type', 'artist');\r\n    upload(formData);\r\n\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artist Registration..', 1.2)\r\n        .then(() => message.success('Successfully added an Artist Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.onSubmit();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD ARTIST \r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD ARTIST \r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    placeholder='Prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(birthYear) =>\r\n                      account.setProperty('birthYear', birthYear.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    type='textarea'\r\n                    label='Biography'\r\n                    rows='3'\r\n                    onChange={(artistDescription) =>\r\n                      account.setProperty(\r\n                        'artistDescription',\r\n                        artistDescription.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a short Bio.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtist));\r\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class Deactivated extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfUsers,editAccount, account}} = this.props;\r\n  \r\n      \r\n      function createData(userDB,id,fname, email, address,action) {\r\n        return { userDB,id,fname, email, address,action };\r\n      }\r\n  \r\n  let users = listOfUsers.filter((usr) => {\r\n              if (usr.accessType === 'Artist' && usr.acc_Status === 'Deactivated') {\r\n                return usr;\r\n              }\r\n            }).map(users =>{\r\n              return(createData(\r\n             users,users.accID\r\n             ,`${users.accFname} ${users.accLname}`\r\n             ,users.accEmailAddress,users.accEmailAddress,users.accAddress\r\n  \r\n  \r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreinfo = (itm) => {\r\n           \r\n         \r\n            };\r\n            let restore =(itm)=>{\r\n              account.setProperty('_id',itm._id)\r\n              account.setProperty('acc_Status','Active')\r\n       editAccount()\r\n              const success = () => {\r\n               message\r\n                 .loading('', 1)\r\n                 .then(() => message.success('Account Restored', 3));\r\n             };\r\n       \r\n             setTimeout(() =>{\r\n               success()\r\n             },1000)\r\n  \r\n          \r\n            }\r\n          \r\n  \r\n  const DeactivatedTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Name',\r\n          field: 'fname',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n  \r\n        {\r\n          label: 'Email',\r\n          field: 'email',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Address',\r\n          field: 'address',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...users.map((row,i) => {\r\n       \r\n        return(\r\n  \r\n       {\r\n          id: `${row.id}`,\r\n          fname: `${row.fname}`,\r\n        \r\n        \r\n          email: `${row.email}`,\r\n          address: `${row.address}`,\r\n          action:<div><MDBBtn  onClick={()=>moreinfo(row.userDB)} color='moreinfo'>More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.userDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <DeactivatedTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Deactivated))\r\n  \r\n  \r\n  \r\n  ","import {\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBRow,\r\n    MDBTabContent,\r\n    MDBTabPane,\r\n    MDBBtn,\r\n  } from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, {Component} from 'react';\r\n  import {withRouter} from 'react-router-dom';\r\n  import Pending from './../PendingArtistTable'\r\n  import Artists from './../ArtistTable'\r\n  import Deactivated from './../DeactivatedArtist'\r\n \r\n\r\n  \r\n  class OrderTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n \r\n  \r\n    setStatus = (status) => {\r\n      this.setState({status: status});\r\n    };\r\n  \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <div className='orderconAdmin'>\r\n          <h4>Artist Lists</h4>\r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artists\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Deactivated\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artists/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs complete'>\r\n          <Deactivated/>\r\n            </MDBTabPane>\r\n\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(OrderTab)));\r\n  ","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport AddArtist from './sections/AddArtist';\r\n\r\nimport ArtistsTab from './sections/ArtistsTab'\r\nexport class ArtistTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Artist</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n         \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddArtist />\r\n   \r\n   <MDBCard>\r\n     <MDBCardBody>\r\n<ArtistsTab/>\r\n     </MDBCardBody>\r\n   </MDBCard>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArtistTab\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass AddCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n    modal2: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting theme..', 1.2)\r\n        .then(() => message.success('Successfully added a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addCategory();\r\n  };\r\n\r\n  submitHandlerStyle = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting style..', 1.2)\r\n        .then(() => message.success('Successfully added a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addStyle();\r\n  };\r\n\r\n  submitHandlerSize = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {addPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.getUniqueID());\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting printing size..', 1.2)\r\n        .then(() => message.success('Printing size added', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    addPrintSize();\r\n  };\r\n\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {addCategory},\r\n    } = this.props;\r\n    e.preventDefault();\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Theme..', 1.2)\r\n        .then(() => message.success('Successfully added a Theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n\r\n    addCategory();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories, style,printsize},\r\n    } = this.props;\r\n    return (\r\n      <MDBContainer>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Theme\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n            <MDBModalHeader toggle={this.toggle(1)}>\r\n              Add Theme\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandler} className='formbtn'>\r\n                <MDBInput\r\n                  label='Theme Name'\r\n                  type='text'\r\n                  onChange={(catType) =>\r\n                    categories.setProperty('catType', catType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add  Style\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add  Style\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerStyle} className='formbtn'>\r\n                <MDBInput\r\n                  label='Style Name'\r\n                  type='text'\r\n                  onChange={(styleType) =>\r\n                    style.setProperty('styleType', styleType.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n\r\n        <div style={{float: 'left'}}>\r\n          <MDBBtn onClick={this.toggle(2)} color='transparent'>\r\n            <MDBIcon icon='plus-circle' size='2x' />\r\n            Add Printing Size\r\n          </MDBBtn>\r\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered>\r\n            <MDBModalHeader toggle={this.toggle(2)}>\r\n              Add Printing Size\r\n            </MDBModalHeader>\r\n            <MDBModalBody className='adminmodalbody'>\r\n              <form onSubmit={this.submitHandlerSize} className='formbtn'>\r\n                <MDBInput\r\n                  label='Printing Size'\r\n                  type='text'\r\n                  onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                  }\r\n                  required\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n                <MDBBtn className='submitreg clearfix' type='submit'>\r\n                  SUBMIT\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n          </MDBModal>\r\n        </div>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddCat));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditCat extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editCategory, categories},\r\n    } = this.props;\r\n    categories.setProperty('catID', this.props.data.catID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited theme..', 1.2)\r\n        .then(() => message.success('Successfully edited a theme', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editCategory();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {categories},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART CATEGORY\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Category Name'\r\n                type='text'\r\n                valueDefault={this.props.data.catType}\r\n                // value={this.props.data.catType}\r\n                onChange={(catType) =>\r\n                  categories.setProperty('catType', catType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Category Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditCat));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editStyle, style},\r\n    } = this.props;\r\n    style.setProperty('styleID', this.props.data.styleID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited style..', 1.2)\r\n        .then(() => message.success('Successfully edited a style', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editStyle();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {style},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ART STYLE\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Style Name'\r\n                type='text'\r\n                valueDefault={this.props.data.styleType}\r\n                // value={this.props.data.catType}\r\n                onChange={(styleType) =>\r\n                  style.setProperty('styleType', styleType.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.props.data.sizeID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited print size..', 1.2)\r\n        .then(() => message.success('Print size has been modified', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editPrintSize();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printsize},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            Edit Print Size\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Print Size'\r\n                type='text'\r\n                valueDefault={this.props.data.printSize}\r\n                // value={this.props.data.catType}\r\n                onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBRow,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport EditCat from './EditCat';\r\nimport EditStyle from './EditStyle';\r\nimport EditPrintSize from './EditPrintSize'\r\n\r\nclass CategoryTable extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getCategories, getStyles,getPrintSize},\r\n    } = this.props;\r\n    getCategories();\r\n    getStyles();\r\n    getPrintSize();\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n  \r\n    // let listOfCustomers = listOfCategories.filter(artist => {\r\n    //   if (artist.accessType !== \"artist\") {\r\n    //     return artist;\r\n    //   }\r\n    // })\r\n    return (\r\n      <div className='clearfix'>\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Theme List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Theme Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfCategories.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.catType}</td>\r\n                        <td className='edittd'>\r\n                          <EditCat data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Style List</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Style Name</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfStyles.map((data,index) => {\r\n                      let no = index +1;\r\n                      return(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.styleType}</td>\r\n                        <td className='edittd'>\r\n                          <EditStyle data={data} />\r\n                        </td>\r\n                      </tr>\r\n                    )})}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n\r\n\r\n        <MDBRow className='mb-4 row50'>\r\n          <MDBCol md='12'>\r\n            <MDBCard>\r\n              <MDBCardBody>\r\n                <h3>Printing Size</h3>\r\n                <MDBTable hover className='tablescroll'>\r\n                  <MDBTableHead color='blue-grey lighten-4'>\r\n                    <tr>\r\n                      <th>No.</th>\r\n                      <th>Size</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </MDBTableHead>\r\n                  <MDBTableBody>\r\n                    {listOfPrintSize.map((data,index) => {\r\n\r\n                        let no = index +1;\r\nreturn(\r\n                      <tr key ={index}>\r\n                        <td>{no}</td>\r\n                        <td>{data.printSize}</td>\r\n                        <td className='edittd'>\r\n                          <EditPrintSize data={data} />\r\n                        </td>\r\n                      </tr>\r\n)  })}\r\n                  </MDBTableBody>\r\n                </MDBTable>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CategoryTable));\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport AddCat from './sections/AddCat';\r\nimport CatTable from './sections/CatTable';\r\n\r\nexport class CategoryTab extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"adminbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Categories</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <AddCat />\r\n        <CatTable />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryTab\r\n","\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nclass Notifications extends Component {\r\n\r\n\r\n\r\n  render() {\r\nlet{startingStore:{listOfNotif,notif,editNotif}}=this.props;\r\n\r\nlet notifNum = listOfNotif.filter(notif => notif.notifStatus === 'unread').length;\r\n\r\nlet  notifClicked =(notifInfo)=>{\r\n  editNotif(notifInfo._id, 'read', notifInfo.notifID)\r\n \r\n}\r\n\r\n\r\n\r\nlet notifData = listOfNotif.filter(notif => notif.notifStatus === 'unread').map((info,i) =>{\r\n  let dateToday = moment().format('MMM/DD/YY')\r\n  let dateNotif = '';\r\n  if (dateToday.slice(0,9) === info.notifDT.slice(0,9)){\r\n    dateNotif = `Today, ${info.notifDT.slice(10,20)}`\r\n  }else{\r\n    dateNotif = info.notifDT;\r\n  }\r\n  return(\r\n    <Fragment key={i}>\r\n   <MDBDropdownItem className=\"newnotif\" onClick={()=>{notifClicked(info)}}>\r\n     {info.notifMsg}\r\n          <span className=\"time\">{dateNotif}</span>\r\n        </MDBDropdownItem>\r\n    </Fragment>\r\n  )\r\n})\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n  <MDBBadge color=\"danger\" className=\"ml-2\">{notifNum}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic >\r\n        <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     \r\n  {notifData}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBModalFooter,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from './../../sections/DownloadImage';\r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class UserFeedback extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n     componentDidMount() {   \r\n      let {\r\n        startingStore: {getFeedback,getAccounts},\r\n      } = this.props;\r\n   getFeedback()\r\n   getAccounts()\r\n  \r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfFeedback,feedback,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(fbID,acID,ordID,date, note) {\r\n        return { fbID,acID,ordID,date, note };\r\n      }\r\n  \r\n  let filtFeedback = listOfFeedback.map(fb =>{\r\n              return(createData(\r\n             fb.feedbackID,listOfUsers.filter(usr => usr._id === fb.accID) .map(acc => `${acc.accFname} ${acc.accLname}`)\r\n             ,fb.orderID,fb.date\r\n             ,fb.feedbackNote\r\n              ))\r\n            })\r\n\r\n\r\n            let  toggle = (itm) => {\r\n        \r\n                this.setState({\r\n                  modal: !this.state.modal,\r\n                  items:itm\r\n                });\r\n              feedback.setProperty('feedbackNote',itm)\r\n              };\r\n              let close =()=>{\r\n                this.setState({\r\n                  modal: false,\r\n                \r\n                });\r\n              }\r\n  \r\n    \r\n  \r\n  const FeedbackTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Sender',\r\n          field: 'sender',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order No.',\r\n          field: 'order',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Feedback',\r\n          field: 'fb',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        }\r\n  \r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...filtFeedback.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          sender: `${row.acID}`,\r\n         order: `${row.ordID}`,\r\n        \r\n          date: `${row.date}`,\r\n          fb: <div ><MDBBtn style={{float:'left'}} onClick={()=>toggle(row.note)} color='yellow'>View</MDBBtn> </div>,\r\n    \r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal\r\n    size='md'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n      style={{backgroundColor:'#231F20'}}\r\n    >\r\n      <h5 style={{color:'white'}}> User Feedback</h5> \r\n    </MDBModalHeader>\r\n    <MDBModalBody >\r\n    <p style={{margin:'8px'}}>{feedback.feedbackNote}</p>\r\n    </MDBModalBody>\r\n    <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" size='sm' onClick={()=>close()}>Close</MDBBtn>\r\n           \r\n          </MDBModalFooter>\r\n  </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <FeedbackTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(UserFeedback))\r\n  \r\n  ","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n \r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n} from 'mdbreact';\r\nimport Feedback from './sections/UserFeedback'\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Users Feedback</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    <Feedback/>\r\n\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n \r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n\r\n} from 'mdbreact';\r\n\r\n\r\nclass FeedbackTab extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='adminbreadcrumb'>\r\n          <MDBCard>\r\n            <MDBCardBody\r\n              id='breadcrumb'\r\n              className='d-flex align-items-center justify-content-between'\r\n            >\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n        \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <MDBCard>\r\n          <MDBCardBody>\r\n    \r\n\r\n      </MDBCardBody>\r\n      </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackTab;\r\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem, MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n      return (createData(\r\n          data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}>Save Changes</MDBBtn></div>\r\n      ))\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n   \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","import React, {Component} from 'react';\r\n\r\nimport {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNavbar,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBHamburgerToggler,\r\n  MDBCollapse,\r\n  MDBNotification,\r\n  MDBContainer,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\n\r\nimport Dashboard from './Dashboard';\r\nimport OrdersTab from './OrdersTab';\r\nimport ArtworkTab from './ArtworkTab';\r\nimport UserTab from './UserTab';\r\nimport ArtistTab from './ArtistTab';\r\nimport CategoryTab from './CategoryTab';\r\nimport Notif from './sections/Notif';\r\nimport Feedback from './FeedbackTab'\r\nimport Messaging from './MessagingTab'\r\n// import Message from './sections/Message';\r\nimport '../css/admin.css';\r\nimport MyAccount from './sections/AccountSettings/'\r\nimport {inject,observer} from 'mobx-react'\r\nimport {withRouter} from 'react-router-dom'\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/Admin')\r\n    // }\r\n\r\n    let {startingStore:{getOrders, getAccounts,getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize,getAllNotif}}=this.props;\r\n    getAccounts();\r\n    getOrders();\r\n    getAllNotif();\r\n    getArtworkInfo();\r\n    getArtists();\r\n    getStyles();\r\n    getCategories();\r\n    getPrintSize()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/Admin';\r\n  }\r\n    return (\r\n      <div>\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav'  style={{backgroundColor:'#231F20'}}>\r\n              <a href='/AdminHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Admin</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='bell' className='mr-3' />\r\n                    Orders\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='user' className='mr-3' />\r\n                    Customer\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='user-tie' className='mr-3' />\r\n                    Artists\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='th-large' className='mr-3' />\r\n                    Categories\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '9'}\r\n                    onClick={this.togglePills('default', '9')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '8'}\r\n                    onClick={this.togglePills('default', '8')}\r\n                  >\r\n                    <MDBIcon icon='comment-alt' className='mr-3' />\r\n                    Feedback\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <OrdersTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <UserTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <ArtistTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n              <CategoryTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='8'>\r\n              <Feedback />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n              <MyAccount />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='9'>\r\n              <Messaging />\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport {withRouter} from 'react-router-dom';\r\nclass PartnerLogin extends Component {\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount},\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      if (res === 3) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Welcome to Art,Basically!', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PrintingPartner');\r\n      },1500)\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1)\r\n            .then(() => message.success('Email or password is incorrect', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 600);\r\n        setTimeout(()=>{\r\n        this.props.history.push('/PartnerLogin');\r\n      },1500)\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <div className='adminlogin'>\r\n        <div className='adminbg'></div>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <img alt='Art, Basically Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />\r\n          <h3>LOGIN</h3>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='email'\r\n              id='materialFormRegisterNameEx'\r\n              label='Email Address'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(accEmailAddress) =>\r\n                account.setProperty(\r\n                  'accEmailAddress',\r\n                  accEmailAddress.target.value\r\n                )\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid email.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <div className='adloginpt clearfix'>\r\n            <MDBInput\r\n              type='password'\r\n              id='materialFormRegisterNameEx'\r\n              label='Password'\r\n              className='loginadmin'\r\n              required\r\n              onChange={(password) =>\r\n                account.setProperty('password', password.target.value)\r\n              }\r\n            >\r\n              <div className='invalid-feedback'>\r\n                Please provide a valid password.\r\n              </div>\r\n            </MDBInput>\r\n          </div>\r\n          <ul className='clearfix'>\r\n            <li class='custom-control custom-checkbox'>\r\n              <input\r\n                type='checkbox'\r\n                class='custom-control-input'\r\n                id='rempass'\r\n              />\r\n              <label class='custom-control-label' htmlFor='rempass'>\r\n                Remember me\r\n              </label>\r\n            </li>\r\n          </ul>\r\n          <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n            LOGIN\r\n          </MDBBtn>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PartnerLogin)))\r\n","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport SmsFailedOutlinedIcon from '@material-ui/icons/SmsFailedOutlined';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {observer,inject} from 'mobx-react'\r\nimport { number } from 'joi';\r\nclass DashCards extends Component {\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts,getOrders,getOrderUser}}=this.props;\r\n    getOrders()\r\n    getOrderUser()\r\n    getAccounts()\r\n  }\r\n\r\n    render() {\r\n      let {startingStore:{listOfOrders,listOfUsers}}=this.props;\r\n      let Orders = listOfOrders.filter (ord => ord.orderStatus === 'PendingPrint' || ord.orderStatus === 'ForDelivery' || ord.orderStatus === 'Printing').length;\r\n      let CancelledOrders = listOfOrders.filter (ord => ord.orderStatus === 'Cancelled' || ord.orderStatus === 'Failed').length;\r\n\r\n\r\n      let salesYTD =  listOfOrders.map(product => {\r\n  \r\n        return (\r\n      \r\n          listOfOrders.filter((amount) => (amount.orderStatus === 'Completed' && amount.paymentStatus === 'Paid'))\r\n          .reduce((sum, record) => parseInt(sum) + parseInt(record.partnerEarnings) , 0)\r\n      \r\n      \r\n      \r\n          );\r\n      \r\n       })\r\n       const sales = `${salesYTD.pop()}`;\r\n    //  let percent = 30;\r\n    //  let perctodec = percent/100;\r\n    //  let totalValue = perctodec * sales;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 17,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nEarnings YTD\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>\r\n  \r\n  {\r\n    sales == 'undefined' ?(\r\n      '0'\r\n    ):(\r\n      sales\r\n    )\r\n  }\r\n\r\n  \r\n  \r\n  </Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOngoing Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<SmsFailedOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nCancelled Orders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{CancelledOrders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {message} from 'antd';\r\n\r\n\r\n class ForDelivery extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'ForDelivery') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  moreinfo = (itm) => {\r\n        \r\n       \r\n          };\r\n          let done =(itm)=>{\r\n            editOrder(itm._id, 'Completed', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Completed', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst ForDeliveryTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>moreinfo(row.orderDB)} color='approve'>More Info</MDBBtn>\r\n        <MDBBtn  onClick={()=>done(row.orderDB)} color='reject'> Done</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <ForDeliveryTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(ForDelivery))\r\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport {message} from 'antd';\r\n\r\n\r\n class PendingPrint extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n   \r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n\r\n    \r\n    function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n      return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'PendingPrint') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  approve = (itm) => {\r\n          editOrder(itm._id, 'Printing', itm.accID)\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Approved to print', 3));\r\n          };\r\n          setTimeout(() =>{\r\n            success()\r\n          },1000)\r\n          setTimeout(()=>{\r\n            window.location.reload(false);\r\n          },1500)\r\n          };\r\n          let reject =(itm)=>{\r\n            editOrder(itm._id, 'Rejected', itm.accID)\r\n\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Order Rejected', 3));\r\n            };\r\n\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n          }\r\n        \r\n\r\nconst PendingPrintTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Approve</MDBBtn>\r\n        <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Reject</MDBBtn></div>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <PendingPrintTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(PendingPrint))","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  import DownloadImage from '../../../admin/sections/DownloadImage';\r\n  \r\n   class OngoingOrder extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n  \r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n  \r\n      \r\n      function createData(items,id, orderBy, date, paymentStat,action) {\r\n        return { items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((Delivery) => {\r\n              if (Delivery.orderStatus === 'Printing' || Delivery.orderStatus === 'Delivery') {\r\n                return Delivery;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  toggle = (itm) => {\r\n          \r\n              this.setState({\r\n                modal: !this.state.modal,\r\n                items:itm\r\n              });\r\n            \r\n            };\r\n            let close =()=>{\r\n              this.setState({\r\n                modal: false,\r\n              \r\n              });\r\n            }\r\n          \r\n  \r\n  const OngoingOrderTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n      <MDBModal\r\n      size='lg'\r\n      isOpen={this.state.modal}\r\n      toggle={()=>close()}\r\n      centered\r\n      className='singleModal'\r\n    >\r\n      <MDBModalHeader\r\n        toggle={()=>{close()}}\r\n        className='mhead'\r\n      ></MDBModalHeader>\r\n      <MDBModalBody>\r\n        <div className='imagecom'>\r\n          <h3>Order Items</h3>\r\n          <MDBTable hover className='tablescroll'>\r\n            <MDBTableHead color='blue-grey lighten-4'>\r\n              <tr>\r\n                <th>Artwork</th>\r\n                <th>Artist Name </th>\r\n                <th>Artwork Name</th>\r\n                <th>Artwork Size</th>\r\n                <th>Payment Amount</th>\r\n                <th>Artwork Material</th>\r\n                <th>Framing Options</th>\r\n                <th>Price Per Piece</th>\r\n                <th>Quantity</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n  \r\n            <MDBTableBody>\r\n  \r\n              {this.state.items.map((data,i) => (\r\n                <tr key={i}>\r\n                  <td>\r\n              \r\n                  <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                  </td>\r\n                  <td>{data.artistName}</td>\r\n                  <td>{data.artworkName}</td>\r\n                  <td>{data.artworkSize}</td>\r\n                  <td>{data.artworkPaymentAmount}</td>\r\n                  <td>{data.artworkMaterial}</td>\r\n                  <td>{data.artworkFramingOptions}</td>\r\n                  <td>{data.artworkPrice}</td>\r\n                  <td>{data.artworkQuantity}</td>\r\n                  <td className='actions'>\r\n                    <DownloadImage data={data.artworkImg} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </div>\r\n      </MDBModalBody>\r\n    </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <OngoingOrderTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(OngoingOrder))","import { Grid, Paper } from '@material-ui/core';\r\nimport {\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBCard,\r\n  MDBCardBody\r\n} from 'mdbreact';\r\nimport React from 'react';\r\nimport DashCards from './DashCards';\r\nimport FinishedProd from './sections/COrderDeli';\r\n\r\nimport CPendingOrders from './sections/CPendingOrders';\r\nimport OngoingProd from './sections/OngoingOrders';\r\n\r\nconst pDashboardSection = () => {\r\n  return (\r\n    <div style={{marginTop:'16px'}}>\r\n      <div className='printbreadcrumb' style={{marginBottom:'16px'}}>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n  \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n      <div class='mb-4'>\r\n      <DashCards/>\r\n      </div>\r\n\r\n\r\n      <Grid container  xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Pending Orders</h3>\r\n <CPendingOrders />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Ongoing Production</h3>\r\n <OngoingProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      \r\n      <Grid item xs={12} sm={12} style={{marginTop:'25px'}}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Finished Production</h3>\r\n <FinishedProd />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n\r\n      </Grid>  \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default pDashboardSection;\r\n","\r\nimport { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n    MDBModalBody,\r\n    MDBModalHeader,\r\n    MDBTable,\r\n    MDBTableBody,\r\n    MDBTableHead,} from 'mdbreact';\r\n  import {inject, observer} from 'mobx-react';\r\n  import React, { Component, Fragment } from 'react'\r\n  \r\n  import {message} from 'antd';\r\n  \r\n  \r\n   class Printing extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    componentDidMount() {\r\n      let {\r\n        startingStore: {getOrders, getAccounts},\r\n      } = this.props;\r\n     \r\n      getAccounts();\r\n      getOrders();\r\n    }\r\n    \r\n  \r\n    render() {\r\n      let { startingStore: {listOfOrders,listOfUsers, editOrder}} = this.props;\r\n  \r\n      \r\n      function createData(orderDB,items,id, orderBy, date, paymentStat,action) {\r\n        return { orderDB,items,id, orderBy, date, paymentStat,action };\r\n      }\r\n  \r\n  let Corder = listOfOrders.filter((order) => {\r\n              if (order.orderStatus === 'Printing') {\r\n                return order;\r\n              }\r\n            }).map(orders =>{\r\n              return(createData(\r\n             orders,orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n                )),orders.orderDate,orders.paymentStatus\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  approve = (itm) => {\r\n            editOrder(itm._id, 'ForDelivery', itm.accID)\r\n            const success = () => {\r\n              message\r\n                .loading('', 1)\r\n                .then(() => message.success('Done Printing', 3));\r\n            };\r\n            setTimeout(() =>{\r\n              success()\r\n            },1000)\r\n            setTimeout(()=>{\r\n              window.location.reload(false);\r\n            },1500)\r\n            };\r\n            let reject =(itm)=>{\r\n              editOrder(itm._id, 'Rejected', itm.accID)\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Order Rejected', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n              setTimeout(()=>{\r\n                window.location.reload(false);\r\n              },1500)\r\n            }\r\n          \r\n  \r\n  const PrintingTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Order By',\r\n          field: 'orderBy',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Date',\r\n          field: 'date',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Payment Stat',\r\n          field: 'paymentStat',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...Corder.map((row,i) => (\r\n        \r\n       {\r\n          id: `${row.id}`,\r\n          orderBy: `${row.orderBy}`,\r\n          date: `${row.date}`,\r\n        \r\n          paymentStat: `${row.paymentStat}`,\r\n          action:<div><MDBBtn  onClick={()=>approve(row.orderDB)} color='approve'>Done</MDBBtn>\r\n          <MDBBtn  onClick={()=>reject(row.orderDB)} color='reject'> Cancel</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ))\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  \r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PrintingTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(Printing))","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport Printing from './../sections/Printing';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Printing</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n   \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n \r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Printing</h3>\r\n <Printing/>\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport COrderDeli from './sections/COrderDeli';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Orders for Delivery</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n\r\n\r\n\r\n      <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Orders to delivery</h3>\r\n <COrderDeli />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data,i) => (\r\n              <tr key={i}>\r\n                <td>\r\n            \r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport CCompletedOrder from './sections/CCompletedOrder';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Completed Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n    \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n     \r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Completed Orders</h3>\r\n <CCompletedOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../../admin/sections/DownloadImage';\r\n\r\n class CancelledOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Cancelled' || Delivery.orderStatus === 'Rejected') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CancelledOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                    \r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CancelledOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CancelledOrder))","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport CCancelOrder from './sections/CCancelOrder';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Cancelled Orders</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n           \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n       \r\n\r\n\r\n        <Grid container xs={12} sm={12}>\r\n      <Grid item xs={12} sm={12}>\r\n      <Paper>\r\n      <div class='p-2 '>\r\n <h3>Cancelled Orders</h3>\r\n <CCancelOrder />\r\n      </div>\r\n      </Paper>\r\n      </Grid>\r\n      </Grid>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React from 'react';\r\nimport {\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n} from 'mdbreact';\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className='topicons'>\r\n      <MDBDropdownToggle color='transparent'>\r\n        <MDBIcon icon='bell' className='mr-3' style={{color:'white'}}/>\r\n        <MDBBadge color='danger' className='ml-2'>\r\n          4\r\n        </MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n        <div className='title'>NOTIFICATIONS</div>\r\n        <MDBDropdownItem className='newnotif'>\r\n          Recieved an order from Jane Doe\r\n          <span className='time'>just now</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem className='newnotif'>\r\n          New art submission\r\n          <span className='time'>2 seconds ago</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 3<span className='time'>13:28</span>\r\n        </MDBDropdownItem>\r\n        <MDBDropdownItem>\r\n          Notif 4<span className='time'>15:01</span>\r\n        </MDBDropdownItem>\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n};\r\n\r\nexport default Notif;\r\n","import React, {Component} from 'react';\r\nimport {MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\n\r\nclass ViewImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage iconbtn'>\r\n          {' '}\r\n          Download Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewImage;\r\n","import React, {Component} from 'react';\r\nimport ViewImage from '../sections/ViewImage';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n} from 'mdbreact';\r\n\r\nclass ViewData extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    // let {\r\n    //   startingStore: {listOfOrders},\r\n    // } = this.props;\r\n    // let listOfPending = listOfOrders.filter(Pending => {\r\n    //   if (Pending.paymentStatus === \"Pending\") {\r\n    //     return Pending;\r\n    //   }\r\n    // })\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage iconbtn'>\r\n          {' '}\r\n          Order Details\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          size='lg'\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <h3>Order Items</h3>\r\n              <MDBTable hover className='tablescroll'>\r\n                <MDBTableHead color='blue-grey lighten-4'>\r\n                  <tr>\r\n                    <th>Artwork</th>\r\n                    <th>Artist Name </th>\r\n                    <th>Artwork Name</th>\r\n                    <th>Date of Transaction</th>\r\n                    <th>Artwork Size</th>\r\n                    <th>Payment Amount</th>\r\n                    <th>Artwork Material</th>\r\n                    <th>Framing Options</th>\r\n                    <th>Quantity</th>\r\n                    <th>Download Artwork</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n\r\n                <MDBTableBody>\r\n                  {this.props.data.map((data) => (\r\n                    <tr>\r\n                      <td>\r\n                    \r\n                      <img src={data.artworkImg} style={{width: '100% ', height: 'auto'}} alt='artwork'/>\r\n                      </td>\r\n                      <td>{data.artistName}</td>\r\n                      <td> {data.artworkName}</td>\r\n                      <td> {data.dateOfTransaction}</td>\r\n                      <td> {data.artworkSize}</td>\r\n                      <td> {data.artworkPaymentAmount}</td>\r\n                      <td>{data.artworkMaterial}</td>\r\n                      <td>{data.artworkFramingOptions}</td>\r\n                      <td>{data.artworkQuantity}</td>\r\n                      <td className='oactions'>\r\n                        <ViewImage data={data.artworkImg} />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ViewData));\r\n","import React, {Component} from 'react';\r\nimport {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n  MDBRow,\r\n  MDBCol,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport ViewData from '../sections/ViewData';\r\n\r\nclass CHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders, getAccounts},\r\n    } = this.props;\r\n    // getCategories();\r\n    getAccounts();\r\n    getOrders();\r\n  }\r\n\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  // checkList = (id) => {\r\n  //   let src = '';\r\n  //   // let imgsrc = this.state.img.filter((img) => {\r\n  //   // \tif (img[1][0] === id) {\r\n  //   // \t\tsrc += img[0];\r\n  //   // \t}\r\n  //   // });\r\n  //   console.log(this.state.img, 'sdsdsds');\r\n  //   return src;\r\n  // };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfOrders, editOrder, listOfUsers},\r\n    } = this.props;\r\n    let listOfPrintOrders = listOfOrders.filter((PrintOrders) => {\r\n      if (\r\n        PrintOrders.orderStatus === 'PrintRejected' &&\r\n        'Delivery' &&\r\n        'Completed'\r\n      ) {\r\n        return PrintOrders;\r\n      }\r\n    });\r\n\r\n    let findName = (accID) => {\r\n      let aw = listOfUsers.map((user) => {\r\n        if (user._id === accID) {\r\n          return `${user.accFname} ${user.accLname}`;\r\n        }\r\n      });\r\n      return aw;\r\n    };\r\n\r\n    return (\r\n      <MDBRow className='mb-4'>\r\n        <MDBCol md='12'>\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <h3>Orders History</h3>\r\n              <MDBTable hover className='tablescroll'>\r\n                <MDBTableHead color='blue-grey lighten-4'>\r\n                  <tr>\r\n                    <th>Order ID </th>\r\n                    <th>Account ID </th>\r\n                    <th>Ordered by</th>\r\n                    <th>Order Date</th>\r\n                    <th>Status</th>\r\n                    <th>Payment Status</th>\r\n                    <th className='act'>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {listOfPrintOrders.reverse().map((data) => (\r\n                    <tr>\r\n                      <td>{data.orderID}</td>\r\n                      <td>{data.accID}</td>\r\n                      <td> {findName(data.accID)} </td>\r\n                      <td>{data.orderDate}</td>\r\n                      <td>{data.orderStatus}</td>\r\n                      <td>{data.paymentStatus}</td>\r\n                      <td className='oactions'>\r\n                        <span>\r\n                          <ViewData data={data.orderItems} />{' '}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CHistory));\r\n","\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem, MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\n\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass]=React.useState('')\r\n  const [confPass,setConfPass]=React.useState('')\r\n\r\n\r\n\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\nlet getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n    \r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password'  onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'10px'}}>Confirm Password :</span> <TextField type='password'  onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\nimport History from './sections/CHistory';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>History</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n              <MDBFormInline className=\"md-form m-0 printpsearch\">\r\n                <input className=\"form-control form-control-sm\" type=\"search\" placeholder=\"Type your query\" aria-label=\"Search\" />\r\n                <MDBBtn size=\"sm\" color=\"#FAE933\" className=\"my-0\" type=\"submit\"><MDBIcon icon=\"search\" /></MDBBtn>\r\n              </MDBFormInline>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        <History />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem,\r\n  MDBFormInline, MDBBtn\r\n} from 'mdbreact';\r\n// import Messaging from './sections/Messaging';\r\n\r\nexport class Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"printpbreadcrumb\">\r\n          <MDBCard>\r\n            <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\r\n              <MDBBreadcrumb>\r\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\r\n                <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n              </MDBBreadcrumb>\r\n       \r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </div>\r\n        {/* <Messaging /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Orders;","import React, {Component} from 'react';\r\n\r\nimport {\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNavbar,\r\n  MDBTabContent,\r\n  MDBTabPane,\r\n  MDBHamburgerToggler,\r\n  MDBCollapse,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport Dashboard from './Dashboard';\r\nimport PrintingTab from './PrintingTab';\r\nimport OrderDeliverytab from './OrderDeliverytab';\r\nimport CompletedOrderTab from './CompletedOrderTab';\r\nimport CancelOrdertab from './CancelOrdertab';\r\nimport Notif from './sections/Notif';\r\nimport History from './History';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport MyAccount from './sections/AccountSetting/'\r\nimport '../css/printart.css';\r\nimport {withRouter} from 'react-router-dom'\r\nimport MessageTab from './MessageTab'\r\n\r\nclass PrintingPartner extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n\r\n    // let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    // if(logged === null || logged === undefined){\r\n    //   this.props.history.push('/PartnerLogin')\r\n    // }\r\n\r\n    getOrders();\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/PartnerLogin';\r\n  }\r\n    return (\r\n      <div className='admin'>\r\n        <MDBNavbar className='position-fixed' dark expand='md'>\r\n          <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n            <a href='/PrintingPartner' className='logo-wrapper ablogo'>\r\n              <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n              <p style={{color:'white'}}>Printing</p>\r\n            </a>\r\n            <div className='topcon'>\r\n              {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n              <MDBNavItem>\r\n                <Notif />\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBBtn\r\n                  onClick={() => logout()}\r\n                  color='transparent'\r\n                  className='btnYellow logout'\r\n                >\r\n                  Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                </MDBBtn>\r\n              </MDBNavItem>\r\n            </div>\r\n          </MDBNav>\r\n          <MDBHamburgerToggler\r\n            color='#FAE933'\r\n            id='hamburger1'\r\n            onClick={() => this.toggleSingleCollapse('collapse1')}\r\n          />\r\n          <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n            <MDBNav\r\n              className='nav-pills sidebar-fixed position-fixed adminside'\r\n              id='pills-tab'\r\n              role='tablist'\r\n            >\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '1'}\r\n                  onClick={this.togglePills('default', '1')}\r\n                >\r\n                  <MDBIcon icon='chart-pie' className='mr-3' />\r\n                  Dashboard\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '2'}\r\n                  onClick={this.togglePills('default', '2')}\r\n                >\r\n                  <MDBIcon icon='print' className='mr-3' />\r\n                  Printing\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '3'}\r\n                  onClick={this.togglePills('default', '3')}\r\n                >\r\n                  <MDBIcon icon='truck' className='mr-3' />\r\n                  Delivery\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '4'}\r\n                  onClick={this.togglePills('default', '4')}\r\n                >\r\n                  <MDBIcon icon='calendar-check' className='mr-3' />\r\n                  Completed\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '5'}\r\n                  onClick={this.togglePills('default', '5')}\r\n                >\r\n                  <MDBIcon icon='ban' className='mr-3' />\r\n                  Cancelled\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              {/* <MDBNavItem>\r\n                <MDBNavLink\r\n                  to='#'\r\n                  active={this.state.items['default'] === '6'}\r\n                  onClick={this.togglePills('default', '6')}\r\n                >\r\n                  <MDBIcon icon='th-large' className='mr-3' />\r\n                  History\r\n                </MDBNavLink>\r\n              </MDBNavItem> */}\r\n\r\n              <MDBNavItem>\r\n\r\n              <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '6'}\r\n                    onClick={this.togglePills('default', '6')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '7'}\r\n                    onClick={this.togglePills('default', '7')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n            </MDBNav>\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              <Dashboard />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='2'>\r\n              <PrintingTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <OrderDeliverytab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <CompletedOrderTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <CancelOrdertab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='6'>\r\n      <MessageTab/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='7'>\r\n      <MyAccount/>\r\n            </MDBTabPane>\r\n          </MDBTabContent>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(PrintingPartner)))\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem, MDBCard,\r\n    MDBCardBody,\r\n    MDBBtn\r\n} from 'mdbreact';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {inject,observer} from 'mobx-react'\r\nimport {message} from 'antd';\r\nclass AccountSettings extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        let {startingStore:{getAccounts}}=this.props\r\n        getAccounts()\r\n    }\r\n\r\n   \r\n    render() {\r\nlet{startingStore:{listOfUsers,account,editProfile}}=this.props;\r\nlet mydata =JSON.parse(sessionStorage.getItem('userData'))\r\nfunction createData(fname,lname,contact,address,email,byear,institution,pass,action){\r\n    return{fname,lname,contact,address,email,byear,institution,pass,action}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop:'16px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n function SettingGrid() {\r\n  const classes = useStyles();\r\n  const [pass,setPass] = React.useState('')\r\n  const [confPass,setConfPass] = React.useState('')\r\n\r\n\r\n  let edit =(accData)=>{\r\n  \r\n    if (pass === confPass){\r\n  \r\n    \r\n  \r\n    account.setProperty('accID',accData.accID)\r\n    account.setProperty('password',pass)\r\n    account.setProperty('_id',accData._id)\r\n      editProfile().then(data=>{\r\n        if (data === 'true'){\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Changes saved', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }else{\r\n          const success = () => {\r\n            message\r\n              .loading('', 1)\r\n              .then(() => message.success('Try again', 1));\r\n          };\r\n      \r\n          setTimeout(() => {\r\n            success();\r\n          }, 0);\r\n        }\r\n      })\r\n    }else{\r\n      const success = () => {\r\n        message\r\n          .loading('', 1.2)\r\n          .then(() => message.success('Check your password', 1));\r\n      };\r\n  \r\n      setTimeout(() => {\r\n        success();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  let getMyData = listOfUsers.filter(usr => usr.accID === mydata.accID).map(data => {\r\n    return (createData(\r\n        data.accFname,data.accLname,data.accContact,data.accAddress,data.accEmailAddress,data.birthYear,data.accInstitution,data.password,<div><MDBBtn color='yellow' onClick={()=>edit(data)}> Save Changes</MDBBtn></div>\r\n    ))\r\n})\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Account</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n        \r\n      \r\n      <h4 className='title' >\r\n          Account Settings\r\n      </h4>\r\n      \r\n      <h6 className='title' >\r\n          General\r\n      </h6>\r\n      <Grid container spacing={3} alignItems='center' justify='center'>\r\n      {getMyData.map((row,i) => { \r\n          let a = i+1;\r\n          return(\r\n<Fragment key={a}>\r\n<Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Name :</span>\r\n          <TextField type='text' defaultValue={row.fname} label='first name' onChange={accFname =>{account.setProperty('accFname',accFname.target.value)}}> </TextField>&nbsp;&nbsp;&nbsp;\r\n          <TextField type='text' defaultValue= {row.lname} label='last name'> </TextField>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'28px'}}>Contact No : </span> <TextField type='text' defaultValue={row.contact} onChange={accContact=>{account.setProperty('accContact',accContact.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Address :</span> <TextField type='text' defaultValue={row.address} onChange={accAddress=>{account.setProperty('accAddress',accAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n       \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Birth Year :</span>  <TextField type='text' defaultValue={row.byear} onChange={birthYear=>{account.setProperty('birthYear',birthYear.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'40px'}}>Institution :</span>   <TextField type='text' defaultValue={row.institution}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} >\r\n          <h6>Security and Login</h6>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        <Paper className={classes.paper}><span style={{marginRight:'70px'}}>Email :</span> <TextField type='text' style={{minWidth:'300px'}} defaultValue={row.email} onChange={accEmailAddress=>{account.setProperty('accEmailAddress',accEmailAddress.target.value)}}> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'50px'}}>Password :</span> <TextField type='password' style={{minWidth:'300px'}}     onChange={(password) =>\r\n                              setPass(password.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        \r\n        <Grid item xs={8} >\r\n          <Paper className={classes.paper}><span style={{marginRight:'15px'}}>Confirm Password :</span> <TextField type='password' style={{minWidth:'300px'}}   onChange={(confpassword) =>\r\n                            setConfPass(confpassword.target.value)\r\n                            }> </TextField></Paper>\r\n        </Grid>\r\n        <Grid item xs={8} >\r\n        {row.action}\r\n        </Grid >\r\n        </Fragment> \r\n         )})}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nreturn (\r\n    <SettingGrid/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(AccountSettings))\r\n","\r\nimport { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable , MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style,  price,action) {\r\n        return { artworkDB,id,title,artist, style,  price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Approved' &&  art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n            artwork.setProperty('artTheme',itm.artTheme)\r\n            artwork.setProperty('artSize',itm.artSize)\r\n            artwork.setProperty('artCategory',itm.artCategory)\r\n            artwork.setProperty('artworkID',itm.artworkID)\r\n            artwork.setProperty('artName',itm.artName)\r\n            artwork.setProperty('artDescription',itm.artDescription)\r\n            artwork.setProperty('artPrice',itm.artPrice)\r\n            artwork.setProperty('artistName',itm.artistName)\r\n            artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n            artwork.setProperty('artDimension',itm.artDimension)\r\n            artwork.setProperty('artType',itm.artType)\r\n            artwork.setProperty('dateAdded',itm.dateAdded)\r\n            artwork.setProperty('artworkImg',itm.artworkImg)\r\n         \r\n            this.setState({\r\n              modal: !this.state.modal\r\n            });\r\n            };\r\n\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n\r\n            let archive =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Archived', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>archive(row.artworkDB)} color='reject'> Archive</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()}>Artwork Information</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core'; \r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n    //  componentDidMount() {   \r\n    //   let {\r\n    //     startingStore: {getArtworkInfo, getArtists, getStyles, getCategories},\r\n    //   } = this.props;\r\n    //   getArtworkInfo();\r\n    //   getArtists();\r\n    //   getStyles();\r\n    //   getCategories();\r\n  \r\n    // }\r\n     \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Archived' && art.accID === mydata.accID).map(arworks =>{\r\n              return(createData(\r\n             arworks,arworks.artworkID\r\n             ,arworks.artistName,arworks.dateAdded\r\n             ,arworks.artPrice\r\n              ))\r\n            })\r\n  \r\n  \r\n          let  moreInfo = (itm) => {\r\n            artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n         \r\n            };\r\n            let  close= () => {\r\n       \r\n              this.setState({\r\n                modal: false\r\n              });\r\n              };\r\n            let restore =(data)=>{\r\n              artwork.setProperty('_id', data._id);\r\n              artwork.setProperty('artworkStatus','Archived');\r\n    \r\n              editArtwork();\r\n  \r\n              const success = () => {\r\n                message\r\n                  .loading('', 1)\r\n                  .then(() => message.success('Arwork Restored', 3));\r\n              };\r\n  \r\n              setTimeout(() =>{\r\n                success()\r\n              },1000)\r\n            }\r\n          \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action:<div><MDBBtn  onClick={()=>moreInfo(row.artworkDB)} color='approve'> More Info</MDBBtn>\r\n          <MDBBtn  onClick={()=>restore(row.artworkDB)} color='reject'> Restore</MDBBtn></div>,\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped\r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()}>Artwork Information</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4}  style={{border:'1px solid grey'}}>\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  \r\n  ","import { message } from 'antd';\r\nimport { MDBBtn, MDBDataTable , MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n  \r\n  \r\n   class PendingArtwork extends Component {\r\n    state = {\r\n      modal: false,\r\n      items:[]\r\n     \r\n    };\r\n  \r\n   \r\n    \r\n  \r\n    render() {\r\n        let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n      let { startingStore: {listOfArtworks, editArtwork, artwork}} = this.props;\r\n  \r\n      \r\n      function createData(artworkDB,id,title,artist, style, date, price,action) {\r\n        return { artworkDB,id,title,artist, style, date, price,action };\r\n      }\r\n  \r\n  let pArtworks = listOfArtworks.filter((art) => art.artworkStatus === 'Pending' && art.accID === mydata.accID).map(artworks =>{\r\n              return(createData(\r\n             artworks,artworks.artworkID,artworks.artName\r\n             ,artworks.artistName,artworks.artStyle,artworks.dateAdded\r\n             ,artworks.artPrice\r\n              ))\r\n            })\r\n  \r\n            let  info = (itm) => {\r\n\r\n              artwork.setProperty('artStyle',itm.artStyle)\r\n              artwork.setProperty('artTheme',itm.artTheme)\r\n              artwork.setProperty('artSize',itm.artSize)\r\n              artwork.setProperty('artCategory',itm.artCategory)\r\n              artwork.setProperty('artworkID',itm.artworkID)\r\n              artwork.setProperty('artName',itm.artName)\r\n              artwork.setProperty('artDescription',itm.artDescription)\r\n              artwork.setProperty('artPrice',itm.artPrice)\r\n              artwork.setProperty('artistName',itm.artistName)\r\n              artwork.setProperty('artworkDateCreated',itm.artworkDateCreated)\r\n              artwork.setProperty('artDimension',itm.artDimension)\r\n              artwork.setProperty('artType',itm.artType)\r\n              artwork.setProperty('dateAdded',itm.dateAdded)\r\n              artwork.setProperty('artworkImg',itm.artworkImg)\r\n            \r\n\r\n              this.setState({\r\n                modal: !this.state.modal\r\n              });\r\n              };\r\n              let  close= () => {\r\n       \r\n                this.setState({\r\n                  modal: false\r\n                });\r\n                };\r\n     \r\n  \r\n  const PendingArtworkTable = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'No.',\r\n          field: 'no',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Title',\r\n          field: 'title',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Artist',\r\n          field: 'artist',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n  \r\n        {\r\n          label: 'Style',\r\n          field: 'style',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Price',\r\n          field: 'price',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n        {\r\n          label: 'Action',\r\n          field: 'action',\r\n          sort: 'asc',\r\n          width: 'auto'\r\n        },\r\n      \r\n      ],\r\n      rows: \r\n     \r\n      [...pArtworks.map((row,i) => {\r\n        let no = i+1;\r\n        return(\r\n  \r\n       {\r\n          no: `${no}`,\r\n          id: `${row.id}`,\r\n          title: `${row.title}`,\r\n          artist: `${row.artist}`,\r\n        \r\n          style: `${row.style}`,\r\n          price: `${row.price}`,\r\n          action: <div style={{maxWidth:'300px',float:'right',marginLeft:'0px'}}><MDBBtn  style={{float:'left'}} onClick={()=>info(row.artworkDB)} color='approve'>More Info</MDBBtn></div>\r\n        \r\n  \r\n       }\r\n       \r\n       ) })\r\n      ]\r\n  \r\n    };\r\n  \r\n    return (\r\n      <Fragment>\r\n      <MDBDataTable\r\n        striped  \r\n        bordered\r\n        small\r\n        data={data}\r\n      />\r\n  \r\n  <MDBModal isOpen={this.state.modal}  centered>\r\n          <MDBModalHeader toggle={()=>close()}>Artwork Information</MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Grid container direction='row' xs={12}>\r\n            <Grid item xs={12}>\r\n            <span className='arttitle'>\r\n{artwork.artName}, {artwork.artworkDateCreated}\r\n      </span>\r\n       </Grid>\r\n       <Grid item xs={4} >\r\n       <div className='artImg'  >\r\n                    <img\r\n                \r\n                      src={artwork.artworkImg}/></div>\r\n</Grid>\r\n<Grid item xs={8}  >\r\n<div style={{padding:'10px'}}>\r\n    <h6>Theme : {artwork.artTheme}</h6>\r\n    <h6>Category : {artwork.artCategory}</h6>\r\n                    <h6>Style : {artwork.artStyle} </h6>\r\n    <h6>Size : {artwork.artSize}</h6>\r\n    <h6>Price : &#8369;{artwork.artPrice}</h6>\r\n    <h6>Description : {artwork.artDescription}</h6>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={()=>close()}>Close</MDBBtn>\r\n         \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n    </Fragment>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <PendingArtworkTable/>\r\n  )\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  export default inject('startingStore')(observer(PendingArtwork))\r\n  ","import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport moment from 'moment'\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {upload, artwork},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    console.log(this.state.selectedFile,'sdasd')\r\n    data.append('artworkImg',this.state.selectedFile);\r\n    \r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Artwork submitted', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\n    let date = new Date();\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\nartwork.setProperty('accID',mydata.accID)\r\nartwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n \r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#262626'}}><span style={{color:'white'}}> Register Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>{\r\n                    \r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='number'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n            \r\n              \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n               \r\n                  />\r\n                  </div>\r\n                  \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                  style={{width:'95%'}}\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                 \r\n                  />\r\n                   </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n              \r\n                     <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfPrintSize}\r\n                    placeholder='Printing Size'\r\n                    showCheckbox={true}\r\n                    displayValue='printSize'\r\n                    onSelect={selectArtSize}\r\n              \r\n                  />\r\n                  </div>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <img src={this.state.selectedFile}/>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Quantity'\r\n                    type='number'\r\n                 \r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                    style={{width:'95%'}}\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                    <img src={this.state.selectedFile} alt='' />\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n","import {\r\n    MDBCard,\r\n  MDBCardBody,\r\n    MDBNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBBreadcrumb,\r\n    MDBBreadcrumbItem,\r\n    MDBTabContent,\r\n    MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Artworks from './ActiveArtworks';\r\nimport ArchivedArtwors from './ArchivedArtworks';\r\nimport Pending from './PendingArtwork';\r\nimport AddArtwork from './AddArtwork'\r\nimport Grid from '@material-ui/core/Grid';\r\n  \r\n  class ArtwrkTab extends Component {\r\n    state = {\r\n      activeItem: '1',\r\n      selected: [],\r\n      selectedCheckBox: [],\r\n    };\r\n  \r\n    toggle = (tab) => (e) => {\r\n      if (this.state.activeItem !== tab) {\r\n        this.setState({\r\n          activeItem: tab,\r\n        });\r\n      }\r\n    };\r\n  \r\n    componentDidMount() {   \r\n      let {\r\n        startingStore: {getArtworkInfo, getArtists, getStyles, getCategories,getPrintSize},\r\n      } = this.props;\r\n      getArtworkInfo();\r\n      getArtists();\r\n      getStyles();\r\n      getCategories();\r\n      getPrintSize()\r\n  \r\n    }\r\n  \r\n    render() {\r\n    \r\n  \r\n      return (\r\n<Fragment>\r\n        <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n        <div className='orderconAdmin' style={{marginTop:'16px'}}>\r\n        <Grid container sm={12}>\r\n            <Grid item sm={6}>\r\n        <h4>Artwork Lists</h4>\r\n        </Grid>\r\n        <Grid item sm={6} >\r\n            <div style={{float:'right'}}>\r\n<AddArtwork/>\r\n</div>\r\n</Grid> \r\n</Grid> \r\n          <MDBNav className='nav-tabs'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '1'}\r\n                onClick={this.toggle('1')}\r\n                role='tab'\r\n              >\r\n                Pending\r\n              </MDBNavLink>\r\n            </MDBNavItem>   \r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '2'}\r\n                onClick={this.toggle('2')}\r\n                role='tab'\r\n              >\r\n                Artworks\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n\r\n\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                link\r\n                to='#'\r\n                active={this.state.activeItem === '3'}\r\n                onClick={this.toggle('3')}\r\n                role='tab'\r\n              >\r\n                Archived\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n     \r\n      \r\n          </MDBNav>\r\n  \r\n          <MDBTabContent activeItem={this.state.activeItem}>\r\n            <MDBTabPane tabId='1' role='tabpanel' className='cartab'>\r\n            <Pending/>\r\n            </MDBTabPane>\r\n  \r\n            <MDBTabPane tabId='2' role='tabpanel' className='tabs'>\r\n              <Artworks/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3' role='tabpanel' className='tabs'>\r\n             <ArchivedArtwors/>\r\n            </MDBTabPane>\r\n  \r\n\r\n          </MDBTabContent>\r\n        </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withRouter(inject('startingStore')(observer(ArtwrkTab)));\r\n  ","import React, { Component, Fragment } from 'react'\r\nimport { MDBIcon, MDBBadge, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {inject,observer} from 'mobx-react'\r\n\r\n\r\n\r\n\r\nclass Notifications extends Component {\r\n\r\n  render() {\r\n    let {startingStore:{listOfNotif}}=this.props;\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n   \r\n   let notifCount = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').length\r\n  \r\n   let mynotif = listOfNotif.filter(ntf => ntf.notifStatus === 'unread').map((notifInfo,i) =>{\r\n     return(\r\n       <Fragment key={i}>\r\n   \r\n           <MDBDropdownItem className=\"newnotif\">{notifInfo.notifMsg}\r\n             <span className=\"time\">{notifInfo.notifDT}</span>\r\n           </MDBDropdownItem>\r\n    \r\n       </Fragment>\r\n     )\r\n   })\r\n\r\nconst Notif = () => {\r\n  return (\r\n    <MDBDropdown className=\"topicons\">\r\n      <MDBDropdownToggle color=\"transparent\">\r\n        <MDBIcon icon=\"bell\" className=\"mr-3\" style={{color:'white'}}/>\r\n        <MDBBadge color=\"danger\" className=\"ml-2 bell\" >{notifCount}</MDBBadge>\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n      <div className=\"title\" style={{paddingLeft:'10px'}}>Notifications</div>\r\n     {mynotif}\r\n      </MDBDropdownMenu>\r\n    </MDBDropdown>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <Notif/>\r\n)\r\n}\r\n}\r\n\r\nexport default inject('startingStore')(observer(Notifications))","import { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport LocalShippingOutlinedIcon from '@material-ui/icons/LocalShippingOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nclass DashCards extends Component {\r\n  componentDidMount(){\r\n    let{startingStore:{getAccounts}}=this.props;\r\n  }\r\n\r\n    render() {\r\n        let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n      let {startingStore:{listofUserOrder,listOfUsers,listOfArtworks}}=this.props;\r\n      let Artwoks = listOfArtworks.filter(art => art.accID === mydata.accID).length\r\n      let Orders = listofUserOrder.filter (ord => ord.orderItems.accID === mydata.accID).length;\r\n   \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper:{\r\n   backgroundColor:\"#208769\"\r\n  },\r\n  cont:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#208769\"\r\n   },\r\n   cont2:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor:\"#F7A31C\"\r\n   },\r\n   cont3:{\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  \r\n   },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  card:{\r\n\r\n   color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n  },\r\n  card2:{\r\n\r\n    color:\"white\",\r\n    backgroundColor:\"#FAE933\",\r\n    height:\"auto\",\r\n   },\r\n    input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  \r\n  },\r\n\r\n  search: {\r\n    // padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'right',\r\n    width: '60%',\r\n    float:\"right\",\r\n    marginBottom:'5px',\r\n  },\r\n  value:{\r\n    fontSize: 30,\r\n    fontWeight:'bolder',\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction DCards(){\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n        <Grid container spacing={3} >\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n<Typography className={classes.title}  gutterBottom style={{float:\"right\"}}>\r\nEarnings YTD\r\n</Typography>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<MonetizationOnOutlinedIcon style={{fontSize:\"3.5em\",color:\"white\"}}/>\r\n{/* <span style={{textAlign:\"right\",color:\"white\"}}> &#8369;{sales}</span> */}\r\n</Typography>\r\n\r\n<Typography variant=\"body2\" component=\"p\">\r\n\r\n\r\n\r\n</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card2}>\r\n<CardContent>\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<BrushIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nArtworks \r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Artwoks}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n\r\n\r\n\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n<Grid item xs={4}>\r\n{/* <CardActionArea > */}\r\n<Card className={classes.card}>\r\n<CardContent>\r\n\r\n<Grid container xs={12} sm={12}>\r\n\r\n<Grid item xs={6} sm={6}>\r\n<Typography variant=\"h5\"  style={{textAlign:\"left\"}} >\r\n<LocalShippingOutlinedIcon style={{fontSize:\"3.5em\"}}/>\r\n\r\n</Typography>\r\n</Grid>\r\n  <Grid item xs={6} sm={6} style={{textAlign:'right'}}>\r\n \r\n<Typography className={classes.title}   >\r\nOrders\r\n</Typography>\r\n<div class='mt-1'>\r\n<Typography className={classes.value}>{Orders}</Typography></div>\r\n</Grid>\r\n\r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n{/* </CardActionArea> */}\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</Grid>\r\n  \r\n</Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n        return (\r\n           <DCards/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default inject('startingStore')(observer(DashCards))\r\n","import React, {Component, Fragment} from 'react';\r\nimport {MDBNavLink, MDBIcon, MDBCard, MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBCardBody} from 'mdbreact';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\nimport {Skeleton} from 'antd';\r\nimport DCards from './../DCards'\r\nclass ArtistProfile extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts,getArtwork,getOrders,getFollow},\r\n    } = this.props;\r\n    getAccounts()\r\n    getArtwork()\r\n    getOrders()\r\n   \r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        listOfUsers,listOfFollowing\r\n      },\r\n    } = this.props;\r\nlet mydata = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\nfunction createData(userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img) {\r\n  return { userDB,id,fname,lname, email, address,contactno,birthYear,institution,document,description, profile_Img };\r\n}\r\nlet myprofile = listOfUsers.filter(pp => pp.accID === mydata.accID).map(info =>{\r\n\r\n  return(createData(\r\n    info,info.accID,info.accFname,info.accLname,info.accEmailAddress,info.accAddress,info.accContact,info.birthYear,info.accInstitution,info.acc_Documents,info.artistDescription,info.profile_Img\r\n\r\n\r\n  )\r\n  )\r\n})\r\n\r\n\r\nlet myFollowers = listOfFollowing.filter(data => data.followingID === mydata.accID).length;\r\n    return (\r\n<Fragment>\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n            \r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n      {myprofile.map((row,index) => {\r\n\r\n        return(\r\n        \r\n        \r\n        \r\n          <Fragment>\r\n\r\n   \r\n      <MDBCard style={{marginTop:'15px',marginBottom:'20px'}}>\r\n    \r\n          <div className='artist'>\r\n            <div className='artistprofile clearfix'>\r\n              \r\n   \r\n\r\n     \r\n\r\n              <div className='left' key={index}>\r\n                <div className='artistpp'>\r\n                \r\n               \r\n                <img \r\n      src={row.profile_Img}\r\n      alt=\"profilePic\"\r\n      />\r\n                  ) \r\n                </div>\r\n                <div className='artistInfo'>\r\n                <h2 className='title'>\r\n                 {row.fname} {row.lname}\r\n                 <span className='bday'>\r\n                      {row.address}, born{' '}\r\n                      {row.birthYear}\r\n                    </span>\r\n                    <span className='bday'>\r\n                  {row.institution}\r\n                </span>\r\n                    </h2>\r\n              \r\n\r\n                  <span className='estart'>Established Artist</span>\r\n               \r\n                </div>\r\n                <div style={{marginTop:'16px'}}>\r\n                  <p> {row.description}</p>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <ul>\r\n                  <li>\r\n                    {myFollowers === 0 ? (\r\n                      '0'\r\n                    ):(\r\n                      {myFollowers}\r\n                    )}\r\n                    <span>Followers</span>\r\n                  </li>\r\n                  {/* <li>\r\n                    4.8/5\r\n                    <span>528k Ratings</span>\r\n                  </li> */}\r\n                 \r\n                </ul>\r\n              </div>\r\n\r\n            \r\n\r\n    \r\n\r\n            </div>\r\n          \r\n          </div>\r\n        \r\n        \r\n          </MDBCard>\r\n      \r\n      <DCards/>\r\n\r\n      </Fragment>\r\n      )})}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistProfile));\r\n","import React, {Component} from 'react';\r\nimport {MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\r\n\r\nclass DownloadImage extends Component {\r\n  state = {\r\n    modal14: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n    // console.log(this.props.data,)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(14)} className='viewimage approve'>\r\n          {' '}\r\n          Zoom Image\r\n          {/* <MDBIcon icon=\"eye\" /> */}\r\n        </a>\r\n        <MDBModal\r\n          isOpen={this.state.modal14}\r\n          toggle={this.toggle(14)}\r\n          centered\r\n          className='singleModal'\r\n        >\r\n          <MDBModalHeader\r\n            toggle={this.toggle(14)}\r\n            className='mhead'\r\n          ></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className='imagecom'>\r\n              <img src={this.props.data} alt='' className='artimg' />\r\n            </div>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadImage;","import {\r\n\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem, MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody, MDBDataTable, MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react';\r\nimport DownloadImage from './DownloadImage';\r\n class Earnings extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[]\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let mydata =JSON.parse(sessionStorage.getItem('userData'))\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n   \r\n    function createData(items,id, orderBy, date,orderStat, paymentStat,action) {\r\n      return { items,id, orderBy, date,orderStat, paymentStat,action };\r\n    }\r\n\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n\r\n  \r\n            if (Delivery.orderItems.filter(ord => ord.accID === mydata.accID)) {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.orderStatus,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n          let myorder = listOfOrders.map( ord => ord.orderItems)\r\n      //  let a = myorder[0].map(ord => ord)\r\n   \r\n\r\n// console.log(a[0],'dataa')\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n     \r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Amount',\r\n        field: 'amount',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => \r\n      {\r\n      \r\n        let total =row.items.filter(ord => ord.accID === '92420-650').reduce((sum, record) => parseInt(sum) + parseInt(record.artworkPaymentAmount) , 0)\r\n        \r\n        \r\n       \r\n      return(\r\n\r\n\r\n    \r\n       {\r\n \r\n\r\n\r\n\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n        paymentStat: `${row.paymentStat}`,\r\n        amount:`${total}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     )})\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n             <div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Sold Artworks</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n      <MDBCard>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n</MDBCard>\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(Earnings))","import React, {Component, Fragment} from 'react';\r\nimport {MDBNavLink, MDBIcon, MDBCard, MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBCardBody} from 'mdbreact';\r\n\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nclass ArtistMessaging extends Component {\r\n  componentDidMount() {\r\n\r\n   \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n<Fragment>\r\n<div className='adminbreadcrumb'>\r\n        <MDBCard>\r\n          <MDBCardBody\r\n            id='breadcrumb'\r\n            className='d-flex align-items-center justify-content-between'\r\n          >\r\n            <MDBBreadcrumb>\r\n              <MDBBreadcrumbItem>Dashboard</MDBBreadcrumbItem>\r\n              <MDBBreadcrumbItem active>Messaging</MDBBreadcrumbItem>\r\n            </MDBBreadcrumb>\r\n      \r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n\r\n\r\n     \r\n      \r\n \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistMessaging));\r\n","import {\r\n  MDBBtn, MDBCollapse, MDBHamburgerToggler, MDBIcon, MDBNav,\r\n  MDBNavbar, MDBNavItem,\r\n  MDBNavLink,\r\n  MDBTabContent,\r\n  MDBTabPane\r\n} from 'mdbreact';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../css/admin.css';\r\nimport Settings from './AccountSetting';\r\nimport ArtworkTab from './ArtworkManagement';\r\nimport Notif from './Notification';\r\nimport Profile from './Profile';\r\nimport EarningsTab from './Earnings'\r\nimport Messages from './Messaging'\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAllNotif}}=this.props\r\n    getAllNotif()\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n\r\n  state = {\r\n    items: {\r\n      default: '1',\r\n    },\r\n  };\r\n\r\n  togglePills = (type, tab) => (e) => {\r\n    e.preventDefault();\r\n    if (this.state.items[type] !== tab) {\r\n      let items = {...this.state.items};\r\n      items[type] = tab;\r\n      this.setState({\r\n        items,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n    return (\r\n      <div>\r\n     <MessengerCustomerChat\r\n    pageId=\"301933277234280\"\r\n    appId=\"216207193165878\"\r\n  />\r\n\r\n        <div className='admin'>\r\n          <MDBNavbar className='position-fixed' dark expand='md'>\r\n            <MDBNav className='topnav' style={{backgroundColor:'#231F20'}}>\r\n              <a href='/ArtistHome' className='logo-wrapper ablogo'>\r\n                <img alt='MDB React Logo' className='img-fluid' src='https://res.cloudinary.com/startupprojectph/image/upload/v1600009464/Webimg/adminlogo_ht6qah.png' />{' '}\r\n                <p style={{color:'white'}}>Artist</p>\r\n              </a>\r\n              <div className='topcon'>\r\n                {/* <MDBNavItem>\r\n                  <Message />\r\n                </MDBNavItem> */}\r\n                <MDBNavItem>\r\n                  <Notif />\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBBtn\r\n                    onClick={() => logout()}\r\n                    color='transparent'\r\n                    className='btnYellow logout'\r\n                  >\r\n                    Log Out &nbsp; <MDBIcon icon='sign-out-alt' />\r\n                  </MDBBtn>\r\n                </MDBNavItem>\r\n              </div>\r\n            </MDBNav>\r\n            <MDBHamburgerToggler\r\n              color='#FAE933'\r\n              id='hamburger1'\r\n              onClick={() => this.toggleSingleCollapse('collapse1')}\r\n            />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNav\r\n                className='nav-pills sidebar-fixed position-fixed adminside'\r\n                id='pills-tab'\r\n                role='tablist'\r\n               \r\n              >\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '1'}\r\n                    onClick={this.togglePills('default', '1')}\r\n                  >\r\n                    <MDBIcon icon='chart-pie' className='mr-3' />\r\n                    Dashboard\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '2'}\r\n                    onClick={this.togglePills('default', '2')}\r\n                  >\r\n                    <MDBIcon icon='paint-brush' className='mr-3' />\r\n                    Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '3'}\r\n                    onClick={this.togglePills('default', '3')}\r\n                  >\r\n                    <MDBIcon icon='coins' className='mr-3' />\r\n                    Sold Artworks\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n     \r\n    \r\n           \r\n                <MDBNavItem>\r\n\r\n\r\n                <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '4'}\r\n                    onClick={this.togglePills('default', '4')}\r\n                  >\r\n                    <MDBIcon icon='envelope' className='mr-3' />\r\n                    Messaging\r\n                  </MDBNavLink>\r\n\r\n                  <MDBNavLink\r\n                    to='#'\r\n                    active={this.state.items['default'] === '5'}\r\n                    onClick={this.togglePills('default', '5')}\r\n                  >\r\n                    <MDBIcon icon='cog' className='mr-3' />\r\n                    Account\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </div>\r\n\r\n        <div className='admincon'>\r\n          <MDBTabContent activeItem={this.state.items['default']}>\r\n            <MDBTabPane tabId='1'>\r\n              {/* <Dashboard /> */}\r\n              <Profile/>\r\n            </MDBTabPane>\r\n          \r\n            <MDBTabPane tabId='2'>\r\n              <ArtworkTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='3'>\r\n              <EarningsTab />\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='4'>\r\n              <Messages/>\r\n            </MDBTabPane>\r\n            <MDBTabPane tabId='5'>\r\n              <Settings />\r\n            </MDBTabPane>\r\n         \r\n          </MDBTabContent>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(Admin)))\r\n","/* eslint no-param-reassign: [\"error\"] */\n\nimport Joi from 'joi';\nimport {\n  toJS,\n  isObservableArray,\n  isObservableObject,\n  isBoxedObservable,\n  action,\n  decorate,\n} from 'mobx';\n\nclass Model {\n  constructor(props) {\n    Object.assign(this, props);\n  }\n\n  static get schema() {\n    return {};\n  }\n\n  validate = () => (\n    Joi.validate(\n      this,\n      this.constructor.schema,\n      {\n        skipFunctions: true,\n        abortEarly: false,\n        allowUnknown: false,\n      },\n    )\n  );\n\n  setProperty = (property, value) => {\n    this.handleProperties(property, value);\n  };\n\n  // get toJS of each property that is an observable\n  get toJSproperties() {\n    let propertiesClone = {};\n\n    Object.keys(this).forEach((prop) => {\n      const value = this[prop];\n      if (isObservableArray(value) || isObservableObject(value) || isBoxedObservable(value)) {\n        propertiesClone = { ...propertiesClone, [prop]: toJS(value) };\n      }\n    });\n\n    return { ...this, ...propertiesClone };\n  }\n\n  get errors() {\n    const { error } = this.validate();\n\n    if (error) {\n      const { details } = error;\n      return details;\n    }\n\n    return [];\n  }\n\n  get isValid() {\n    const { error } = this.validate();\n    return error === null;\n  }\n\n  handleProperties = (property, value, deepProperty = undefined) => {\n    if (typeof property !== 'string') {\n      throw new Error('accepts property of type string');\n    }\n\n    const properties = property.split('.');\n    const prop = properties.shift();\n\n    if (properties.length > 0) {\n      if (deepProperty) {\n        return this.handleProperties(properties.join('.'), value, deepProperty[prop]);\n      }\n      return this.handleProperties(properties.join('.'), value, this[prop]);\n    }\n    if (deepProperty) {\n      (deepProperty[prop] = value);\n      return true;\n    }\n    this[prop] = value;\n    return true;\n  }\n}\n\ndecorate(Model, {\n  setProperty: action,\n});\n\nexport default Model;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Account extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      accID: '',\r\n      accFname: '',\r\n      accLname: '',\r\n      accSuffix: '',\r\n      accAddress: '',\r\n      accEmailAddress: '',\r\n      accessType: '',\r\n      accInstitution: '',\r\n      accFollowers: '0',\r\n      accPoints: '0',\r\n      password: '',\r\n      username: '',\r\n      accContact: '',\r\n      profile_Img: undefined,\r\n      accCategories: [],\r\n      accStyles: [],\r\n      dateAdded: '',\r\n      acc_Status: '',\r\n      acc_Documents: '',\r\n      regType: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Account, {\r\n  _id: observable,\r\n  accID: observable,\r\n  accFname: observable,\r\n  accLname: observable,\r\n  accSuffix: observable,\r\n  accAddress: observable,\r\n  accEmailAddress: observable,\r\n  accessType: observable,\r\n  accInstitution: observable,\r\n  accFollowers: observable,\r\n  accPoints: observable,\r\n  password: observable,\r\n  username: observable,\r\n  accContact: observable,\r\n  profile_Img: observable,\r\n  accCategories: observable,\r\n  accStyles: observable,\r\n  dateAdded: observable,\r\n  acc_Status: observable,\r\n  acc_Documents: observable,\r\n  regType: observable,\r\n});\r\n\r\nexport default Account;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Artwork extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      artworkPath: '',\r\n      artDescription: '',\r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artDimension: '',\r\n      artRating: '',\r\n      accID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n      artworkStatus: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Artwork, {\r\n  _id: observable,\r\n  artworkPath: observable,\r\n  artDescription: observable,\r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artDimension: observable,\r\n  artRating: observable,\r\n  accID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n  artworkStatus: observable,\r\n});\r\n\r\nexport default Artwork;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Cart extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      artistName: '',\r\n      dateOfTransaction: '',\r\n      artworkName: '',\r\n      artworkMaterial: '',\r\n      artworkFramingOptions: '',\r\n      artworkQuantity: '1',\r\n      artworkSize: '',\r\n      artworkPrice: '',\r\n      artworkPaymentAmount: '',\r\n      artworkImg: '',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Cart, {\r\n  accID: observable,\r\n  artistName: observable,\r\n  dateOfTransaction: observable,\r\n  artworkName: observable,\r\n  artworkMaterial: observable,\r\n  artworkFramingOptions: observable,\r\n  artworkQuantity: observable,\r\n  artworkSize: observable,\r\n  artworkPaymentAmount: observable,\r\n  artworkImg: observable,\r\n  artworkPrice: observable,\r\n});\r\n\r\nexport default Cart;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Categories extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      catID: ' ',\r\n      catType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Categories, {\r\n  catID: observable,\r\n  catType: observable,\r\n});\r\n\r\nexport default Categories;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Order extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      accID: '',\r\n      orderID: '',\r\n      modeOfPayment: '',\r\n      orderDate: '',\r\n      orderItems: '',\r\n      orderStatus: '',\r\n      paymentStatus: '',\r\n      totalAmount:'',\r\n      partnerEarnings:'',\r\n      \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Order, {\r\n  accID: observable,\r\n  orderID: observable,\r\n  modeOfPayment: observable,\r\n  orderDate: observable,\r\n  orderItems: observable,\r\n  orderStatus: observable,\r\n  paymentStatus: observable,\r\n  totalAmount:observable,\r\n  partnerEarnings:observable,\r\n});\r\n\r\nexport default Order;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Style extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      styleID: ' ',\r\n      styleType: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n  //   static get schema() {\r\n  //     return {\r\n  //       _id: Joi.string()\r\n  //         .hex()\r\n  //         .length(20),\r\n  //         firstName: Joi.string().required(),\r\n  //         lastName: Joi.string().required(),\r\n  //         email: Joi.email().required(),\r\n  //         password: Joi.string().required(),\r\n  //         phone: Joi.string().required(),\r\n  //         address: Joi.object().keys({\r\n  //           street: Joi.string(),\r\n  //           city: Joi.string(),\r\n  //           state: Joi.string(),\r\n  //           postalCode: Joi.number()\r\n  //       }),\r\n  //       date: Joi.date()\r\n  //         .iso()\r\n  //         .required()\r\n  //     };\r\n  //   }\r\n}\r\n\r\ndecorate(Style, {\r\n  styleID: observable,\r\n  styleType: observable,\r\n});\r\n\r\nexport default Style;\r\n","import Joi from \"joi\";\nimport { decorate, observable } from \"mobx\";\nimport Model from \"./Model\";\n\nclass User extends Model {\n  constructor(props) {\n    const defaults = {\n      _id: undefined,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      phone: 0,\n      address: {\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        postalCode: 0\n      },\n      dateRegistered: undefined\n    };\n    super({ ...defaults, ...props });\n  }\n\n  static get schema() {\n    return {\n      _id: Joi.string()\n        .hex()\n        .length(20),\n      firstName: Joi.string().required(),\n      lastName: Joi.string().required(),\n      email: Joi.email().required(),\n      password: Joi.string().required(),\n      phone: Joi.string().required(),\n      address: Joi.object().keys({\n        street: Joi.string(),\n        city: Joi.string(),\n        state: Joi.string(),\n        postalCode: Joi.number()\n      }),\n      date: Joi.date()\n        .iso()\n        .required()\n    };\n  }\n}\n\ndecorate(User, {\n  firstName: observable,\n  lastName: observable,\n  email: observable,\n  password: observable,\n  phone: observable,\n  address: observable,\n  date: observable,\n});\n\nexport default User;\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass PrintSize extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      sizeID: ' ',\r\n      printSize: ' ',\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(PrintSize, {\r\n  sizeID: observable,\r\n  printSize: observable,\r\n});\r\n\r\nexport default PrintSize;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Notification extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      notifID: '',\r\n      notifSender: ' ',\r\n      notifRecipient:'',\r\n      notifSubject:'',\r\n      notifMsg:'',\r\n      notifDT:'',\r\n      notifStatus:'',\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n}\r\n\r\ndecorate(Notification, {\r\n  notifID: observable,\r\n  notifSender: observable,\r\n  notifRecipient:observable,\r\n  notifSubject:observable,\r\n  notifMsg:observable,\r\n  notifDT:observable,\r\n  notifStatus:observable,\r\n});\r\n\r\nexport default Notification;","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass MyLists extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: '',\r\n      mylistsID:'',\r\n      accID:'',\r\n     \r\n      artworkID: '',\r\n      artName: '',\r\n      artTheme: '',\r\n      artStyle: '',\r\n      artPrice: '',\r\n      artRating: '',\r\n      artistID: '',\r\n      artistName: '',\r\n      artworkDateCreated: '',\r\n      artType: '',\r\n      artworkImg: undefined,\r\n\r\n\r\n\r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(MyLists, {\r\n  _id: observable,\r\n  mylistsID:observable,\r\n  accID:observable,\r\n \r\n  artworkID: observable,\r\n  artName: observable,\r\n  artTheme: observable,\r\n  artStyle: observable,\r\n  artPrice: observable,\r\n  artRating: observable,\r\n  artistID: observable,\r\n  artistName: observable,\r\n  artworkDateCreated: observable,\r\n  artType: observable,\r\n  artworkImg: observable,\r\n\r\n\r\n});\r\n\r\nexport default MyLists;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass Feedback extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      feedbackID: '',\r\n      accID: '',\r\n      orderID: '',\r\n      artworkID:'',\r\n      date: '',\r\n      feedbackNote: '',\r\n   \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(Feedback, {\r\n  feedbackID: observable,\r\n  accID: observable,\r\n  orderID: observable,\r\n  artworkID:observable,\r\n  date: observable,\r\n  feedbackNote: observable,\r\n\r\n});\r\n\r\nexport default Feedback;\r\n","import {decorate, observable} from 'mobx';\r\nimport Model from './Model';\r\n\r\nclass UserFollow extends Model {\r\n  constructor(props) {\r\n    const defaults = {\r\n      _id: undefined,\r\n      followID:'',\r\n      followerID:'',\r\n      followingID:'',\r\n    \r\n    };\r\n    super({...defaults, ...props});\r\n  }\r\n\r\n\r\n}\r\n\r\ndecorate(UserFollow, {\r\n  _id: observable,\r\n  followID:observable,\r\n  follower:observable,\r\n  followingID:observable,\r\n \r\n});\r\n\r\nexport default UserFollow;\r\n","import _ from 'lodash';\nimport {action, decorate, observable, toJS} from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nimport PrintSize from './../models/PrintSize'\nimport Notification from './../models/Notif'\nimport MyLists from './../models/MyLists'\nimport Feedback from './../models/Feedback'\nimport UserFollow from './../models/UserFollow'\n\nclass StartingStore {\n  account = new Account();\n  artwork = new Artwork();\n  categories = new Categories();\n  style = new Style();\n  cart = new Cart();\n  order = new Order();\n  printsize = new PrintSize();\n  notif = new Notification();\n  mylists= new MyLists();\n  feedback = new Feedback();\n  userfollow = new UserFollow();\n  listOfFollowing = [];\n  listOfFeedback = [];\n  listOfMyLists =[];\n  listOfNotif=[];\n  listOfPrintSize =[];\n  listOfOrders = [];\n  welcomeMessage = 'Welcome!';\n  listOfUsers = [];\n  listOfArtworks = [];\n  listOfCategories = [];\n  listOfStyles = [];\n  listOfOrder = [];\n  listOfArtists = [];\n  currentUser = new User();\n  listOfUserDocs = [];\n  listOfUserCart = [];\n  listofArtistArtwork = [];\n  listOfSingleArtwork = [];\n  listofArtistInfo = [];\n  listofArtistCategories = [];\n  listofUserCategoriesArtwork = [];\n  listofFilteredUserArtworkCategories = [];\n  listOfEmergingArtist = [];\n  listofUserOrder = [];\n  filter = false;\n  listofUserStyleArtwork = [];\n  followed = false;\n  listRelatedWorkByCategory = [];\n\n  img = undefined;\n  api = undefined;\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n    return obj;\n  }\n  setFollowed = () => {\n    this.followed = !this.followed;\n  };\n  filterArtwork = (type) => {\n    this.filter = type;\n  };\n  addAccount = () => {\n  \n      return new Promise ((resolve,reject) =>{\n     \n      this.api.addaccount(this.account)\n      .then(resp => {\n      \n        \n        if (resp.data !== false ) {  \n          this.listOfUsers = resp.data; \n          resolve(true);       \n          } \n  else {         \n   resolve(false);      \n   }  \n       \n      })\n    })\n\n  };\n\n  getAccounts = () => {\n    this.api.getaccounts().then((resp) => {\n    \n      this.listOfUsers = resp.data;\n    });\n  };\n\n  editAccount = () => {\n    return new Promise((resolve, reject) => {\n    this.api\n      .editAccount(this.removeUndefinedProps(this.account))\n      .then((resp) => {\n        let user = resp.data.filter((us) => us._id === this.account._id);\n       \n        resolve('success')\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    });\n  };\n\n  editProfile = () => {\n    return new Promise((resolve,reject) =>{\n\n   \n\n    let doc = this.listOfUsers.filter(data=> {\n   \n      if (data.accID === this.account.accID){\n        \n          return data._id\n      }\n    })\n\n\n \n \n    this.api.editprofile(this.account , doc[0]._id)\n    .then(resp => {\n \n      this.listOfUsers=resp.data\n      resolve('true')\n    })\n\n  })\n  }\n\n  // editProfile = () => {\n   \n  //   this.api.editprofile(this.account).then((resp) => {\n  //     this.listOfUsers = resp.data;\n     \n  //   });\n  // };\n\n\n  loginAccount = () => {\n    return new Promise((resolve, reject) => {\n      this.api.loginaccount(this.account).then((resp) => {\n       \n        if (resp.data.accessType === 'Admin') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(true);\n        } else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        } else if (resp.data.accessType === 'PrintingPartner') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(3);\n        } else if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n        \n          resolve(4)\n        } else if (resp.data.acc_Status === 'Pending'){\n          resolve(5)\n         \n        } else if (resp.data.acc_Status === 'Rejected'){\n          resolve(6)\n         \n        }else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginEmail = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginemail(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  loginFB = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.loginfb(this.account)\n     \n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(4)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n  loginGoogle = () => {\n    return new Promise((resolve, reject) => {\n     \n      this.api.logingoogle(this.account)\n      .then((resp) => {\n       \n        if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(1);\n        }else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' \n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        }else if (\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'){\n            sessionStorage.setItem('userData', JSON.stringify(resp.data))\n            resolve(2);\n        }else if (resp.data.acc_Status === 'Pending'){\n          resolve(3)\n         \n        }else if (resp.data.acc_Status === 'Rejected'){\n          resolve(3)\n         \n        }\n         else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addArtwork = () => {\n  \n    this.api.addartwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n    \n\n    });\n  };\n\n  upload = (img, documents) => {\n\n    return new Promise((resolve, reject) => {\n      return this.api.upload(img).then((resp) => {\n   \n        if (documents === 'docu') {\n          this.account.setProperty('acc_Documents', resp.data.url);\n        }else if(documents === 'profile'){\n          this.account.setProperty('profile_Img', resp.data.url);\n        } else {\n          this.artwork.setProperty('artworkImg', resp.data.url);\n          this.account.setProperty('accImg', resp.data.url);\n        }\n  \n        if (this.artwork.artName === '') {\n          this.addAccount();\n        } else {\n          this.addArtwork();\n        }\n      });\n    });\n  };\n\n  getArtwork = () => {\n    this.api.getartwork().then((resp) => {\n      this.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n \n    });\n  };\n\n  getEmergingArtistArtwork = () => {\n    this.api.getEmergingArtist().then((resp) => {\n      this.listOfEmergingArtist = resp.data;\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    if (userData !== null) {\n      this.api\n        .getArtistFollowArtwork(email ? email : userData.accEmailAddress)\n        .then((resp) => {\n          this.listOfArtistFollowed = resp.data;\n        });\n    }\n  };\n\n  getArtworkInfo = () => {\n    // return new Promise((resolve, reject) => {\n    //   this.api.getartworkInfo().then((resp) => {\n    //     let userData = JSON.parse(sessionStorage.getItem('userData'));\n    //     let artCategories = [];\n    //     let categories = [];\n\n    //     this.listOfArtworks = resp.data.map((art) => {\n    //       artCategories.push(art.artTheme[0]);\n    //       return art;\n    //     });\n\n    //     let cat = artCategories.filter((art) => {\n    //       if (art === '' || categories.includes(art)) {\n    //       } else {\n    //         categories.push(art);\n    //       }\n    //     });\n\n    //     if (userData === null || userData === false) {\n    //       let listofUserCategoriesArtwork = resp.data\n    //         .filter((item) => item.artworkStatus !== 'Pending')\n    //         .map((art) => {\n    //           this.listofFilteredUserArtworkCategories.push(art);\n    //           return art;\n    //         });\n    //     } else {\n    //       let listofUserCategoriesArtwork = resp.data\n    //         .filter((item) => item.artworkStatus !== 'Pending')\n    //         .filter((art) => {\n    //           userData['accCategories'].map((cat) => {\n    //             if (art.artTheme.includes(cat)) {\n    //               this.listofFilteredUserArtworkCategories.push(art);\n\n    //               return art;\n    //             }\n    //           });\n    //         });\n       \n    //       this.listofFilteredUserArtworkCategories = _.uniqBy(\n    //         this.listofFilteredUserArtworkCategories,\n    //         (a) => a.artName\n    //       );\n    //     }\n\n    //     if (resp.data !== false) {\n    //       resolve(resp.data);\n    //     } else {\n    //       resolve(false);\n    //     }\n    //   });\n    // });\n  };\n\n  getSingleArtworkInfo = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getsingleartworkinfo(id).then((resp) => {\n        this.listOfSingleArtwork = resp.data;\n\n        if (resp.data !== false) {\n          let listOfSingleArtwork = resp.data;\n          let styles = [];\n          let themes = [];\n          if (resp.data.length > 1) {\n            resp.data.map((item) => {\n              item.artStyle.map((style) => styles.push(style));\n              item.artTheme.map((theme) => themes.push(theme));\n            });\n            let categories = _.union(themes.concat(styles));\n            this.getRelatedWorkByCategory(JSON.stringify(categories));\n          } else {\n            if (resp.data.artStyle !== undefined) {\n              // resp.data.artStyle.map((style) => styles.push(style));\n              // resp.data.artTheme.map((theme) => themes.push(theme));\n\n              let categories = _.union(\n                listOfSingleArtwork.artTheme.concat(\n                  listOfSingleArtwork.artStyle\n                )\n              );\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            }\n          }\n\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  followArtist = (artist) => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.followAccount(userData, artist).then((resp) => {\n        if (resp.data !== false) {\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addOrder = () => {\n \n    this.api.addOrder(this.order).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editArtwork = () => {\n   \n    this.api.editArtwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n     \n    });\n  };\n\n  //Category\n\n  addCategory = () => {\n    this.api.addCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n \n    });\n  };\n\n  editCategory = () => {\n    this.api.editCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n\n  getCategories = () => {\n    this.api.getCategories().then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n  getOrderUser = () => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrder(userData._id).then((resp) => {\n        this.listofUserOrder = resp.data;\n       \n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Style\n\n  addStyle = () => {\n    this.api.addStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  editStyle = () => {\n    this.api.editStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  getStyles = () => {\n    this.api.getStyles().then((resp) => {\n      this.listOfStyles = resp.data;\n    \n    });\n  };\n\n  //PrintSize\n\n  addPrintSize = () => {\n    this.api.addprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n  getPrintSize = () => {\n    this.api.getprintsize().then((resp) => {\n      this.listOfPrintSize = resp.data;\n    \n    });\n  };\n\n  editPrintSize = () => {\n    this.api.editprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n\n  //Artist\n  getArtists = (artist) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtists().then((resp) => {\n        this.listOfArtists = resp.data;\n\n        if (resp.data !== false && artist !== '') {\n          resolve(\n            resp.data.filter(\n              (art) => `${art.accFname} ${art.accLname}` === artist\n            )\n          );\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtists = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n          if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n            this.followed = true;\n          }\n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getSingleEnthusiast = (id) => {\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n       \n        if (userData !== null ) {\n          this.listofArtistInfo = resp.data[0];\n        \n          resolve(resp.data);\n         \n        }else if(userData === null ){\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        }\n        \n        else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n\n  getArtistArtwork = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtistArtwork(id).then((resp) => {\n        let listOfCategories = [];\n        if (resp.data !== false && id !== '') {\n          this.listofArtistArtwork = resp.data;\n\n          listOfCategories = resp.data.map((art) => {\n            if (art.artTheme[0] !== '') {\n              return art.artTheme[0];\n            }\n          });\n          this.listofArtistCategories = listOfCategories.filter((cat) => {\n            return cat !== undefined;\n          });\n     \n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getRelatedWorkByCategory = (cat) => {\n    \n    return new Promise((resolve, reject) => {\n      this.api.getRelatedWorkByCategory(cat).then((resp) => {\n        if (resp.data !== false && cat !== '') {\n          this.listRelatedWorkByCategory = resp.data;\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Cart\n\n  addToCart = () => {\n    this.api.addToCart(this.cart).then((resp) => {\n      this.listOfUserCart = resp.data;\n    });\n  };\n\n  getToCart = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n   \n    this.api.getToCart(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfUserCart = resp.data.filter(\n          (item) => item.artworkQuantity !== ''\n        );\n      }\n    });\n  };\n\n  editToCart = (data) => {\n \n    let currData = toJS(data);\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n \n    this.api.editToCart(currData._id).then((resp) => {\n      if (resp.data !== false) {\n        this.getToCart(userData);\n      }\n    });\n  };\n\n  // ORDERS\n  getOrders = () => {\n    // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n \n    this.api.getOrders().then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrders = resp.data;\n      }\n    });\n  };\n  getOrder = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n    this.api.getOrders(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editOrder = (id, status, account) => {\n    let data = {id: id, status: status, account: account};\n    this.api.editOrder(data).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  addNotif = () => { \n    return new Promise((resolve, reject) => {   \n      this.api.addnotif(this.notif)\n      .then(resp => {    \n         this.listOfNotif = resp.data\n   \n         if (resp.data !== false ) {   \n                  resolve(resp.data);       \n                  } \n         else {         \n           resolve(false);      \n           }  \n           });\n          })\n    }\n\n    getNotif = () => { \n   \n      return new Promise((resolve, reject) => {   \n        let getId = JSON.parse(sessionStorage.getItem('userData'))\n     \n        this.api.getnotif(getId.accID)\n        .then(resp => {    \n        \n           this.listOfNotif = resp.data\n     \n           if (resp.data !== false ) {   \n                    resolve(resp.data);       \n                    } \n           else {         \n             resolve(false);      \n             }  \n             });\n            })\n      }\n\n      getAllNotif = () => {\n        this.api.getallnotif()\n        .then(resp => {\n    \n         this.listOfNotif=resp.data\n        \n      \n        })\n\n      }\n\n\n      editNotif = (id, status, notif) => {\n        \n        let data = {id: id, status: status, notif: notif};\n     \n        this.api.editnotif(data).then((resp) => {\n          if (resp.data !== false) {\n            this.listOfNotif = resp.data;\n          }\n        });\n      }\n\n      addMyLists = () => { \n        return new Promise((resolve, reject) => {   \n          this.api.addmylists(this.mylists)\n          .then(resp => {    \n             this.listOfMyLists = resp.data\n       \n             if (resp.data !== false ) {   \n                      resolve(resp.data);       \n                      } \n             else {         \n               resolve(false);      \n               }  \n               });\n              })\n        }\n\n        getMyLists = () => { \n   \n          return new Promise((resolve, reject) => {   \n            let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n            this.api.getmylists(getId.accID)\n            .then(resp => {    \n          \n               this.listOfMyLists = resp.data\n         \n               if (resp.data !== false ) {   \n                        resolve(resp.data);       \n                        } \n               else {         \n                 resolve(false);      \n                 }  \n                 });\n                })\n          }\n\n\n          deleteMyLists =() =>{\n            let mytoken =this.listOfMyLists.filter(data =>{\n            \n              if (data.mylistsID === this.mylists.mylistsID){\n                return data._id\n              }\n            })\n          \n            this.api.deletemylists(this.mylists ,mytoken[0]._id)\n            .then(resp => {\n\n              this.listOfMyLists=resp.data\n            })\n          }\n\n          addFeedback = () => { \n         \n            return new Promise((resolve, reject) => {   \n              this.api.addfeedback(this.feedback)\n              .then(resp => {    \n                 this.listOfFeedback = resp.data\n           \n                 if (resp.data !== false ) {   \n                          resolve(resp.data);       \n                          } \n                 else {         \n                   resolve(false);      \n                   }  \n                   });\n                  })\n            }\n\n\n        \n            getFeedback = () => {\n              this.api.getfeedback().then((resp) => {\n                this.listOfFeedback = resp.data;\n              \n              });\n            };\n\n\n\n            addFollow = () => { \n         \n              return new Promise((resolve, reject) => {   \n                this.api.addfollow(this.userfollow)\n                .then(resp => {    \n                   this.listOfFollowing = resp.data\n             \n                   if (resp.data !== false ) {   \n                            resolve(resp.data);       \n                            } \n                   else {         \n                     resolve(false);      \n                     }  \n                     });\n                    })\n              }\n\n\n              \n          deleteFollow =() =>{\n            return new Promise((resolve, reject) => {   \n\n             let getuserId = JSON.parse(sessionStorage.getItem('userData'))\n            let follow =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data._id\n              }\n            })\n\n            let follow_ID =this.listOfFollowing.filter(data =>{\n            \n              if (data.followerID === this.userfollow.followerID && data.followingID === this.userfollow.followingID){\n                return data.followID\n              }\n            })\n           \n          \n            this.api.deletefollow(this.userfollow ,follow[0]._id,follow_ID[0].followID)\n            .then(resp => {\n\n              resolve('deleted')\n            })\n\n          })\n          }\n\n    \n\n\n\n          // getFollow = () => { \n   \n          //   return new Promise((resolve, reject) => {   \n          //     let getId = JSON.parse(sessionStorage.getItem('userData'))\n         \n          //     this.api.getfollow(getId.accID)\n          //     .then(resp => {    \n          //   console.log(resp.data,'aaa')\n          //        this.listOfFollowing = resp.data\n           \n          //        if (resp.data !== false ) {   \n          //                 resolve(resp.data);       \n          //                 } \n          //        else {         \n          //          resolve(false);      \n          //          }  \n          //          });\n          //         })\n          //   }\n\n              \n            getFollow = () => {\n              this.api.getfollow().then((resp) => {\n                this.listOfFollowing = resp.data;\n              \n              });\n            };\n\n            getAllArtworks = () => {\n              return new Promise((resolve, reject) => {\n              this.api.getallartworks().then((resp) => {\n        \n                this.listOfArtworks = resp.data;\n                  \n              });\n            })\n            }\n\n\n            \n\n\n\n\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  editProfile: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n  addPrintSize:action,\n  getPrintSize:action,\n  editPrintSize:action,\n  loginAccount:action,\n  loginEmail:action,\n  loginFB:action,\n  loginGoogle:action,\n  notif:observable,\n  listOfNotif:observable,\n  addNotif:action,\n  getNotif:action,\n  getAllNotif:action,\n  editNotif:action,\n  mylists:observable,\n  listOfMyLists :observable,\n  addMyLists:action,\n  getMyLists:action,\n  deleteMyLists:action,\n  feedback:observable,\n  listOfFeedback:observable,\n  addFeedback:action,\n  getFeedback:action,\n  getSingleEnthusiast:action,  \n  userfollow:observable,\n  listOfFollowing:observable,    \n  addFollow:action,   \n  deleteFollow:action,   \n  getFollow:action,        \n  getAllArtworks:action,                                    \n});\n\nexport default StartingStore;\n","import axios from 'axios';\nimport {action, decorate} from 'mobx';\n\nclass Api {\n  api = axios.create({\n    baseURL: '/api',\n  });\n\n  // ACCOUNT\n  addaccount = (data) => {\n    return this.api.post('addAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getaccounts = () => {\n    return this.api.get('getAccounts');\n  };\n\n  editAccount = (data) => {\n    return this.api.post('editAccount', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editprofile = (data ,docID)=>{\n    \n    return this.api.put(`editProfile/${docID}`,{\n    mode:'cors',\n    data:data,\n  })\n  }\n\n  \n  addOrder = (data) => {\n    return this.api.post('addOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginaccount = async (data) => {\n    return this.api.post('loginAccounts', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  loginemail = async (data) => {\n   \n    return this.api.post('loginEmail', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  \n  loginfb = async (data) => {\n   \n    return this.api.post('loginFB', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  \n  logingoogle = async (data) => {\n   \n    return this.api.post('loginGoogle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getOrder = (id) => {\n    return this.api.get(`getOrder/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  // ARTWORK\n  addartwork = (data) => {\n    return this.api.post('addArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getartwork = () => {\n    return this.api.get('getArtworks');\n  };\n\n  getartworkInfo = () => {\n    return this.api.get('getArtworkInfo');\n  };\n\n  getsingleartworkinfo = (id) => {\n    return this.api.get(`getSingleArtworkInfo/${id}`);\n  };\n\n  editArtwork = (data) => {\n    return this.api.post('editArtwork', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getArtistArtwork = (id) => {\n    return this.api.get(`getArtistArtwork/${id}`);\n  };\n\n  getRelatedWorkByCategory = (category) => {\n    return this.api.get(`getRelatedWorkByCategory/${category}`);\n  };\n\n  // CATEGORY\n  addCategory = (data) => {\n    return this.api.post('addCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editCategory = (data) => {\n    return this.api.post('editCategory', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getCategories = () => {\n    return this.api.get('getCategories');\n  };\n\n  // STYLES\n  addStyle = (data) => {\n    return this.api.post('addStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editStyle = (data) => {\n    return this.api.post('editStyle', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getStyles = () => {\n    return this.api.get('getStyles');\n  };\n\n  //Print Size\n  addprintsize = (data) => {\n    return this.api.post('addprintSize', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n  getprintsize = () => {\n    return this.api.get('getprintSize');\n  };\n  editprintsize =(data)=>{\n    return this.api.post('editprintSize'),{\n      mode:'cors',\n      data:data,\n    }\n  }\n\n  //ARTIST\n  getArtists = () => {\n    return this.api.get('getArtists');\n  };\n\n  getSingleArtists = (id) => {\n    return this.api.get(`getSingleArtists/${id}`);\n  };\n\n  // CART\n\n  addToCart = (data) => {\n    return this.api.post('addToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getToCart = (data) => {\n    return this.api.post('getToCart', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editToCart = (id) => {\n    return this.api.delete(`editToCart/${id}`, {\n      mode: 'cors',\n    });\n  };\n\n  upload = (img) => {\n    return this.api.post('/upload', img, {\n      mode: 'cors',\n    });\n  };\n\n  getOrders = () => {\n    return this.api.get('getAllOrders', {\n      mode: 'cors',\n    });\n  };\n\n  followAccount = (data, id) => {\n    return this.api.post(`followAccount/${id}`, {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  editOrder = (data) => {\n    return this.api.put('editOrder', {\n      mode: 'cors',\n      data: data,\n    });\n  };\n\n  getEmergingArtist = () => {\n    return this.api.get('getEmergingArtistArtwork', {\n      mode: 'cors',\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    return this.api.get(`getArtistFollowArtwork/${email}`, {\n      mode: 'cors',\n    });\n  };\n  addnotif = (data) => {\n    \n    return this.api.post('addNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n  getnotif = (id) => {\n    return this.api.get(`getNotif/${id}`);\n  };\n\n  getallnotif = () => {\n    return this.api.get(`getAllNotif`);\n  };\n\n  editnotif = (data) => {\n    return this.api.put('editNotif', {\n      mode: 'cors',\n      data: data,\n    });\n  }\n\n\naddmylists = (data) => {\n \n  return this.api.post('addMyLists', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetmylists = (id) => {\n \n  return this.api.get(`getMyLists/${id}`, {\n    mode: 'cors',\n  });\n};\n\ndeletemylists = (data,id) =>{\n  return this.api.delete(`deleteMyLists/${id}`,{\n    data:data,\n  })\n}\n\n\n\naddfeedback = (data) => {\n  return this.api.post('addFeedback', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\ngetfeedback = () => {\n  return this.api.get('getFeedback');\n};\n\n\n\naddfollow = (data) => {\n  return this.api.post('addFollow', {\n    mode: 'cors',\n    data: data,\n  });\n}\n\n// getfollow = (id) => {\n// console.log(id,'bbb')\n//   return this.api.get(`getFollow/${id}`, {\n//     mode: 'cors',\n//   });\n// };\n\ngetfollow = () => {\n  return this.api.get('getFollow');\n};\n\ndeletefollow = (data,id,followid) =>{\n \n  return this.api.delete(`deleteFollow/${id}/${followid}`,{\n    data:data,\n  })\n}\n\ngetallartworks = () => {\n  return this.api.get('getAllArtworks');\n};\n\n}\n\n\n\n\ndecorate(Api, {\n  getUsers: action,\n  addaccount: action,\n  getaccounts: action,\n  loginaccount: action,\n  loginemail: action,\n  loginfb: action,\n  logingoogle: action,\n  editAccount: action,\n  editprofile: action,\n  addartwork: action,\n  getartwork: action,\n  editArtwork: action,\n  getartworkInfo: action,\n  addCategory: action,\n  editCategory: action,\n  getCategories: action,\n  getArtists: action,\n  addToCart: action,\n  getToCart: action,\n  editToCart: action,\n  addStyle: action,\n  addprintsize:action,\n  getprintsize:action,\n  editprintsize:action,\n  getStyles: action,\n  editStyle: action,\n  getsingleartworkinfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  getOrders: action,\n  getOrder: action,\n  followAccount: action,\n  addOrder: action,\n  editOrder: action,\n  getEmergingArtist: action,\n  getArtistFollowArtwork: action,\n  addnotif:action,\n  getnotif:action,\n  editnotif:action,\n  addmylists:action,\n  getmylists:action,\n  deletemylists:action,\n  addfeedback:action,\n  getfeedback:action,\n  addfollow:action,\n  getfollow:action,\n  deletefollow:action,\n  getallartworks:action,\n});\n\nexport default Api;\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, withRouter} from 'react-router-dom';\r\nimport {Provider} from 'mobx-react';\r\n\r\n//pages\r\nimport Landing from './pages/Landing/';\r\nimport Homepage from './pages/Homepage/';\r\nimport SingleArtist from './pages/SingleArtist/';\r\nimport ArtistReg from './pages/ArtistReg/';\r\nimport ArtGalReg from './pages/ArtGalReg/';\r\nimport UserReg from './pages/UserReg/';\r\nimport UploadWork from './pages/UploadWork/';\r\nimport SingleArt from './pages/SingleArt/';\r\nimport Artworks from './pages/Artworks/';\r\nimport Artists from './pages/Artists/';\r\nimport CProfile from './pages/CProfile/';\r\nimport CProfileEdit from './pages/CProfileEdit/';\r\nimport Order from './pages/Order/';\r\nimport RegVerify from './pages/RegVerify/';\r\nimport SubmitArt from './pages/SubmitArt/';\r\n\r\nimport ShopByPrice from './pages/ShopByPrice/';\r\nimport ShopByCategory from './pages/ShopByCategory/';\r\nimport MyLists from './pages/MyLists/'\r\nimport OnSale from './pages/Onsale'\r\n//Admin\r\nimport AdminLogin from './admin/AdminLogin.js';\r\nimport AdminHome from './admin/Admin.js';\r\nimport {ToastContainer} from 'react-toastify';\r\n//PrintPartner\r\nimport PartnerLogin from './printingpartner/PartnerLogin.js';\r\nimport PrintingPartner from './printingpartner/PrintingPartner.js';\r\nimport ArtistHome from './ArtistPage/'\r\n\r\nimport {StartingStore, Api} from './stores';\r\n\r\nconst api = new Api();\r\nconst startingStore = new StartingStore(api);\r\n\r\nconst stores = {\r\n  startingStore,\r\n};\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider {...stores}>\r\n        <ToastContainer\r\n          position='top-right'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Route exact path='/' component={Landing} />\r\n        <Route exact path='/Home' component={Homepage} />\r\n        <Route exact path='/Artist/:name' component={SingleArtist} />\r\n        <Route exact path='/ArtistRegistration' component={ArtistReg} />\r\n        <Route exact path='/UserRegistration' component={UserReg} />\r\n        <Route exact path='/ArtistGalleryRegistration' component={ArtGalReg} />\r\n        <Route exact path='/Upload' component={UploadWork} />\r\n        <Route exact path='/Art/:id/:name' component={SingleArt} />\r\n        <Route exact path='/Artworks' component={Artworks} />\r\n     \r\n        <Route exact path='/Artists' component={Artists} />\r\n        <Route exact path='/CProfile/:id' component={CProfile} />\r\n        <Route exact path='/CProfileEdit/:id' component={CProfileEdit} />\r\n        <Route exact path='/RegVerify' component={RegVerify} />\r\n        <Route exact path='/SubmitArt' component={SubmitArt} />\r\n        <Route exact path='/MyLists' component={MyLists} />\r\n\r\n        <Route exact path='/ShopByPrice' component={ShopByPrice} />\r\n        <Route exact path='/ShopByCategory' component={ShopByCategory} />\r\n        <Route exact path='/OnSale' component={OnSale} />\r\n\r\n        <Route exact path='/Admin' component={AdminLogin} />\r\n        <Route exact path='/AdminHome' component={AdminHome} />\r\n        <Route exact path='/Order' component={Order} />\r\n        <Route exact path='/PartnerLogin' component={PartnerLogin} />\r\n        <Route exact path='/PrintingPartner' component={PrintingPartner} />\r\n\r\n        <Route exact path='/ArtistHome' component={ArtistHome} />\r\n        <ToastContainer />\r\n\r\n        {/* render={function() {\r\n              return <h1>Not Found</h1>;\r\n            }}\r\n          /> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Routes);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport './css/style.css';\r\nimport './css/normalize.css';\r\nimport './css/printart.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n\r\n      <Router basename={'/'}>\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n\r\n        \r\n      </Router>\r\n   \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./css/style.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nconst routes = (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} />\r\n      <Redirect from=\"/\" to=\"/\" />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(routes, document.getElementById(\"root\"));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}