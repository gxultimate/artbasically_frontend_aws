{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\admin\\\\sections\\\\EditArtist.js\";\nimport React, { Component } from 'react';\nimport { MDBRow, MDBCol, MDBInput, MDBModal, MDBModalBody, MDBModalHeader, MDBIcon, MDBBtn } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\n\nclass EditArtist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal1: false\n    };\n\n    this.toggle = nr => () => {\n      let {\n        startingStore: {\n          account\n        }\n      } = this.props;\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n      account.setProperty('accID', '');\n      account.setProperty('accFname', '');\n      account.setProperty('_id', '');\n      account.setProperty('accLname', '');\n      account.setProperty('accSuffix', '');\n      account.setProperty('accAddress', '');\n      account.setProperty('accEmailAddress', '');\n      account.setProperty('accessType', '');\n      account.setProperty('accInstitution', '');\n      account.setProperty('accFollowers', '0');\n      account.setProperty('accPoints', '0');\n      account.setProperty('password', '');\n      account.setProperty('username', '');\n      account.setProperty('accContact', '');\n      account.setProperty('accBday', '');\n      account.setProperty('accImg', undefined);\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n      let {\n        startingStore: {\n          editAccount,\n          account\n        }\n      } = this.props;\n      account.setProperty('accessType', this.props.data.accessType);\n      account.setProperty('_id', this.props.data._id);\n      account.setProperty('accID', this.props.data.accID);\n\n      const success = () => {\n        message.loading('Submitting edited Artist account..', 1.2).then(() => message.success('Successfully edited an Artist account', 1));\n      };\n\n      setTimeout(() => {\n        success();\n      }, 1000);\n      editAccount();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let {\n      startingStore: {\n        account\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      onClick: this.toggle(1),\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"EDIT ARTIST CATEGORY\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      className: \"adminmodalbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Email Address\",\n      type: \"email\",\n      valueDefault: this.props.data.accEmailAddress,\n      onChange: accEmailAddress => {\n        account.setProperty('accEmailAddress', accEmailAddress.target.value);\n        console.log(account, 'rawrrwowadwasd');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Password\",\n      type: \"password\",\n      valueDefault: this.props.data.password,\n      onChange: password => account.setProperty('password', password.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Confirm Password\",\n      type: \"password\",\n      valueDefault: this.props.data.password,\n      onChange: password => account.setProperty('password', password.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"prefix\",\n      valueDefault: this.props.data.accSuffix,\n      placeholder: \"Prefix\",\n      onChange: accSuffix => account.setProperty('accSuffix', accSuffix.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \" Prefix \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, \" MR. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \" MS. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mrs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \" MRS. \")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"First Name\",\n      type: \"text\",\n      valueDefault: this.props.data.accFname,\n      onChange: accFname => account.setProperty('accFname', accFname.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Last Name\",\n      type: \"text\",\n      valueDefault: this.props.data.accLname,\n      onChange: accLname => account.setProperty('accLname', accLname.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"Please provide a Last Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Birth Year\",\n      type: \"text\",\n      valueDefault: this.props.data.accBday,\n      onChange: accBday => account.setProperty('accBday', accBday.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Please provide a Birth Year.\"))), /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"textarea\",\n      label: \"Biography\",\n      rows: \"3\",\n      valueDefault: this.props.data.artistDescription,\n      onChange: artistDescription => account.setProperty('artistDescription', artistDescription.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"Please provide a short Bio.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Contact Number\",\n      type: \"text\",\n      valueDefault: this.props.data.accContact,\n      onChange: accContact => account.setProperty('accContact', accContact.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, \"Please provide a Contact Number.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Institution / Company\",\n      type: \"text\",\n      valueDefault: this.props.data.accInstitution,\n      onChange: accInstitution => account.setProperty('accInstitution', accInstitution.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Full Address\",\n      type: \"text\",\n      valueDefault: this.props.data.accAddress,\n      onChange: accAddress => account.setProperty('accAddress', accAddress.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, \"Upload Profile Picture\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, \"SAVE\")))))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(EditArtist));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/admin/sections/EditArtist.js"],"names":["React","Component","MDBRow","MDBCol","MDBInput","MDBModal","MDBModalBody","MDBModalHeader","MDBIcon","MDBBtn","inject","observer","message","EditArtist","state","modal1","toggle","nr","startingStore","account","props","modalNumber","setState","setProperty","undefined","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","className","editAccount","data","accessType","_id","accID","success","loading","then","setTimeout","changeHandler","name","value","render","accEmailAddress","console","log","password","accSuffix","accFname","accLname","accBday","artistDescription","accContact","accInstitution","accAddress","onFileChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditArtist extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n\r\n    account.setProperty('accID', '');\r\n    account.setProperty('accFname', '');\r\n    account.setProperty('_id', '');\r\n    account.setProperty('accLname', '');\r\n    account.setProperty('accSuffix', '');\r\n    account.setProperty('accAddress', '');\r\n    account.setProperty('accEmailAddress', '');\r\n    account.setProperty('accessType', '');\r\n    account.setProperty('accInstitution', '');\r\n    account.setProperty('accFollowers', '0');\r\n    account.setProperty('accPoints', '0');\r\n    account.setProperty('password', '');\r\n    account.setProperty('username', '');\r\n    account.setProperty('accContact', '');\r\n    account.setProperty('accBday', '');\r\n    account.setProperty('accImg', undefined);\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editAccount, account},\r\n    } = this.props;\r\n    account.setProperty('accessType', this.props.data.accessType);\r\n    account.setProperty('_id', this.props.data._id);\r\n    account.setProperty('accID', this.props.data.accID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited Artist account..', 1.2)\r\n        .then(() =>\r\n          message.success('Successfully edited an Artist account', 1)\r\n        );\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n\r\n    editAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <a href='#!' onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='edit' />\r\n        </a>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            EDIT ARTIST CATEGORY\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    valueDefault={this.props.data.accEmailAddress}\r\n                    onChange={(accEmailAddress) => {\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      );\r\n                      console.log(account, 'rawrrwowadwasd');\r\n                    }}\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    valueDefault={this.props.data.password}\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    valueDefault={this.props.data.password}\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    valueDefault={this.props.data.accSuffix}\r\n                    placeholder='Prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    valueDefault={this.props.data.accFname}\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    valueDefault={this.props.data.accLname}\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    valueDefault={this.props.data.accBday}\r\n                    onChange={(accBday) =>\r\n                      account.setProperty('accBday', accBday.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    type='textarea'\r\n                    label='Biography'\r\n                    rows='3'\r\n                    valueDefault={this.props.data.artistDescription}\r\n                    onChange={(artistDescription) =>\r\n                      account.setProperty(\r\n                        'artistDescription',\r\n                        artistDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a short Bio.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    valueDefault={this.props.data.accContact}\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    valueDefault={this.props.data.accInstitution}\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    valueDefault={this.props.data.accAddress}\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SAVE\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditArtist));\r\n"]},"metadata":{},"sourceType":"module"}