{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\admin\\\\sections\\\\AddArtwork.js\";\nimport { message } from 'antd';\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBModal, MDBModalBody, MDBModalHeader, MDBRow } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport imageCompression from 'browser-image-compression';\nimport React, { Component } from 'react';\n\nclass AddArtwork extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n    };\n\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      modal1: false,\n      profileImg: '',\n      artID: '',\n      selectedFile: null\n    };\n  }\n\n  async onFileChange(event) {\n    var imageFile = event.target.files[0];\n    var options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: false\n    };\n    let image = await imageCompression(imageFile, options).then(function (compressedFile) {\n      return compressedFile;\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n    this.setState({\n      selectedFile: image\n    });\n  }\n\n  onSubmit(e) {\n    let {\n      startingStore: {\n        upload,\n        artwork\n      }\n    } = this.props;\n    e.preventDefault();\n    const data = new FormData();\n    data.append('artworkImg', this.state.selectedFile);\n    artwork.setProperty('artworkID', this.getUniqueID());\n    data.append('type', 'artwork');\n    upload(data);\n\n    const success = () => {\n      message.loading('Submitting Artwork..', 1.3).then(() => message.success('Successfully added an Artwork', 1));\n    };\n\n    setTimeout(() => {\n      success();\n    }, 1500);\n  }\n\n  render() {\n    let {\n      startingStore: {\n        artwork,\n        listOfArtists,\n        listOfCategories,\n        listOfStyles\n      }\n    } = this.props;\n    let mydata = JSON.parse(sessionStorage.getItem('userData'));\n    artwork.setProperty('accID', mydata.accID);\n\n    function selectCategory(list, listitem) {\n      let artThemeSelected = list.map(cat => cat.catType);\n      artwork.setProperty('artTheme', artThemeSelected);\n    }\n\n    function selectStyle(list, listitem) {\n      let artStyleSelected = list.map(cat => cat.styleType);\n      artwork.setProperty('artStyle', artStyleSelected);\n    } // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\n    // console.log(categoryList)\n\n\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      onClick: this.toggle(1),\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus-circle\",\n      size: \"2x\",\n      className: \"addartistbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), \"ADD ARTWORK\"), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"ADD ARTWORK\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      className: \"adminmodalbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Title\",\n      type: \"text\",\n      onChange: artName => artwork.setProperty('artName', artName.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: artistName => artwork.setProperty('artistName', artistName.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \"Artist\"), listOfArtists.map(artist => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: `${artist.accFname} ${artist.accLname}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, artist.accFname, \" \", artist.accLname);\n    })), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Description\",\n      type: \"text\",\n      onChange: artDescription => artwork.setProperty('artDescription', artDescription.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Year\",\n      type: \"text\",\n      onChange: artworkDateCreated => artwork.setProperty('artworkDateCreated', artworkDateCreated.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfCategories,\n      placeholder: \"Select Theme\",\n      showCheckbox: true,\n      displayValue: \"catType\",\n      onSelect: selectCategory // onChange={(catType) =>\n      // //   artwork.setProperty('catType', catType.target.value)\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfStyles,\n      placeholder: \"Select Style\",\n      showCheckbox: true,\n      onSelect: selectStyle,\n      displayValue: \"styleType\" // onChange={(styleType) =>\n      //   artwork.setProperty('styleType', styleType.target.value)\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Dimension\",\n      type: \"text\",\n      onChange: artDimension => artwork.setProperty('artDimension', artDimension.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Price\",\n      type: \"text\",\n      onChange: artPrice => artwork.setProperty('artPrice', artPrice.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      onChange: artType => artwork.setProperty('artType', artType.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, \" Art Type \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Original\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, \" Original \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, \" Secondary \")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Quantity\",\n      type: \"text\" // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, \"Please provide Number of Quantity.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.selectedFile,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, \"Please upload a high resolution photo.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, \"SUBMIT\")))))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(AddArtwork));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/admin/sections/AddArtwork.js"],"names":["message","MDBBtn","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBModal","MDBModalBody","MDBModalHeader","MDBRow","inject","observer","Multiselect","imageCompression","React","Component","AddArtwork","constructor","props","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","toggle","nr","modalNumber","setState","state","submitHandler","event","preventDefault","target","className","onFileChange","bind","onSubmit","modal1","profileImg","artID","selectedFile","imageFile","files","options","maxSizeMB","maxWidthOrHeight","useWebWorker","image","then","compressedFile","catch","error","console","log","e","startingStore","upload","artwork","data","FormData","append","setProperty","success","loading","setTimeout","render","listOfArtists","listOfCategories","listOfStyles","mydata","JSON","parse","sessionStorage","getItem","accID","selectCategory","list","listitem","artThemeSelected","map","cat","catType","selectStyle","artStyleSelected","styleType","artName","value","artistName","artist","accFname","accLname","artDescription","artworkDateCreated","artDimension","artPrice","artType"],"mappings":"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","sourcesContent":["import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {upload, artwork},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('artworkImg', this.state.selectedFile);\r\n    artwork.setProperty('artworkID', this.getUniqueID());\r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Successfully added an Artwork', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\n    artwork.setProperty('accID',mydata.accID)\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\r\n\r\n    // console.log(categoryList)\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          ADD ARTWORK\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>ADD ARTWORK</MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    onChange={(artName) =>\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='text'\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  {/* <SelectTheme theme = {categoryList} style = {styleList}/> */}\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={(catType) =>\r\n                    // //   artwork.setProperty('catType', catType.target.value)\r\n                    // }\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Dimension'\r\n                    type='text'\r\n                    onChange={(artDimension) =>\r\n                      artwork.setProperty(\r\n                        'artDimension',\r\n                        artDimension.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='text'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='text'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                    <img src={this.state.selectedFile} alt='' />\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n"]},"metadata":{},"sourceType":"module"}