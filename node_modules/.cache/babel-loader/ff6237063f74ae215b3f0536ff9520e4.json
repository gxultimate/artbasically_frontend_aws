{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\ArtistPage\\\\ArtworkManagement\\\\AddArtwork\\\\index.js\";\nimport { message } from 'antd';\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBModal, MDBModalBody, MDBModalHeader, MDBRow } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport moment from 'moment';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport imageCompression from 'browser-image-compression';\nimport React, { Component } from 'react';\n\nclass AddArtwork extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n    };\n\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      modal1: false,\n      profileImg: '',\n      artID: '',\n      selectedFile: null\n    };\n  }\n\n  async onFileChange(event) {\n    var imageFile = event.target.files[0];\n    var options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: false\n    };\n    let image = await imageCompression(imageFile, options).then(function (compressedFile) {\n      return compressedFile;\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n    this.setState({\n      selectedFile: image\n    });\n  }\n\n  onSubmit(e) {\n    let {\n      startingStore: {\n        upload,\n        artwork\n      }\n    } = this.props;\n    e.preventDefault();\n    const data = new FormData();\n    data.append('artworkImg', this.state.selectedFile);\n    data.append('type', 'artwork');\n    upload(data);\n\n    const success = () => {\n      message.loading('Submitting Artwork..', 1.3).then(() => message.success('Successfully added an Artwork', 1));\n    };\n\n    setTimeout(() => {\n      success();\n    }, 1500);\n  }\n\n  render() {\n    function getHash(input) {\n      var hash = 0,\n          len = input.length;\n\n      for (var i = 0; i < len; i++) {\n        hash = (hash << 5) - hash + input.charCodeAt(i);\n        hash |= 0; // to 32bit integer\n      }\n\n      return hash;\n    }\n\n    let date = new Date();\n    let {\n      startingStore: {\n        artwork,\n        listOfArtists,\n        listOfCategories,\n        listOfStyles,\n        listOfPrintSize\n      }\n    } = this.props;\n    let mydata = JSON.parse(sessionStorage.getItem('userData'));\n    artwork.setProperty('accID', mydata.accID);\n    artwork.setProperty('artworkStatus', 'Pending');\n\n    function selectCategory(list, listitem) {\n      let artThemeSelected = list.map(cat => cat.catType);\n      artwork.setProperty('artTheme', artThemeSelected);\n    }\n\n    function selectStyle(list, listitem) {\n      let artStyleSelected = list.map(cat => cat.styleType);\n      artwork.setProperty('artStyle', artStyleSelected);\n    }\n\n    function selectArtSize(list, listitem) {\n      let artSizeSelected = list.map(size => size.printSize);\n      artwork.setProperty('artSize', artSizeSelected);\n    } // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\n    // console.log(categoryList)\n\n\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      onClick: this.toggle(1),\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus-circle\",\n      size: \"2x\",\n      className: \"addartistbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), \"Add Artwork\"), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      style: {\n        backgroundColor: '#262626'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 87\n      }\n    }, \" Register Artwork\")), /*#__PURE__*/React.createElement(MDBModalBody, {\n      className: \"adminmodalbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Title\",\n      type: \"text\",\n      style: {\n        width: '95%'\n      },\n      onChange: artName => {\n        artwork.setProperty('artName', artName.target.value);\n        artwork.setProperty('artworkID', `${getHash(artName.target.value.slice(0, 3))}-${Math.floor(1000 + Math.random() * 9000)}`);\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        width: '95%'\n      },\n      onChange: artistName => artwork.setProperty('artistName', artistName.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"Artist\"), listOfArtists.map(artist => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: `${artist.accFname} ${artist.accLname}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, artist.accFname, \" \", artist.accLname);\n    })), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Year\",\n      type: \"number\",\n      style: {\n        width: '95%'\n      },\n      onChange: artworkDateCreated => artwork.setProperty('artworkDateCreated', artworkDateCreated.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Description\",\n      type: \"text\",\n      style: {\n        width: '95%'\n      },\n      onChange: artDescription => artwork.setProperty('artDescription', artDescription.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '95%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfCategories,\n      placeholder: \"Select Theme\",\n      showCheckbox: true,\n      displayValue: \"catType\",\n      onSelect: selectCategory // onChange={(catType) =>\n      // //   artwork.setProperty('catType', catType.target.value)\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '95%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Multiselect, {\n      style: {\n        width: '95%'\n      },\n      className: \"multsel\",\n      options: listOfStyles,\n      placeholder: \"Select Style\",\n      showCheckbox: true,\n      onSelect: selectStyle,\n      displayValue: \"styleType\" // onChange={(styleType) =>\n      //   artwork.setProperty('styleType', styleType.target.value)\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '95%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfPrintSize,\n      placeholder: \"Printing Size\",\n      showCheckbox: true,\n      displayValue: \"printSize\",\n      onSelect: selectArtSize // onChange={(catType) =>\n      // //   artwork.setProperty('catType', catType.target.value)\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(MDBInput, {\n      style: {\n        width: '95%'\n      },\n      label: \"Price\",\n      type: \"number\",\n      onChange: artPrice => artwork.setProperty('artPrice', artPrice.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        width: '95%'\n      },\n      className: \"usertype\",\n      onChange: artType => artwork.setProperty('artType', artType.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, \" Art Type \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Original\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, \" Original \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, \" Secondary \")), /*#__PURE__*/React.createElement(MDBInput, {\n      style: {\n        width: '95%'\n      },\n      label: \"Quantity\",\n      type: \"text\" // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, \"Please provide Number of Quantity.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: '95%'\n      },\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.selectedFile,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, \"Please upload a high resolution photo.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 19\n      }\n    }, \"SUBMIT\")))))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(AddArtwork));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/ArtistPage/ArtworkManagement/AddArtwork/index.js"],"names":["message","MDBBtn","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBModal","MDBModalBody","MDBModalHeader","MDBRow","inject","observer","moment","Multiselect","imageCompression","React","Component","AddArtwork","constructor","props","toggle","nr","modalNumber","setState","state","submitHandler","event","preventDefault","target","className","onFileChange","bind","onSubmit","modal1","profileImg","artID","selectedFile","imageFile","files","options","maxSizeMB","maxWidthOrHeight","useWebWorker","image","then","compressedFile","catch","error","console","log","e","startingStore","upload","artwork","data","FormData","append","success","loading","setTimeout","render","getHash","input","hash","len","length","i","charCodeAt","date","Date","listOfArtists","listOfCategories","listOfStyles","listOfPrintSize","mydata","JSON","parse","sessionStorage","getItem","setProperty","accID","selectCategory","list","listitem","artThemeSelected","map","cat","catType","selectStyle","artStyleSelected","styleType","selectArtSize","artSizeSelected","size","printSize","backgroundColor","color","width","artName","value","slice","Math","floor","random","artistName","artist","accFname","accLname","artworkDateCreated","artDescription","artPrice","artType"],"mappings":"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","sourcesContent":["import {message} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport moment from 'moment'\r\n\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport imageCompression from 'browser-image-compression';\r\nimport React, {Component} from 'react';\r\nclass AddArtwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      artID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async onFileChange(event) {\r\n    var imageFile = event.target.files[0];\r\n\r\n    var options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 1920,\r\n      useWebWorker: false,\r\n    };\r\n    let image = await imageCompression(imageFile, options)\r\n      .then(function (compressedFile) {\r\n        return compressedFile;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.message);\r\n      });\r\n\r\n \r\n\r\n    this.setState({selectedFile: image});\r\n    \r\n  }\r\n  onSubmit(e) {\r\n    let {\r\n      startingStore: {upload, artwork},\r\n    } = this.props;\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    \r\n    data.append('artworkImg', this.state.selectedFile);\r\n    \r\n    data.append('type', 'artwork');\r\n    upload(data);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting Artwork..', 1.3)\r\n        .then(() => message.success('Successfully added an Artwork', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1500);\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n  };\r\n\r\n  render() {\r\n    function getHash(input){\r\n      var hash = 0, len = input.length;\r\n      for (var i = 0; i < len; i++) {\r\n        hash  = ((hash << 5) - hash) + input.charCodeAt(i);\r\n        hash |= 0; // to 32bit integer\r\n      }\r\n    \r\n            \r\n      return hash;\r\n    }\r\n\r\n\r\n    let date = new Date();\r\n    let {\r\n      startingStore: {artwork, listOfArtists, listOfCategories, listOfStyles,listOfPrintSize},\r\n    } = this.props;\r\n    let mydata = JSON.parse(sessionStorage.getItem('userData'))\r\nartwork.setProperty('accID',mydata.accID)\r\nartwork.setProperty('artworkStatus','Pending')\r\n    function selectCategory(list, listitem) {\r\n      let artThemeSelected = list.map((cat) => cat.catType);\r\n      artwork.setProperty('artTheme', artThemeSelected);\r\n    }\r\n    function selectStyle(list, listitem) {\r\n      let artStyleSelected = list.map((cat) => cat.styleType);\r\n      artwork.setProperty('artStyle', artStyleSelected);\r\n    }\r\n    function selectArtSize(list, listitem) {\r\n      let artSizeSelected = list.map((size) => size.printSize);\r\n      artwork.setProperty('artSize', artSizeSelected);\r\n    }\r\n    // let categoryList = listOfCategories.map ( (cat , index) => cat.catType )\r\n\r\n    // console.log(categoryList)\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' className='addartistbtn' />\r\n          Add Artwork\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)} style={{backgroundColor:'#262626'}}><span style={{color:'white'}}> Register Artwork</span></MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.onSubmit} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artName) =>{\r\n                    \r\n                      artwork.setProperty('artName', artName.target.value)\r\n                      artwork.setProperty('artworkID',`${getHash(artName.target.value.slice(0,3))}-${Math.floor(1000 + Math.random() * 9000)}`\r\n                      )\r\n                    }}\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='number'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    style={{width:'95%'}}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n            \r\n                  {/* <SelectTheme theme = {categoryList} style = {styleList}/> */}\r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder='Select Theme'\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={(catType) =>\r\n                    // //   artwork.setProperty('catType', catType.target.value)\r\n                    // }\r\n                  />\r\n                  </div>\r\n                  \r\n                  <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                  style={{width:'95%'}}\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder='Select Style'\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={(styleType) =>\r\n                    //   artwork.setProperty('styleType', styleType.target.value)\r\n                    // }\r\n                  />\r\n                   </div>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  {/* <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Printing Size'\r\n                    type='text'\r\n                    onChange={(artSize) =>\r\n                      artwork.setProperty(\r\n                        'artSize',\r\n                        artSize.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput> */}\r\n                     <div  style={{width:'95%'}}>\r\n                  <Multiselect\r\n                 \r\n                    className='multsel'\r\n                    options={listOfPrintSize}\r\n                    placeholder='Printing Size'\r\n                    showCheckbox={true}\r\n                    displayValue='printSize'\r\n                    onSelect={selectArtSize}\r\n                    // onChange={(catType) =>\r\n                    // //   artwork.setProperty('catType', catType.target.value)\r\n                    // }\r\n                  />\r\n                  </div>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Price'\r\n                    type='number'\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                  style={{width:'95%'}}\r\n                    className='usertype'\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <MDBInput\r\n                  style={{width:'95%'}}\r\n                    label='Quantity'\r\n                    type='text'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)} required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide Number of Quantity.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <div className='uploadreq clearfix'>\r\n                    <input\r\n                    style={{width:'95%'}}\r\n                      type='file'\r\n                      name='file'\r\n                      onChange={this.onFileChange}\r\n                    />\r\n                    <img src={this.state.selectedFile} alt='' />\r\n                    <p className='req'>\r\n                      Please upload a high resolution photo.\r\n                    </p>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddArtwork));\r\n"]},"metadata":{},"sourceType":"module"}