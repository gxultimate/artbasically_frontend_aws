{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\CProfileEdit.js\";\nimport React, { Component } from 'react';\nimport { MDBTabPane, MDBTabContent, MDBNav, MDBRow, MDBCol, MDBNavItem, MDBNavLink, MDBInput, MDBBtn } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport { message, Skeleton, Upload, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport OrderTab from '../components/OrderTab';\nimport art from '../images/artworks/art1.png';\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nclass CProfileEdit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: '1',\n      loading: false\n    };\n\n    this.toggle = tab => e => {\n      if (this.state.activeItem !== tab) {\n        this.setState({\n          activeItem: tab\n        });\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n      let {\n        startingStore: {\n          editAccount,\n          account\n        }\n      } = this.props;\n      account.setProperty('_id', this.props.data._id);\n      account.setProperty('accID', this.props.data.accID);\n\n      const success = () => {\n        message.loading('Submitting edited account..', 1.2).then(() => message.success('Successfully edited an Account', 1));\n      };\n\n      setTimeout(() => {\n        success();\n      }, 1000);\n      editAccount();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    let {\n      startingStore: {\n        getSingleArtists,\n        getArtistArtwork,\n        getOrder,\n        listofArtistArtwork\n      }\n    } = this.props;\n\n    if (listofArtistArtwork.length === 0) {\n      getSingleArtists(this.props.match.params.id);\n      getArtistArtwork(this.props.match.params.id);\n      getOrder();\n    }\n  }\n\n  // handleChange = (info) => {\n  //   if (info.file.status === 'uploading') {\n  //     this.setState({loading: true});\n  //     return;\n  //   }\n  //   if (info.file.status === 'done') {\n  //     // Get this url from response in real world.\n  //     getBase64(info.file.originFileObj, (imageUrl) =>\n  //       this.setState({\n  //         imageUrl,\n  //         loading: false,\n  //       })\n  //     );\n  //   }\n  // };\n  render() {\n    let {\n      startingStore: {\n        account,\n        editAccount,\n        listofArtistInfo,\n        listofArtistArtwork\n      }\n    } = this.props;\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Upload Image\"));\n    const {\n      imageUrl\n    } = this.state;\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cedit clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix chead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, this.props.match.params.id), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"/Upload\",\n      className: \"btnYellow cuploadbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Upload Artwork\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cmaincon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"3\",\n      className: \"usertab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBNav, {\n      className: \"nav-tabs mt-5 ctab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      link: true,\n      to: \"#\",\n      active: this.state.activeItem === '1',\n      onClick: this.toggle('1'),\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, \"Account Information\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      link: true,\n      to: \"#\",\n      active: this.state.activeItem === '2',\n      onClick: this.toggle('2'),\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, \"Profile Information\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      link: true,\n      to: \"#\",\n      active: this.state.activeItem === '3',\n      onClick: this.toggle('3'),\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, \"Orders\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      link: true,\n      to: \"#\",\n      active: this.state.activeItem === '4',\n      onClick: this.toggle('4'),\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, \"Artworks\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      link: true,\n      to: \"#!\",\n      active: this.state.activeItem === '6',\n      onClick: this.toggle('6'),\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }, \"Favorites\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      link: true,\n      to: \"#!\",\n      active: this.state.activeItem === '7',\n      onClick: this.toggle('7'),\n      role: \"tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, \"Log Out\")))), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"9\",\n      className: \"usertab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBTabContent, {\n      activeItem: this.state.activeItem,\n      className: \"ccon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBTabPane, {\n      tabId: \"1\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, userData !== undefined ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"First Name\",\n      type: \"text\" // hint={listofArtistInfo.accFname}\n      ,\n      valueDefault: `${userData.accFname}`,\n      onChange: accFname => account.setProperty('accFname', accFname.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, \"Please provide a valid first name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Last Name\",\n      type: \"text\" // hint={userData.accLname}\n      ,\n      valueDefault: userData.accLname,\n      onChange: accLname => account.setProperty('accLname', accLname.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 29\n      }\n    }, \"Please provide a valid last name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Email Address\",\n      type: \"email\" // hint={userData.accEmailAddress}\n      ,\n      valueDefault: userData.accEmailAddress,\n      onChange: accEmailAddress => account.setProperty('accEmailAddress', accEmailAddress.target.value),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      class: \"changee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, \"Change Email-Address\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"New Password\",\n      type: \"password\" // hint={userData.password}\n      // valueDefault={userData.password}\n      ,\n      onChange: password => account.setProperty('password', password.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Confirm New Password\",\n      type: \"password\" // hint={userData.password}\n      // valueDefault={userData.password}s\n      ,\n      onChange: password => account.setProperty('password', password.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 29\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"custom-control custom-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"custom-control-input\",\n      id: \"anycat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"custom-control-label clabel\",\n      for: \"anycat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, \"Allow viewing of adult related content.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix btnYellow\",\n      color: \"#FAE933\",\n      onClick: () => {\n        account.setProperty('_id', userData._id);\n        editAccount();\n      } // type='submit'\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 27\n      }\n    }, \"SAVE\")) : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MDBTabPane, {\n      tabId: \"2\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 23\n      }\n    }, \"Update Profile Picture\"), /*#__PURE__*/React.createElement(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader cpup clearfix\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 27\n      }\n    }) : uploadButton), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    }, \"Personal Information\"), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Address\",\n      type: \"text\" // hint={userData.accAddress}\n      // valueDefault={listofArtistInfo.accAddress}\n      // onChange={accEmailAddress => account.setProperty(\"accEmailAddress\", accEmailAddress.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 27\n      }\n    }, \"Please provide a valid address.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"textarea\",\n      label: \"Bio\",\n      rows: \"5\" // hint={listofArtistInfo.artistDescription}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Facebook\",\n      type: \"text\",\n      hint: \"e.g. https://www.facebook.com/artbasically\" // valueDefault={this.props.data.accEmailAddress}\n      // onChange={accEmailAddress => account.setProperty(\"accEmailAddress\", accEmailAddress.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 27\n      }\n    }, \"Please provide a valid facebook url.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Instagram\",\n      type: \"text\",\n      hint: \"e.g. https://www.instagram.com/artbasically\" // valueDefault={this.props.data.accEmailAddress}\n      // onChange={accEmailAddress => account.setProperty(\"accEmailAddress\", accEmailAddress.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 27\n      }\n    }, \"Please provide a valid instagram url.\"))), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix btnYellow\",\n      color: \"#FAE933\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 23\n      }\n    }, \"SAVE\")), /*#__PURE__*/React.createElement(MDBTabPane, {\n      tabId: \"3\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(OrderTab, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(MDBTabPane, {\n      tabId: \"4\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col3img rowart clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }\n    }, listofArtistArtwork !== undefined ? listofArtistArtwork.reverse().slice(0, 3).map(art => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art.artworkImg,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo clearfix pad10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 35\n      }\n    }, art.artName), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      className: \"ifollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 35\n      }\n    })))) : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo clearfix pad10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 29\n      }\n    }, \"Yayoi Kusama\"), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      className: \"ifollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo clearfix pad10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 29\n      }\n    }, \"Yayoi Kusama\"), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      className: \"ifollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(MDBTabPane, {\n      tabId: \"6\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col3img rowart clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 23\n      }\n    }, listofArtistArtwork !== undefined ? listofArtistArtwork.reverse().slice(0, 3).map(art => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art.artworkImg,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo clearfix pad10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 35\n      }\n    }, art.artName), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      className: \"ifollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 35\n      }\n    })))) : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo clearfix pad10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 29\n      }\n    }, \"Yayoi Kusama\"), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      className: \"ifollow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(MDBTabPane, {\n      tabId: \"7\",\n      role: \"tabpanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-left outp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 23\n      }\n    }, \"Are you sure you want to Log Out?\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"btnYellow\",\n      color: \"FAE933\",\n      onClick: () => {\n        sessionStorage.removeItem('userData');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 25\n      }\n    }, \" Confirm\"))))))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default inject('startingStore')(observer(CProfileEdit));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/CProfileEdit.js"],"names":["React","Component","MDBTabPane","MDBTabContent","MDBNav","MDBRow","MDBCol","MDBNavItem","MDBNavLink","MDBInput","MDBBtn","inject","observer","message","Skeleton","Upload","Icon","Link","Navbar","Footer","OrderTab","art","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","CProfileEdit","state","activeItem","loading","toggle","tab","e","setState","submitHandler","event","preventDefault","target","className","startingStore","editAccount","account","props","setProperty","data","_id","accID","success","then","setTimeout","changeHandler","name","value","componentDidMount","getSingleArtists","getArtistArtwork","getOrder","listofArtistArtwork","length","match","params","id","render","listofArtistInfo","uploadButton","imageUrl","userData","JSON","parse","sessionStorage","getItem","undefined","accFname","accLname","accEmailAddress","password","handleChange","width","reverse","slice","map","artworkImg","artName","removeItem"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  MDBTabPane,\r\n  MDBTabContent,\r\n  MDBNav,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBInput,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message, Skeleton, Upload, Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport OrderTab from '../components/OrderTab';\r\nimport art from '../images/artworks/art1.png';\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass CProfileEdit extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {\r\n        getSingleArtists,\r\n        getArtistArtwork,\r\n        getOrder,\r\n        listofArtistArtwork,\r\n      },\r\n    } = this.props;\r\n    if (listofArtistArtwork.length === 0) {\r\n      getSingleArtists(this.props.match.params.id);\r\n      getArtistArtwork(this.props.match.params.id);\r\n      getOrder();\r\n    }\r\n  }\r\n\r\n  state = {\r\n    activeItem: '1',\r\n    loading: false,\r\n  };\r\n\r\n  toggle = (tab) => (e) => {\r\n    if (this.state.activeItem !== tab) {\r\n      this.setState({\r\n        activeItem: tab,\r\n      });\r\n    }\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editAccount, account},\r\n    } = this.props;\r\n    account.setProperty('_id', this.props.data._id);\r\n    account.setProperty('accID', this.props.data.accID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited account..', 1.2)\r\n        .then(() => message.success('Successfully edited an Account', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  // handleChange = (info) => {\r\n  //   if (info.file.status === 'uploading') {\r\n  //     this.setState({loading: true});\r\n  //     return;\r\n  //   }\r\n  //   if (info.file.status === 'done') {\r\n  //     // Get this url from response in real world.\r\n  //     getBase64(info.file.originFileObj, (imageUrl) =>\r\n  //       this.setState({\r\n  //         imageUrl,\r\n  //         loading: false,\r\n  //       })\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        account,\r\n        editAccount,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n      },\r\n    } = this.props;\r\n\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className='ant-upload-text'>Upload Image</div>\r\n      </div>\r\n    );\r\n    const {imageUrl} = this.state;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='cedit clearfix'>\r\n            <div className='clearfix chead'>\r\n              <h2>{this.props.match.params.id}</h2>\r\n              <MDBNavLink to='/Upload' className='btnYellow cuploadbtn'>\r\n                Upload Artwork\r\n              </MDBNavLink>\r\n            </div>\r\n            <div className='cmaincon'>\r\n              <MDBRow>\r\n                <MDBCol md='3' className='usertab'>\r\n                  <MDBNav className='nav-tabs mt-5 ctab'>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '1'}\r\n                        onClick={this.toggle('1')}\r\n                        role='tab'\r\n                      >\r\n                        Account Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '2'}\r\n                        onClick={this.toggle('2')}\r\n                        role='tab'\r\n                      >\r\n                        Profile Information\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '3'}\r\n                        onClick={this.toggle('3')}\r\n                        role='tab'\r\n                      >\r\n                        Orders\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#'\r\n                        active={this.state.activeItem === '4'}\r\n                        onClick={this.toggle('4')}\r\n                        role='tab'\r\n                      >\r\n                        Artworks\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    {/* <MDBNavItem>\r\n                      <MDBNavLink link to=\"#\" active={this.state.activeItem === \"5\"} onClick={this.toggle(\"5\")} role=\"tab\" >\r\n                        Collections\r\n                      </MDBNavLink>\r\n                    </MDBNavItem> */}\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '6'}\r\n                        onClick={this.toggle('6')}\r\n                        role='tab'\r\n                      >\r\n                        Favorites\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink\r\n                        link\r\n                        to='#!'\r\n                        active={this.state.activeItem === '7'}\r\n                        onClick={this.toggle('7')}\r\n                        role='tab'\r\n                      >\r\n                        Log Out\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                  </MDBNav>\r\n                </MDBCol>\r\n\r\n                <MDBCol md='9' className='usertab'>\r\n                  <MDBTabContent\r\n                    activeItem={this.state.activeItem}\r\n                    className='ccon'\r\n                  >\r\n                    <MDBTabPane tabId='1' role='tabpanel'>\r\n                      {userData !== undefined ? (\r\n                        <form onSubmit={this.submitHandler}>\r\n                          <MDBInput\r\n                            label='First Name'\r\n                            type='text'\r\n                            // hint={listofArtistInfo.accFname}\r\n                            valueDefault={`${userData.accFname}`}\r\n                            onChange={(accFname) =>\r\n                              account.setProperty(\r\n                                'accFname',\r\n                                accFname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid first name.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Last Name'\r\n                            type='text'\r\n                            // hint={userData.accLname}\r\n                            valueDefault={userData.accLname}\r\n                            onChange={(accLname) =>\r\n                              account.setProperty(\r\n                                'accLname',\r\n                                accLname.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid last name.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Email Address'\r\n                            type='email'\r\n                            // hint={userData.accEmailAddress}\r\n                            valueDefault={userData.accEmailAddress}\r\n                            onChange={(accEmailAddress) =>\r\n                              account.setProperty(\r\n                                'accEmailAddress',\r\n                                accEmailAddress.target.value\r\n                              )\r\n                            }\r\n                            disabled\r\n                          >\r\n                            <a href='#!' class='changee'>\r\n                              Change Email-Address\r\n                            </a>\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid email.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}\r\n                            onChange={(password) =>\r\n                              account.setProperty(\r\n                                'password',\r\n                                password.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <MDBInput\r\n                            label='Confirm New Password'\r\n                            type='password'\r\n                            // hint={userData.password}\r\n                            // valueDefault={userData.password}s\r\n                            onChange={(password) =>\r\n                              account.setProperty(\r\n                                'password',\r\n                                password.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <div className='invalid-feedback'>\r\n                              Please provide a valid password.\r\n                            </div>\r\n                          </MDBInput>\r\n                          <div class='custom-control custom-checkbox'>\r\n                            <input\r\n                              type='checkbox'\r\n                              class='custom-control-input'\r\n                              id='anycat'\r\n                            />\r\n                            <label\r\n                              class='custom-control-label clabel'\r\n                              for='anycat'\r\n                            >\r\n                              Allow viewing of adult related content.\r\n                            </label>\r\n                          </div>\r\n                          <MDBBtn\r\n                            className='submitreg clearfix btnYellow'\r\n                            color='#FAE933'\r\n                            onClick={() => {\r\n                              account.setProperty('_id', userData._id);\r\n                              editAccount();\r\n                            }}\r\n                            // type='submit'\r\n                          >\r\n                            SAVE\r\n                          </MDBBtn>\r\n                        </form>\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='2' role='tabpanel'>\r\n                      <h4>Update Profile Picture</h4>\r\n                      <Upload\r\n                        name='avatar'\r\n                        listType='picture-card'\r\n                        className='avatar-uploader cpup clearfix'\r\n                        showUploadList={false}\r\n                        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                        beforeUpload={beforeUpload}\r\n                        onChange={this.handleChange}\r\n                      >\r\n                        {imageUrl ? (\r\n                          <img\r\n                            src={imageUrl}\r\n                            alt='avatar'\r\n                            style={{width: '100%'}}\r\n                          />\r\n                        ) : (\r\n                          uploadButton\r\n                        )}\r\n                      </Upload>\r\n                      <div>\r\n                        <h4>Personal Information</h4>\r\n                        <MDBInput\r\n                          label='Address'\r\n                          type='text'\r\n                          // hint={userData.accAddress}\r\n                          // valueDefault={listofArtistInfo.accAddress}\r\n                          // onChange={accEmailAddress => account.setProperty(\"accEmailAddress\", accEmailAddress.target.value)}\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid address.\r\n                          </div>\r\n                        </MDBInput>\r\n                        <MDBInput\r\n                          type='textarea'\r\n                          label='Bio'\r\n                          rows='5'\r\n                          // hint={listofArtistInfo.artistDescription}\r\n                        />\r\n                        <MDBInput\r\n                          label='Facebook'\r\n                          type='text'\r\n                          hint='e.g. https://www.facebook.com/artbasically'\r\n                          // valueDefault={this.props.data.accEmailAddress}\r\n                          // onChange={accEmailAddress => account.setProperty(\"accEmailAddress\", accEmailAddress.target.value)}\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid facebook url.\r\n                          </div>\r\n                        </MDBInput>\r\n                        <MDBInput\r\n                          label='Instagram'\r\n                          type='text'\r\n                          hint='e.g. https://www.instagram.com/artbasically'\r\n                          // valueDefault={this.props.data.accEmailAddress}\r\n                          // onChange={accEmailAddress => account.setProperty(\"accEmailAddress\", accEmailAddress.target.value)}\r\n                        >\r\n                          <div className='invalid-feedback'>\r\n                            Please provide a valid instagram url.\r\n                          </div>\r\n                        </MDBInput>\r\n                      </div>\r\n                      <MDBBtn\r\n                        className='submitreg clearfix btnYellow'\r\n                        color='#FAE933'\r\n                        type='submit'\r\n                      >\r\n                        SAVE\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='3' role='tabpanel'>\r\n                      <OrderTab />\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='4' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .reverse()\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                  <img src={art.artworkImg} alt='' />\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    {/* <MDBTabPane tabId=\"5\" role=\"tabpanel\">\r\n                      <ul className=\"col3img rowart clearfix\">\r\n                        {listofArtistArtwork !== undefined ?\r\n                          listofArtistArtwork.map(art =>\r\n                            <li>\r\n                              <a href=\"\" className=\"artlink\">\r\n                                <img src={art.artworkImg} />\r\n                              </a>\r\n                              <div className=\"artistinfo clearfix pad10\">\r\n                                <p>{art.artName}</p>\r\n                                <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                              </div>\r\n                            </li>\r\n                          ) : <Skeleton active />\r\n                        }\r\n                        <li>\r\n                          <a href=\"\" className=\"artlink\">\r\n                            <img src={art} />\r\n                          </a>\r\n                          <div className=\"artistinfo clearfix pad10\">\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane> */}\r\n                    <MDBTabPane tabId='6' role='tabpanel'>\r\n                      <ul className='col3img rowart clearfix'>\r\n                        {listofArtistArtwork !== undefined ? (\r\n                          listofArtistArtwork\r\n                            .reverse()\r\n                            .slice(0, 3)\r\n                            .map((art) => (\r\n                              <li>\r\n                                <a href='#!' className='artlink'>\r\n                                  <img src={art.artworkImg} alt='' />\r\n                                </a>\r\n                                <div className='artistinfo clearfix pad10'>\r\n                                  <p>{art.artName}</p>\r\n                                  <MDBNavLink\r\n                                    to='#!'\r\n                                    className='ifollow'\r\n                                  ></MDBNavLink>\r\n                                </div>\r\n                              </li>\r\n                            ))\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )}\r\n                        <li>\r\n                          <a href='#!' className='artlink'>\r\n                            <img src={art} alt='' />\r\n                          </a>\r\n                          <div className='artistinfo clearfix pad10'>\r\n                            <p>Yayoi Kusama</p>\r\n                            <MDBNavLink\r\n                              to='#!'\r\n                              className='ifollow'\r\n                            ></MDBNavLink>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </MDBTabPane>\r\n                    <MDBTabPane tabId='7' role='tabpanel'>\r\n                      <p className='float-left outp'>\r\n                        Are you sure you want to Log Out?\r\n                      </p>\r\n                      <MDBBtn\r\n                        className='btnYellow'\r\n                        color='FAE933'\r\n                        onClick={() => {\r\n                          sessionStorage.removeItem('userData');\r\n                        }}\r\n                      >\r\n                        <Link to={`/`}> Confirm</Link>\r\n                      </MDBBtn>\r\n                    </MDBTabPane>\r\n                  </MDBTabContent>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CProfileEdit));\r\n"]},"metadata":{},"sourceType":"module"}