{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\Homepage\\\\index.js\";\nimport { BackTop } from 'antd';\nimport { MDBBtn, MDBContainer, MDBIcon, MDBNavLink, MDBNotification } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer';\nimport Navbar from '../../components/Navbar';\nexport class Homepage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: [],\n      condition: false,\n      isToggleOn: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(function (prevState) {\n      return {\n        isToggleOn: !prevState.isToggleOn,\n        condition: !this.state.condition\n      };\n    });\n  }\n\n  componentDidMount() {\n    let logged = JSON.parse(sessionStorage.getItem('userData'));\n\n    if (logged === null || logged === undefined) {\n      this.props.history.push('/');\n    }\n\n    let {\n      startingStore: {\n        getArtists,\n        getArtworkInfo,\n        getEmergingArtistArtwork,\n        getArtistFollowArtwork,\n        listOfEmergingArtist\n      }\n    } = this.props;\n\n    if (listOfEmergingArtist) {\n      getArtistFollowArtwork();\n      getEmergingArtistArtwork();\n      getArtworkInfo();\n      getArtists();\n    }\n  }\n\n  render() {\n    let {\n      startingStore: {\n        followArtist,\n        listofArtistInfo,\n        listOfArtworks,\n        listofFilteredUserArtworkCategories,\n        listOfEmergingArtist,\n        listOfArtistFollowed\n      }\n    } = this.props;\n\n    function MatchRoute() {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"col3img clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, listOfArtworks.filter(item => item.artworkStatus !== 'Pending').reverse().slice(0, 3).map(image => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artlink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artlabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        }, \"HOT\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"type\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }\n        }, image.artType === 'Secondary' ? 'Second Edition' : 'Original')), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/Art/${image.artworkID}/${image.artistName}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: image.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artistinfo clearfix pad10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, image.artistName)));\n      }));\n    }\n\n    function MatchRouteUserCategories() {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"col3img clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, listofFilteredUserArtworkCategories.filter(item => item.artworkStatus !== 'Pending').reverse().slice(0, 3).map(image => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artlink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artlabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 23\n          }\n        }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }\n        }, \"HOT\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"type\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 23\n          }\n        }, image.artType === 'Secondary' ? 'Second Edition' : 'Original')), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/Art/${image.artworkID}/${image.artistName}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: image.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artistinfo clearfix pad10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, image.artistName)));\n      }));\n    }\n\n    function MatchRouteEmergingArtist() {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"col3img clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, listOfEmergingArtist.filter(item => item.artworkStatus !== 'Pending').reverse().slice(0, 3).map(image => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artlink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artlabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 23\n          }\n        }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 23\n          }\n        }, \"HOT\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"type\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 23\n          }\n        }, image.artType === 'Secondary' ? 'Second Edition' : 'Original')), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/Art/${image.artworkID}/${image.artistName}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: image.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artistinfo clearfix pad10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }\n        }, image.artistName)));\n      }));\n    }\n\n    function MatchRouteArtistFollowed() {\n      console.log(listOfArtistFollowed, 'listOfArtistFollowed');\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"col3img clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }, listOfArtistFollowed !== undefined ? listOfArtistFollowed.filter(item => item.artworkStatus !== 'Pending').reverse().slice(0, 3).map(image => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artlink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artlabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 27\n          }\n        }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 27\n          }\n        }, \"HOT\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"type\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 27\n          }\n        }, image.artType === 'Secondary' ? 'Second Edition' : 'Original')), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/Art/${image.artworkID}/${image.artistName}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: image.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 27\n          }\n        }))), /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"artistinfo clearfix pad10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }\n        }, image.artistName)));\n      }) : '');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"artistofdmonth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, \"Cleon Peterson\", /*#__PURE__*/React.createElement(MDBBtn, {\n      className: this.state.condition ? 'followed' : 'ifollow',\n      color: \"transparent\",\n      floating: true,\n      rounded: true,\n      title: this.state.isToggleOn ? 'Follow' : 'Unfollow',\n      onClick: () => this.handleClick(followArtist(listofArtistInfo._id)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, this.state.isToggleOn ? /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }) : 'Following')), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, \"ARTIST OF THE MONTH\")), /*#__PURE__*/React.createElement(MatchRoute, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, \"Best Sellers\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Artworks\",\n      className: \"seemore\",\n      onClick: () => sessionStorage.setItem('type', 'bestseller'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MatchRoute, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }\n    }, \"Latest Drops\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Artworks\",\n      className: \"seemore\",\n      onClick: () => sessionStorage.setItem('type', 'latest'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MatchRoute, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addwork\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, \"Basically, be famous, \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 37\n      }\n    }), \" without all the work.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, \"Post your art and start earning like crazy.\"), /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      className: \"btnBlack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, \"Add your work now\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#1\",\n      className: \"learnmore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, \"Learn More \", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 26\n      }\n    }), ' ')), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, \"Recommended for You\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Artworks\",\n      className: \"seemore\",\n      onClick: () => sessionStorage.setItem('type', 'foryou'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MatchRouteUserCategories, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }, \"Discover Emerging Artists\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Artworks\",\n      className: \"seemore\",\n      onClick: () => sessionStorage.setItem('type', 'discover'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MatchRouteEmergingArtist, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    }, \"Artists You Follow\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Artworks\",\n      className: \"seemore\",\n      onClick: () => sessionStorage.setItem('type', 'artistyoufollow'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MatchRouteArtistFollowed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, \"Categories You Follow\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Artworks\",\n      className: \"seemore\",\n      onClick: () => sessionStorage.setItem('type', 'categoriesfollow'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MatchRouteUserCategories, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bttop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"/Upload\",\n      className: \"btnYellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }\n    }, \"Add Yours\"), /*#__PURE__*/React.createElement(BackTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, ' ', /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    }, \"Back to Top \", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 29\n      }\n    }), ' '), ' '))), /*#__PURE__*/React.createElement(MDBContainer, {\n      className: \"notif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default inject('startingStore')(observer(Homepage));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/Homepage/index.js"],"names":["BackTop","MDBBtn","MDBContainer","MDBIcon","MDBNavLink","MDBNotification","inject","observer","React","Component","Link","Footer","Navbar","Homepage","constructor","props","state","img","condition","isToggleOn","handleClick","bind","setState","prevState","componentDidMount","logged","JSON","parse","sessionStorage","getItem","undefined","history","push","startingStore","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","listOfEmergingArtist","render","followArtist","listofArtistInfo","listOfArtworks","listofFilteredUserArtworkCategories","listOfArtistFollowed","MatchRoute","filter","item","artworkStatus","reverse","slice","map","image","artType","pathname","artworkID","artistName","artworkImg","MatchRouteUserCategories","MatchRouteEmergingArtist","MatchRouteArtistFollowed","console","log","_id","setItem"],"mappings":"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","sourcesContent":["import {BackTop} from 'antd';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBNavLink,\r\n  MDBNotification,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n\r\n    let logged = JSON.parse(sessionStorage.getItem('userData'))\r\n\r\n    if(logged === null || logged === undefined){\r\n      this.props.history.push('/')\r\n    }\r\n\r\n\r\n    let {\r\n      startingStore: {\r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        listOfEmergingArtist,\r\n      },\r\n    } = this.props;\r\n    if (listOfEmergingArtist) {\r\n      getArtistFollowArtwork();\r\n      getEmergingArtistArtwork();\r\n      getArtworkInfo();\r\n      getArtists();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        followArtist,\r\n        listofArtistInfo,\r\n        listOfArtworks,\r\n        listofFilteredUserArtworkCategories,\r\n        listOfEmergingArtist,\r\n        listOfArtistFollowed,\r\n      },\r\n    } = this.props;\r\n\r\n    function MatchRoute() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {/*  */}\r\n          {listOfArtworks\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                      <img src={image.artworkImg} alt='' />\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>{image.artistName}</p>\r\n                    {/* <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn> */}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteUserCategories() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {/*  */}\r\n          {listofFilteredUserArtworkCategories\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                      <img src={image.artworkImg} alt='' />\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>{image.artistName}</p>\r\n                    {/* <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn> */}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteEmergingArtist() {\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfEmergingArtist\r\n            .filter((item) => item.artworkStatus !== 'Pending')\r\n            .reverse()\r\n            .slice(0, 3)\r\n            .map((image) => {\r\n              return (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <div className='artlabel'>\r\n                      <span className='new'>NEW</span>\r\n                      <span className='hot'>HOT</span>\r\n                      <span className='type'>\r\n                        {image.artType === 'Secondary'\r\n                          ? 'Second Edition'\r\n                          : 'Original'}\r\n                      </span>\r\n                    </div>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                      }}\r\n                    >\r\n                      <img src={image.artworkImg} alt='' />\r\n                    </Link>\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>{image.artistName}</p>\r\n                    {/* <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn> */}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    function MatchRouteArtistFollowed() {\r\n      console.log(listOfArtistFollowed, 'listOfArtistFollowed');\r\n      return (\r\n        <ul className='col3img clearfix'>\r\n          {listOfArtistFollowed !== undefined\r\n            ? listOfArtistFollowed\r\n                .filter((item) => item.artworkStatus !== 'Pending')\r\n                .reverse()\r\n                .slice(0, 3)\r\n                .map((image) => {\r\n                  return (\r\n                    <li>\r\n                      <a href='#!' className='artlink'>\r\n                        <div className='artlabel'>\r\n                          <span className='new'>NEW</span>\r\n                          <span className='hot'>HOT</span>\r\n                          <span className='type'>\r\n                            {image.artType === 'Secondary'\r\n                              ? 'Second Edition'\r\n                              : 'Original'}\r\n                          </span>\r\n                        </div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/Art/${image.artworkID}/${image.artistName}`,\r\n                          }}\r\n                        >\r\n                          <img src={image.artworkImg} alt='' />\r\n                        </Link>\r\n                      </a>\r\n                      <a href='#!' className='artistinfo clearfix pad10'>\r\n                        <p>{image.artistName}</p>\r\n                        {/* <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn> */}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })\r\n            : ''}\r\n        </ul>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <section className='artistofdmonth'>\r\n            <div className='title center'>\r\n              <h2>\r\n                Cleon Peterson\r\n                <MDBBtn\r\n                  className={this.state.condition ? 'followed' : 'ifollow'}\r\n                  color='transparent'\r\n                  floating\r\n                  rounded\r\n                  title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                  onClick={() =>\r\n                    this.handleClick(followArtist(listofArtistInfo._id))\r\n                  }\r\n                >\r\n                  {this.state.isToggleOn ? (\r\n                    <MDBIcon icon='plus' />\r\n                  ) : (\r\n                    'Following'\r\n                  )}\r\n                </MDBBtn>\r\n              </h2>\r\n              <p>ARTIST OF THE MONTH</p>\r\n            </div>\r\n            <MatchRoute />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Best Sellers</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'bestseller')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRoute />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Latest Drops</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'latest')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRoute />\r\n          </section>\r\n          <div className='addwork'>\r\n            <h2>\r\n              Basically, be famous, <br /> without all the work.\r\n            </h2>\r\n            <p>Post your art and start earning like crazy.</p>\r\n            <MDBNavLink to='#!' className='btnBlack'>\r\n              Add your work now\r\n            </MDBNavLink>\r\n            <a href='#1' className='learnmore'>\r\n              Learn More <MDBIcon icon='caret-right' />{' '}\r\n            </a>\r\n          </div>\r\n          <section className='latest'>\r\n            <h3>Recommended for You</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'foryou')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Discover Emerging Artists</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'discover')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteEmergingArtist />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Artists You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'artistyoufollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteArtistFollowed />\r\n          </section>\r\n          <section className='latest'>\r\n            <h3>Categories You Follow</h3>\r\n            <a\r\n              href='/Artworks'\r\n              className='seemore'\r\n              onClick={() => sessionStorage.setItem('type', 'categoriesfollow')}\r\n            >\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <MatchRouteUserCategories />\r\n          </section>\r\n          <div className='bttop'>\r\n            <MDBNavLink to='/Upload' className='btnYellow'>\r\n              Add Yours\r\n            </MDBNavLink>\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!'>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <MDBContainer className='notif'>\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            icon=\"envelope\"\r\n            title=\"Message\"\r\n            message=\"Jane: See? Just like this.\"\r\n            text=\"just now\"\r\n          /> */}\r\n          {/* <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='Recieved an order from Jane Doe'\r\n            text='Just now'\r\n          />\r\n          <MDBNotification\r\n            show\r\n            fade\r\n            iconClassName='yell'\r\n            icon='bell'\r\n            title='Notification'\r\n            message='New art submission'\r\n            text='2 seconds ago'\r\n          /> */}\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Homepage));\r\n"]},"metadata":{},"sourceType":"module"}