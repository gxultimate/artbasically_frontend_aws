{"ast":null,"code":"import _ from 'lodash';\nimport { action, decorate, observable, toJS } from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\n\nclass StartingStore {\n  constructor(api) {\n    this.account = new Account();\n    this.artwork = new Artwork();\n    this.categories = new Categories();\n    this.style = new Style();\n    this.cart = new Cart();\n    this.order = new Order();\n    this.listOfOrders = [];\n    this.welcomeMessage = 'Welcome!';\n    this.listOfUsers = [];\n    this.listOfArtworks = [];\n    this.listOfCategories = [];\n    this.listOfStyles = [];\n    this.listOfOrder = [];\n    this.listOfArtists = [];\n    this.currentUser = new User();\n    this.listOfUserDocs = [];\n    this.listOfUserCart = [];\n    this.listofArtistArtwork = [];\n    this.listOfSingleArtwork = [];\n    this.listofArtistInfo = [];\n    this.listofArtistCategories = [];\n    this.listofUserCategoriesArtwork = [];\n    this.listofFilteredUserArtworkCategories = [];\n    this.listOfEmergingArtist = [];\n    this.listofUserOrder = [];\n    this.filter = false;\n    this.listofUserStyleArtwork = [];\n    this.followed = false;\n    this.listRelatedWorkByCategory = [];\n    this.img = undefined;\n    this.api = undefined;\n\n    this.setFollowed = () => {\n      this.followed = !this.followed;\n    };\n\n    this.filterArtwork = type => {\n      this.filter = type;\n    };\n\n    this.addAccount = () => {\n      console.log(this.account);\n      this.api.addaccount(this.account).then(resp => {\n        this.listOfUsers = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.getAccounts = () => {\n      this.api.getaccounts().then(resp => {\n        // console.log(resp.data.data)\n        this.listOfUsers = resp.data;\n      });\n    };\n\n    this.editAccount = () => {\n      this.api.editAccount(this.removeUndefinedProps(this.account)).then(resp => {\n        let user = resp.data.filter(us => us._id === this.account._id);\n        console.log(user[0]);\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    };\n\n    this.loginAccount = () => {\n      return new Promise((resolve, reject) => {\n        this.api.loginaccount(this.account).then(resp => {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data));\n\n          if (resp.data.accessType === 'Admin') {\n            resolve(true);\n          } else if (resp.data.accessType === 'Standard' || resp.data.accessType === 'Curator') {\n            resolve(2);\n          } else if (resp.data.accessType === 'Printing') {\n            resolve(3);\n          } else if (resp.data.accessType === 'Artist') {\n            resolve(`${resp.data.accFname} ${resp.data.accLname}`);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addArtwork = () => {\n      console.log(this.artwork);\n      this.api.addartwork(this.artwork).then(resp => {\n        this.listOfArtworks = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.upload = (img, documents) => {\n      console.log(img, documents);\n      return new Promise((resolve, reject) => {\n        return this.api.upload(img).then(resp => {\n          console.log(resp.data, 'mnbv');\n\n          if (documents === true) {\n            let arr = [];\n            this.account.setProperty('acc_Documents', resp.data.url);\n          } else {\n            this.artwork.setProperty('artworkImg', resp.data.url);\n            this.account.setProperty('accImg', resp.data.url);\n          } // console.log(resp.data, \"data\")\n\n\n          if (this.artwork.artName === '') {\n            this.addAccount();\n          } else {\n            this.addArtwork();\n          }\n        });\n      });\n    };\n\n    this.getArtwork = () => {\n      this.api.getartwork().then(resp => {\n        this.img = this.arrayBufferToBase64(resp.data[0].img.data.data); // console.log(,\"aws\")x\n      });\n    };\n\n    this.getEmergingArtistArtwork = () => {\n      this.api.getEmergingArtist().then(resp => {\n        this.listOfEmergingArtist = resp.data;\n      });\n    };\n\n    this.getArtistFollowArtwork = email => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n      if (userData !== null) {\n        this.api.getArtistFollowArtwork(email ? email : userData.accEmailAddress).then(resp => {\n          this.listOfArtistFollowed = resp.data;\n        });\n      }\n    };\n\n    this.getArtworkInfo = () => {\n      return new Promise((resolve, reject) => {\n        this.api.getartworkInfo().then(resp => {\n          let userData = JSON.parse(sessionStorage.getItem('userData'));\n          let artCategories = [];\n          let categories = [];\n          this.listOfArtworks = resp.data.map(art => {\n            artCategories.push(art.artTheme[0]);\n            return art;\n          });\n          let cat = artCategories.filter(art => {\n            if (art === '' || categories.includes(art)) {} else {\n              categories.push(art);\n            }\n          });\n\n          if (userData === null || userData === false) {\n            let listofUserCategoriesArtwork = resp.data.filter(item => item.artworkStatus !== 'Pending').map(art => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n          } else {\n            let listofUserCategoriesArtwork = resp.data.filter(item => item.artworkStatus !== 'Pending').filter(art => {\n              userData['accCategories'].map(cat => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n                  return art;\n                }\n              });\n            }); // console.log(listofUserCategoriesArtwork, 'dsdsd');\n\n            this.listofFilteredUserArtworkCategories = _.uniqBy(this.listofFilteredUserArtworkCategories, a => a.artName);\n          }\n\n          if (resp.data !== false) {\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getSingleArtworkInfo = id => {\n      return new Promise((resolve, reject) => {\n        this.api.getsingleartworkinfo(id).then(resp => {\n          this.listOfSingleArtwork = resp.data;\n\n          if (resp.data !== false) {\n            let listOfSingleArtwork = resp.data;\n            let styles = [];\n            let themes = [];\n\n            if (resp.data.length > 1) {\n              resp.data.map(item => {\n                item.artStyle.map(style => styles.push(style));\n                item.artTheme.map(theme => themes.push(theme));\n              });\n\n              let categories = _.union(themes.concat(styles));\n\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            } else {\n              if (resp.data.artStyle !== undefined) {\n                // resp.data.artStyle.map((style) => styles.push(style));\n                // resp.data.artTheme.map((theme) => themes.push(theme));\n                let categories = _.union(listOfSingleArtwork.artTheme.concat(listOfSingleArtwork.artStyle));\n\n                this.getRelatedWorkByCategory(JSON.stringify(categories));\n              }\n            }\n\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.followArtist = artist => {\n      return new Promise((resolve, reject) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.api.followAccount(userData, artist).then(resp => {\n          if (resp.data !== false) {\n            this.listofArtistInfo = resp.data[0];\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addOrder = () => {\n      console.log(this.order);\n      this.api.addOrder(this.order).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.editArtwork = () => {\n      console.log(this.artwork, 'artworks!');\n      this.api.editArtwork(this.artwork).then(resp => {\n        this.listOfArtworks = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.addCategory = () => {\n      this.api.addCategory(this.categories).then(resp => {\n        this.listOfCategories = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.editCategory = () => {\n      this.api.editCategory(this.categories).then(resp => {\n        this.listOfCategories = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.getCategories = () => {\n      this.api.getCategories().then(resp => {\n        this.listOfCategories = resp.data; // console.log(,\"aws\")x\n      });\n    };\n\n    this.getOrderUser = () => {\n      return new Promise((resolve, reject) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.api.getOrder(userData._id).then(resp => {\n          this.listofUserOrder = resp.data;\n          console.log(resp.data, 'resp');\n\n          if (resp.data !== false) {\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addStyle = () => {\n      this.api.addStyle(this.style).then(resp => {\n        this.listOfStyles = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.editStyle = () => {\n      this.api.editStyle(this.style).then(resp => {\n        this.listOfStyles = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.getStyles = () => {\n      this.api.getStyles().then(resp => {\n        this.listOfStyles = resp.data; // console.log(,\"aws\")x\n      });\n    };\n\n    this.getArtists = artist => {\n      return new Promise((resolve, reject) => {\n        this.api.getArtists().then(resp => {\n          this.listOfArtists = resp.data;\n\n          if (resp.data !== false && artist !== '') {\n            resolve(resp.data.filter(art => `${art.accFname} ${art.accLname}` === artist));\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getSingleArtists = id => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      return new Promise((resolve, reject) => {\n        this.api.getSingleArtists(id).then(resp => {\n          if (resp.data !== false && resp.data.length !== 0) {\n            this.listofArtistInfo = resp.data[0];\n\n            if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n              this.followed = true;\n            }\n\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getArtistArtwork = id => {\n      return new Promise((resolve, reject) => {\n        this.api.getArtistArtwork(id).then(resp => {\n          let listOfCategories = [];\n\n          if (resp.data !== false && id !== '') {\n            this.listofArtistArtwork = resp.data;\n            listOfCategories = resp.data.map(art => {\n              if (art.artTheme[0] !== '') {\n                return art.artTheme[0];\n              }\n            });\n            this.listofArtistCategories = listOfCategories.filter(cat => {\n              return cat !== undefined;\n            });\n            console.log(this.listofArtistCategories, 'aws');\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getRelatedWorkByCategory = cat => {\n      console.log(cat, 'zxcvb');\n      return new Promise((resolve, reject) => {\n        this.api.getRelatedWorkByCategory(cat).then(resp => {\n          if (resp.data !== false && cat !== '') {\n            this.listRelatedWorkByCategory = resp.data;\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addToCart = () => {\n      this.api.addToCart(this.cart).then(resp => {\n        this.listOfUserCart = resp.data;\n      });\n    };\n\n    this.getToCart = () => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      let dar = [];\n      this.api.getToCart(userData).then(resp => {\n        if (resp.data !== false) {\n          this.listOfUserCart = resp.data.filter(item => item.artworkQuantity !== '');\n        }\n      });\n    };\n\n    this.editToCart = data => {\n      console.log(data, 'data');\n      let currData = toJS(data);\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      console.log(currData._id, 'qwer');\n      this.api.editToCart(currData._id).then(resp => {\n        if (resp.data !== false) {\n          this.getToCart(userData);\n        }\n      });\n    };\n\n    this.getOrders = () => {\n      // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n      // console.log()\n      this.api.getOrders().then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrders = resp.data;\n        }\n      });\n    };\n\n    this.getOrder = () => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      console.log(userData);\n      this.api.getOrders(userData).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.editOrder = (id, status, account) => {\n      let data = {\n        id: id,\n        status: status,\n        account: account\n      };\n      this.api.editOrder(data).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n\n    return obj;\n  }\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable\n});\nexport default StartingStore;","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/stores/StartingStore.js"],"names":["_","action","decorate","observable","toJS","Account","Artwork","Cart","Categories","Order","Style","User","StartingStore","constructor","api","account","artwork","categories","style","cart","order","listOfOrders","welcomeMessage","listOfUsers","listOfArtworks","listOfCategories","listOfStyles","listOfOrder","listOfArtists","currentUser","listOfUserDocs","listOfUserCart","listofArtistArtwork","listOfSingleArtwork","listofArtistInfo","listofArtistCategories","listofUserCategoriesArtwork","listofFilteredUserArtworkCategories","listOfEmergingArtist","listofUserOrder","filter","listofUserStyleArtwork","followed","listRelatedWorkByCategory","img","undefined","setFollowed","filterArtwork","type","addAccount","console","log","addaccount","then","resp","data","getAccounts","getaccounts","editAccount","removeUndefinedProps","user","us","_id","sessionStorage","setItem","JSON","stringify","loginAccount","Promise","resolve","reject","loginaccount","accessType","accFname","accLname","addArtwork","addartwork","upload","documents","arr","setProperty","url","artName","getArtwork","getartwork","arrayBufferToBase64","getEmergingArtistArtwork","getEmergingArtist","getArtistFollowArtwork","email","userData","parse","getItem","accEmailAddress","listOfArtistFollowed","getArtworkInfo","getartworkInfo","artCategories","map","art","push","artTheme","cat","includes","item","artworkStatus","uniqBy","a","getSingleArtworkInfo","id","getsingleartworkinfo","styles","themes","length","artStyle","theme","union","concat","getRelatedWorkByCategory","followArtist","artist","followAccount","addOrder","editArtwork","addCategory","editCategory","getCategories","getOrderUser","getOrder","addStyle","editStyle","getStyles","getArtists","getSingleArtists","accFollowers","getArtistArtwork","addToCart","getToCart","dar","artworkQuantity","editToCart","currData","getOrders","editOrder","status","obj","prop","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { action, decorate, observable, toJS } from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nclass StartingStore {\n\taccount = new Account();\n\tartwork = new Artwork();\n\tcategories = new Categories();\n\tstyle = new Style();\n\tcart = new Cart();\n\torder = new Order();\n\tlistOfOrders = [];\n\twelcomeMessage = 'Welcome!';\n\tlistOfUsers = [];\n\tlistOfArtworks = [];\n\tlistOfCategories = [];\n\tlistOfStyles = [];\n\tlistOfOrder = [];\n\tlistOfArtists = [];\n\tcurrentUser = new User();\n\tlistOfUserDocs = [];\n\tlistOfUserCart = [];\n\tlistofArtistArtwork = [];\n\tlistOfSingleArtwork = [];\n\tlistofArtistInfo = [];\n\tlistofArtistCategories = [];\n\tlistofUserCategoriesArtwork = [];\n\tlistofFilteredUserArtworkCategories = [];\n\tlistOfEmergingArtist = [];\n\tlistofUserOrder = [];\n\tfilter = false;\n\tlistofUserStyleArtwork = [];\n\tfollowed = false;\n\tlistRelatedWorkByCategory = [];\n\n\timg = undefined;\n\tapi = undefined;\n\n\tconstructor(api) {\n\t\tthis.api = api;\n\t}\n\n\tremoveUndefinedProps(obj) {\n\t\tfor (var prop in obj) {\n\t\t\tif (obj.hasOwnProperty(prop) && obj[prop] === '') {\n\t\t\t\tdelete obj[prop];\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\tsetFollowed = () => {\n\t\tthis.followed = !this.followed;\n\t};\n\tfilterArtwork = (type) => {\n\t\tthis.filter = type;\n\t};\n\taddAccount = () => {\n\t\tconsole.log(this.account);\n\t\tthis.api.addaccount(this.account).then((resp) => {\n\t\t\tthis.listOfUsers = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\tgetAccounts = () => {\n\t\tthis.api.getaccounts().then((resp) => {\n\t\t\t// console.log(resp.data.data)\n\t\t\tthis.listOfUsers = resp.data;\n\t\t});\n\t};\n\n\teditAccount = () => {\n\t\tthis.api.editAccount(this.removeUndefinedProps(this.account)).then((resp) => {\n\t\t\tlet user = resp.data.filter((us) => us._id === this.account._id);\n\t\t\tconsole.log(user[0]);\n\t\t\tsessionStorage.setItem('userData', JSON.stringify(user[0]));\n\t\t\tthis.listOfUsers = resp.data;\n\t\t});\n\t};\n\n\tloginAccount = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.loginaccount(this.account).then((resp) => {\n\t\t\t\tsessionStorage.setItem('userData', JSON.stringify(resp.data));\n\t\t\t\tif (resp.data.accessType === 'Admin') {\n\t\t\t\t\tresolve(true);\n\t\t\t\t} else if (resp.data.accessType === 'Standard' || resp.data.accessType === 'Curator') {\n\t\t\t\t\tresolve(2);\n\t\t\t\t} else if (resp.data.accessType === 'Printing') {\n\t\t\t\t\tresolve(3);\n\t\t\t\t} else if (resp.data.accessType === 'Artist') {\n\t\t\t\t\tresolve(`${resp.data.accFname} ${resp.data.accLname}`);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\taddArtwork = () => {\n\t\tconsole.log(this.artwork);\n\t\tthis.api.addartwork(this.artwork).then((resp) => {\n\t\t\tthis.listOfArtworks = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\tupload = (img, documents) => {\n\t\tconsole.log(img, documents);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treturn this.api.upload(img).then((resp) => {\n\t\t\t\tconsole.log(resp.data, 'mnbv');\n\t\t\t\tif (documents === true) {\n\t\t\t\t\tlet arr = [];\n\t\t\t\t\tthis.account.setProperty('acc_Documents', resp.data.url);\n\t\t\t\t} else {\n\t\t\t\t\tthis.artwork.setProperty('artworkImg', resp.data.url);\n\t\t\t\t\tthis.account.setProperty('accImg', resp.data.url);\n\t\t\t\t}\n\t\t\t\t// console.log(resp.data, \"data\")\n\t\t\t\tif (this.artwork.artName === '') {\n\t\t\t\t\tthis.addAccount();\n\t\t\t\t} else {\n\t\t\t\t\tthis.addArtwork();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tgetArtwork = () => {\n\t\tthis.api.getartwork().then((resp) => {\n\t\t\tthis.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n\t\t\t// console.log(,\"aws\")x\n\t\t});\n\t};\n\n\tgetEmergingArtistArtwork = () => {\n\t\tthis.api.getEmergingArtist().then((resp) => {\n\t\t\tthis.listOfEmergingArtist = resp.data;\n\t\t});\n\t};\n\n\tgetArtistFollowArtwork = (email) => {\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\tif (userData !== null) {\n\t\t\tthis.api.getArtistFollowArtwork(email ? email : userData.accEmailAddress).then((resp) => {\n\t\t\t\tthis.listOfArtistFollowed = resp.data;\n\t\t\t});\n\t\t}\n\t};\n\n\tgetArtworkInfo = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.getartworkInfo().then((resp) => {\n\t\t\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\t\t\tlet artCategories = [];\n\t\t\t\tlet categories = [];\n\n\t\t\t\tthis.listOfArtworks = resp.data.map((art) => {\n\t\t\t\t\tartCategories.push(art.artTheme[0]);\n\t\t\t\t\treturn art;\n\t\t\t\t});\n\n\t\t\t\tlet cat = artCategories.filter((art) => {\n\t\t\t\t\tif (art === '' || categories.includes(art)) {\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcategories.push(art);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (userData === null || userData === false) {\n\t\t\t\t\tlet listofUserCategoriesArtwork = resp.data\n\t\t\t\t\t\t.filter((item) => item.artworkStatus !== 'Pending')\n\t\t\t\t\t\t.map((art) => {\n\t\t\t\t\t\t\tthis.listofFilteredUserArtworkCategories.push(art);\n\t\t\t\t\t\t\treturn art;\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlet listofUserCategoriesArtwork = resp.data\n\t\t\t\t\t\t.filter((item) => item.artworkStatus !== 'Pending')\n\t\t\t\t\t\t.filter((art) => {\n\t\t\t\t\t\t\tuserData['accCategories'].map((cat) => {\n\t\t\t\t\t\t\t\tif (art.artTheme.includes(cat)) {\n\t\t\t\t\t\t\t\t\tthis.listofFilteredUserArtworkCategories.push(art);\n\n\t\t\t\t\t\t\t\t\treturn art;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t// console.log(listofUserCategoriesArtwork, 'dsdsd');\n\t\t\t\t\tthis.listofFilteredUserArtworkCategories = _.uniqBy(\n\t\t\t\t\t\tthis.listofFilteredUserArtworkCategories,\n\t\t\t\t\t\t(a) => a.artName\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (resp.data !== false) {\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tgetSingleArtworkInfo = (id) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.getsingleartworkinfo(id).then((resp) => {\n\t\t\t\tthis.listOfSingleArtwork = resp.data;\n\n\t\t\t\tif (resp.data !== false) {\n\t\t\t\t\tlet listOfSingleArtwork = resp.data;\n\t\t\t\t\tlet styles = [];\n\t\t\t\t\tlet themes = [];\n\t\t\t\t\tif (resp.data.length > 1) {\n\t\t\t\t\t\tresp.data.map((item) => {\n\t\t\t\t\t\t\titem.artStyle.map((style) => styles.push(style));\n\t\t\t\t\t\t\titem.artTheme.map((theme) => themes.push(theme));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet categories = _.union(themes.concat(styles));\n\t\t\t\t\t\tthis.getRelatedWorkByCategory(JSON.stringify(categories));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (resp.data.artStyle !== undefined) {\n\t\t\t\t\t\t\t// resp.data.artStyle.map((style) => styles.push(style));\n\t\t\t\t\t\t\t// resp.data.artTheme.map((theme) => themes.push(theme));\n\n\t\t\t\t\t\t\tlet categories = _.union(listOfSingleArtwork.artTheme.concat(listOfSingleArtwork.artStyle));\n\t\t\t\t\t\t\tthis.getRelatedWorkByCategory(JSON.stringify(categories));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tfollowArtist = (artist) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\t\tthis.api.followAccount(userData, artist).then((resp) => {\n\t\t\t\tif (resp.data !== false) {\n\t\t\t\t\tthis.listofArtistInfo = resp.data[0];\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\taddOrder = () => {\n\t\tconsole.log(this.order);\n\t\tthis.api.addOrder(this.order).then((resp) => {\n\t\t\tif (resp.data !== false) {\n\t\t\t\tthis.listOfOrder = resp.data;\n\t\t\t}\n\t\t});\n\t};\n\n\teditArtwork = () => {\n\t\tconsole.log(this.artwork, 'artworks!');\n\t\tthis.api.editArtwork(this.artwork).then((resp) => {\n\t\t\tthis.listOfArtworks = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\t//Category\n\n\taddCategory = () => {\n\t\tthis.api.addCategory(this.categories).then((resp) => {\n\t\t\tthis.listOfCategories = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\teditCategory = () => {\n\t\tthis.api.editCategory(this.categories).then((resp) => {\n\t\t\tthis.listOfCategories = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\tgetCategories = () => {\n\t\tthis.api.getCategories().then((resp) => {\n\t\t\tthis.listOfCategories = resp.data;\n\t\t\t// console.log(,\"aws\")x\n\t\t});\n\t};\n\tgetOrderUser = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\t\tthis.api.getOrder(userData._id).then((resp) => {\n\t\t\t\tthis.listofUserOrder = resp.data;\n\t\t\t\tconsole.log(resp.data, 'resp');\n\t\t\t\tif (resp.data !== false) {\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\t//Style\n\n\taddStyle = () => {\n\t\tthis.api.addStyle(this.style).then((resp) => {\n\t\t\tthis.listOfStyles = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\teditStyle = () => {\n\t\tthis.api.editStyle(this.style).then((resp) => {\n\t\t\tthis.listOfStyles = resp.data;\n\t\t\tconsole.log(resp.data);\n\t\t});\n\t};\n\n\tgetStyles = () => {\n\t\tthis.api.getStyles().then((resp) => {\n\t\t\tthis.listOfStyles = resp.data;\n\t\t\t// console.log(,\"aws\")x\n\t\t});\n\t};\n\n\t//Artist\n\tgetArtists = (artist) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.getArtists().then((resp) => {\n\t\t\t\tthis.listOfArtists = resp.data;\n\n\t\t\t\tif (resp.data !== false && artist !== '') {\n\t\t\t\t\tresolve(resp.data.filter((art) => `${art.accFname} ${art.accLname}` === artist));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tgetSingleArtists = (id) => {\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.getSingleArtists(id).then((resp) => {\n\t\t\t\tif (resp.data !== false && resp.data.length !== 0) {\n\t\t\t\t\tthis.listofArtistInfo = resp.data[0];\n\t\t\t\t\tif (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n\t\t\t\t\t\tthis.followed = true;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tgetArtistArtwork = (id) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.getArtistArtwork(id).then((resp) => {\n\t\t\t\tlet listOfCategories = [];\n\t\t\t\tif (resp.data !== false && id !== '') {\n\t\t\t\t\tthis.listofArtistArtwork = resp.data;\n\n\t\t\t\t\tlistOfCategories = resp.data.map((art) => {\n\t\t\t\t\t\tif (art.artTheme[0] !== '') {\n\t\t\t\t\t\t\treturn art.artTheme[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.listofArtistCategories = listOfCategories.filter((cat) => {\n\t\t\t\t\t\treturn cat !== undefined;\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(this.listofArtistCategories, 'aws');\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tgetRelatedWorkByCategory = (cat) => {\n\t\tconsole.log(cat, 'zxcvb');\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.api.getRelatedWorkByCategory(cat).then((resp) => {\n\t\t\t\tif (resp.data !== false && cat !== '') {\n\t\t\t\t\tthis.listRelatedWorkByCategory = resp.data;\n\t\t\t\t\tresolve(resp.data);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\t//Cart\n\n\taddToCart = () => {\n\t\tthis.api.addToCart(this.cart).then((resp) => {\n\t\t\tthis.listOfUserCart = resp.data;\n\t\t});\n\t};\n\n\tgetToCart = () => {\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\tlet dar = [];\n\t\tthis.api.getToCart(userData).then((resp) => {\n\t\t\tif (resp.data !== false) {\n\t\t\t\tthis.listOfUserCart = resp.data.filter((item) => item.artworkQuantity !== '');\n\t\t\t}\n\t\t});\n\t};\n\n\teditToCart = (data) => {\n\t\tconsole.log(data, 'data');\n\t\tlet currData = toJS(data);\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\tconsole.log(currData._id, 'qwer');\n\t\tthis.api.editToCart(currData._id).then((resp) => {\n\t\t\tif (resp.data !== false) {\n\t\t\t\tthis.getToCart(userData);\n\t\t\t}\n\t\t});\n\t};\n\n\t// ORDERS\n\tgetOrders = () => {\n\t\t// let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n\t\t// console.log()\n\t\tthis.api.getOrders().then((resp) => {\n\t\t\tif (resp.data !== false) {\n\t\t\t\tthis.listOfOrders = resp.data;\n\t\t\t}\n\t\t});\n\t};\n\tgetOrder = () => {\n\t\tlet userData = JSON.parse(sessionStorage.getItem('userData'));\n\t\tconsole.log(userData);\n\t\tthis.api.getOrders(userData).then((resp) => {\n\t\t\tif (resp.data !== false) {\n\t\t\t\tthis.listOfOrder = resp.data;\n\t\t\t}\n\t\t});\n\t};\n\n\teditOrder = (id, status, account) => {\n\t\tlet data = { id: id, status: status, account: account };\n\t\tthis.api.editOrder(data).then((resp) => {\n\t\t\tif (resp.data !== false) {\n\t\t\t\tthis.listOfOrder = resp.data;\n\t\t\t}\n\t\t});\n\t};\n}\n\ndecorate(StartingStore, {\n\twelcomeMessage: observable,\n\tlistName: observable,\n\tcurrentUser: observable,\n\tchangeMessage: action,\n\tresetMessage: action,\n\tpushToArray: action,\n\tgetName: action,\n\taddAccount: action,\n\tgetAccounts: action,\n\teditAccount: action,\n\taccount: observable,\n\tlistOfUsers: observable,\n\taddArtwork: action,\n\tgetArtwork: action,\n\teditArtwork: action,\n\tlistOfArtworks: observable,\n\tartwork: observable,\n\timg: observable,\n\tgetArtworkInfo: action,\n\taddCategory: action,\n\tgetCategories: action,\n\teditCategory: action,\n\tlistOfCategories: observable,\n\tcategories: observable,\n\tgetArtists: action,\n\tlistOfArtists: observable,\n\taddToCart: action,\n\tgetToCart: action,\n\tlistOfUserCart: observable,\n\tcart: observable,\n\teditToCart: observable,\n\taddStyle: action,\n\tgetStyles: action,\n\teditStyle: action,\n\tlistOfStyles: observable,\n\tstyle: observable,\n\torder: observable,\n\tlistofArtistArtwork: observable,\n\tlistOfOrders: observable,\n\tlistofArtistInfo: observable,\n\tgetSingleArtworkInfo: action,\n\tgetSingleArtists: action,\n\tgetArtistArtwork: action,\n\tupload: action,\n\tlistOfSingleArtwork: observable,\n\tlistofArtistCategories: observable,\n\tlistofUserCategoriesArtwork: observable,\n\tlistofUserStyleArtwork: observable,\n\taddOrder: action,\n\tlistOfOrder: observable,\n\tgetOrderUser: action,\n\teditOrder: action,\n\tgetEmergingArtistArtwork: action,\n\tlistOfEmergingArtist: observable,\n\tfollowArtist: action,\n\tgetOrder: action,\n\tlistofUserOrder: observable,\n\tlistofFilteredUserArtworkCategories: observable,\n\tgetArtistFollowArtwork: action,\n\tlistOfArtistFollowed: observable,\n\tgetRelatedWorkByCategory: action,\n\tlistRelatedWorkByCategory: observable,\n\tfilterArtwork: action,\n\ttype: observable,\n\tfollowed: observable,\n\tsetFollowed: observable\n});\n\nexport default StartingStore;\n"]},"metadata":{},"sourceType":"module"}