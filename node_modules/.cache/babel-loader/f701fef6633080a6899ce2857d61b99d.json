{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\components\\\\Cart.js\";\nimport { MDBBtn, MDBCol, MDBIcon, MDBInput, MDBRow } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport notif from './Notif';\n\nclass OrderTab extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: [],\n      selectedCheckBox: [],\n      totalPrice: 0\n    };\n\n    this.setStatus = status => {\n      this.setState({\n        status: status\n      });\n    };\n\n    this.selectedValue = (index, checked, item) => {\n      if (checked === true) {\n        let total = parseFloat(this.state.totalPrice) + parseFloat(item.artworkPaymentAmount);\n        this.setState({\n          totalPrice: total\n        });\n        this.state.selected.push(item);\n        this.state.selectedCheckBox.push(index);\n      } else {\n        let selectedArray = [];\n        let selectedCheck = [];\n        let data = this.state.selected.filter(indexer => {\n          if (indexer !== index) {\n            selectedArray.push(data);\n          }\n        });\n        let total = parseFloat(this.state.totalPrice) - parseFloat(item.artworkPaymentAmount);\n        this.setState({\n          selected: selectedArray,\n          selectedCheckBox: selectedCheck,\n          totalPrice: total <= 0 ? 0 : total\n        });\n      }\n    };\n\n    this.deleteItem = item => {\n      let {\n        startingStore: {\n          editToCart\n        }\n      } = this.props;\n      editToCart(item);\n    };\n\n    this.addOrder = () => {\n      let {\n        startingStore: {\n          order,\n          addOrder,\n          editToCart\n        }\n      } = this.props;\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      let currentDate = new Date();\n      order.setProperty('modeOfPayment', 'COD');\n      order.setProperty('orderDate', currentDate);\n      order.setProperty('orderItems', this.state.selected);\n      order.setProperty('orderStatus', 'Pending');\n      order.setProperty('paymentStatus', 'Pending');\n      order.setProperty('accID', userData);\n      addOrder();\n\n      if (this.state.selected.length > 1) {\n        this.state.selected.map(item => {\n          editToCart(item); // setTimeout(() => {\n\n          notif('success', 'Checkout Successfully'); // }, 1000);\n        });\n      } else {\n        editToCart(this.state.selected[0]);\n        notif('success', 'Checkout Successfully');\n      }\n    };\n\n    this.selectedCheck = data => {\n      this.setState({\n        selectedCheck: data\n      });\n    };\n  }\n\n  componentDidMount() {\n    let {\n      startingStore: {\n        getOrders\n      }\n    } = this.props;\n    getOrders();\n  }\n\n  render() {\n    let {\n      startingStore: {\n        listOfOrder,\n        listOfUserCart\n      }\n    } = this.props;\n    let totalPrice = listOfUserCart.reduce((total, item) => total + parseFloat(item.artworkPaymentAmount), 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ordercon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"needs-validation animated zoomIn\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cartord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, listOfUserCart.map((item, indexes) => {\n      if (listOfUserCart.length > 0) {\n        return /*#__PURE__*/React.createElement(MDBRow, {\n          className: \"artlistorder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        }, item.artworkQuantity !== '' ? /*#__PURE__*/React.createElement(MDBInput, {\n          onChange: data => {\n            this.selectedValue(indexes, data.target.checked, item);\n          },\n          type: \"checkbox\",\n          id: \"checkbox1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }) : ''), /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"2\",\n          className: \"artimg colpad\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, item.artworkImg !== '' ? /*#__PURE__*/React.createElement(\"img\", {\n          src: item.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }) : ''), /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"4\",\n          className: \"artdet colpad\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          onClick: () => {\n            this.props.history.push({\n              pathname: `/Artist/${item.accFname} ${item.accLname}`,\n              state: {\n                artistName: `${item.accFname} ${item.accLname}`,\n                accImg: this.state.artistImg,\n                artistDescription: this.state.accDescription,\n                accBday: this.state.accBday,\n                accFollowers: this.state.accFollowers\n              }\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 23\n          }\n        }, item.artistName, \" \", /*#__PURE__*/React.createElement(MDBIcon, {\n          icon: \"arrow-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 43\n          }\n        })), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 23\n          }\n        }, \"\\\"\", item.artworkName, \"\\\"\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 23\n          }\n        }, \"Variations: \", item.artworkMaterial, \", \", item.artworkSize, \",\", item.artworkFramingOptions), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 23\n          }\n        }, \"\\u20B1\", item.artworkPrice ? Number(parseFloat(item.artworkPrice)).toLocaleString('en') : '')), /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"1\",\n          className: \"quan colpad\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, item.artworkQuantity !== '' ? `x${item.artworkQuantity}` : ''), /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"3\",\n          className: \"colpad\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(MDBRow, {\n          className: \"sub\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"6\",\n          className: \"colpad2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }, \"Subtotal\"), /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"6\",\n          className: \"colpad2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }\n        }, \"\\u20B1\", item.artworkPaymentAmount ? Number(parseFloat(item.artworkPaymentAmount)).toLocaleString('en') : ''))), /*#__PURE__*/React.createElement(MDBCol, {\n          md: \"1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }\n        }, item.artworkQuantity !== '' ? /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#!\",\n          onClick: () => {\n            this.deleteItem(item);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(MDBIcon, {\n          icon: \"trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 27\n          }\n        })) : ''));\n      } else {\n        return 'Cart is Empty';\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"acts clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      className: \"actsrowcart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"5\",\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \"TOTAL\"), /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"7\",\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"\\u20B1\", this.state.totalPrice > 0 ? Number(parseFloat(this.state.totalPrice)).toLocaleString('en') : Number(parseFloat(0)).toLocaleString('en')), /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actsbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"#fae933\",\n      size: \"sm\",\n      className: \"recieve\",\n      disabled: this.state.totalPrice > 0 ? false : true,\n      onClick: () => {\n        this.addOrder();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, \"Checkout\"))))))));\n  }\n\n}\n\nexport default withRouter(inject('startingStore')(observer(OrderTab)));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/components/Cart.js"],"names":["MDBBtn","MDBCol","MDBIcon","MDBInput","MDBRow","inject","observer","React","Component","withRouter","notif","OrderTab","state","selected","selectedCheckBox","totalPrice","setStatus","status","setState","selectedValue","index","checked","item","total","parseFloat","artworkPaymentAmount","push","selectedArray","selectedCheck","data","filter","indexer","deleteItem","startingStore","editToCart","props","addOrder","order","userData","JSON","parse","sessionStorage","getItem","currentDate","Date","setProperty","length","map","componentDidMount","getOrders","render","listOfOrder","listOfUserCart","reduce","submitHandler","indexes","artworkQuantity","target","artworkImg","history","pathname","accFname","accLname","artistName","accImg","artistImg","artistDescription","accDescription","accBday","accFollowers","artworkName","artworkMaterial","artworkSize","artworkFramingOptions","artworkPrice","Number","toLocaleString"],"mappings":"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","sourcesContent":["import {MDBBtn, MDBCol, MDBIcon, MDBInput, MDBRow} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport notif from './Notif';\r\n\r\nclass OrderTab extends Component {\r\n  state = {\r\n    selected: [],\r\n    selectedCheckBox: [],\r\n    totalPrice: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getOrders},\r\n    } = this.props;\r\n    getOrders();\r\n  }\r\n\r\n  setStatus = (status) => {\r\n    this.setState({status: status});\r\n  };\r\n\r\n  selectedValue = (index, checked, item) => {\r\n    if (checked === true) {\r\n      let total =\r\n        parseFloat(this.state.totalPrice) +\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        totalPrice: total,\r\n      });\r\n\r\n      this.state.selected.push(item);\r\n      this.state.selectedCheckBox.push(index);\r\n    } else {\r\n      let selectedArray = [];\r\n      let selectedCheck = [];\r\n\r\n      let data = this.state.selected.filter((indexer) => {\r\n        if (indexer !== index) {\r\n          selectedArray.push(data);\r\n        }\r\n      });\r\n      let total =\r\n        parseFloat(this.state.totalPrice) -\r\n        parseFloat(item.artworkPaymentAmount);\r\n      this.setState({\r\n        selected: selectedArray,\r\n        selectedCheckBox: selectedCheck,\r\n        totalPrice: total <= 0 ? 0 : total,\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = (item) => {\r\n    let {\r\n      startingStore: {editToCart},\r\n    } = this.props;\r\n\r\n    editToCart(item);\r\n  };\r\n\r\n  addOrder = () => {\r\n    let {\r\n      startingStore: {order, addOrder, editToCart},\r\n    } = this.props;\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let currentDate = new Date();\r\n    order.setProperty('modeOfPayment', 'COD');\r\n    order.setProperty('orderDate', currentDate);\r\n    order.setProperty('orderItems', this.state.selected);\r\n    order.setProperty('orderStatus', 'Pending');\r\n    order.setProperty('paymentStatus', 'Pending');\r\n    order.setProperty('accID', userData);\r\n    addOrder();\r\n    if (this.state.selected.length > 1) {\r\n      this.state.selected.map((item) => {\r\n        editToCart(item);\r\n        // setTimeout(() => {\r\n        notif('success', 'Checkout Successfully');\r\n        // }, 1000);\r\n      });\r\n    } else {\r\n      editToCart(this.state.selected[0]);\r\n\r\n      notif('success', 'Checkout Successfully');\r\n    }\r\n  };\r\n\r\n  selectedCheck = (data) => {\r\n    this.setState({\r\n      selectedCheck: data,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfOrder, listOfUserCart},\r\n    } = this.props;\r\n    let totalPrice = listOfUserCart.reduce(\r\n      (total, item) => total + parseFloat(item.artworkPaymentAmount),\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div className='ordercon'>\r\n        <form\r\n          className='needs-validation animated zoomIn'\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <div className='cartord'>\r\n            {listOfUserCart.map((item, indexes) => {\r\n              if (listOfUserCart.length > 0) {\r\n                return (\r\n                  <MDBRow className='artlistorder'>\r\n                    <MDBCol md='1'>\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <MDBInput\r\n                          onChange={(data) => {\r\n                            this.selectedValue(\r\n                              indexes,\r\n                              data.target.checked,\r\n                              item\r\n                            );\r\n                          }}\r\n                          type='checkbox'\r\n                          id='checkbox1'\r\n                        />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='2' className='artimg colpad'>\r\n                      {item.artworkImg !== '' ? (\r\n                        <img src={item.artworkImg} alt='' />\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                    <MDBCol md='4' className='artdet colpad'>\r\n                      <a\r\n                        href='#!'\r\n                        onClick={() => {\r\n                          this.props.history.push({\r\n                            pathname: `/Artist/${item.accFname} ${item.accLname}`,\r\n                            state: {\r\n                              artistName: `${item.accFname} ${item.accLname}`,\r\n                              accImg: this.state.artistImg,\r\n                              artistDescription: this.state.accDescription,\r\n                              accBday: this.state.accBday,\r\n                              accFollowers: this.state.accFollowers,\r\n                            },\r\n                          });\r\n                        }}\r\n                      >\r\n                        {item.artistName} <MDBIcon icon='arrow-right' />\r\n                      </a>\r\n                      <br />\r\n                      <p>\"{item.artworkName}\"</p>\r\n                      <p>\r\n                        Variations: {item.artworkMaterial}, {item.artworkSize},\r\n                        {item.artworkFramingOptions}\r\n                      </p>\r\n                      <p>\r\n                        &#8369;\r\n                        {item.artworkPrice\r\n                          ? Number(\r\n                              parseFloat(item.artworkPrice)\r\n                            ).toLocaleString('en')\r\n                          : ''}\r\n                      </p>\r\n                    </MDBCol>\r\n                    <MDBCol md='1' className='quan colpad'>\r\n                      {item.artworkQuantity !== ''\r\n                        ? `x${item.artworkQuantity}`\r\n                        : ''}\r\n                    </MDBCol>\r\n                    <MDBCol md='3' className='colpad'>\r\n                      <MDBRow className='sub'>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          Subtotal\r\n                        </MDBCol>\r\n                        <MDBCol md='6' className='colpad2'>\r\n                          &#8369;\r\n                          {item.artworkPaymentAmount\r\n                            ? Number(\r\n                                parseFloat(item.artworkPaymentAmount)\r\n                              ).toLocaleString('en')\r\n                            : ''}\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                    </MDBCol>\r\n                    <MDBCol md='1'>\r\n                      {item.artworkQuantity !== '' ? (\r\n                        <a\r\n                          href='#!'\r\n                          onClick={() => {\r\n                            this.deleteItem(item);\r\n                          }}\r\n                        >\r\n                          <MDBIcon icon='trash' />\r\n                        </a>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                );\r\n              } else {\r\n                return 'Cart is Empty';\r\n              }\r\n            })}\r\n\r\n            <div className='acts clearfix'>\r\n              {/* <MDBRow>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">Shipping Fee</MDBCol>\r\n\t\t\t\t\t\t\t\t\t<MDBCol md=\"6\" className=\"colpad2\">\r\n\t\t\t\t\t\t\t\t\t\t&#8369; 500\r\n\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t</MDBRow> */}\r\n              <MDBRow className='actsrowcart'>\r\n                <MDBCol md='5' className='total'>\r\n                  TOTAL\r\n                </MDBCol>\r\n                <MDBCol md='7' className='total'>\r\n                  &#8369;\r\n                  {this.state.totalPrice > 0\r\n                    ? Number(parseFloat(this.state.totalPrice)).toLocaleString(\r\n                        'en'\r\n                      )\r\n                    : Number(parseFloat(0)).toLocaleString('en')}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <div className='actsbtn'>\r\n                    <MDBBtn\r\n                      color='#fae933'\r\n                      size='sm'\r\n                      className='recieve'\r\n                      disabled={this.state.totalPrice > 0 ? false : true}\r\n                      onClick={() => {\r\n                        this.addOrder();\r\n                      }}\r\n                    >\r\n                      Checkout\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(OrderTab)));\r\n"]},"metadata":{},"sourceType":"module"}