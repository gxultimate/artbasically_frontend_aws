{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\ArtistReg.js\";\nimport React, { Component } from 'react';\nimport { MDBInput, MDBBtn } from 'mdbreact';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\nexport class ArtistReg extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let {\n        startingStore: {\n          account,\n          upload\n        }\n      } = this.props;\n      event.target.className += ' was-validated';\n      const formData = new FormData();\n      formData.append('artworkImg', this.state.selectedFile);\n      formData.append('type', 'artist');\n      upload(formData, true);\n      account.setProperty('accessType', 'Artist');\n      account.setProperty('accID', this.getUniqueID());\n\n      const confirmPassword = () => {\n        if (this.state.password !== this.state.confirmPassword) {\n          message.error(\"The passwords doesn't match\");\n        } else return false;\n      };\n\n      const success = () => {\n        // message.then(() =>\n        message.success('Successfully submitted registration', 1); // );\n      };\n\n      setTimeout(() => {\n        success();\n        confirmPassword();\n      }, 1000);\n      this.props.history.push('/RegVerify'); // this.onSubmit();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onFileChange = this.onFileChange.bind(this); // this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      modal1: false,\n      profileImg: '',\n      accID: '',\n      selectedFile: null,\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  onFileChange(e) {\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n    this.setState({\n      accID: this.getUniqueID()\n    });\n  }\n\n  render() {\n    let {\n      startingStore: {\n        account\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reg clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Artist \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }), \" Registration\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Fill up the form and start sharing your artworks!\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"regform formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Email Address\",\n      type: \"email\",\n      onChange: accEmailAddress => account.setProperty('accEmailAddress', accEmailAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Password\",\n      type: \"password\",\n      onChange: password => account.setProperty('password', password.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Confirm Password\",\n      type: \"password\",\n      onChange: confirmPassword => account.setProperty('confirmPassword', confirmPassword.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"prefix\",\n      placeholder: \"Prefix\",\n      onChange: accSuffix => account.setProperty('accSuffix', accSuffix.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \" Prefix \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \" MR. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \" MS. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mrs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \" MRS. \")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"First Name\",\n      type: \"text\",\n      onChange: accFname => account.setProperty('accFname', accFname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Last Name\",\n      type: \"text\",\n      onChange: accLname => account.setProperty('accLname', accLname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \"Please provide a Last Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Birth Year\",\n      type: \"text\",\n      onChange: accBday => account.setProperty('accBday', accBday.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \"Please provide a Birth Year.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"textarea\",\n      label: \"Biography\",\n      rows: \"3\",\n      onChange: artistDescription => account.setProperty('artistDescription', artistDescription.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Please provide a short Bio.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Contact Number\",\n      type: \"text\",\n      onChange: accContact => account.setProperty('accContact', accContact.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, \"Please provide a Contact Number.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Institution / Company\",\n      type: \"text\",\n      onChange: accInstitution => account.setProperty('accInstitution', accInstitution.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Full Address\",\n      type: \"text\",\n      onChange: accAddress => account.setProperty('accAddress', accAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, \"Acceptable documents include passport, national ID card (NIC/CNIC), driver's license, NBI Clearance (Philippines only), tax ID, voter ID, postal ID, or any other valid government-issued photo ID that meets these criteria.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      color: \"#FAE933\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default inject('startingStore')(observer(ArtistReg));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/ArtistReg.js"],"names":["React","Component","MDBInput","MDBBtn","Navbar","Footer","inject","observer","message","ArtistReg","constructor","props","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","toggle","nr","modalNumber","setState","state","submitHandler","event","preventDefault","startingStore","account","upload","target","className","formData","FormData","append","selectedFile","setProperty","confirmPassword","password","error","success","setTimeout","history","push","changeHandler","name","value","onFileChange","bind","modal1","profileImg","accID","e","files","render","accEmailAddress","accSuffix","accFname","accLname","accBday","artistDescription","accContact","accInstitution","accAddress"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nexport class ArtistReg extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n      password: '',\r\n      confirmPassword: '',\r\n    };\r\n  }\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    formData.append('type', 'artist');\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const confirmPassword = () => {\r\n      if (this.state.password !== this.state.confirmPassword) {\r\n        message.error(\"The passwords doesn't match\");\r\n      } else return false;\r\n    };\r\n\r\n    const success = () => {\r\n      // message.then(() =>\r\n      message.success('Successfully submitted registration', 1);\r\n      // );\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n      confirmPassword();\r\n    }, 1000);\r\n    this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Artist <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                onChange={(password) =>\r\n                  account.setProperty('password', password.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                onChange={(confirmPassword) =>\r\n                  account.setProperty(\r\n                    'confirmPassword',\r\n                    confirmPassword.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='prefix'\r\n                placeholder='Prefix'\r\n                onChange={(accSuffix) =>\r\n                  account.setProperty('accSuffix', accSuffix.target.value)\r\n                }\r\n              >\r\n                <option> Prefix </option>\r\n                <option value='mr'> MR. </option>\r\n                <option value='ms'> MS. </option>\r\n                <option value='mrs'> MRS. </option>\r\n              </select>\r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='text'\r\n                onChange={(accBday) =>\r\n                  account.setProperty('accBday', accBday.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='3'\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Full Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} />\r\n                <p className='req'>\r\n                  Acceptable documents include passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                SUBMIT\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistReg));\r\n"]},"metadata":{},"sourceType":"module"}