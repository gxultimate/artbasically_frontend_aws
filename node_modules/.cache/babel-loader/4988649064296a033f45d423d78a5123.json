{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\components\\\\NavLogin.js\";\nimport React, { Component } from 'react';\nimport { MDBInput, MDBModal, MDBModalHeader, MDBBtn } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\nimport FbLogin from '../components/FbLogin';\nimport GoogleLogin from '../components/GoogleLogin';\nimport logo from '../images/adminlogo.png';\nimport { withRouter } from 'react-router-dom';\n\nclass NavLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal1: false\n    };\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n      let {\n        startingStore: {\n          loginAccount,\n          getArtists,\n          getArtworkInfo,\n          getEmergingArtistArtwork,\n          getArtistFollowArtwork,\n          account\n        }\n      } = this.props;\n      loginAccount().then(res => {\n        getArtworkInfo();\n        getEmergingArtistArtwork();\n        getArtists();\n        getArtistFollowArtwork(account.accEmailAddress);\n\n        if (res === true) {\n          const success = () => {\n            message.loading('Signing in..', 1.2).then(() => message.error('Login Unsuccessful', 1));\n          };\n\n          setTimeout(() => {\n            success();\n          }, 1000);\n          this.props.history.push('/');\n        } else if (res === 2) {\n          const success = () => {\n            message.loading('Signing in..', 1.2).then(() => message.success('Successfully Login', 1));\n          };\n\n          setTimeout(() => {\n            success();\n          }, 200);\n          this.props.history.push('/Home');\n        } else if (typeof res === 'string') {\n          const success = () => {\n            message.loading('Signing in..', 1.2).then(() => message.success('Successfully Login', 1));\n          };\n\n          setTimeout(() => {\n            success();\n          }, 200);\n          this.props.history.push(`/CProfile/${res}`);\n        } else {\n          const success = () => {\n            message.loading('Signing in..', 1.2).then(() => message.error('Login Unsuccessful', 1));\n          };\n\n          setTimeout(() => {\n            success();\n          }, 200);\n          this.props.history.push('/');\n        }\n      });\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let {\n      startingStore: {\n        account\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btnmodal btnmodalnav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      onClick: this.toggle(1),\n      color: \"#fff\",\n      className: \"navlogin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"Hello, Sign In\"), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      className: \"modalform modlog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"needs-validation animated zoomIn\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Art, Basically Logo\",\n      className: \"img-fluid\",\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"adloginpt clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"email\",\n      label: \"Email Address\",\n      className: \"loginadmin\",\n      required: true,\n      onChange: accEmailAddress => account.setProperty('accEmailAddress', accEmailAddress.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, \"Please provide a valid email.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"adloginpt clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"password\",\n      label: \"Password\",\n      className: \"loginadmin\",\n      required: true,\n      onChange: password => account.setProperty('password', password.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, \"Please provide a valid password.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rem custom-control custom-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"custom-control-input\",\n      id: \"rempass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"custom-control-label\",\n      for: \"rempass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Remember me\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      type: \"submit\",\n      className: \"admloginbtn\",\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, \"LOGIN\")), /*#__PURE__*/React.createElement(FbLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(GoogleLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"reghere\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \"Don't have an Account?\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/UserRegistration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, \"Register Here.\")))));\n  }\n\n}\n\nexport default withRouter(inject('startingStore')(observer(NavLogin)));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/components/NavLogin.js"],"names":["React","Component","MDBInput","MDBModal","MDBModalHeader","MDBBtn","inject","observer","message","FbLogin","GoogleLogin","logo","withRouter","NavLogin","state","modal1","toggle","nr","modalNumber","setState","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","className","startingStore","loginAccount","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","account","props","then","res","accEmailAddress","success","loading","error","setTimeout","history","push","changeHandler","name","value","render","setProperty","password"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {MDBInput, MDBModal, MDBModalHeader, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FbLogin from '../components/FbLogin';\r\nimport GoogleLogin from '../components/GoogleLogin';\r\nimport logo from '../images/adminlogo.png';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass NavLogin extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {loginAccount ,     \r\n        getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,\r\n        account\r\n      },\r\n    } = this.props;\r\n    loginAccount().then((res) => {\r\n      getArtworkInfo();\r\n      getEmergingArtistArtwork();\r\n      getArtists();\r\n      getArtistFollowArtwork(account.accEmailAddress);\r\n      if (res === true) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 1000);\r\n        this.props.history.push('/');\r\n      } else if (res === 2) {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/Home');\r\n      } else if (typeof res === 'string') {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.success('Successfully Login', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push(`/CProfile/${res}`);\r\n      } else {\r\n        const success = () => {\r\n          message\r\n            .loading('Signing in..', 1.2)\r\n            .then(() => message.error('Login Unsuccessful', 1));\r\n        };\r\n\r\n        setTimeout(() => {\r\n          success();\r\n        }, 200);\r\n        this.props.history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='btnmodal btnmodalnav'>\r\n        <MDBBtn onClick={this.toggle(1)} color='#fff' className='navlogin'>\r\n          Hello, Sign In\r\n        </MDBBtn>\r\n        <MDBModal\r\n          isOpen={this.state.modal1}\r\n          toggle={this.toggle(1)}\r\n          centered\r\n          className='modalform modlog'\r\n        >\r\n          <MDBModalHeader toggle={this.toggle(1)}></MDBModalHeader>\r\n          <div className='login'>\r\n            <form\r\n              className='needs-validation animated zoomIn'\r\n              onSubmit={this.submitHandler}\r\n            >\r\n              <img alt='Art, Basically Logo' className='img-fluid' src={logo} />\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='email'\r\n                  label='Email Address'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(accEmailAddress) =>\r\n                    account.setProperty(\r\n                      'accEmailAddress',\r\n                      accEmailAddress.target.value\r\n                    )\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid email.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='adloginpt clearfix'>\r\n                <MDBInput\r\n                  type='password'\r\n                  label='Password'\r\n                  className='loginadmin'\r\n                  required\r\n                  onChange={(password) =>\r\n                    account.setProperty('password', password.target.value)\r\n                  }\r\n                >\r\n                  <div className='invalid-feedback'>\r\n                    Please provide a valid password.\r\n                  </div>\r\n                </MDBInput>\r\n              </div>\r\n              <div className='rem custom-control custom-checkbox'>\r\n                <input\r\n                  type='checkbox'\r\n                  class='custom-control-input'\r\n                  id='rempass'\r\n                />\r\n                <label class='custom-control-label' for='rempass'>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <MDBBtn type='submit' className='admloginbtn' color='transparent'>\r\n                LOGIN\r\n              </MDBBtn>\r\n            </form>\r\n            <FbLogin />\r\n            <GoogleLogin />\r\n            <p className='reghere'>\r\n              Don't have an Account?{' '}\r\n              <a href='/UserRegistration'>Register Here.</a>\r\n            </p>\r\n          </div>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(inject('startingStore')(observer(NavLogin)));\r\n"]},"metadata":{},"sourceType":"module"}