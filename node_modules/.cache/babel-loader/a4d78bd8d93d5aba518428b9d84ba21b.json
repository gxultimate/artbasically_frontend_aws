{"ast":null,"code":"import _ from 'lodash';\nimport { action, decorate, observable, toJS } from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nimport PrintSize from './../models/PrintSize';\n\nclass StartingStore {\n  constructor(api) {\n    this.account = new Account();\n    this.artwork = new Artwork();\n    this.categories = new Categories();\n    this.style = new Style();\n    this.cart = new Cart();\n    this.order = new Order();\n    this.printsize = new PrintSize();\n    this.listOfPrintSize = [];\n    this.listOfOrders = [];\n    this.welcomeMessage = 'Welcome!';\n    this.listOfUsers = [];\n    this.listOfArtworks = [];\n    this.listOfCategories = [];\n    this.listOfStyles = [];\n    this.listOfOrder = [];\n    this.listOfArtists = [];\n    this.currentUser = new User();\n    this.listOfUserDocs = [];\n    this.listOfUserCart = [];\n    this.listofArtistArtwork = [];\n    this.listOfSingleArtwork = [];\n    this.listofArtistInfo = [];\n    this.listofArtistCategories = [];\n    this.listofUserCategoriesArtwork = [];\n    this.listofFilteredUserArtworkCategories = [];\n    this.listOfEmergingArtist = [];\n    this.listofUserOrder = [];\n    this.filter = false;\n    this.listofUserStyleArtwork = [];\n    this.followed = false;\n    this.listRelatedWorkByCategory = [];\n    this.img = undefined;\n    this.api = undefined;\n\n    this.setFollowed = () => {\n      this.followed = !this.followed;\n    };\n\n    this.filterArtwork = type => {\n      this.filter = type;\n    };\n\n    this.addAccount = () => {\n      return new Promise((resolve, reject) => {\n        this.api.addaccount(this.account).then(resp => {\n          if (resp.data !== false) {\n            this.listOfUsers = resp.data;\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getAccounts = () => {\n      this.api.getaccounts().then(resp => {\n        this.listOfUsers = resp.data;\n      });\n    };\n\n    this.editAccount = () => {\n      return new Promise((resolve, reject) => {\n        this.api.editAccount(this.removeUndefinedProps(this.account)).then(resp => {\n          let user = resp.data.filter(us => us._id === this.account._id);\n          resolve(user[0].acc_Status);\n          sessionStorage.setItem('userData', JSON.stringify(user[0]));\n          this.listOfUsers = resp.data;\n        });\n      });\n    };\n\n    this.loginAccount = () => {\n      return new Promise((resolve, reject) => {\n        this.api.loginaccount(this.account).then(resp => {\n          if (resp.data.accessType === 'Admin') {\n            sessionStorage.setItem('userData', JSON.stringify(resp.data));\n            resolve(true);\n          } else if (resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' || resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active') {\n            sessionStorage.setItem('userData', JSON.stringify(resp.data));\n            resolve(2);\n          } else if (resp.data.accessType === 'PrintingPartner') {\n            sessionStorage.setItem('userData', JSON.stringify(resp.data));\n            resolve(3);\n          } else if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n            sessionStorage.setItem('userData', JSON.stringify(resp.data));\n            resolve(4);\n          } else if (resp.data.acc_Status === 'Pending') {\n            resolve(5);\n          } else if (resp.data.acc_Status === 'Rejected') {\n            resolve(6);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addArtwork = () => {\n      this.api.addartwork(this.artwork).then(resp => {\n        this.listOfArtworks = resp.data;\n      });\n    };\n\n    this.upload = (img, documents) => {\n      return new Promise((resolve, reject) => {\n        return this.api.upload(img).then(resp => {\n          if (documents === true) {\n            let arr = [];\n            this.account.setProperty('acc_Documents', resp.data.url);\n          } else {\n            this.artwork.setProperty('artworkImg', resp.data.url);\n            this.account.setProperty('accImg', resp.data.url);\n          } // console.log(resp.data, \"data\")\n\n\n          if (this.artwork.artName === '') {\n            this.addAccount();\n          } else {\n            this.addArtwork();\n          }\n        });\n      });\n    };\n\n    this.getArtwork = () => {\n      this.api.getartwork().then(resp => {\n        this.img = this.arrayBufferToBase64(resp.data[0].img.data.data); // console.log(,\"aws\")x\n      });\n    };\n\n    this.getEmergingArtistArtwork = () => {\n      this.api.getEmergingArtist().then(resp => {\n        this.listOfEmergingArtist = resp.data;\n      });\n    };\n\n    this.getArtistFollowArtwork = email => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n      if (userData !== null) {\n        this.api.getArtistFollowArtwork(email ? email : userData.accEmailAddress).then(resp => {\n          this.listOfArtistFollowed = resp.data;\n        });\n      }\n    };\n\n    this.getArtworkInfo = () => {\n      return new Promise((resolve, reject) => {\n        this.api.getartworkInfo().then(resp => {\n          let userData = JSON.parse(sessionStorage.getItem('userData'));\n          let artCategories = [];\n          let categories = [];\n          this.listOfArtworks = resp.data.map(art => {\n            artCategories.push(art.artTheme[0]);\n            return art;\n          });\n          let cat = artCategories.filter(art => {\n            if (art === '' || categories.includes(art)) {} else {\n              categories.push(art);\n            }\n          });\n\n          if (userData === null || userData === false) {\n            let listofUserCategoriesArtwork = resp.data.filter(item => item.artworkStatus !== 'Pending').map(art => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n          } else {\n            let listofUserCategoriesArtwork = resp.data.filter(item => item.artworkStatus !== 'Pending').filter(art => {\n              userData['accCategories'].map(cat => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n                  return art;\n                }\n              });\n            }); // console.log(listofUserCategoriesArtwork, 'dsdsd');\n\n            this.listofFilteredUserArtworkCategories = _.uniqBy(this.listofFilteredUserArtworkCategories, a => a.artName);\n          }\n\n          if (resp.data !== false) {\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getSingleArtworkInfo = id => {\n      return new Promise((resolve, reject) => {\n        this.api.getsingleartworkinfo(id).then(resp => {\n          this.listOfSingleArtwork = resp.data;\n\n          if (resp.data !== false) {\n            let listOfSingleArtwork = resp.data;\n            let styles = [];\n            let themes = [];\n\n            if (resp.data.length > 1) {\n              resp.data.map(item => {\n                item.artStyle.map(style => styles.push(style));\n                item.artTheme.map(theme => themes.push(theme));\n              });\n\n              let categories = _.union(themes.concat(styles));\n\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            } else {\n              if (resp.data.artStyle !== undefined) {\n                // resp.data.artStyle.map((style) => styles.push(style));\n                // resp.data.artTheme.map((theme) => themes.push(theme));\n                let categories = _.union(listOfSingleArtwork.artTheme.concat(listOfSingleArtwork.artStyle));\n\n                this.getRelatedWorkByCategory(JSON.stringify(categories));\n              }\n            }\n\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.followArtist = artist => {\n      return new Promise((resolve, reject) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.api.followAccount(userData, artist).then(resp => {\n          if (resp.data !== false) {\n            this.listofArtistInfo = resp.data[0];\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addOrder = () => {\n      this.api.addOrder(this.order).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.editArtwork = () => {\n      this.api.editArtwork(this.artwork).then(resp => {\n        this.listOfArtworks = resp.data;\n      });\n    };\n\n    this.addCategory = () => {\n      this.api.addCategory(this.categories).then(resp => {\n        this.listOfCategories = resp.data;\n      });\n    };\n\n    this.editCategory = () => {\n      this.api.editCategory(this.categories).then(resp => {\n        this.listOfCategories = resp.data;\n      });\n    };\n\n    this.getCategories = () => {\n      this.api.getCategories().then(resp => {\n        this.listOfCategories = resp.data; // console.log(,\"aws\")x\n      });\n    };\n\n    this.getOrderUser = () => {\n      return new Promise((resolve, reject) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.api.getOrder(userData._id).then(resp => {\n          this.listofUserOrder = resp.data;\n\n          if (resp.data !== false) {\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addStyle = () => {\n      this.api.addStyle(this.style).then(resp => {\n        this.listOfStyles = resp.data;\n      });\n    };\n\n    this.editStyle = () => {\n      this.api.editStyle(this.style).then(resp => {\n        this.listOfStyles = resp.data;\n      });\n    };\n\n    this.getStyles = () => {\n      this.api.getStyles().then(resp => {\n        this.listOfStyles = resp.data;\n      });\n    };\n\n    this.addPrintSize = () => {\n      this.api.addprintsize(this.printsize).then(resp => {\n        this.listOfPrintSize = resp.data;\n      });\n    };\n\n    this.getPrintSize = () => {\n      this.api.getprintsize().then(resp => {\n        this.listOfPrintSize = resp.data;\n      });\n    };\n\n    this.editPrintSize = () => {\n      this.api.editprintsize(this.printsize).then(resp => {\n        this.listOfPrintSize = resp.data;\n      });\n    };\n\n    this.getArtists = artist => {\n      return new Promise((resolve, reject) => {\n        this.api.getArtists().then(resp => {\n          this.listOfArtists = resp.data;\n\n          if (resp.data !== false && artist !== '') {\n            resolve(resp.data.filter(art => `${art.accFname} ${art.accLname}` === artist));\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getSingleArtists = id => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      return new Promise((resolve, reject) => {\n        this.api.getSingleArtists(id).then(resp => {\n          if (resp.data !== false && resp.data.length !== 0) {\n            this.listofArtistInfo = resp.data[0];\n\n            if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n              this.followed = true;\n            }\n\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getArtistArtwork = id => {\n      return new Promise((resolve, reject) => {\n        this.api.getArtistArtwork(id).then(resp => {\n          let listOfCategories = [];\n\n          if (resp.data !== false && id !== '') {\n            this.listofArtistArtwork = resp.data;\n            listOfCategories = resp.data.map(art => {\n              if (art.artTheme[0] !== '') {\n                return art.artTheme[0];\n              }\n            });\n            this.listofArtistCategories = listOfCategories.filter(cat => {\n              return cat !== undefined;\n            });\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getRelatedWorkByCategory = cat => {\n      return new Promise((resolve, reject) => {\n        this.api.getRelatedWorkByCategory(cat).then(resp => {\n          if (resp.data !== false && cat !== '') {\n            this.listRelatedWorkByCategory = resp.data;\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addToCart = () => {\n      this.api.addToCart(this.cart).then(resp => {\n        this.listOfUserCart = resp.data;\n      });\n    };\n\n    this.getToCart = () => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      let dar = [];\n      this.api.getToCart(userData).then(resp => {\n        if (resp.data !== false) {\n          this.listOfUserCart = resp.data.filter(item => item.artworkQuantity !== '');\n        }\n      });\n    };\n\n    this.editToCart = data => {\n      let currData = toJS(data);\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.editToCart(currData._id).then(resp => {\n        if (resp.data !== false) {\n          this.getToCart(userData);\n        }\n      });\n    };\n\n    this.getOrders = () => {\n      // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n      this.api.getOrders().then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrders = resp.data;\n        }\n      });\n    };\n\n    this.getOrder = () => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrders(userData).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.editOrder = (id, status, account) => {\n      let data = {\n        id: id,\n        status: status,\n        account: account\n      };\n      this.api.editOrder(data).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n\n    return obj;\n  }\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n  addPrintSize: action,\n  getPrintSize: action,\n  editPrintSize: action\n});\nexport default StartingStore;","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/stores/StartingStore.js"],"names":["_","action","decorate","observable","toJS","Account","Artwork","Cart","Categories","Order","Style","User","PrintSize","StartingStore","constructor","api","account","artwork","categories","style","cart","order","printsize","listOfPrintSize","listOfOrders","welcomeMessage","listOfUsers","listOfArtworks","listOfCategories","listOfStyles","listOfOrder","listOfArtists","currentUser","listOfUserDocs","listOfUserCart","listofArtistArtwork","listOfSingleArtwork","listofArtistInfo","listofArtistCategories","listofUserCategoriesArtwork","listofFilteredUserArtworkCategories","listOfEmergingArtist","listofUserOrder","filter","listofUserStyleArtwork","followed","listRelatedWorkByCategory","img","undefined","setFollowed","filterArtwork","type","addAccount","Promise","resolve","reject","addaccount","then","resp","data","getAccounts","getaccounts","editAccount","removeUndefinedProps","user","us","_id","acc_Status","sessionStorage","setItem","JSON","stringify","loginAccount","loginaccount","accessType","addArtwork","addartwork","upload","documents","arr","setProperty","url","artName","getArtwork","getartwork","arrayBufferToBase64","getEmergingArtistArtwork","getEmergingArtist","getArtistFollowArtwork","email","userData","parse","getItem","accEmailAddress","listOfArtistFollowed","getArtworkInfo","getartworkInfo","artCategories","map","art","push","artTheme","cat","includes","item","artworkStatus","uniqBy","a","getSingleArtworkInfo","id","getsingleartworkinfo","styles","themes","length","artStyle","theme","union","concat","getRelatedWorkByCategory","followArtist","artist","followAccount","addOrder","editArtwork","addCategory","editCategory","getCategories","getOrderUser","getOrder","addStyle","editStyle","getStyles","addPrintSize","addprintsize","getPrintSize","getprintsize","editPrintSize","editprintsize","getArtists","accFname","accLname","getSingleArtists","accFollowers","getArtistArtwork","addToCart","getToCart","dar","artworkQuantity","editToCart","currData","getOrders","editOrder","status","obj","prop","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {action, decorate, observable, toJS} from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nimport PrintSize from './../models/PrintSize'\n\nclass StartingStore {\n  account = new Account();\n  artwork = new Artwork();\n  categories = new Categories();\n  style = new Style();\n  cart = new Cart();\n  order = new Order();\n  printsize = new PrintSize();\n  listOfPrintSize =[];\n  listOfOrders = [];\n  welcomeMessage = 'Welcome!';\n  listOfUsers = [];\n  listOfArtworks = [];\n  listOfCategories = [];\n  listOfStyles = [];\n  listOfOrder = [];\n  listOfArtists = [];\n  currentUser = new User();\n  listOfUserDocs = [];\n  listOfUserCart = [];\n  listofArtistArtwork = [];\n  listOfSingleArtwork = [];\n  listofArtistInfo = [];\n  listofArtistCategories = [];\n  listofUserCategoriesArtwork = [];\n  listofFilteredUserArtworkCategories = [];\n  listOfEmergingArtist = [];\n  listofUserOrder = [];\n  filter = false;\n  listofUserStyleArtwork = [];\n  followed = false;\n  listRelatedWorkByCategory = [];\n\n  img = undefined;\n  api = undefined;\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n    return obj;\n  }\n  setFollowed = () => {\n    this.followed = !this.followed;\n  };\n  filterArtwork = (type) => {\n    this.filter = type;\n  };\n  addAccount = () => {\n  \n      return new Promise ((resolve,reject) =>{\n     \n      this.api.addaccount(this.account)\n      .then(resp => {\n      \n        \n        if (resp.data !== false ) {  \n          this.listOfUsers = resp.data; \n          resolve(true);       \n          } \n  else {         \n   resolve(false);      \n   }  \n       \n      })\n    })\n\n  };\n\n  getAccounts = () => {\n    this.api.getaccounts().then((resp) => {\n    \n      this.listOfUsers = resp.data;\n    });\n  };\n\n  editAccount = () => {\n    return new Promise((resolve, reject) => {\n    this.api\n      .editAccount(this.removeUndefinedProps(this.account))\n      .then((resp) => {\n        let user = resp.data.filter((us) => us._id === this.account._id);\n       \n        resolve(user[0].acc_Status)\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    });\n  };\n\n  loginAccount = () => {\n    return new Promise((resolve, reject) => {\n      this.api.loginaccount(this.account).then((resp) => {\n       \n        if (resp.data.accessType === 'Admin') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(true);\n        } else if (\n          \n          resp.data.accessType === 'Standard' && resp.data.acc_Status === 'Active' ||\n          resp.data.accessType === 'Curator' && resp.data.acc_Status === 'Active'\n        ) {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(2);\n        } else if (resp.data.accessType === 'PrintingPartner') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n          resolve(3);\n        } else if (resp.data.accessType === 'Artist' && resp.data.acc_Status === 'Active') {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data))\n        \n          resolve(4)\n        } else if (resp.data.acc_Status === 'Pending'){\n          resolve(5)\n         \n        } else if (resp.data.acc_Status === 'Rejected'){\n          resolve(6)\n         \n        }else{\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addArtwork = () => {\n  \n    this.api.addartwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n    \n\n    });\n  };\n\n  upload = (img, documents) => {\n\n    return new Promise((resolve, reject) => {\n      return this.api.upload(img).then((resp) => {\n    \n        if (documents === true) {\n          let arr = [];\n          this.account.setProperty('acc_Documents', resp.data.url);\n        } else {\n          this.artwork.setProperty('artworkImg', resp.data.url);\n          this.account.setProperty('accImg', resp.data.url);\n        }\n        // console.log(resp.data, \"data\")\n        if (this.artwork.artName === '') {\n          this.addAccount();\n        } else {\n          this.addArtwork();\n        }\n      });\n    });\n  };\n\n  getArtwork = () => {\n    this.api.getartwork().then((resp) => {\n      this.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n      // console.log(,\"aws\")x\n    });\n  };\n\n  getEmergingArtistArtwork = () => {\n    this.api.getEmergingArtist().then((resp) => {\n      this.listOfEmergingArtist = resp.data;\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    if (userData !== null) {\n      this.api\n        .getArtistFollowArtwork(email ? email : userData.accEmailAddress)\n        .then((resp) => {\n          this.listOfArtistFollowed = resp.data;\n        });\n    }\n  };\n\n  getArtworkInfo = () => {\n    return new Promise((resolve, reject) => {\n      this.api.getartworkInfo().then((resp) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        let artCategories = [];\n        let categories = [];\n\n        this.listOfArtworks = resp.data.map((art) => {\n          artCategories.push(art.artTheme[0]);\n          return art;\n        });\n\n        let cat = artCategories.filter((art) => {\n          if (art === '' || categories.includes(art)) {\n          } else {\n            categories.push(art);\n          }\n        });\n\n        if (userData === null || userData === false) {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .map((art) => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n        } else {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .filter((art) => {\n              userData['accCategories'].map((cat) => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n\n                  return art;\n                }\n              });\n            });\n          // console.log(listofUserCategoriesArtwork, 'dsdsd');\n          this.listofFilteredUserArtworkCategories = _.uniqBy(\n            this.listofFilteredUserArtworkCategories,\n            (a) => a.artName\n          );\n        }\n\n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtworkInfo = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getsingleartworkinfo(id).then((resp) => {\n        this.listOfSingleArtwork = resp.data;\n\n        if (resp.data !== false) {\n          let listOfSingleArtwork = resp.data;\n          let styles = [];\n          let themes = [];\n          if (resp.data.length > 1) {\n            resp.data.map((item) => {\n              item.artStyle.map((style) => styles.push(style));\n              item.artTheme.map((theme) => themes.push(theme));\n            });\n            let categories = _.union(themes.concat(styles));\n            this.getRelatedWorkByCategory(JSON.stringify(categories));\n          } else {\n            if (resp.data.artStyle !== undefined) {\n              // resp.data.artStyle.map((style) => styles.push(style));\n              // resp.data.artTheme.map((theme) => themes.push(theme));\n\n              let categories = _.union(\n                listOfSingleArtwork.artTheme.concat(\n                  listOfSingleArtwork.artStyle\n                )\n              );\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            }\n          }\n\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  followArtist = (artist) => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.followAccount(userData, artist).then((resp) => {\n        if (resp.data !== false) {\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addOrder = () => {\n \n    this.api.addOrder(this.order).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editArtwork = () => {\n   \n    this.api.editArtwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n     \n    });\n  };\n\n  //Category\n\n  addCategory = () => {\n    this.api.addCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n \n    });\n  };\n\n  editCategory = () => {\n    this.api.editCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n  \n    });\n  };\n\n  getCategories = () => {\n    this.api.getCategories().then((resp) => {\n      this.listOfCategories = resp.data;\n      // console.log(,\"aws\")x\n    });\n  };\n  getOrderUser = () => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrder(userData._id).then((resp) => {\n        this.listofUserOrder = resp.data;\n       \n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Style\n\n  addStyle = () => {\n    this.api.addStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  editStyle = () => {\n    this.api.editStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n  \n    });\n  };\n\n  getStyles = () => {\n    this.api.getStyles().then((resp) => {\n      this.listOfStyles = resp.data;\n    \n    });\n  };\n\n  //PrintSize\n\n  addPrintSize = () => {\n    this.api.addprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n  getPrintSize = () => {\n    this.api.getprintsize().then((resp) => {\n      this.listOfPrintSize = resp.data;\n    \n    });\n  };\n\n  editPrintSize = () => {\n    this.api.editprintsize(this.printsize).then((resp) => {\n      this.listOfPrintSize = resp.data;\n  \n    });\n  };\n\n\n  //Artist\n  getArtists = (artist) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtists().then((resp) => {\n        this.listOfArtists = resp.data;\n\n        if (resp.data !== false && artist !== '') {\n          resolve(\n            resp.data.filter(\n              (art) => `${art.accFname} ${art.accLname}` === artist\n            )\n          );\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtists = (id) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n        if (resp.data !== false && resp.data.length !== 0) {\n          this.listofArtistInfo = resp.data[0];\n          if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n            this.followed = true;\n          }\n          resolve(resp.data);\n        } else {\n      \n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getArtistArtwork = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtistArtwork(id).then((resp) => {\n        let listOfCategories = [];\n        if (resp.data !== false && id !== '') {\n          this.listofArtistArtwork = resp.data;\n\n          listOfCategories = resp.data.map((art) => {\n            if (art.artTheme[0] !== '') {\n              return art.artTheme[0];\n            }\n          });\n          this.listofArtistCategories = listOfCategories.filter((cat) => {\n            return cat !== undefined;\n          });\n     \n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getRelatedWorkByCategory = (cat) => {\n    \n    return new Promise((resolve, reject) => {\n      this.api.getRelatedWorkByCategory(cat).then((resp) => {\n        if (resp.data !== false && cat !== '') {\n          this.listRelatedWorkByCategory = resp.data;\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Cart\n\n  addToCart = () => {\n    this.api.addToCart(this.cart).then((resp) => {\n      this.listOfUserCart = resp.data;\n    });\n  };\n\n  getToCart = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    let dar = [];\n    this.api.getToCart(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfUserCart = resp.data.filter(\n          (item) => item.artworkQuantity !== ''\n        );\n      }\n    });\n  };\n\n  editToCart = (data) => {\n \n    let currData = toJS(data);\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n \n    this.api.editToCart(currData._id).then((resp) => {\n      if (resp.data !== false) {\n        this.getToCart(userData);\n      }\n    });\n  };\n\n  // ORDERS\n  getOrders = () => {\n    // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n \n    this.api.getOrders().then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrders = resp.data;\n      }\n    });\n  };\n  getOrder = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n    this.api.getOrders(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editOrder = (id, status, account) => {\n    let data = {id: id, status: status, account: account};\n    this.api.editOrder(data).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n  addPrintSize:action,\n  getPrintSize:action,\n  editPrintSize:action,\n});\n\nexport default StartingStore;\n"]},"metadata":{},"sourceType":"module"}