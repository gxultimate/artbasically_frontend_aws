{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\components\\\\Navbar.js\";\nimport React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBDropdownToggle, MDBDropdownItem, MDBHamburgerToggler, MDBCollapse, MDBNavbarBrand, MDBDropdown, MDBDropdownMenu, MDBBadge, MDBIcon, MDBBtn } from 'mdbreact';\nimport logo from '../images/logo.png';\nimport CNotif from '../components/CNotif';\nimport CMess from '../components/CMess';\nimport NavLogin from '../components/NavLogin';\nimport Search from '../components/Search';\nimport NavLoginPost from './NavLoginPost';\nimport { inject, observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport OrderIcon from './../components/OrderIcon';\n\nclass Navbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapse1: false,\n      collapseID: ''\n    };\n\n    this.toggleCollapse = collapseID => () => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n      }));\n    };\n\n    this.toggleSingleCollapse = collapseId => {\n      this.setState({ ...this.state,\n        [collapseId]: !this.state[collapseId]\n      });\n    };\n  }\n\n  componentDidMount() {\n    let {\n      startingStore: {\n        getToCart,\n        getOrders\n      }\n    } = this.props;\n    getToCart();\n    getOrders();\n  }\n\n  render() {\n    // let displogin = (isLogin) => \n    //   isLogin ?\n    //     (<MDBNavLink\n    //       className='inlinelink rborder btnYellow navbtn'\n    //       to='/Upload'\n    //     >\n    //       Post, Basically\n    //     </MDBNavLink>)\n    //     : (<NavLogin />)\n    function logout() {\n      sessionStorage.clear();\n      window.location.href = '/';\n    }\n\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    let {\n      startingStore: {\n        filterArtwork\n      }\n    } = this.props;\n\n    let filterOn = type => {\n      sessionStorage.setItem('type', type);\n      filterArtwork(type);\n    };\n\n    return /*#__PURE__*/React.createElement(MDBNavbar, {\n      dark: true,\n      expand: \"md\",\n      className: \"navcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, userData !== null && userData !== undefined ? /*#__PURE__*/React.createElement(MDBNavbarBrand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"logo\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }))) : /*#__PURE__*/React.createElement(MDBNavbarBrand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"logo\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(MDBHamburgerToggler, {\n      color: \"#FAE933\",\n      id: \"hamburger1\",\n      onClick: () => this.toggleSingleCollapse('collapse1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MDBCollapse, {\n      isOpen: this.state.collapse1,\n      navbar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavbarNav, {\n      className: \"nav-ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder \",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"SALE\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder\",\n      to: \"/Artworks\",\n      onClick: () => {\n        filterOn('latest');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"Latest\")), userData !== null && userData !== undefined ? /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder\",\n      to: \"/Artworks\",\n      onClick: () => {\n        filterOn('foryou');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"For\\xA0You\")) : /*#__PURE__*/React.createElement(MDBNavItem, {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder\",\n      to: \"/Artworks\",\n      onClick: () => {\n        filterOn('discover');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Discover\")), /*#__PURE__*/React.createElement(MDBDropdown, {\n      className: \"ddnav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBDropdownToggle, {\n      caret: true,\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Shop By\"), /*#__PURE__*/React.createElement(MDBDropdownMenu, {\n      basic: true,\n      className: \"ddnavMenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBDropdownItem, {\n      href: \"/ShopByPrice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n      href: \"/ShopByCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Category\"))), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, userData !== null && userData !== undefined ? /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder btnYellow navbtn\",\n      to: \"/Upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 65\n      }\n    }, \"Post, Basically\") : /*#__PURE__*/React.createElement(NavLoginPost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder\",\n      to: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(MDBDropdown, {\n      className: \"ddnav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, userData !== null && userData !== undefined ? /*#__PURE__*/React.createElement(MDBDropdownToggle, {\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Hello, \", userData.accFname) : /*#__PURE__*/React.createElement(NavLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }), userData !== null && userData !== undefined ? /*#__PURE__*/React.createElement(MDBDropdownMenu, {\n      basic: true,\n      className: \"ddnavMenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBDropdownItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/CProfileEdit/${userData.accFname} ${userData.accLname}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, ' ', \"Account\")), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/CProfile/${userData.accFname} ${userData.accLname}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }, ' ', \"Profile\")), /*#__PURE__*/React.createElement(MDBDropdownItem, {\n      onClick: () => logout(),\n      style: {\n        paddingLeft: '25px',\n        color: '#000000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, \"Log Out\")) : /*#__PURE__*/React.createElement(MDBDropdownMenu, {\n      basic: true,\n      className: \"ddnavMenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    })), userData !== null && userData !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row lbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBNavLink, {\n      className: \"inlinelink rborder\",\n      to: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"Your Lists\")), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CMess, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CNotif, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(MDBNavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(OrderIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 22\n      }\n    }))) : /*#__PURE__*/React.createElement(MDBNavItem, {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(Navbar));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/components/Navbar.js"],"names":["React","Component","MDBNavbar","MDBNavbarNav","MDBNavItem","MDBNavLink","MDBDropdownToggle","MDBDropdownItem","MDBHamburgerToggler","MDBCollapse","MDBNavbarBrand","MDBDropdown","MDBDropdownMenu","MDBBadge","MDBIcon","MDBBtn","logo","CNotif","CMess","NavLogin","Search","NavLoginPost","inject","observer","Link","OrderIcon","Navbar","state","collapse1","collapseID","toggleCollapse","setState","prevState","toggleSingleCollapse","collapseId","componentDidMount","startingStore","getToCart","getOrders","props","render","logout","sessionStorage","clear","window","location","href","userData","JSON","parse","getItem","filterArtwork","filterOn","type","setItem","undefined","display","accFname","accLname","paddingLeft","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBDropdownToggle,\r\n  MDBDropdownItem,\r\n  MDBHamburgerToggler,\r\n  MDBCollapse,\r\n  MDBNavbarBrand,\r\n  MDBDropdown,\r\n  MDBDropdownMenu,\r\n  MDBBadge,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport logo from '../images/logo.png';\r\nimport CNotif from '../components/CNotif';\r\nimport CMess from '../components/CMess';\r\nimport NavLogin from '../components/NavLogin';\r\nimport Search from '../components/Search';\r\nimport NavLoginPost from './NavLoginPost'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport OrderIcon from './../components/OrderIcon'\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    collapse1: false,\r\n    collapseID: '',\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : '',\r\n    }));\r\n  };\r\n\r\n  toggleSingleCollapse = (collapseId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [collapseId]: !this.state[collapseId],\r\n    });\r\n  };\r\n  componentDidMount(){\r\n    let {startingStore:{getToCart,getOrders}}=this.props;\r\n    getToCart()\r\n    getOrders()\r\n  }\r\n\r\n  render() {\r\n\r\n    // let displogin = (isLogin) => \r\n    //   isLogin ?\r\n    //     (<MDBNavLink\r\n    //       className='inlinelink rborder btnYellow navbtn'\r\n    //       to='/Upload'\r\n    //     >\r\n    //       Post, Basically\r\n    //     </MDBNavLink>)\r\n    //     : (<NavLogin />)\r\n    function  logout() {\r\n      sessionStorage.clear();\r\n      window.location.href = '/';\r\n  }\r\n\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let {\r\n      startingStore: { filterArtwork},\r\n    } = this.props;\r\n\r\n    let filterOn = (type) => {\r\n      sessionStorage.setItem('type', type);\r\n      filterArtwork(type);\r\n    };\r\n    return (\r\n      <MDBNavbar dark expand='md' className='navcon'>\r\n\r\n    \r\n        \r\n\r\n\r\n        {userData !== null && userData !== undefined ? (\r\n         <MDBNavbarBrand>\r\n         <a href='/Home'>\r\n           <img src={logo} className='logo' alt='' />\r\n         </a>\r\n       </MDBNavbarBrand>\r\n            ) : (\r\n              <MDBNavbarBrand>\r\n              <a href='/'>\r\n                <img src={logo} className='logo' alt='' />\r\n              </a>\r\n            </MDBNavbarBrand>\r\n              )}\r\n\r\n        <MDBHamburgerToggler\r\n          color='#FAE933'\r\n          id='hamburger1'\r\n          onClick={() => this.toggleSingleCollapse('collapse1')}\r\n        />\r\n        <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n          <MDBNavbarNav className='nav-ul'>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder '\r\n                to='/'\r\n              >\r\n                SALE\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('latest');\r\n                }}\r\n              >\r\n                Latest\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            {userData !== null && userData !== undefined ? (\r\n              <MDBNavItem>\r\n                <MDBNavLink\r\n                  className='inlinelink rborder'\r\n                  to='/Artworks'\r\n                  onClick={() => {\r\n                    filterOn('foryou');\r\n                  }}\r\n                >\r\n                  For&nbsp;You\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n            ) : (\r\n                <MDBNavItem style={{ display: 'none' }}></MDBNavItem>\r\n              )}\r\n            <MDBNavItem>\r\n              <MDBNavLink\r\n                className='inlinelink rborder'\r\n                to='/Artworks'\r\n                onClick={() => {\r\n                  filterOn('discover');\r\n                }}\r\n              >\r\n                Discover\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBDropdown className='ddnav'>\r\n              <MDBDropdownToggle caret color='transparent'>\r\n                Shop By\r\n              </MDBDropdownToggle>\r\n              <MDBDropdownMenu basic className='ddnavMenu'>\r\n                <MDBDropdownItem href='/ShopByPrice'>Price</MDBDropdownItem>\r\n                <MDBDropdownItem href='/ShopByCategory'>Category</MDBDropdownItem>\r\n              </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n            {/* <MDBNavItem>\r\n              <MDBNavLink className='inlinelink rborder' to='#!'>\r\n                History\r\n              </MDBNavLink>\r\n            </MDBNavItem> */}\r\n            <MDBNavItem>\r\n              {/* {userData !== null && userData !== undefined ? (\r\n                <MDBNavLink\r\n                className='inlinelink rborder btnYellow navbtn'\r\n                to='/Upload'\r\n              >\r\n                Post, Basically\r\n              </MDBNavLink>\r\n          )}*/}\r\n            {/* {displogin(false)} */}\r\n            \r\n                {userData !== null && userData !== undefined ? (<MDBNavLink\r\n          className='inlinelink rborder btnYellow navbtn'\r\n          to='/Upload'\r\n        >\r\n          Post, Basically\r\n        </MDBNavLink>)\r\n        : (<NavLoginPost />)}\r\n\r\n            </MDBNavItem> \r\n            \r\n              <MDBNavItem>\r\n                <MDBNavLink className='inlinelink rborder' to='#!'>\r\n                  <Search />\r\n                </MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBDropdown className='ddnav'>\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownToggle color='transparent'>\r\n                    Hello, {userData.accFname}\r\n                  </MDBDropdownToggle>\r\n                ) : (\r\n                    <NavLogin />\r\n                  )}\r\n                {userData !== null && userData !== undefined ? (\r\n                  <MDBDropdownMenu basic className='ddnavMenu'>\r\n                    <MDBDropdownItem>\r\n                      <Link\r\n                        to={`/CProfileEdit/${userData.accFname} ${userData.accLname}`}\r\n                      >\r\n                        {' '}\r\n                      Account\r\n                    </Link>\r\n                    </MDBDropdownItem>\r\n                    <MDBDropdownItem>\r\n                      <Link\r\n                        to={`/CProfile/${userData.accFname} ${userData.accLname}`}\r\n                      >\r\n                        {' '}\r\n                      Profile\r\n                    </Link>\r\n                    </MDBDropdownItem>\r\n                    <MDBDropdownItem\r\n                      onClick={() => logout()\r\n                      }\r\n                      style={{paddingLeft:'25px',color:'#000000'}}\r\n                    >\r\n                Log Out\r\n                    </MDBDropdownItem>\r\n                  </MDBDropdownMenu>\r\n                ) : (\r\n                    <MDBDropdownMenu basic className='ddnavMenu'>\r\n                      {/* <MDBDropdownItem >Account </MDBDropdownItem>\r\n                  <MDBDropdownItem > Profile </MDBDropdownItem>\r\n                  <MDBDropdownItem onClick={() => {\r\n                    sessionStorage.removeItem(\"userData\")\r\n                  }}>\r\n                    <Link to={`/`}> Log Out</Link>\r\n                  </MDBDropdownItem> */}\r\n                    </MDBDropdownMenu>\r\n                  )}\r\n              </MDBDropdown>\r\n              {userData !== null && userData !== undefined ? (\r\n                <div className='row lbtn'>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink className='inlinelink rborder' to='#!'>\r\n                      Your Lists\r\n                  </MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <CMess />\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <CNotif />\r\n                  </MDBNavItem>\r\n                  <MDBNavItem >\r\n              {/* <MDBBadge  style={{color:'#FAE933',float:'right'}} className=\"ml-5\">{listOfUserCart.length}\r\n              </MDBBadge>\r\n                    <MDBNavLink\r\n                    style={{float:'left'}}\r\n                      className='inlinelink rborder ibag'\r\n                      to='/Order'\r\n                    /> */}\r\n                    \r\n                     <OrderIcon/>\r\n                  \r\n                \r\n       \r\n                  </MDBNavItem>\r\n                </div>\r\n              ) : (\r\n                  <MDBNavItem style={{ display: 'none' }}>\r\n                    {/* <MDBNavLink className=\"inlinelink rborder ibag\" to=\"/Order\"></MDBNavLink> */}\r\n                  </MDBNavItem>\r\n                )}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Navbar));\r\n"]},"metadata":{},"sourceType":"module"}