{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\ArtistReg\\\\index.js\";\nimport React, { Component } from 'react';\nimport { MDBInput, MDBBtn } from 'mdbreact';\nimport Navbar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\nimport FBReg from '../../components/RegisterFB/';\nimport GmailReg from './../../components/RegisterGmail/';\nimport moment from 'moment';\nimport Resizer from 'react-image-file-resizer';\n\nclass ArtistReg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      confPassword: ''\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID = moment().format('MDYY') + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n\n      if (this.state.password === this.state.confPassword) {\n        let {\n          startingStore: {\n            addAccount,\n            account,\n            upload\n          }\n        } = this.props;\n        event.target.className += ' was-validated';\n        const formData = new FormData();\n        formData.append('artworkImg', this.state.selectedFile);\n        formData.append('type', 'artist');\n        upload(formData, true);\n        account.setProperty('acc_Status', 'Pending');\n        account.setProperty('accessType', 'Artist');\n        account.setProperty('accID', `${moment().format('MDYY')}-${Math.floor(100 + Math.random() * 900)}`);\n        account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\n        account.setProperty('password', this.state.password);\n        setTimeout(() => {\n          addAccount();\n        }, 1000);\n\n        const success = () => {\n          message.success('Successfully submitted registration', 1);\n        };\n\n        setTimeout(() => {\n          success();\n          this.props.history.push('/RegVerify');\n        }, 1000); // this.onSubmit();\n\n        setTimeout(() => {\n          this.props.history.push('/');\n        }, 4000);\n      } else {\n        const error = () => {\n          message.error('Please check your password', 2);\n        };\n\n        setTimeout(() => {\n          error();\n        }, 500);\n      }\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onFileChangeP = this.onFileChangeP.bind(this); // this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      modal1: false,\n      profileImg: '',\n      accID: '',\n      selectedFile: null\n    };\n  }\n\n  onFileChange(e) {\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n    this.setState({\n      accID: this.getUniqueID()\n    });\n  }\n\n  onFileChangeP(e) {\n    let {\n      startingStore: {\n        account\n      }\n    } = this.props;\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n    this.setState({\n      accID: this.getUniqueID()\n    });\n    Resizer.imageFileResizer(e.target.files[0], 100, 100, 'JPEG', 100, 0, uri => {\n      this.setState({\n        profileImg: uri\n      });\n      account.setProperty('profile_Img', uri);\n    }, 'URI');\n  }\n\n  render() {\n    let {\n      startingStore: {\n        account\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reg clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"Artist \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }\n    }), \" Registration\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \"Fill up the form and start sharing your artworks!\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"regform formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"First Name\",\n      type: \"text\",\n      onChange: accFname => account.setProperty('accFname', accFname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Last Name\",\n      type: \"text\",\n      onChange: accLname => account.setProperty('accLname', accLname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \"Please provide a Last Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Birth Year\",\n      type: \"number\",\n      onChange: birthYear => account.setProperty('birthYear', birthYear.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \"Please provide a Birth Year.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"textarea\",\n      label: \"Biography\",\n      rows: \"5\",\n      style: {\n        padding: '10px'\n      },\n      onChange: artistDescription => account.setProperty('artistDescription', artistDescription.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"Please provide a short Bio.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Contact Number\",\n      type: \"text\",\n      maxlength: \"11\",\n      onChange: accContact => account.setProperty('accContact', accContact.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, \"Please provide a Contact Number.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Institution / Company\",\n      type: \"text\",\n      onChange: accInstitution => account.setProperty('accInstitution', accInstitution.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Home Address\",\n      type: \"text\",\n      onChange: accAddress => account.setProperty('accAddress', accAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Email Address\",\n      type: \"email\",\n      onChange: accEmailAddress => account.setProperty('accEmailAddress', accEmailAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Password\",\n      type: \"password\" // onChange={(password) =>\n      //   account.setProperty('password', password.target.value)\n      // }\n      ,\n      onChange: this.handleChange('password'),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Confirm Password\",\n      type: \"password\" // onChange={(confirmPassword) =>\n      //   account.setProperty(\n      //     'confirmPassword',\n      //     confirmPassword.target.value\n      //   )\n      // }\n      ,\n      onChange: this.handleChange('confPassword'),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        marginBottom: '8px'\n      },\n      src: this.state.profileImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChangeP,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, \"Profile Picture\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, \"Acceptable documents includes image of your passport, national ID card (NIC/CNIC), driver's license, NBI Clearance (Philippines only), tax ID, voter ID, postal ID, or any other valid government-issued photo ID that meets these criteria.\")), /*#__PURE__*/React.createElement(FBReg, {\n      user: \"Artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(GmailReg, {\n      user: \"Artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      color: \"#FAE933\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, \"REGISTER\")))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default inject('startingStore')(observer(ArtistReg));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/ArtistReg/index.js"],"names":["React","Component","MDBInput","MDBBtn","Navbar","Footer","inject","observer","message","FBReg","GmailReg","moment","Resizer","ArtistReg","constructor","props","state","password","confPassword","handleChange","input","e","setState","target","value","getUniqueID","uniqueID","i","format","Math","random","toFixed","toggle","nr","modalNumber","submitHandler","event","preventDefault","startingStore","addAccount","account","upload","className","formData","FormData","append","selectedFile","setProperty","floor","setTimeout","success","history","push","error","changeHandler","name","onFileChange","bind","onFileChangeP","modal1","profileImg","accID","files","imageFileResizer","uri","render","accFname","accLname","birthYear","padding","artistDescription","accContact","accInstitution","accAddress","accEmailAddress","marginBottom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../../components/Navbar';\r\nimport Footer from '../../components/Footer';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\nimport FBReg from '../../components/RegisterFB/'\r\nimport GmailReg from './../../components/RegisterGmail/'\r\nimport moment from 'moment'\r\nimport Resizer from 'react-image-file-resizer';\r\n class ArtistReg extends Component {\r\n   \r\n  state ={\r\n   \r\n    password:'',\r\n    confPassword:'',\r\n   \r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onFileChangeP = this.onFileChangeP.bind(this);\r\n    // this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n \r\n    };\r\n  }\r\n\r\n\r\n  handleChange = input => e =>{\r\n    this.setState({[input]:e.target.value});\r\n\r\n}\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID = moment().format('MDYY') + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n  onFileChangeP(e) {\r\n    let {startingStore:{account}}=this.props;\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n    Resizer.imageFileResizer(\r\n      e.target.files[0],\r\n      100,\r\n      100,\r\n      'JPEG',\r\n      100,\r\n      0,\r\n      uri => {\r\n        this.setState({profileImg:uri})\r\n        account.setProperty('profile_Img',uri)\r\n      },\r\n      'URI'\r\n     \r\n  )\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.password === this.state.confPassword){\r\n    let {\r\n      startingStore: {addAccount,account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    formData.append('type', 'artist');\r\n    upload(formData, true);\r\n    account.setProperty('acc_Status', 'Pending');\r\n    account.setProperty('accessType', 'Artist');\r\n    account.setProperty('accID', `${moment().format('MDYY')}-${ Math.floor(100 + Math.random() * 900)}`);\r\n    account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n    account.setProperty('password',this.state.password)\r\n    setTimeout(() => {\r\n    addAccount();\r\n  }, 1000);\r\n    const success = () => {\r\n    \r\n      message.success('Successfully submitted registration', 1);\r\n \r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n      this.props.history.push('/RegVerify');\r\n    }, 1000);\r\n    \r\n    // this.onSubmit();\r\n\r\n    setTimeout(() => {\r\n      this.props.history.push('/');\r\n    }, 4000);\r\n\r\n  }else{\r\n    const error = () => {\r\n    \r\n      message.error('Please check your password', 2);\r\n \r\n    };\r\n    setTimeout(() => {\r\n      error();\r\n    \r\n    }, 500);\r\n  }\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account},\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                Artist <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n              <MDBInput\r\n                label='First Name'\r\n               \r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='number'\r\n                onChange={(birthYear) =>\r\n                  account.setProperty('birthYear', birthYear.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='5'\r\n                style={{padding:'10px'}}\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                maxlength='11'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Home Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n\r\n                   <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                // onChange={(password) =>\r\n                //   account.setProperty('password', password.target.value)\r\n                // }\r\n                onChange={this.handleChange('password')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                // onChange={(confirmPassword) =>\r\n                //   account.setProperty(\r\n                //     'confirmPassword',\r\n                //     confirmPassword.target.value\r\n                //   )\r\n                // }\r\n                onChange={this.handleChange('confPassword')}\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n            \r\n              <img style={{marginBottom:'8px'}} src={this.state.profileImg} ></img>\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChangeP} required/>\r\n            \r\n              </div>\r\n              <p className='req'>\r\n                  Profile Picture\r\n                </p>\r\n              \r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} required/>\r\n                <p className='req'>\r\n                  Acceptable documents includes image of your passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <FBReg user='Artist'/>\r\n              <GmailReg user='Artist'/>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                REGISTER\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(ArtistReg));\r\n"]},"metadata":{},"sourceType":"module"}