{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\UserReg.js\";\nimport React, { Component } from 'react';\nimport { MDBInput, MDBBtn } from 'mdbreact';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\nexport class UserReg extends Component {\n  componentDidMount() {\n    let {\n      startingStore: {\n        getArtworkInfo,\n        getAccounts,\n        getStyles,\n        getCategories\n      }\n    } = this.props;\n    getAccounts();\n    getArtworkInfo();\n    getStyles();\n    getCategories();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let {\n        startingStore: {\n          account,\n          upload\n        }\n      } = this.props;\n      event.target.className += ' was-validated';\n      const formData = new FormData();\n      formData.append('artworkImg', this.state.selectedFile);\n      upload(formData, true);\n      account.setProperty('accID', this.getUniqueID());\n\n      const success = () => {\n        message.loading('Submitting User Registration..', 1.2).then(() => message.success('Successfully added a User Account', 1)); // this.props.history.push(`/CProfile/${res}`);\n      };\n\n      setTimeout(() => {\n        success();\n      }, 1000);\n      this.props.history.push('/RegVerify'); // this.onSubmit();\n      // console.log(account, \"account\")\n      // addAccount();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onFileChange = this.onFileChange.bind(this);\n    this.state = {\n      modal1: false,\n      profileImg: '',\n      accID: '',\n      selectedFile: null\n    };\n  }\n\n  onFileChange(e) {\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n    this.setState({\n      accID: this.getUniqueID()\n    });\n  } // handleConfirmPassword = (event) => {\n  //   if (event.target.value !== this.state.password) {\n  //     message.error('error');\n  //     this.setState({confirmPassword: event.target.value});\n  //   }\n  // };\n\n\n  render() {\n    let {\n      startingStore: {\n        account,\n        listOfCategories,\n        listOfStyles\n      }\n    } = this.props;\n\n    function selectCategory(list, listitem) {\n      console.log(list, listitem, 'category');\n      let categorySelected = list.map(cat => cat.catType);\n      account.setProperty('accCategories', categorySelected);\n    }\n\n    function selectStyle(list, listitem) {\n      let styleSelected = list.map(cat => cat.styleType);\n      account.setProperty('accStyles', styleSelected);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reg clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"User \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }\n    }), \" Registration\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Fill up the form and start sharing your artworks!\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"regform formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Email Address\",\n      type: \"email\",\n      onChange: accEmailAddress => account.setProperty('accEmailAddress', accEmailAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Password\",\n      type: \"password\",\n      onChange: password => account.setProperty('password', password.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Confirm Password\",\n      type: \"password\",\n      onChange: confirmPassword => account.setProperty('confirmPassword', confirmPassword.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"prefix\",\n      placeholder: \"Prefix\",\n      onChange: accSuffix => account.setProperty('accSuffix', accSuffix.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \" Prefix \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \" MR. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \" MS. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mrs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \" MRS. \")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"First Name\",\n      type: \"text\",\n      onChange: accFname => account.setProperty('accFname', accFname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Last Name\",\n      type: \"text\",\n      onChange: accLname => account.setProperty('accLname', accLname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \"Please provide a Last Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Birth Year\",\n      type: \"text\",\n      onChange: accBday => account.setProperty('accBday', accBday.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Please provide a Birth Year.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Contact Number\",\n      type: \"text\",\n      onChange: accContact => account.setProperty('accContact', accContact.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \"Please provide a Contact Number.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Institution / Company\",\n      type: \"text\",\n      onChange: accInstitution => account.setProperty('accInstitution', accInstitution.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Full Address\",\n      type: \"text\",\n      onChange: accAddress => account.setProperty('accAddress', accAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      onChange: accessType => account.setProperty('accessType', accessType.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \" User Type \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, \" Standard \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Curator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \" Curator \")), /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfCategories,\n      placeholder: \"Art Themes you'd like to follow\",\n      showCheckbox: true,\n      displayValue: \"catType\",\n      onSelect: selectCategory // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfStyles,\n      placeholder: \"Art Style you'd like to follow\",\n      showCheckbox: true,\n      onSelect: selectStyle,\n      displayValue: \"styleType\" // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, \"Acceptable documents include passport, national ID card (NIC/CNIC), driver's license, NBI Clearance (Philippines only), tax ID, voter ID, postal ID, or any other valid government-issued photo ID that meets these criteria.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      color: \"#FAE933\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default inject('startingStore')(observer(UserReg));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/UserReg.js"],"names":["React","Component","MDBInput","MDBBtn","Navbar","Footer","Multiselect","inject","observer","message","UserReg","componentDidMount","startingStore","getArtworkInfo","getAccounts","getStyles","getCategories","props","constructor","toggle","nr","modalNumber","setState","state","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","account","upload","target","className","formData","FormData","append","selectedFile","setProperty","success","loading","then","setTimeout","history","push","changeHandler","name","value","onFileChange","bind","modal1","profileImg","accID","e","files","render","listOfCategories","listOfStyles","selectCategory","list","listitem","console","log","categorySelected","map","cat","catType","selectStyle","styleSelected","styleType","accEmailAddress","password","confirmPassword","accSuffix","accFname","accLname","accBday","accContact","accInstitution","accAddress","accessType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {MDBInput, MDBBtn} from 'mdbreact';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nexport class UserReg extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  // handleConfirmPassword = (event) => {\r\n  //   if (event.target.value !== this.state.password) {\r\n  //     message.error('error');\r\n  //     this.setState({confirmPassword: event.target.value});\r\n  //   }\r\n  // };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n      console.log(list, listitem, 'category');\r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='reg clearfix'>\r\n            <div className='left'>\r\n              <h2>\r\n                User <br /> Registration\r\n              </h2>\r\n              <p>Fill up the form and start sharing your artworks!</p>\r\n            </div>\r\n            <form onSubmit={this.submitHandler} className='regform formbtn'>\r\n              <MDBInput\r\n                label='Email Address'\r\n                type='email'\r\n                onChange={(accEmailAddress) =>\r\n                  account.setProperty(\r\n                    'accEmailAddress',\r\n                    accEmailAddress.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid email.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Password'\r\n                type='password'\r\n                onChange={(password) =>\r\n                  account.setProperty('password', password.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Confirm Password'\r\n                type='password'\r\n                onChange={(confirmPassword) =>\r\n                  account.setProperty(\r\n                    'confirmPassword',\r\n                    confirmPassword.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid password.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='prefix'\r\n                placeholder='Prefix'\r\n                onChange={(accSuffix) =>\r\n                  account.setProperty('accSuffix', accSuffix.target.value)\r\n                }\r\n              >\r\n                <option> Prefix </option>\r\n                <option value='mr'> MR. </option>\r\n                <option value='ms'> MS. </option>\r\n                <option value='mrs'> MRS. </option>\r\n              </select>\r\n              <MDBInput\r\n                label='First Name'\r\n                type='text'\r\n                onChange={(accFname) =>\r\n                  account.setProperty('accFname', accFname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a First Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Last Name'\r\n                type='text'\r\n                onChange={(accLname) =>\r\n                  account.setProperty('accLname', accLname.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Last Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Birth Year'\r\n                type='text'\r\n                onChange={(accBday) =>\r\n                  account.setProperty('accBday', accBday.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Birth Year.\r\n                </div>\r\n              </MDBInput>\r\n              {/* <MDBInput\r\n                type='textarea'\r\n                label='Biography'\r\n                rows='3'\r\n                onChange={(artistDescription) =>\r\n                  account.setProperty(\r\n                    'artistDescription',\r\n                    artistDescription.target.value\r\n                  )\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a short Bio.\r\n                </div>\r\n              </MDBInput> */}\r\n              <MDBInput\r\n                label='Contact Number'\r\n                type='text'\r\n                onChange={(accContact) =>\r\n                  account.setProperty('accContact', accContact.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Contact Number.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Institution / Company'\r\n                type='text'\r\n                onChange={(accInstitution) =>\r\n                  account.setProperty(\r\n                    'accInstitution',\r\n                    accInstitution.target.value\r\n                  )\r\n                }\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Institution / Company.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBInput\r\n                label='Full Address'\r\n                type='text'\r\n                onChange={(accAddress) =>\r\n                  account.setProperty('accAddress', accAddress.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a Address.\r\n                </div>\r\n              </MDBInput>\r\n              <select\r\n                className='usertype'\r\n                onChange={(accessType) =>\r\n                  account.setProperty('accessType', accessType.target.value)\r\n                }\r\n              >\r\n                <option> User Type </option>\r\n                <option value='Standard'> Standard </option>\r\n                <option value='Curator'> Curator </option>\r\n                {/* <option value='Admin'> Admin </option> */}\r\n              </select>\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfCategories}\r\n                placeholder=\"Art Themes you'd like to follow\"\r\n                showCheckbox={true}\r\n                displayValue='catType'\r\n                onSelect={selectCategory}\r\n                // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n              />\r\n              <Multiselect\r\n                className='multsel'\r\n                options={listOfStyles}\r\n                placeholder=\"Art Style you'd like to follow\"\r\n                showCheckbox={true}\r\n                onSelect={selectStyle}\r\n                displayValue='styleType'\r\n                // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n              />\r\n              <div className='uploadreq clearfix'>\r\n                <input type='file' name='file' onChange={this.onFileChange} />\r\n                <p className='req'>\r\n                  Acceptable documents include passport, national ID card\r\n                  (NIC/CNIC), driver's license, NBI Clearance (Philippines\r\n                  only), tax ID, voter ID, postal ID, or any other valid\r\n                  government-issued photo ID that meets these criteria.\r\n                </p>\r\n              </div>\r\n              <MDBBtn\r\n                className='submitreg clearfix'\r\n                type='submit'\r\n                color='#FAE933'\r\n              >\r\n                SUBMIT\r\n              </MDBBtn>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(UserReg));\r\n"]},"metadata":{},"sourceType":"module"}