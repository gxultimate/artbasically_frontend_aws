{"ast":null,"code":"import _ from 'lodash';\nimport { action, decorate, observable, toJS } from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\n\nclass StartingStore {\n  constructor(api) {\n    this.account = new Account();\n    this.artwork = new Artwork();\n    this.categories = new Categories();\n    this.style = new Style();\n    this.cart = new Cart();\n    this.order = new Order();\n    this.listOfOrders = [];\n    this.welcomeMessage = 'Welcome!';\n    this.listOfUsers = [];\n    this.listOfArtworks = [];\n    this.listOfCategories = [];\n    this.listOfStyles = [];\n    this.listOfOrder = [];\n    this.listOfArtists = [];\n    this.currentUser = new User();\n    this.listOfUserDocs = [];\n    this.listOfUserCart = [];\n    this.listofArtistArtwork = [];\n    this.listOfSingleArtwork = [];\n    this.listofArtistInfo = [];\n    this.listofArtistCategories = [];\n    this.listofUserCategoriesArtwork = [];\n    this.listofFilteredUserArtworkCategories = [];\n    this.listOfEmergingArtist = [];\n    this.listofUserOrder = [];\n    this.filter = false;\n    this.listofUserStyleArtwork = [];\n    this.followed = false;\n    this.listRelatedWorkByCategory = [];\n    this.img = undefined;\n    this.api = undefined;\n\n    this.setFollowed = () => {\n      this.followed = !this.followed;\n    };\n\n    this.filterArtwork = type => {\n      this.filter = type;\n    };\n\n    this.addAccount = () => {\n      console.log(this.account);\n      this.api.addaccount(this.account).then(resp => {\n        this.listOfUsers = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.getAccounts = () => {\n      this.api.getaccounts().then(resp => {\n        // console.log(resp.data.data)\n        this.listOfUsers = resp.data;\n      });\n    };\n\n    this.editAccount = () => {\n      this.api.editAccount(this.removeUndefinedProps(this.account)).then(resp => {\n        let user = resp.data.filter(us => us._id === this.account._id);\n        console.log(user[0]);\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n    };\n\n    this.loginAccount = () => {\n      return new Promise((resolve, reject) => {\n        this.api.loginaccount(this.account).then(resp => {\n          sessionStorage.setItem('userData', JSON.stringify(resp.data));\n\n          if (resp.data.accessType === 'Admin') {\n            resolve(true);\n          } else if (resp.data.accessType === 'Standard' || resp.data.accessType === 'Curator') {\n            resolve(2);\n          } else if (resp.data.accessType === 'Printing') {\n            resolve(3);\n          } else if (resp.data.accessType === 'Artist') {\n            resolve(`${resp.data.accFname} ${resp.data.accLname}`);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addArtwork = () => {\n      console.log(this.artwork);\n      this.api.addartwork(this.artwork).then(resp => {\n        this.listOfArtworks = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.upload = (img, documents) => {\n      console.log(img, documents);\n      return new Promise((resolve, reject) => {\n        return this.api.upload(img).then(resp => {\n          console.log(resp.data, 'mnbv');\n\n          if (documents === true) {\n            let arr = [];\n            this.account.setProperty('acc_Documents', resp.data.url);\n          } else {\n            this.artwork.setProperty('artworkImg', resp.data.url);\n            this.account.setProperty('accImg', resp.data.url);\n          } // console.log(resp.data, \"data\")\n\n\n          if (this.artwork.artName === '') {\n            this.addAccount();\n          } else {\n            this.addArtwork();\n          }\n        });\n      });\n    };\n\n    this.getArtwork = () => {\n      this.api.getartwork().then(resp => {\n        this.img = this.arrayBufferToBase64(resp.data[0].img.data.data); // console.log(,\"aws\")x\n      });\n    };\n\n    this.getEmergingArtistArtwork = () => {\n      this.api.getEmergingArtist().then(resp => {\n        this.listOfEmergingArtist = resp.data;\n      });\n    };\n\n    this.getArtistFollowArtwork = email => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n\n      if (userData !== null) {\n        this.api.getArtistFollowArtwork(email ? email : userData.accEmailAddress).then(resp => {\n          this.listOfArtistFollowed = resp.data;\n        });\n      }\n    };\n\n    this.getArtworkInfo = () => {\n      return new Promise((resolve, reject) => {\n        this.api.getartworkInfo().then(resp => {\n          let userData = JSON.parse(sessionStorage.getItem('userData'));\n          let artCategories = [];\n          let categories = [];\n          this.listOfArtworks = resp.data.map(art => {\n            artCategories.push(art.artTheme[0]);\n            return art;\n          });\n          let cat = artCategories.filter(art => {\n            if (art === '' || categories.includes(art)) {} else {\n              categories.push(art);\n            }\n          });\n\n          if (userData === null || userData === false) {\n            let listofUserCategoriesArtwork = resp.data.filter(item => item.artworkStatus !== 'Pending').map(art => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n          } else {\n            let listofUserCategoriesArtwork = resp.data.filter(item => item.artworkStatus !== 'Pending').filter(art => {\n              userData['accCategories'].map(cat => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n                  return art;\n                }\n              });\n            }); // console.log(listofUserCategoriesArtwork, 'dsdsd');\n\n            this.listofFilteredUserArtworkCategories = _.uniqBy(this.listofFilteredUserArtworkCategories, a => a.artName);\n          }\n\n          if (resp.data !== false) {\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getSingleArtworkInfo = id => {\n      return new Promise((resolve, reject) => {\n        this.api.getsingleartworkinfo(id).then(resp => {\n          this.listOfSingleArtwork = resp.data;\n\n          if (resp.data !== false) {\n            let listOfSingleArtwork = resp.data;\n            let styles = [];\n            let themes = [];\n\n            if (resp.data.length > 1) {\n              resp.data.map(item => {\n                item.artStyle.map(style => styles.push(style));\n                item.artTheme.map(theme => themes.push(theme));\n              });\n\n              let categories = _.union(themes.concat(styles));\n\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            } else {\n              if (resp.data.artStyle !== undefined) {\n                // resp.data.artStyle.map((style) => styles.push(style));\n                // resp.data.artTheme.map((theme) => themes.push(theme));\n                let categories = _.union(listOfSingleArtwork.artTheme.concat(listOfSingleArtwork.artStyle));\n\n                this.getRelatedWorkByCategory(JSON.stringify(categories));\n              }\n            }\n\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.followArtist = artist => {\n      return new Promise((resolve, reject) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.api.followAccount(userData, artist).then(resp => {\n          if (resp.data !== false) {\n            this.listofArtistInfo = resp.data[0];\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addOrder = () => {\n      console.log(this.order);\n      this.api.addOrder(this.order).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.editArtwork = () => {\n      console.log(this.artwork, 'artworks!');\n      this.api.editArtwork(this.artwork).then(resp => {\n        this.listOfArtworks = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.addCategory = () => {\n      this.api.addCategory(this.categories).then(resp => {\n        this.listOfCategories = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.editCategory = () => {\n      this.api.editCategory(this.categories).then(resp => {\n        this.listOfCategories = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.getCategories = () => {\n      this.api.getCategories().then(resp => {\n        this.listOfCategories = resp.data; // console.log(,\"aws\")x\n      });\n    };\n\n    this.getOrderUser = () => {\n      return new Promise((resolve, reject) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.api.getOrder(userData._id).then(resp => {\n          this.listofUserOrder = resp.data;\n          console.log(resp.data, 'resp');\n\n          if (resp.data !== false) {\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addStyle = () => {\n      this.api.addStyle(this.style).then(resp => {\n        this.listOfStyles = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.editStyle = () => {\n      this.api.editStyle(this.style).then(resp => {\n        this.listOfStyles = resp.data;\n        console.log(resp.data);\n      });\n    };\n\n    this.getStyles = () => {\n      this.api.getStyles().then(resp => {\n        this.listOfStyles = resp.data; // console.log(,\"aws\")x\n      });\n    };\n\n    this.getArtists = artist => {\n      return new Promise((resolve, reject) => {\n        this.api.getArtists().then(resp => {\n          this.listOfArtists = resp.data;\n\n          if (resp.data !== false && artist !== '') {\n            resolve(resp.data.filter(art => `${art.accFname} ${art.accLname}` === artist));\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getSingleArtists = id => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      return new Promise((resolve, reject) => {\n        this.api.getSingleArtists(id).then(resp => {\n          if (resp.data !== false && resp.data.length !== 0) {\n            this.listofArtistInfo = resp.data[0];\n\n            if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n              this.followed = true;\n            }\n\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getArtistArtwork = id => {\n      return new Promise((resolve, reject) => {\n        this.api.getArtistArtwork(id).then(resp => {\n          let listOfCategories = [];\n\n          if (resp.data !== false && id !== '') {\n            this.listofArtistArtwork = resp.data;\n            listOfCategories = resp.data.map(art => {\n              if (art.artTheme[0] !== '') {\n                return art.artTheme[0];\n              }\n            });\n            this.listofArtistCategories = listOfCategories.filter(cat => {\n              return cat !== undefined;\n            });\n            console.log(this.listofArtistCategories, 'aws');\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.getRelatedWorkByCategory = cat => {\n      console.log(cat, 'zxcvb');\n      return new Promise((resolve, reject) => {\n        this.api.getRelatedWorkByCategory(cat).then(resp => {\n          if (resp.data !== false && cat !== '') {\n            this.listRelatedWorkByCategory = resp.data;\n            resolve(resp.data);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    };\n\n    this.addToCart = () => {\n      this.api.addToCart(this.cart).then(resp => {\n        this.listOfUserCart = resp.data;\n      });\n    };\n\n    this.getToCart = () => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      let dar = [];\n      this.api.getToCart(userData).then(resp => {\n        if (resp.data !== false) {\n          this.listOfUserCart = resp.data.filter(item => item.artworkQuantity !== '');\n        }\n      });\n    };\n\n    this.editToCart = data => {\n      console.log(data, 'data');\n      let currData = toJS(data);\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      console.log(currData._id, 'qwer');\n      this.api.editToCart(currData._id).then(resp => {\n        if (resp.data !== false) {\n          this.getToCart(userData);\n        }\n      });\n    };\n\n    this.getOrders = () => {\n      // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n      // console.log()\n      this.api.getOrders().then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrders = resp.data;\n        }\n      });\n    };\n\n    this.getOrder = () => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      console.log(userData);\n      this.api.getOrders(userData).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.editOrder = (id, status, account) => {\n      let data = {\n        id: id,\n        status: status,\n        account: account\n      };\n      this.api.editOrder(data).then(resp => {\n        if (resp.data !== false) {\n          this.listOfOrder = resp.data;\n        }\n      });\n    };\n\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n\n    return obj;\n  }\n\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable\n});\nexport default StartingStore;","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/stores/StartingStore.js"],"names":["_","action","decorate","observable","toJS","Account","Artwork","Cart","Categories","Order","Style","User","StartingStore","constructor","api","account","artwork","categories","style","cart","order","listOfOrders","welcomeMessage","listOfUsers","listOfArtworks","listOfCategories","listOfStyles","listOfOrder","listOfArtists","currentUser","listOfUserDocs","listOfUserCart","listofArtistArtwork","listOfSingleArtwork","listofArtistInfo","listofArtistCategories","listofUserCategoriesArtwork","listofFilteredUserArtworkCategories","listOfEmergingArtist","listofUserOrder","filter","listofUserStyleArtwork","followed","listRelatedWorkByCategory","img","undefined","setFollowed","filterArtwork","type","addAccount","console","log","addaccount","then","resp","data","getAccounts","getaccounts","editAccount","removeUndefinedProps","user","us","_id","sessionStorage","setItem","JSON","stringify","loginAccount","Promise","resolve","reject","loginaccount","accessType","accFname","accLname","addArtwork","addartwork","upload","documents","arr","setProperty","url","artName","getArtwork","getartwork","arrayBufferToBase64","getEmergingArtistArtwork","getEmergingArtist","getArtistFollowArtwork","email","userData","parse","getItem","accEmailAddress","listOfArtistFollowed","getArtworkInfo","getartworkInfo","artCategories","map","art","push","artTheme","cat","includes","item","artworkStatus","uniqBy","a","getSingleArtworkInfo","id","getsingleartworkinfo","styles","themes","length","artStyle","theme","union","concat","getRelatedWorkByCategory","followArtist","artist","followAccount","addOrder","editArtwork","addCategory","editCategory","getCategories","getOrderUser","getOrder","addStyle","editStyle","getStyles","getArtists","getSingleArtists","accFollowers","getArtistArtwork","addToCart","getToCart","dar","artworkQuantity","editToCart","currData","getOrders","editOrder","status","obj","prop","hasOwnProperty","listName","changeMessage","resetMessage","pushToArray","getName"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {action, decorate, observable, toJS} from 'mobx';\nimport Account from '../models/Account';\nimport Artwork from '../models/Artwork';\nimport Cart from '../models/Cart';\nimport Categories from '../models/Categories';\nimport Order from '../models/Order';\nimport Style from '../models/Style';\nimport User from '../models/User';\nclass StartingStore {\n  account = new Account();\n  artwork = new Artwork();\n  categories = new Categories();\n  style = new Style();\n  cart = new Cart();\n  order = new Order();\n  listOfOrders = [];\n  welcomeMessage = 'Welcome!';\n  listOfUsers = [];\n  listOfArtworks = [];\n  listOfCategories = [];\n  listOfStyles = [];\n  listOfOrder = [];\n  listOfArtists = [];\n  currentUser = new User();\n  listOfUserDocs = [];\n  listOfUserCart = [];\n  listofArtistArtwork = [];\n  listOfSingleArtwork = [];\n  listofArtistInfo = [];\n  listofArtistCategories = [];\n  listofUserCategoriesArtwork = [];\n  listofFilteredUserArtworkCategories = [];\n  listOfEmergingArtist = [];\n  listofUserOrder = [];\n  filter = false;\n  listofUserStyleArtwork = [];\n  followed = false;\n  listRelatedWorkByCategory = [];\n\n  img = undefined;\n  api = undefined;\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  removeUndefinedProps(obj) {\n    for (var prop in obj) {\n      if (obj.hasOwnProperty(prop) && obj[prop] === '') {\n        delete obj[prop];\n      }\n    }\n    return obj;\n  }\n  setFollowed = () => {\n    this.followed = !this.followed;\n  };\n  filterArtwork = (type) => {\n    this.filter = type;\n  };\n  addAccount = () => {\n    console.log(this.account);\n    this.api.addaccount(this.account).then((resp) => {\n      this.listOfUsers = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  getAccounts = () => {\n    this.api.getaccounts().then((resp) => {\n      // console.log(resp.data.data)\n      this.listOfUsers = resp.data;\n    });\n  };\n\n  editAccount = () => {\n    this.api\n      .editAccount(this.removeUndefinedProps(this.account))\n      .then((resp) => {\n        let user = resp.data.filter((us) => us._id === this.account._id);\n        console.log(user[0]);\n        sessionStorage.setItem('userData', JSON.stringify(user[0]));\n        this.listOfUsers = resp.data;\n      });\n  };\n\n  loginAccount = () => {\n    return new Promise((resolve, reject) => {\n      this.api.loginaccount(this.account).then((resp) => {\n        sessionStorage.setItem('userData', JSON.stringify(resp.data));\n        if (resp.data.accessType === 'Admin') {\n          resolve(true);\n        } else if (\n          resp.data.accessType === 'Standard' ||\n          resp.data.accessType === 'Curator'\n        ) {\n          resolve(2);\n        } else if (resp.data.accessType === 'Printing') {\n          resolve(3);\n        } else if (resp.data.accessType === 'Artist') {\n          resolve(`${resp.data.accFname} ${resp.data.accLname}`);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addArtwork = () => {\n    console.log(this.artwork);\n    this.api.addartwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  upload = (img, documents) => {\n    console.log(img, documents);\n    return new Promise((resolve, reject) => {\n      return this.api.upload(img).then((resp) => {\n        console.log(resp.data, 'mnbv');\n        if (documents === true) {\n          let arr = [];\n          this.account.setProperty('acc_Documents', resp.data.url);\n        } else {\n          this.artwork.setProperty('artworkImg', resp.data.url);\n          this.account.setProperty('accImg', resp.data.url);\n        }\n        // console.log(resp.data, \"data\")\n        if (this.artwork.artName === '') {\n          this.addAccount();\n        } else {\n          this.addArtwork();\n        }\n      });\n    });\n  };\n\n  getArtwork = () => {\n    this.api.getartwork().then((resp) => {\n      this.img = this.arrayBufferToBase64(resp.data[0].img.data.data);\n      // console.log(,\"aws\")x\n    });\n  };\n\n  getEmergingArtistArtwork = () => {\n    this.api.getEmergingArtist().then((resp) => {\n      this.listOfEmergingArtist = resp.data;\n    });\n  };\n\n  getArtistFollowArtwork = (email) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    if (userData !== null) {\n      this.api\n        .getArtistFollowArtwork(email ? email : userData.accEmailAddress)\n        .then((resp) => {\n          this.listOfArtistFollowed = resp.data;\n        });\n    }\n  };\n\n  getArtworkInfo = () => {\n    return new Promise((resolve, reject) => {\n      this.api.getartworkInfo().then((resp) => {\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        let artCategories = [];\n        let categories = [];\n\n        this.listOfArtworks = resp.data.map((art) => {\n          artCategories.push(art.artTheme[0]);\n          return art;\n        });\n\n        let cat = artCategories.filter((art) => {\n          if (art === '' || categories.includes(art)) {\n          } else {\n            categories.push(art);\n          }\n        });\n\n        if (userData === null || userData === false) {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .map((art) => {\n              this.listofFilteredUserArtworkCategories.push(art);\n              return art;\n            });\n        } else {\n          let listofUserCategoriesArtwork = resp.data\n            .filter((item) => item.artworkStatus !== 'Pending')\n            .filter((art) => {\n              userData['accCategories'].map((cat) => {\n                if (art.artTheme.includes(cat)) {\n                  this.listofFilteredUserArtworkCategories.push(art);\n\n                  return art;\n                }\n              });\n            });\n          // console.log(listofUserCategoriesArtwork, 'dsdsd');\n          this.listofFilteredUserArtworkCategories = _.uniqBy(\n            this.listofFilteredUserArtworkCategories,\n            (a) => a.artName\n          );\n        }\n\n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtworkInfo = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getsingleartworkinfo(id).then((resp) => {\n        this.listOfSingleArtwork = resp.data;\n\n        if (resp.data !== false) {\n          let listOfSingleArtwork = resp.data;\n          let styles = [];\n          let themes = [];\n          if (resp.data.length > 1) {\n            resp.data.map((item) => {\n              item.artStyle.map((style) => styles.push(style));\n              item.artTheme.map((theme) => themes.push(theme));\n            });\n            let categories = _.union(themes.concat(styles));\n            this.getRelatedWorkByCategory(JSON.stringify(categories));\n          } else {\n            if (resp.data.artStyle !== undefined) {\n              // resp.data.artStyle.map((style) => styles.push(style));\n              // resp.data.artTheme.map((theme) => themes.push(theme));\n\n              let categories = _.union(\n                listOfSingleArtwork.artTheme.concat(\n                  listOfSingleArtwork.artStyle\n                )\n              );\n              this.getRelatedWorkByCategory(JSON.stringify(categories));\n            }\n          }\n\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  followArtist = (artist) => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.followAccount(userData, artist).then((resp) => {\n        if (resp.data !== false) {\n          this.listofArtistInfo = resp.data[0];\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  addOrder = () => {\n    console.log(this.order);\n    this.api.addOrder(this.order).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editArtwork = () => {\n    console.log(this.artwork, 'artworks!');\n    this.api.editArtwork(this.artwork).then((resp) => {\n      this.listOfArtworks = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  //Category\n\n  addCategory = () => {\n    this.api.addCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  editCategory = () => {\n    this.api.editCategory(this.categories).then((resp) => {\n      this.listOfCategories = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  getCategories = () => {\n    this.api.getCategories().then((resp) => {\n      this.listOfCategories = resp.data;\n      // console.log(,\"aws\")x\n    });\n  };\n  getOrderUser = () => {\n    return new Promise((resolve, reject) => {\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\n      this.api.getOrder(userData._id).then((resp) => {\n        this.listofUserOrder = resp.data;\n        console.log(resp.data, 'resp');\n        if (resp.data !== false) {\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Style\n\n  addStyle = () => {\n    this.api.addStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  editStyle = () => {\n    this.api.editStyle(this.style).then((resp) => {\n      this.listOfStyles = resp.data;\n      console.log(resp.data);\n    });\n  };\n\n  getStyles = () => {\n    this.api.getStyles().then((resp) => {\n      this.listOfStyles = resp.data;\n      // console.log(,\"aws\")x\n    });\n  };\n\n  //Artist\n  getArtists = (artist) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtists().then((resp) => {\n        this.listOfArtists = resp.data;\n\n        if (resp.data !== false && artist !== '') {\n          resolve(\n            resp.data.filter(\n              (art) => `${art.accFname} ${art.accLname}` === artist\n            )\n          );\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getSingleArtists = (id) => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    return new Promise((resolve, reject) => {\n      this.api.getSingleArtists(id).then((resp) => {\n        if (resp.data !== false && resp.data.length !== 0) {\n          this.listofArtistInfo = resp.data[0];\n          if (resp.data[0].accFollowers.includes(userData.accEmailAddress)) {\n            this.followed = true;\n          }\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getArtistArtwork = (id) => {\n    return new Promise((resolve, reject) => {\n      this.api.getArtistArtwork(id).then((resp) => {\n        let listOfCategories = [];\n        if (resp.data !== false && id !== '') {\n          this.listofArtistArtwork = resp.data;\n\n          listOfCategories = resp.data.map((art) => {\n            if (art.artTheme[0] !== '') {\n              return art.artTheme[0];\n            }\n          });\n          this.listofArtistCategories = listOfCategories.filter((cat) => {\n            return cat !== undefined;\n          });\n          console.log(this.listofArtistCategories, 'aws');\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  getRelatedWorkByCategory = (cat) => {\n    console.log(cat, 'zxcvb');\n    return new Promise((resolve, reject) => {\n      this.api.getRelatedWorkByCategory(cat).then((resp) => {\n        if (resp.data !== false && cat !== '') {\n          this.listRelatedWorkByCategory = resp.data;\n          resolve(resp.data);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  };\n\n  //Cart\n\n  addToCart = () => {\n    this.api.addToCart(this.cart).then((resp) => {\n      this.listOfUserCart = resp.data;\n    });\n  };\n\n  getToCart = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    let dar = [];\n    this.api.getToCart(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfUserCart = resp.data.filter(\n          (item) => item.artworkQuantity !== ''\n        );\n      }\n    });\n  };\n\n  editToCart = (data) => {\n    console.log(data, 'data');\n    let currData = toJS(data);\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    console.log(currData._id, 'qwer');\n    this.api.editToCart(currData._id).then((resp) => {\n      if (resp.data !== false) {\n        this.getToCart(userData);\n      }\n    });\n  };\n\n  // ORDERS\n  getOrders = () => {\n    // let userData = JSON.parse(sessionStorage.getItem(\"userData\"))\n    // console.log()\n    this.api.getOrders().then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrders = resp.data;\n      }\n    });\n  };\n  getOrder = () => {\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\n    console.log(userData);\n    this.api.getOrders(userData).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n\n  editOrder = (id, status, account) => {\n    let data = {id: id, status: status, account: account};\n    this.api.editOrder(data).then((resp) => {\n      if (resp.data !== false) {\n        this.listOfOrder = resp.data;\n      }\n    });\n  };\n}\n\ndecorate(StartingStore, {\n  welcomeMessage: observable,\n  listName: observable,\n  currentUser: observable,\n  changeMessage: action,\n  resetMessage: action,\n  pushToArray: action,\n  getName: action,\n  addAccount: action,\n  getAccounts: action,\n  editAccount: action,\n  account: observable,\n  listOfUsers: observable,\n  addArtwork: action,\n  getArtwork: action,\n  editArtwork: action,\n  listOfArtworks: observable,\n  artwork: observable,\n  img: observable,\n  getArtworkInfo: action,\n  addCategory: action,\n  getCategories: action,\n  editCategory: action,\n  listOfCategories: observable,\n  categories: observable,\n  getArtists: action,\n  listOfArtists: observable,\n  addToCart: action,\n  getToCart: action,\n  listOfUserCart: observable,\n  cart: observable,\n  editToCart: observable,\n  addStyle: action,\n  getStyles: action,\n  editStyle: action,\n  listOfStyles: observable,\n  style: observable,\n  order: observable,\n  listofArtistArtwork: observable,\n  listOfOrders: observable,\n  listofArtistInfo: observable,\n  getSingleArtworkInfo: action,\n  getSingleArtists: action,\n  getArtistArtwork: action,\n  upload: action,\n  listOfSingleArtwork: observable,\n  listofArtistCategories: observable,\n  listofUserCategoriesArtwork: observable,\n  listofUserStyleArtwork: observable,\n  addOrder: action,\n  listOfOrder: observable,\n  getOrderUser: action,\n  editOrder: action,\n  getEmergingArtistArtwork: action,\n  listOfEmergingArtist: observable,\n  followArtist: action,\n  getOrder: action,\n  listofUserOrder: observable,\n  listofFilteredUserArtworkCategories: observable,\n  getArtistFollowArtwork: action,\n  listOfArtistFollowed: observable,\n  getRelatedWorkByCategory: action,\n  listRelatedWorkByCategory: observable,\n  filterArtwork: action,\n  type: observable,\n  followed: observable,\n  setFollowed: observable,\n});\n\nexport default StartingStore;\n"]},"metadata":{},"sourceType":"module"}