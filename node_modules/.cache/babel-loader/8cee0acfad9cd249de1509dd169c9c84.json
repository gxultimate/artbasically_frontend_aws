{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\admin\\\\sections\\\\CompletedOrder.js\";\nimport { MDBDataTable, MDBNavLink, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\nimport DownloadImage from '../sections/DownloadImage';\n\nclass CompletedOrder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      items: []\n    };\n  }\n\n  render() {\n    let {\n      startingStore: {\n        listOfOrders,\n        listOfUsers\n      }\n    } = this.props;\n\n    function createData(items, id, orderBy, date, paymentStat, action) {\n      return {\n        items,\n        id,\n        orderBy,\n        date,\n        paymentStat,\n        action\n      };\n    }\n\n    let Corder = listOfOrders.filter(Delivery => {\n      if (Delivery.orderStatus === 'Completed') {\n        return Delivery;\n      }\n    }).map(orders => {\n      return createData(orders.orderItems, orders.orderID, listOfUsers.filter(usr => usr._id === orders.accID).map(user => user.accFname), orders.orderDate, orders.paymentStatus);\n    });\n\n    let toggle = itm => {\n      this.setState({\n        modal: !this.state.modal,\n        items: itm\n      });\n    };\n\n    let close = () => {\n      this.setState({\n        modal: false\n      });\n    };\n\n    const CompletedOrderTable = () => {\n      const data = {\n        columns: [{\n          label: 'ID',\n          field: 'id',\n          sort: 'asc',\n          width: 'auto'\n        }, {\n          label: 'Order By',\n          field: 'orderBy',\n          sort: 'asc',\n          width: 'auto'\n        }, {\n          label: 'Date',\n          field: 'date',\n          sort: 'asc',\n          width: 'auto'\n        }, {\n          label: 'Payment Stat',\n          field: 'paymentStat',\n          sort: 'asc',\n          width: 'auto'\n        }, {\n          label: 'Action',\n          field: 'action',\n          sort: 'asc',\n          width: 'auto'\n        }],\n        rows: [...Corder.map((row, i) => ({\n          id: `${row.id}`,\n          orderBy: `${row.orderBy}`,\n          date: `${row.date}`,\n          paymentStat: `${row.paymentStat}`,\n          action: /*#__PURE__*/React.createElement(MDBBtn, {\n            onClick: () => toggle(row.items),\n            color: \"yellow\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }\n          }, \" Items\")\n        }))]\n      };\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(MDBDataTable, {\n        striped: true,\n        bordered: true,\n        small: true,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(MDBModal, {\n        size: \"lg\",\n        isOpen: this.state.modal,\n        toggle: () => close(),\n        centered: true,\n        className: \"singleModal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n        toggle: () => {\n          close();\n        },\n        className: \"mhead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(MDBModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"imagecom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, \"Order Items\"), /*#__PURE__*/React.createElement(MDBTable, {\n        hover: true,\n        className: \"tablescroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MDBTableHead, {\n        color: \"blue-grey lighten-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, \"Artwork\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, \"Artist Name \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, \"Artwork Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, \"Artwork Size\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"Payment Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, \"Artwork Material\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, \"Framing Options\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, \"Price Per Piece\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, this.state.items.map(data => /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: '100% ',\n          height: 'auto'\n        },\n        src: data.artworkImg,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, data.artistName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, data.artworkName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, data.artworkSize), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, data.artworkMaterial), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, data.artworkFramingOptions), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, data.artworkQuantity), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DownloadImage, {\n        data: data.artworkImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }\n      }))))))))));\n    };\n\n    return /*#__PURE__*/React.createElement(CompletedOrderTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 3\n      }\n    });\n  }\n\n}\n\nexport default inject('startingStore')(observer(CompletedOrder));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/admin/sections/CompletedOrder.js"],"names":["MDBDataTable","MDBNavLink","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBTable","MDBTableBody","MDBTableHead","inject","observer","React","Component","Fragment","DownloadImage","CompletedOrder","state","modal","items","render","startingStore","listOfOrders","listOfUsers","props","createData","id","orderBy","date","paymentStat","action","Corder","filter","Delivery","orderStatus","map","orders","orderItems","orderID","usr","_id","accID","user","accFname","orderDate","paymentStatus","toggle","itm","setState","close","CompletedOrderTable","data","columns","label","field","sort","width","rows","row","i","height","artworkImg","artistName","artworkName","artworkSize","artworkPaymentAmount","toString","replace","artworkMaterial","artworkFramingOptions","artworkPrice","artworkQuantity"],"mappings":"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","sourcesContent":[" import { MDBDataTable,MDBNavLink,MDBBtn ,  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport DownloadImage from '../sections/DownloadImage';\r\n class CompletedOrder extends Component {\r\n  state = {\r\n    modal: false,\r\n    items:[],\r\n   \r\n  };\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    let { startingStore: {listOfOrders,listOfUsers}} = this.props;\r\n\r\n    \r\n    function createData(items,id, orderBy, date, paymentStat,action) {\r\n      return { items,id, orderBy, date, paymentStat,action };\r\n    }\r\n\r\nlet Corder = listOfOrders.filter((Delivery) => {\r\n            if (Delivery.orderStatus === 'Completed') {\r\n              return Delivery;\r\n            }\r\n          }).map(orders =>{\r\n            return(createData(\r\n           orders.orderItems,orders.orderID,listOfUsers.filter(usr=> usr._id === orders.accID).map(user =>( user.accFname\r\n              )),orders.orderDate,orders.paymentStatus\r\n            ))\r\n          })\r\n\r\n\r\n        let  toggle = (itm) => {\r\n        \r\n            this.setState({\r\n              modal: !this.state.modal,\r\n              items:itm\r\n            });\r\n          \r\n          };\r\n          let close =()=>{\r\n            this.setState({\r\n              modal: false,\r\n            \r\n            });\r\n          }\r\n        \r\n\r\nconst CompletedOrderTable = () => {\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'ID',\r\n        field: 'id',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Order By',\r\n        field: 'orderBy',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n\r\n      {\r\n        label: 'Payment Stat',\r\n        field: 'paymentStat',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n      {\r\n        label: 'Action',\r\n        field: 'action',\r\n        sort: 'asc',\r\n        width: 'auto'\r\n      },\r\n    \r\n    ],\r\n    rows: \r\n   \r\n    [...Corder.map((row,i) => (\r\n      \r\n     {\r\n        id: `${row.id}`,\r\n        orderBy: `${row.orderBy}`,\r\n        date: `${row.date}`,\r\n      \r\n        paymentStat: `${row.paymentStat}`,\r\n        action: <MDBBtn  onClick={()=>toggle(row.items)} color='yellow'> Items</MDBBtn>,\r\n      \r\n\r\n     }\r\n     \r\n     ))\r\n    ]\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      small\r\n      data={data}\r\n    />\r\n\r\n    <MDBModal\r\n    size='lg'\r\n    isOpen={this.state.modal}\r\n    toggle={()=>close()}\r\n    centered\r\n    className='singleModal'\r\n  >\r\n    <MDBModalHeader\r\n      toggle={()=>{close()}}\r\n      className='mhead'\r\n    ></MDBModalHeader>\r\n    <MDBModalBody>\r\n      <div className='imagecom'>\r\n        <h3>Order Items</h3>\r\n        <MDBTable hover className='tablescroll'>\r\n          <MDBTableHead color='blue-grey lighten-4'>\r\n            <tr>\r\n              <th>Artwork</th>\r\n              <th>Artist Name </th>\r\n              <th>Artwork Name</th>\r\n              <th>Artwork Size</th>\r\n              <th>Payment Amount</th>\r\n              <th>Artwork Material</th>\r\n              <th>Framing Options</th>\r\n              <th>Price Per Piece</th>\r\n              <th>Quantity</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n\r\n          <MDBTableBody>\r\n\r\n            {this.state.items.map((data) => (\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    style={{width: '100% ', height: 'auto'}}\r\n                    src={data.artworkImg}\r\n                    alt=''\r\n                  />\r\n                </td>\r\n                <td>{data.artistName}</td>\r\n                <td>{data.artworkName}</td>\r\n                <td>{data.artworkSize}</td>\r\n                <td>{data.artworkPaymentAmount.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkMaterial}</td>\r\n                <td>{data.artworkFramingOptions}</td>\r\n                <td>{data.artworkPrice.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                <td>{data.artworkQuantity}</td>\r\n                <td className='actions'>\r\n                  <DownloadImage data={data.artworkImg} />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      </div>\r\n    </MDBModalBody>\r\n  </MDBModal>\r\n  </Fragment>\r\n  );\r\n}\r\n\r\nreturn (\r\n  <CompletedOrderTable/>\r\n)\r\n}\r\n}\r\n\r\n\r\n\r\nexport default inject('startingStore')(observer(CompletedOrder))"]},"metadata":{},"sourceType":"module"}