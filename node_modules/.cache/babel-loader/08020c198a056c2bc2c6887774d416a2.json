{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\admin\\\\sections\\\\EditArt.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBModal, MDBModalBody, MDBModalHeader, MDBIcon, MDBBtn } from 'mdbreact';\nimport { message } from 'antd';\nimport { inject, observer } from 'mobx-react';\n\nclass EditArt extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal1: false\n    };\n\n    this.toggle = nr => () => {\n      let {\n        startingStore: {\n          artwork\n        }\n      } = this.props;\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n      artwork.setProperty('artworkID', '');\n      artwork.setProperty('artName', '');\n      artwork.setProperty('_id', '');\n      artwork.setProperty('artTheme', '');\n      artwork.setProperty('artStyle', '');\n      artwork.setProperty('artPrice', '');\n      artwork.setProperty('artDimension', '');\n      artwork.setProperty('artRating', '');\n      artwork.setProperty('artistName', '');\n      artwork.setProperty('artworkDateCreated', '');\n      artwork.setProperty('artType', '');\n      artwork.setProperty('artworkImg', undefined);\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n      let {\n        startingStore: {\n          editArtwork,\n          artwork\n        }\n      } = this.props;\n      artwork.setProperty('artworkID', this.props.data.artworkID);\n      artwork.setProperty('artID', this.props.data.artID);\n      artwork.setProperty('_id', this.props.data._id);\n\n      const success = () => {\n        message.loading('Submitting edited artwork..', 1.2).then(() => message.success('Successfully edited an artwork', 1));\n      };\n\n      setTimeout(() => {\n        success();\n      }, 1000);\n      editArtwork();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let {\n      startingStore: {\n        artwork,\n        listOfArtists\n      }\n    } = this.props; // let categoryList = listOfCategories.map((cat) => cat.catType);\n    // let styleList = listOfStyles.map((style) => style.styleType);\n\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      onClick: this.toggle(1),\n      className: \"viewimage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"EDIT ARTWORK\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      className: \"adminmodalbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Title\",\n      type: \"text\",\n      valueDefault: this.props.data.artName,\n      onChange: artName => artwork.setProperty('artName', artName.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(\"select\", {\n      valueDefault: this.props.data.artistName,\n      onChange: artistName => artwork.setProperty('artistName', artistName.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Artist\"), listOfArtists.map(artist => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: `${artist.accFname} ${artist.accLname}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, artist.accFname, \" \", artist.accLname);\n    })), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Description\",\n      type: \"text\",\n      valueDefault: this.props.data.artDescription,\n      onChange: artDescription => artwork.setProperty('artDescription', artDescription.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Year\",\n      type: \"text\",\n      valueDefault: this.props.data.artworkDateCreated,\n      onChange: artworkDateCreated => artwork.setProperty('artworkDateCreated', artworkDateCreated.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Please provide a First Name.\"))), /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Dimension\",\n      type: \"text\",\n      valueDefault: this.props.data.artDimension,\n      onChange: artDimension => artwork.setProperty('artDimension', artDimension.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Price\",\n      type: \"text\",\n      valueDefault: this.props.data.artPrice,\n      onChange: artPrice => artwork.setProperty('artPrice', artPrice.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      valueDefault: this.props.data.artType,\n      onChange: artType => artwork.setProperty('artType', artType.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \" Art Type \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Original\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, \" Original \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, \" Secondary \")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Quantity\",\n      type: \"text\" // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, \"SAVE\")))))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(EditArt));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/admin/sections/EditArt.js"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBInput","MDBModal","MDBModalBody","MDBModalHeader","MDBIcon","MDBBtn","message","inject","observer","EditArt","state","modal1","toggle","nr","startingStore","artwork","props","modalNumber","setState","setProperty","undefined","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","className","editArtwork","data","artworkID","artID","_id","success","loading","then","setTimeout","changeHandler","name","value","render","listOfArtists","artName","artistName","map","artist","accFname","accLname","artDescription","artworkDateCreated","artDimension","artPrice","artType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {message} from 'antd';\r\nimport {inject, observer} from 'mobx-react';\r\nclass EditArt extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //    let { startingStore: { getArtists}} = this.props;\r\n\r\n  //   getArtists();\r\n  // }\r\n\r\n  toggle = (nr) => () => {\r\n    let {\r\n      startingStore: {artwork},\r\n    } = this.props;\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n\r\n    artwork.setProperty('artworkID', '');\r\n    artwork.setProperty('artName', '');\r\n    artwork.setProperty('_id', '');\r\n    artwork.setProperty('artTheme', '');\r\n    artwork.setProperty('artStyle', '');\r\n    artwork.setProperty('artPrice', '');\r\n    artwork.setProperty('artDimension', '');\r\n    artwork.setProperty('artRating', '');\r\n    artwork.setProperty('artistName', '');\r\n    artwork.setProperty('artworkDateCreated', '');\r\n    artwork.setProperty('artType', '');\r\n    artwork.setProperty('artworkImg', undefined);\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n    return uniqueID;\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editArtwork, artwork},\r\n    } = this.props;\r\n    artwork.setProperty('artworkID', this.props.data.artworkID);\r\n    artwork.setProperty('artID', this.props.data.artID);\r\n    artwork.setProperty('_id', this.props.data._id);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited artwork..', 1.2)\r\n        .then(() => message.success('Successfully edited an artwork', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editArtwork();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {artwork, listOfArtists},\r\n    } = this.props;\r\n\r\n    // let categoryList = listOfCategories.map((cat) => cat.catType);\r\n    // let styleList = listOfStyles.map((style) => style.styleType);\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <a href='#!' onClick={this.toggle(1)} className='viewimage'>\r\n          <MDBIcon icon='edit' />\r\n        </a>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>EDIT ARTWORK</MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Title'\r\n                    type='text'\r\n                    valueDefault={this.props.data.artName}\r\n                    onChange={(artName) =>\r\n                      artwork.setProperty('artName', artName.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    valueDefault={this.props.data.artistName}\r\n                    onChange={(artistName) =>\r\n                      artwork.setProperty('artistName', artistName.target.value)\r\n                    }\r\n                  >\r\n                    <option>Artist</option>\r\n                    {listOfArtists.map((artist) => {\r\n                      return (\r\n                        <option value={`${artist.accFname} ${artist.accLname}`}>\r\n                          {artist.accFname} {artist.accLname}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Description'\r\n                    type='text'\r\n                    valueDefault={this.props.data.artDescription}\r\n                    onChange={(artDescription) =>\r\n                      artwork.setProperty(\r\n                        'artDescription',\r\n                        artDescription.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Year'\r\n                    type='text'\r\n                    valueDefault={this.props.data.artworkDateCreated}\r\n                    onChange={(artworkDateCreated) =>\r\n                      artwork.setProperty(\r\n                        'artworkDateCreated',\r\n                        artworkDateCreated.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  {/* <SelectTheme theme={categoryList} style={styleList} /> */}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Dimension'\r\n                    type='text'\r\n                    valueDefault={this.props.data.artDimension}\r\n                    onChange={(artDimension) =>\r\n                      artwork.setProperty(\r\n                        'artDimension',\r\n                        artDimension.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Price'\r\n                    type='text'\r\n                    valueDefault={this.props.data.artPrice}\r\n                    onChange={(artPrice) =>\r\n                      artwork.setProperty('artPrice', artPrice.target.value)\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    valueDefault={this.props.data.artType}\r\n                    onChange={(artType) =>\r\n                      artwork.setProperty('artType', artType.target.value)\r\n                    }\r\n                  >\r\n                    <option> Art Type </option>\r\n                    <option value='Original'> Original </option>\r\n                    <option value='Secondary'> Secondary </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='Quantity'\r\n                    type='text'\r\n                    // onChange={artPrice => artwork.setProperty(\"artPrice\", artPrice.target.value)}\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  {/* <div className=\"uploadreq clearfix\">\r\n                    <input type=\"file\" name=\"file\"\r\n                      onChange={this.onFileChange} />\r\n                    <p className=\"req\">Please upload a high resolution photo.</p>\r\n                  </div> */}\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SAVE\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditArt));\r\n"]},"metadata":{},"sourceType":"module"}