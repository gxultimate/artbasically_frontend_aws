{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\admin\\\\sections\\\\EditPrintSize\\\\index.js\";\nimport React, { Component } from 'react';\nimport { MDBInput, MDBModal, MDBModalBody, MDBModalHeader, MDBBtn } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\n\nclass EditStyle extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal1: false\n    };\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      event.target.className += ' was-validated';\n      let {\n        startingStore: {\n          editPrintSize,\n          printsize\n        }\n      } = this.props;\n      printsize.setProperty('sizeID', this.props.data.sizeID);\n\n      const success = () => {\n        message.loading('Submitting edited print size..', 1.2).then(() => message.success('Print size has been modified', 1));\n      };\n\n      setTimeout(() => {\n        success();\n      }, 1000);\n      editPrintSize();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let {\n      startingStore: {\n        printsize\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      onClick: this.toggle(1),\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"EDIT\"), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Edit Print Size\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      className: \"adminmodalbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Print Size\",\n      type: \"text\",\n      valueDefault: this.props.data.printSize // value={this.props.data.catType}\n      ,\n      onChange: printSize => printsize.setProperty('printSize', printSize.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Please provide a valid Style Name.\")), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"SAVE\")))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(EditStyle));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/admin/sections/EditPrintSize/index.js"],"names":["React","Component","MDBInput","MDBModal","MDBModalBody","MDBModalHeader","MDBBtn","inject","observer","message","EditStyle","state","modal1","toggle","nr","modalNumber","setState","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","target","className","startingStore","editPrintSize","printsize","props","setProperty","data","sizeID","success","loading","then","setTimeout","changeHandler","name","value","render","printSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass EditStyle extends Component {\r\n  state = {\r\n    modal1: false,\r\n  };\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += ' was-validated';\r\n\r\n    let {\r\n      startingStore: {editPrintSize, printsize},\r\n    } = this.props;\r\n    printsize.setProperty('sizeID', this.props.data.sizeID);\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting edited print size..', 1.2)\r\n        .then(() => message.success('Print size has been modified', 1));\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    editPrintSize();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {printsize},\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          EDIT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            Edit Print Size\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBInput\r\n                label='Print Size'\r\n                type='text'\r\n                valueDefault={this.props.data.printSize}\r\n                // value={this.props.data.catType}\r\n                onChange={(printSize) =>\r\n                    printsize.setProperty('printSize', printSize.target.value)\r\n                }\r\n                required\r\n              >\r\n                <div className='invalid-feedback'>\r\n                  Please provide a valid Style Name.\r\n                </div>\r\n              </MDBInput>\r\n              <MDBBtn className='submitreg clearfix' type='submit'>\r\n                SAVE\r\n              </MDBBtn>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(EditStyle));\r\n"]},"metadata":{},"sourceType":"module"}