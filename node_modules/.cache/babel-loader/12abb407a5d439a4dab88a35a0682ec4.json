{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\admin\\\\sections\\\\AddUser.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBInput, MDBModal, MDBModalBody, MDBModalHeader, MDBIcon, MDBBtn, MDBCol, MDBRow } from 'mdbreact';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { inject, observer } from 'mobx-react';\nimport { message } from 'antd';\n\nclass AddUser extends Component {\n  componentDidMount() {\n    let {\n      startingStore: {\n        getArtworkInfo,\n        getAccounts,\n        getStyles,\n        getCategories\n      }\n    } = this.props;\n    getAccounts();\n    getArtworkInfo();\n    getStyles();\n    getCategories();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = nr => () => {\n      let modalNumber = 'modal' + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n\n    this.getUniqueID = () => {\n      let uniqueID = '';\n\n      for (var i = 0; i < 1; i++) {\n        uniqueID += Date.now() + (Math.random() * 1).toFixed();\n      }\n\n      return uniqueID;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let {\n        startingStore: {\n          account,\n          upload\n        }\n      } = this.props;\n      event.target.className += ' was-validated';\n      const formData = new FormData();\n      formData.append('artworkImg', this.state.selectedFile);\n      upload(formData, true);\n      account.setProperty('accID', this.getUniqueID());\n\n      const success = () => {\n        message.loading('Submitting User Registration..', 1.2).then(() => message.success('Successfully added a User Account', 1)); // this.props.history.push(`/CProfile/${res}`);\n      };\n\n      setTimeout(() => {\n        success();\n      }, 1000); // this.props.history.push('/RegVerify');\n      // this.onSubmit();\n      // console.log(account, \"account\")\n      // addAccount();\n    };\n\n    this.changeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onFileChange = this.onFileChange.bind(this);\n    this.state = {\n      modal1: false,\n      profileImg: '',\n      accID: '',\n      selectedFile: null\n    };\n  }\n\n  onFileChange(e) {\n    this.setState({\n      selectedFile: e.target.files[0]\n    });\n    this.setState({\n      accID: this.getUniqueID()\n    });\n  }\n\n  render() {\n    let {\n      startingStore: {\n        account,\n        listOfCategories,\n        listOfStyles\n      }\n    } = this.props;\n\n    function selectCategory(list, listitem) {\n      console.log(list, listitem, 'category');\n      let categorySelected = list.map(cat => cat.catType);\n      account.setProperty('accCategories', categorySelected);\n    }\n\n    function selectStyle(list, listitem) {\n      let styleSelected = list.map(cat => cat.styleType);\n      account.setProperty('accStyles', styleSelected);\n    }\n\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      onClick: this.toggle(1),\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus-circle\",\n      size: \"2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), \"ADD USER ACCOUNT\"), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal1,\n      toggle: this.toggle(1),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"ADD USER ACCOUNT\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      className: \"adminmodalbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"formbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Email Address\",\n      type: \"email\",\n      onChange: accEmailAddress => account.setProperty('accEmailAddress', accEmailAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid email.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Password\",\n      type: \"password\",\n      onChange: password => account.setProperty('password', password.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Confirm Password\",\n      type: \"password\",\n      onChange: password => account.setProperty('password', password.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, \"Please provide a valid password.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"prefix\",\n      onChange: accSuffix => account.setProperty('accSuffix', accSuffix.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \" Prefix \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \" MR. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \" MS. \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mrs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, \" MRS. \")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"First Name\",\n      type: \"text\",\n      onChange: accFname => account.setProperty('accFname', accFname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, \"Please provide a First Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Last Name\",\n      type: \"text\",\n      onChange: accLname => account.setProperty('accLname', accLname.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"Please provide a Last Name.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Birth Year\",\n      type: \"text\",\n      onChange: accBday => account.setProperty('accBday', accBday.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"Please provide a Birth Year.\"))), /*#__PURE__*/React.createElement(MDBCol, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Contact Number\",\n      type: \"text\",\n      onChange: accContact => account.setProperty('accContact', accContact.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, \"Please provide a Contact Number.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Institution / Company\",\n      type: \"text\",\n      onChange: accInstitution => account.setProperty('accInstitution', accInstitution.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, \"Please provide a Institution / Company.\")), /*#__PURE__*/React.createElement(MDBInput, {\n      label: \"Full Address\",\n      type: \"text\",\n      onChange: accAddress => account.setProperty('accAddress', accAddress.target.value),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, \"Please provide a Address.\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      onChange: accessType => account.setProperty('accessType', accessType.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, \" User Type \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, \" Standard \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Curator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, \" Curator \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \" Admin \")), /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfCategories,\n      placeholder: \"Art Themes you'd like to follow\",\n      showCheckbox: true,\n      displayValue: \"catType\",\n      onSelect: selectCategory // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"multsel\",\n      options: listOfStyles,\n      placeholder: \"Art Style you'd like to follow\",\n      showCheckbox: true,\n      onSelect: selectStyle,\n      displayValue: \"styleType\" // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, \"Upload Profile Picture\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadreq clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"submitreg clearfix\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, \"SUBMIT\")))))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(AddUser));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/admin/sections/AddUser.js"],"names":["React","Component","MDBContainer","MDBInput","MDBModal","MDBModalBody","MDBModalHeader","MDBIcon","MDBBtn","MDBCol","MDBRow","Multiselect","inject","observer","message","AddUser","componentDidMount","startingStore","getArtworkInfo","getAccounts","getStyles","getCategories","props","constructor","toggle","nr","modalNumber","setState","state","getUniqueID","uniqueID","i","Date","now","Math","random","toFixed","submitHandler","event","preventDefault","account","upload","target","className","formData","FormData","append","selectedFile","setProperty","success","loading","then","setTimeout","changeHandler","name","value","onFileChange","bind","modal1","profileImg","accID","e","files","render","listOfCategories","listOfStyles","selectCategory","list","listitem","console","log","categorySelected","map","cat","catType","selectStyle","styleSelected","styleType","accEmailAddress","password","accSuffix","accFname","accLname","accBday","accContact","accInstitution","accAddress","accessType"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,MARF,EASEC,MATF,QAUO,UAVP;AAWA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,OAAR,QAAsB,MAAtB;;AAEA,MAAMC,OAAN,SAAsBd,SAAtB,CAAgC;AAC9Be,EAAAA,iBAAiB,GAAG;AAClB,QAAI;AACFC,MAAAA,aAAa,EAAE;AAACC,QAAAA,cAAD;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA,SAA9B;AAAyCC,QAAAA;AAAzC;AADb,QAEA,KAAKC,KAFT;AAGAH,IAAAA,WAAW;AACXD,IAAAA,cAAc;AACdE,IAAAA,SAAS;AACTC,IAAAA,aAAa;AACd;;AAEDE,EAAAA,WAAW,CAACD,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBE,MAXmB,GAWTC,EAAD,IAAQ,MAAM;AACrB,UAAIC,WAAW,GAAG,UAAUD,EAA5B;AACA,WAAKE,QAAL,CAAc;AACZ,SAACD,WAAD,GAAe,CAAC,KAAKE,KAAL,CAAWF,WAAX;AADJ,OAAd;AAGD,KAhBkB;;AAAA,SAkBnBG,WAlBmB,GAkBL,MAAM;AAClB,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,QAAAA,QAAQ,IAAIE,IAAI,CAACC,GAAL,KAAa,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAjB,EAAoBC,OAApB,EAAzB;AACD;;AAED,aAAON,QAAP;AACD,KAzBkB;;AAAA,SAgCnBO,aAhCmB,GAgCFC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAI;AACFtB,QAAAA,aAAa,EAAE;AAACuB,UAAAA,OAAD;AAAUC,UAAAA;AAAV;AADb,UAEA,KAAKnB,KAFT;AAGAgB,MAAAA,KAAK,CAACI,MAAN,CAAaC,SAAb,IAA0B,gBAA1B;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAAKlB,KAAL,CAAWmB,YAAzC;AACAN,MAAAA,MAAM,CAACG,QAAD,EAAW,IAAX,CAAN;AAEAJ,MAAAA,OAAO,CAACQ,WAAR,CAAoB,OAApB,EAA6B,KAAKnB,WAAL,EAA7B;;AAEA,YAAMoB,OAAO,GAAG,MAAM;AACpBnC,QAAAA,OAAO,CACJoC,OADH,CACW,gCADX,EAC6C,GAD7C,EAEGC,IAFH,CAEQ,MAAMrC,OAAO,CAACmC,OAAR,CAAgB,mCAAhB,EAAqD,CAArD,CAFd,EADoB,CAIpB;AACD,OALD;;AAOAG,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,OAAO;AACR,OAFS,EAEP,IAFO,CAAV,CAnByB,CAsBzB;AACA;AACA;AACA;AACD,KA1DkB;;AAAA,SA4DnBI,aA5DmB,GA4DFf,KAAD,IAAW;AACzB,WAAKX,QAAL,CAAc;AAAC,SAACW,KAAK,CAACI,MAAN,CAAaY,IAAd,GAAqBhB,KAAK,CAACI,MAAN,CAAaa;AAAnC,OAAd;AACD,KA9DkB;;AAEjB,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK7B,KAAL,GAAa;AACX8B,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXb,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAkBDS,EAAAA,YAAY,CAACK,CAAD,EAAI;AACd,SAAKlC,QAAL,CAAc;AAACoB,MAAAA,YAAY,EAAEc,CAAC,CAACnB,MAAF,CAASoB,KAAT,CAAe,CAAf;AAAf,KAAd;AACA,SAAKnC,QAAL,CAAc;AAACiC,MAAAA,KAAK,EAAE,KAAK/B,WAAL;AAAR,KAAd;AACD;;AAkCDkC,EAAAA,MAAM,GAAG;AACP,QAAI;AACF9C,MAAAA,aAAa,EAAE;AAACuB,QAAAA,OAAD;AAAUwB,QAAAA,gBAAV;AAA4BC,QAAAA;AAA5B;AADb,QAEA,KAAK3C,KAFT;;AAIA,aAAS4C,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,QAAlB,EAA4B,UAA5B;AACA,UAAIG,gBAAgB,GAAGJ,IAAI,CAACK,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,OAAtB,CAAvB;AAEAlC,MAAAA,OAAO,CAACQ,WAAR,CAAoB,eAApB,EAAqCuB,gBAArC;AACD;;AAED,aAASI,WAAT,CAAqBR,IAArB,EAA2BC,QAA3B,EAAqC;AACnC,UAAIQ,aAAa,GAAGT,IAAI,CAACK,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACI,SAAtB,CAApB;AACArC,MAAAA,OAAO,CAACQ,WAAR,CAAoB,WAApB,EAAiC4B,aAAjC;AACD;;AAED,wBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKpD,MAAL,CAAY,CAAZ,CAAjB;AAAiC,MAAA,KAAK,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,aAAd;AAA4B,MAAA,IAAI,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,qBADF,eAKE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKI,KAAL,CAAW8B,MAA7B;AAAqC,MAAA,MAAM,EAAE,KAAKlC,MAAL,CAAY,CAAZ,CAA7C;AAA6D,MAAA,QAAQ,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKA,MAAL,CAAY,CAAZ,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKa,aAArB;AAAoC,MAAA,SAAS,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAGyC,eAAD,IACRtC,OAAO,CAACQ,WAAR,CACE,iBADF,EAEE8B,eAAe,CAACpC,MAAhB,CAAuBa,KAFzB,CAJJ;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAXF,CADF,eAgBE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAGwB,QAAD,IACRvC,OAAO,CAACQ,WAAR,CAAoB,UAApB,EAAgC+B,QAAQ,CAACrC,MAAT,CAAgBa,KAAhD,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CARF,CAhBF,eA4BE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAGwB,QAAD,IACRvC,OAAO,CAACQ,WAAR,CAAoB,UAApB,EAAgC+B,QAAQ,CAACrC,MAAT,CAAgBa,KAAhD,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CARF,CA5BF,eAwCE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,QAAQ,EAAGyB,SAAD,IACRxC,OAAO,CAACQ,WAAR,CAAoB,WAApB,EAAiCgC,SAAS,CAACtC,MAAV,CAAiBa,KAAlD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,eASE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAxCF,eAmDE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG0B,QAAD,IACRzC,OAAO,CAACQ,WAAR,CAAoB,UAApB,EAAgCiC,QAAQ,CAACvC,MAAT,CAAgBa,KAAhD,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARF,CAnDF,eA+DE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG2B,QAAD,IACR1C,OAAO,CAACQ,WAAR,CAAoB,UAApB,EAAgCkC,QAAQ,CAACxC,MAAT,CAAgBa,KAAhD,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARF,CA/DF,eA2EE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG4B,OAAD,IACR3C,OAAO,CAACQ,WAAR,CAAoB,SAApB,EAA+BmC,OAAO,CAACzC,MAAR,CAAea,KAA9C,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARF,CA3EF,CADF,eAyFE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG6B,UAAD,IACR5C,OAAO,CAACQ,WAAR,CAAoB,YAApB,EAAkCoC,UAAU,CAAC1C,MAAX,CAAkBa,KAApD,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CARF,CADF,eAaE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG8B,cAAD,IACR7C,OAAO,CAACQ,WAAR,CACE,gBADF,EAEEqC,cAAc,CAAC3C,MAAf,CAAsBa,KAFxB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAVF,CAbF,eA2BE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAG+B,UAAD,IACR9C,OAAO,CAACQ,WAAR,CAAoB,YAApB,EAAkCsC,UAAU,CAAC5C,MAAX,CAAkBa,KAApD,CAJJ;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCARF,CA3BF,eAuCE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,QAAQ,EAAGgC,UAAD,IACR/C,OAAO,CAACQ,WAAR,CAAoB,YAApB,EAAkCuC,UAAU,CAAC7C,MAAX,CAAkBa,KAApD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAOE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,eASE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CAvCF,eAkDE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,OAAO,EAAES,gBAFX;AAGE,MAAA,WAAW,EAAC,iCAHd;AAIE,MAAA,YAAY,EAAE,IAJhB;AAKE,MAAA,YAAY,EAAC,SALf;AAME,MAAA,QAAQ,EAAEE,cANZ,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,eA2DE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,OAAO,EAAED,YAFX;AAGE,MAAA,WAAW,EAAC,gCAHd;AAIE,MAAA,YAAY,EAAE,IAJhB;AAKE,MAAA,QAAQ,EAAEU,WALZ;AAME,MAAA,YAAY,EAAC,WANf,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,eAoEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAE,KAAKnB,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CApEF,eA8EE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9EF,CAzFF,CADF,CADF,CAJF,CALF,CADF;AA6LD;;AAzR6B;;AA4RhC,eAAe5C,MAAM,CAAC,eAAD,CAAN,CAAwBC,QAAQ,CAACE,OAAD,CAAhC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBIcon,\r\n  MDBBtn,\r\n  MDBCol,\r\n  MDBRow,\r\n} from 'mdbreact';\r\nimport {Multiselect} from 'multiselect-react-dropdown';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {message} from 'antd';\r\n\r\nclass AddUser extends Component {\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getArtworkInfo, getAccounts, getStyles, getCategories},\r\n    } = this.props;\r\n    getAccounts();\r\n    getArtworkInfo();\r\n    getStyles();\r\n    getCategories();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.state = {\r\n      modal1: false,\r\n      profileImg: '',\r\n      accID: '',\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  toggle = (nr) => () => {\r\n    let modalNumber = 'modal' + nr;\r\n    this.setState({\r\n      [modalNumber]: !this.state[modalNumber],\r\n    });\r\n  };\r\n\r\n  getUniqueID = () => {\r\n    let uniqueID = '';\r\n    for (var i = 0; i < 1; i++) {\r\n      uniqueID += Date.now() + (Math.random() * 1).toFixed();\r\n    }\r\n\r\n    return uniqueID;\r\n  };\r\n\r\n  onFileChange(e) {\r\n    this.setState({selectedFile: e.target.files[0]});\r\n    this.setState({accID: this.getUniqueID()});\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      startingStore: {account, upload},\r\n    } = this.props;\r\n    event.target.className += ' was-validated';\r\n    const formData = new FormData();\r\n    formData.append('artworkImg', this.state.selectedFile);\r\n    upload(formData, true);\r\n\r\n    account.setProperty('accID', this.getUniqueID());\r\n\r\n    const success = () => {\r\n      message\r\n        .loading('Submitting User Registration..', 1.2)\r\n        .then(() => message.success('Successfully added a User Account', 1));\r\n      // this.props.history.push(`/CProfile/${res}`);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      success();\r\n    }, 1000);\r\n    // this.props.history.push('/RegVerify');\r\n    // this.onSubmit();\r\n    // console.log(account, \"account\")\r\n    // addAccount();\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {account, listOfCategories, listOfStyles},\r\n    } = this.props;\r\n\r\n    function selectCategory(list, listitem) {\r\n      console.log(list, listitem, 'category');\r\n      let categorySelected = list.map((cat) => cat.catType);\r\n\r\n      account.setProperty('accCategories', categorySelected);\r\n    }\r\n\r\n    function selectStyle(list, listitem) {\r\n      let styleSelected = list.map((cat) => cat.styleType);\r\n      account.setProperty('accStyles', styleSelected);\r\n    }\r\n\r\n    return (\r\n      <MDBContainer>\r\n        <MDBBtn onClick={this.toggle(1)} color='transparent'>\r\n          <MDBIcon icon='plus-circle' size='2x' />\r\n          ADD USER ACCOUNT\r\n        </MDBBtn>\r\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered>\r\n          <MDBModalHeader toggle={this.toggle(1)}>\r\n            ADD USER ACCOUNT\r\n          </MDBModalHeader>\r\n          <MDBModalBody className='adminmodalbody'>\r\n            <form onSubmit={this.submitHandler} className='formbtn'>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Email Address'\r\n                    type='email'\r\n                    onChange={(accEmailAddress) =>\r\n                      account.setProperty(\r\n                        'accEmailAddress',\r\n                        accEmailAddress.target.value\r\n                      )\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid email.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={(password) =>\r\n                      account.setProperty('password', password.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a valid password.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='prefix'\r\n                    onChange={(accSuffix) =>\r\n                      account.setProperty('accSuffix', accSuffix.target.value)\r\n                    }\r\n                  >\r\n                    <option> Prefix </option>\r\n                    <option value='mr'> MR. </option>\r\n                    <option value='ms'> MS. </option>\r\n                    <option value='mrs'> MRS. </option>\r\n                  </select>\r\n                  <MDBInput\r\n                    label='First Name'\r\n                    type='text'\r\n                    onChange={(accFname) =>\r\n                      account.setProperty('accFname', accFname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a First Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Last Name'\r\n                    type='text'\r\n                    onChange={(accLname) =>\r\n                      account.setProperty('accLname', accLname.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Last Name.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Birth Year'\r\n                    type='text'\r\n                    onChange={(accBday) =>\r\n                      account.setProperty('accBday', accBday.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Birth Year.\r\n                    </div>\r\n                  </MDBInput>\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBInput\r\n                    label='Contact Number'\r\n                    type='text'\r\n                    onChange={(accContact) =>\r\n                      account.setProperty('accContact', accContact.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Contact Number.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Institution / Company'\r\n                    type='text'\r\n                    onChange={(accInstitution) =>\r\n                      account.setProperty(\r\n                        'accInstitution',\r\n                        accInstitution.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Institution / Company.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <MDBInput\r\n                    label='Full Address'\r\n                    type='text'\r\n                    onChange={(accAddress) =>\r\n                      account.setProperty('accAddress', accAddress.target.value)\r\n                    }\r\n                    required\r\n                  >\r\n                    <div className='invalid-feedback'>\r\n                      Please provide a Address.\r\n                    </div>\r\n                  </MDBInput>\r\n                  <select\r\n                    className='usertype'\r\n                    onChange={(accessType) =>\r\n                      account.setProperty('accessType', accessType.target.value)\r\n                    }\r\n                  >\r\n                    <option> User Type </option>\r\n                    <option value='Standard'> Standard </option>\r\n                    <option value='Curator'> Curator </option>\r\n                    <option value='Admin'> Admin </option>\r\n                  </select>\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfCategories}\r\n                    placeholder=\"Art Themes you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    displayValue='catType'\r\n                    onSelect={selectCategory}\r\n                    // onChange={catType => artwork.setProperty(\"catType\", catType.target.value)}\r\n                  />\r\n                  <Multiselect\r\n                    className='multsel'\r\n                    options={listOfStyles}\r\n                    placeholder=\"Art Style you'd like to follow\"\r\n                    showCheckbox={true}\r\n                    onSelect={selectStyle}\r\n                    displayValue='styleType'\r\n                    // onChange={styleType => artwork.setProperty(\"styleType\", styleType.target.value)}\r\n                  />\r\n                  <div className='uploadreq clearfix'>\r\n                    <p>Upload Profile Picture</p>\r\n                    <div className='uploadreq clearfix'>\r\n                      <input\r\n                        type='file'\r\n                        name='file'\r\n                        onChange={this.onFileChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <MDBBtn className='submitreg clearfix' type='submit'>\r\n                    SUBMIT\r\n                  </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </form>\r\n          </MDBModalBody>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(AddUser));\r\n"]},"metadata":{},"sourceType":"module"}