{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\printingpartner\\\\sections\\\\COrderDeli.js\";\nimport { MDBCard, MDBCardBody, MDBCol, MDBRow, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport ViewData from '../sections/ViewData';\n\nclass CustomerTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkList = id => {\n      let src = '';\n      let imgsrc = this.state.img.filter(img => {\n        if (img[1][0] === id) {\n          src += img[0];\n        }\n      });\n      console.log(this.state.img, 'sdsdsds');\n      return src;\n    };\n\n    this.state = {\n      img: []\n    };\n  }\n\n  arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach(b => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  }\n\n  render() {\n    let {\n      startingStore: {\n        listOfOrders,\n        listOfUsers\n      }\n    } = this.props;\n    console.log(listOfOrders, 'taeeeee');\n    let listOfOrderDelivery = listOfOrders.filter(Delivery => {\n      if (Delivery.orderStatus === 'Delivery') {\n        return Delivery;\n      }\n    });\n\n    let findName = accID => {\n      let aw = listOfUsers.map(user => {\n        if (user._id === accID) {\n          return `${user.accFname} ${user.accLname}`;\n        }\n      });\n      return aw;\n    };\n\n    return /*#__PURE__*/React.createElement(MDBRow, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBCol, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBCardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Orders for Delivery\"), /*#__PURE__*/React.createElement(MDBTable, {\n      hover: true,\n      className: \"tablescroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBTableHead, {\n      color: \"blue-grey lighten-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Order ID \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Account ID \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Order Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"PaymentStatus\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"act\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(MDBTableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, listOfOrderDelivery.reverse().map(data => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }, data.orderID), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, data.accID), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }, \" \", findName(data.accID), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }, data.orderDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, data.orderStatus), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    }, data.paymentStatus), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ViewData, {\n      data: data.orderItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }))))))))));\n  }\n\n}\n\nexport default inject('startingStore')(observer(CustomerTable));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/printingpartner/sections/COrderDeli.js"],"names":["MDBCard","MDBCardBody","MDBCol","MDBRow","MDBTable","MDBTableBody","MDBTableHead","inject","observer","React","Component","ViewData","CustomerTable","constructor","props","checkList","id","src","imgsrc","state","img","filter","console","log","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","render","startingStore","listOfOrders","listOfUsers","listOfOrderDelivery","Delivery","orderStatus","findName","accID","aw","map","user","_id","accFname","accLname","reverse","data","orderID","orderDate","paymentStatus","orderItems"],"mappings":";AAAA,SACEA,OADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,YAPF,QAQO,UARP;AASA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AACA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,SAdmB,GAcNC,EAAD,IAAQ;AAClB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeC,MAAf,CAAuBD,GAAD,IAAS;AAC1C,YAAIA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,MAAcJ,EAAlB,EAAsB;AACpBC,UAAAA,GAAG,IAAIG,GAAG,CAAC,CAAD,CAAV;AACD;AACF,OAJY,CAAb;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,GAAvB,EAA4B,SAA5B;AACA,aAAOH,GAAP;AACD,KAvBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGD;;AAEDI,EAAAA,mBAAmB,CAACC,MAAD,EAAS;AAC1B,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAc,IAAIC,UAAJ,CAAeL,MAAf,CAAd,CAAZ;AACAE,IAAAA,KAAK,CAACI,OAAN,CAAeC,CAAD,IAAQN,MAAM,IAAIO,MAAM,CAACC,YAAP,CAAoBF,CAApB,CAAhC;AACA,WAAOG,MAAM,CAACC,IAAP,CAAYV,MAAZ,CAAP;AACD;;AAaDW,EAAAA,MAAM,GAAG;AACP,QAAI;AACFC,MAAAA,aAAa,EAAE;AAACC,QAAAA,YAAD;AAAeC,QAAAA;AAAf;AADb,QAEA,KAAK1B,KAFT;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYgB,YAAZ,EAA0B,SAA1B;AACA,QAAIE,mBAAmB,GAAGF,YAAY,CAAClB,MAAb,CAAqBqB,QAAD,IAAc;AAC1D,UAAIA,QAAQ,CAACC,WAAT,KAAyB,UAA7B,EAAyC;AACvC,eAAOD,QAAP;AACD;AACF,KAJyB,CAA1B;;AAMA,QAAIE,QAAQ,GAAIC,KAAD,IAAW;AACxB,UAAIC,EAAE,GAAGN,WAAW,CAACO,GAAZ,CAAiBC,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACC,GAAL,KAAaJ,KAAjB,EAAwB;AACtB,iBAAQ,GAAEG,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,QAAS,EAAzC;AACD;AACF,OAJQ,CAAT;AAKA,aAAOL,EAAP;AACD,KAPD;;AASA,wBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,QAAD;AAAU,MAAA,KAAK,MAAf;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,eAOE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF,CADF,eAYE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,mBAAmB,CAACW,OAApB,GAA8BL,GAA9B,CAAmCM,IAAD,iBACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,OAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACR,KAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMD,QAAQ,CAACS,IAAI,CAACR,KAAN,CAAd,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKQ,IAAI,CAACE,SAAV,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACV,WAAV,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKU,IAAI,CAACG,aAAV,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEH,IAAI,CAACI,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADD,CADH,CAZF,CAFF,CADF,CADF,CADF,CADF;AAuCD;;AArFmC;;AAwFtC,eAAelD,MAAM,CAAC,eAAD,CAAN,CAAwBC,QAAQ,CAACI,aAAD,CAAhC,CAAf","sourcesContent":["import {\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBTable,\r\n  MDBTableBody,\r\n  MDBTableHead,\r\n} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport ViewData from '../sections/ViewData';\r\nclass CustomerTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n    };\r\n  }\r\n\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  checkList = (id) => {\r\n    let src = '';\r\n    let imgsrc = this.state.img.filter((img) => {\r\n      if (img[1][0] === id) {\r\n        src += img[0];\r\n      }\r\n    });\r\n    console.log(this.state.img, 'sdsdsds');\r\n    return src;\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfOrders, listOfUsers},\r\n    } = this.props;\r\n    console.log(listOfOrders, 'taeeeee');\r\n    let listOfOrderDelivery = listOfOrders.filter((Delivery) => {\r\n      if (Delivery.orderStatus === 'Delivery') {\r\n        return Delivery;\r\n      }\r\n    });\r\n\r\n    let findName = (accID) => {\r\n      let aw = listOfUsers.map((user) => {\r\n        if (user._id === accID) {\r\n          return `${user.accFname} ${user.accLname}`;\r\n        }\r\n      });\r\n      return aw;\r\n    };\r\n\r\n    return (\r\n      <MDBRow className='mb-4'>\r\n        <MDBCol md='12'>\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <h3>Orders for Delivery</h3>\r\n              <MDBTable hover className='tablescroll'>\r\n                <MDBTableHead color='blue-grey lighten-4'>\r\n                  <tr>\r\n                    <th>Order ID </th>\r\n                    <th>Account ID </th>\r\n                    <th>Order Date</th>\r\n                    <th>Status</th>\r\n                    <th>PaymentStatus</th>\r\n\r\n                    <th className='act'>Actions</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {listOfOrderDelivery.reverse().map((data) => (\r\n                    <tr>\r\n                      <td>{data.orderID}</td>\r\n                      <td>{data.accID}</td>\r\n                      <td> {findName(data.accID)} </td>\r\n                      <td>{data.orderDate}</td>\r\n                      <td>{data.orderStatus}</td>\r\n                      <td>{data.paymentStatus}</td>\r\n                      <td>\r\n                        <ViewData data={data.orderItems} />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(CustomerTable));\r\n"]},"metadata":{},"sourceType":"module"}