{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\components\\\\RegisterGmail\\\\index.js\";\nimport React, { Component } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport moment from 'moment';\nimport { message } from 'antd';\n\nclass GmailRegister extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseGoogle = response => {\n      if (response !== undefined || response != null) {\n        console.log(response);\n        console.log(response.profileObj);\n        let {\n          startingStore: {\n            addAccount,\n            account,\n            loginAccount,\n            getArtists,\n            getArtworkInfo,\n            getEmergingArtistArtwork,\n            getArtistFollowArtwork,\n            listOfUsers\n          }\n        } = this.props;\n        let checkuser = listOfUsers.map(usr => {\n          return usr.accEmailAddress;\n        });\n        let fil = checkuser.filter(usr => usr === response.profileObj.email).length;\n\n        if (fil === 0 || fil === null) {\n          account.setProperty('accessType', this.props.user);\n          account.setProperty('acc_Status', 'pending');\n          account.setProperty(\"accEmailAddress\", response.profileObj.email);\n          account.setProperty('accID', response.profileObj.googleId);\n          account.setProperty(\"accFname\", response.profileObj.givenName);\n          account.setProperty(\"accLname\", response.profileObj.familyName);\n          account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\n          addAccount().then(res => {\n            if (res === true) {\n              loginAccount().then(res => {\n                getArtworkInfo();\n                getEmergingArtistArtwork();\n                getArtists();\n                getArtistFollowArtwork(account.accEmailAddress);\n\n                if (res === true) {\n                  const success = () => {\n                    message.loading('Signing in..', 1.2).then(() => message.error('Login Unsuccessful', 1));\n                  };\n\n                  setTimeout(() => {\n                    success();\n                  }, 1000);\n                  this.props.history.push('/');\n                } else if (res === 2) {\n                  const success = () => {\n                    message.loading('Signing in..', 1.2).then(() => message.success('Successfully Login', 1));\n                  };\n\n                  setTimeout(() => {\n                    success();\n                  }, 200);\n                  this.props.history.push('/Home');\n                } else if ( // (typeof res === 'string')\n                res === 4) {\n                  const success = () => {\n                    message.loading('Signing in..', 1.2).then(() => message.success('Successfully Login', 1));\n                  };\n\n                  setTimeout(() => {\n                    success();\n                  }, 200);\n                  this.props.history.push(`/Home`);\n                } else {\n                  const success = () => {\n                    message.loading('Signing in..', 1.2).then(() => message.error('Login Unsuccessful', 1));\n                  };\n\n                  setTimeout(() => {\n                    success();\n                  }, 200);\n                  this.props.history.push('/');\n                }\n              });\n            }\n          });\n        } else if (fil === 1) {\n          const success = () => {\n            message.loading('Signing in..', 1.2).then(() => message.error('Email already taken!', 1));\n          };\n\n          setTimeout(() => {\n            success();\n          }, 1000); // this.props.history.push('/');\n        }\n      } else {\n        console.log('error');\n      }\n    };\n  }\n\n  componentDidMount() {\n    let {\n      startingStore: {\n        getAccounts\n      }\n    } = this.props;\n    getAccounts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: \"20336597669-2frj8irujj3t3dtdvvop9p7jip354cic.apps.googleusercontent.com\",\n      buttonText: \"Sign up with Google\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      cookiePolicy: 'single_host_origin',\n      className: \"btnGoogle\",\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(inject('startingStore')(observer(GmailRegister)));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/components/RegisterGmail/index.js"],"names":["React","Component","GoogleLogin","withRouter","inject","observer","moment","message","GmailRegister","responseGoogle","response","undefined","console","log","profileObj","startingStore","addAccount","account","loginAccount","getArtists","getArtworkInfo","getEmergingArtistArtwork","getArtistFollowArtwork","listOfUsers","props","checkuser","map","usr","accEmailAddress","fil","filter","email","length","setProperty","user","googleId","givenName","familyName","format","then","res","success","loading","error","setTimeout","history","push","componentDidMount","getAccounts","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,MAAR,EAAeC,QAAf,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,OAAR,QAAsB,MAAtB;;AACA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAOpCQ,cAPoC,GAOlBC,QAAD,IAAc;AAG7B,UAAGA,QAAQ,KAAKC,SAAb,IAA0BD,QAAQ,IAAI,IAAzC,EAA8C;AAC5CE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,UAArB;AAEA,YAAI;AAAEC,UAAAA,aAAa,EAAE;AAAEC,YAAAA,UAAF;AAAcC,YAAAA,OAAd;AAAuBC,YAAAA,YAAvB;AAAqCC,YAAAA,UAArC;AACnBC,YAAAA,cADmB;AAEnBC,YAAAA,wBAFmB;AAGnBC,YAAAA,sBAHmB;AAGIC,YAAAA;AAHJ;AAAjB,YAGsC,KAAKC,KAH/C;AAKF,YAAIC,SAAS,GAAGF,WAAW,CAACG,GAAZ,CAAgBC,GAAG,IAAG;AACpC,iBAAOA,GAAG,CAACC,eAAX;AACD,SAFe,CAAhB;AAGJ,YAAIC,GAAG,GAAGJ,SAAS,CAACK,MAAV,CAAiBH,GAAG,IAAIA,GAAG,KAAKjB,QAAQ,CAACI,UAAT,CAAoBiB,KAApD,EAA2DC,MAArE;;AAGA,YAAIH,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,IAAzB,EAA8B;AACxBZ,UAAAA,OAAO,CAACgB,WAAR,CAAoB,YAApB,EAAkC,KAAKT,KAAL,CAAWU,IAA7C;AACAjB,UAAAA,OAAO,CAACgB,WAAR,CAAoB,YAApB,EAAkC,SAAlC;AAEAhB,UAAAA,OAAO,CAACgB,WAAR,CAAoB,iBAApB,EAAuCvB,QAAQ,CAACI,UAAT,CAAoBiB,KAA3D;AACAd,UAAAA,OAAO,CAACgB,WAAR,CAAoB,OAApB,EAA6BvB,QAAQ,CAACI,UAAT,CAAoBqB,QAAjD;AACAlB,UAAAA,OAAO,CAACgB,WAAR,CAAoB,UAApB,EAAgCvB,QAAQ,CAACI,UAAT,CAAoBsB,SAApD;AACAnB,UAAAA,OAAO,CAACgB,WAAR,CAAoB,UAApB,EAAgCvB,QAAQ,CAACI,UAAT,CAAoBuB,UAApD;AACApB,UAAAA,OAAO,CAACgB,WAAR,CAAoB,WAApB,EAAiC3B,MAAM,GAAGgC,MAAT,CAAgB,aAAhB,CAAjC;AACAtB,UAAAA,UAAU,GAAGuB,IAAb,CAAkBC,GAAG,IAAI;AACvB,gBAAGA,GAAG,KAAK,IAAX,EAAgB;AAEdtB,cAAAA,YAAY,GAAGqB,IAAf,CAAqBC,GAAD,IAAS;AAC3BpB,gBAAAA,cAAc;AACdC,gBAAAA,wBAAwB;AACxBF,gBAAAA,UAAU;AACVG,gBAAAA,sBAAsB,CAACL,OAAO,CAACW,eAAT,CAAtB;;AACA,oBAAIY,GAAG,KAAK,IAAZ,EAAkB;AAChB,wBAAMC,OAAO,GAAG,MAAM;AACpBlC,oBAAAA,OAAO,CACJmC,OADH,CACW,cADX,EAC2B,GAD3B,EAEGH,IAFH,CAEQ,MAAMhC,OAAO,CAACoC,KAAR,CAAc,oBAAd,EAAoC,CAApC,CAFd;AAGD,mBAJD;;AAMAC,kBAAAA,UAAU,CAAC,MAAM;AACfH,oBAAAA,OAAO;AACR,mBAFS,EAEP,IAFO,CAAV;AAGA,uBAAKjB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,iBAXD,MAWO,IAAIN,GAAG,KAAK,CAAZ,EAAe;AACpB,wBAAMC,OAAO,GAAG,MAAM;AACpBlC,oBAAAA,OAAO,CACJmC,OADH,CACW,cADX,EAC2B,GAD3B,EAEGH,IAFH,CAEQ,MAAMhC,OAAO,CAACkC,OAAR,CAAgB,oBAAhB,EAAsC,CAAtC,CAFd;AAGD,mBAJD;;AAMAG,kBAAAA,UAAU,CAAC,MAAM;AACfH,oBAAAA,OAAO;AACR,mBAFS,EAEP,GAFO,CAAV;AAGA,uBAAKjB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD,iBAXM,MAWA,KACP;AACEN,gBAAAA,GAAG,KAAK,CAFH,EAGN;AACC,wBAAMC,OAAO,GAAG,MAAM;AACpBlC,oBAAAA,OAAO,CACJmC,OADH,CACW,cADX,EAC2B,GAD3B,EAEGH,IAFH,CAEQ,MAAMhC,OAAO,CAACkC,OAAR,CAAgB,oBAAhB,EAAsC,CAAtC,CAFd;AAGD,mBAJD;;AAMAG,kBAAAA,UAAU,CAAC,MAAM;AACfH,oBAAAA,OAAO;AACR,mBAFS,EAEP,GAFO,CAAV;AAGA,uBAAKjB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAyB,OAAzB;AACD,iBAdM,MAcA;AACL,wBAAML,OAAO,GAAG,MAAM;AACpBlC,oBAAAA,OAAO,CACJmC,OADH,CACW,cADX,EAC2B,GAD3B,EAEGH,IAFH,CAEQ,MAAMhC,OAAO,CAACoC,KAAR,CAAc,oBAAd,EAAoC,CAApC,CAFd;AAGD,mBAJD;;AAMAC,kBAAAA,UAAU,CAAC,MAAM;AACfH,oBAAAA,OAAO;AACR,mBAFS,EAEP,GAFO,CAAV;AAGA,uBAAKjB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF,eArDD;AA0DD;AACF,WA9DD;AA+DD,SAxEL,MAwEU,IAAGjB,GAAG,KAAK,CAAX,EAAa;AAEb,gBAAMY,OAAO,GAAG,MAAM;AACpBlC,YAAAA,OAAO,CACJmC,OADH,CACW,cADX,EAC2B,GAD3B,EAEGH,IAFH,CAEQ,MAAMhC,OAAO,CAACoC,KAAR,CAAc,sBAAd,EAAsC,CAAtC,CAFd;AAGD,WAJD;;AAMAC,UAAAA,UAAU,CAAC,MAAM;AACfH,YAAAA,OAAO;AACR,WAFS,EAEP,IAFO,CAAV,CARa,CAWb;AAGL;AAEA,OAvGD,MAwGI;AACF7B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,KArHmC;AAAA;;AAEpCkC,EAAAA,iBAAiB,GAAE;AACjB,QAAI;AAAChC,MAAAA,aAAa,EAAC;AAACiC,QAAAA;AAAD;AAAf,QAA8B,KAAKxB,KAAvC;AACAwB,IAAAA,WAAW;AACZ;;AAiHDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAC,yEADX;AAEE,MAAA,UAAU,EAAC,qBAFb;AAGE,MAAA,SAAS,EAAE,KAAKxC,cAHlB;AAIE,MAAA,SAAS,EAAE,KAAKA,cAJlB;AAKE,MAAA,YAAY,EAAE,oBALhB;AAME,MAAA,SAAS,EAAC,WANZ;AAOE,MAAA,IAAI,EAAE,IAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AArImC;;AAyItC,eAAeN,UAAU,CAACC,MAAM,CAAC,eAAD,CAAN,CAAwBC,QAAQ,CAACG,aAAD,CAAhC,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {inject,observer} from 'mobx-react'\r\nimport moment from 'moment'\r\nimport {message} from 'antd';\r\nclass GmailRegister extends Component {\r\n\r\n  componentDidMount(){\r\n    let {startingStore:{getAccounts}}=this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  responseGoogle = (response) => {\r\n \r\n\r\n    if(response !== undefined || response != null){\r\n      console.log(response);\r\n      console.log(response.profileObj,);\r\n\r\n      let { startingStore: { addAccount, account ,loginAccount ,getArtists,\r\n        getArtworkInfo,\r\n        getEmergingArtistArtwork,\r\n        getArtistFollowArtwork,listOfUsers} } = this.props;\r\n\r\n    let checkuser = listOfUsers.map(usr =>{\r\n      return usr.accEmailAddress\r\n    })\r\nlet fil = checkuser.filter(usr => usr === response.profileObj.email).length\r\n\r\n\r\nif (fil === 0 || fil === null){\r\n      account.setProperty('accessType', this.props.user);\r\n      account.setProperty('acc_Status', 'pending');\r\n\r\n      account.setProperty(\"accEmailAddress\", response.profileObj.email)\r\n      account.setProperty('accID', response.profileObj.googleId);\r\n      account.setProperty(\"accFname\", response.profileObj.givenName)\r\n      account.setProperty(\"accLname\", response.profileObj.familyName)\r\n      account.setProperty('dateAdded', moment().format('MMM/DD/YYYY'));\r\n      addAccount().then(res => {\r\n        if(res === true){\r\n           \r\n          loginAccount().then((res) => {\r\n            getArtworkInfo();\r\n            getEmergingArtistArtwork();\r\n            getArtists();\r\n            getArtistFollowArtwork(account.accEmailAddress);\r\n            if (res === true) {\r\n              const success = () => {\r\n                message\r\n                  .loading('Signing in..', 1.2)\r\n                  .then(() => message.error('Login Unsuccessful', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 1000);\r\n              this.props.history.push('/');\r\n            } else if (res === 2) {\r\n              const success = () => {\r\n                message\r\n                  .loading('Signing in..', 1.2)\r\n                  .then(() => message.success('Successfully Login', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push('/Home');\r\n            } else if \r\n            // (typeof res === 'string')\r\n            ( res === 4)\r\n             {\r\n              const success = () => {\r\n                message\r\n                  .loading('Signing in..', 1.2)\r\n                  .then(() => message.success('Successfully Login', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push(`/Home`);\r\n            } else {\r\n              const success = () => {\r\n                message\r\n                  .loading('Signing in..', 1.2)\r\n                  .then(() => message.error('Login Unsuccessful', 1));\r\n              };\r\n      \r\n              setTimeout(() => {\r\n                success();\r\n              }, 200);\r\n              this.props.history.push('/');\r\n            }\r\n          });\r\n\r\n          \r\n    \r\n\r\n        }\r\n      })\r\n    }else if(fil === 1){\r\n\r\n          const success = () => {\r\n            message\r\n              .loading('Signing in..', 1.2)\r\n              .then(() => message.error('Email already taken!', 1));\r\n          };\r\n  \r\n          setTimeout(() => {\r\n            success();\r\n          }, 1000);\r\n          // this.props.history.push('/');\r\n        \r\n      \r\n    }\r\n\r\n    }\r\n    else{\r\n      console.log('error')\r\n    }\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <GoogleLogin\r\n          clientId='20336597669-2frj8irujj3t3dtdvvop9p7jip354cic.apps.googleusercontent.com'\r\n          buttonText='Sign up with Google'\r\n          onSuccess={this.responseGoogle}\r\n          onFailure={this.responseGoogle}\r\n          cookiePolicy={'single_host_origin'}\r\n          className='btnGoogle'\r\n          icon={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(inject('startingStore')(observer(GmailRegister)));\r\n"]},"metadata":{},"sourceType":"module"}