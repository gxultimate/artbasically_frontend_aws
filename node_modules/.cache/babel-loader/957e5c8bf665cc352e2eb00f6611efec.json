{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\SingleArt.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Skeleton } from 'antd';\nimport { MDBIcon, MDBNavLink, MDBBtn } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { message } from 'antd';\nimport AddToBag from '../components/AddToBag';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport ViewCart from '../components/ViewCart';\nimport ViewRoom from '../components/ViewRoom';\nimport art from '../images/artworks/art1.png';\n\nclass SingleArt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkFollower = follower => {\n      if (follower !== undefined && follower[0] !== '') {\n        return follower.length;\n      } else {\n        return 0;\n      }\n    };\n\n    this.followArtist = () => {\n      message.loading({\n        content: 'Loading...'\n      });\n      setTimeout(() => {\n        message.success({\n          content: 'Loaded!',\n          duration: 2\n        });\n      }, 1000);\n    };\n\n    this.state = {\n      img: [],\n      id: '',\n      artistImg: '',\n      artistInfoList: [],\n      artistData: [],\n      accBday: '',\n      accDescription: '',\n      accFollowers: '',\n      artworkInfo: [],\n      artworkList: [],\n      artworkName: '',\n      isMounted: false,\n      condition: false,\n      isToggleOn: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(function (prevState) {\n      return {\n        isToggleOn: !prevState.isToggleOn,\n        condition: !this.state.condition\n      };\n    });\n  }\n\n  componentDidMount() {\n    let {\n      startingStore: {\n        getArtistArtwork,\n        getSingleArtists,\n        getSingleArtworkInfo,\n        getToCart\n      }\n    } = this.props;\n    getSingleArtworkInfo(this.props.match.params.id);\n    getSingleArtists(this.props.match.params.name);\n    getArtistArtwork(this.props.match.params.name);\n    getToCart(); //   .then(response => {\n    //  })\n    // getToCart();\n  }\n\n  render() {\n    let {\n      startingStore: {\n        cart,\n        listOfSingleArtwork,\n        listofArtistInfo,\n        listofArtistArtwork,\n        followArtist,\n        listRelatedWorkByCategory\n      }\n    } = this.props;\n    const options = [];\n\n    for (let i = 1; i <= 50; i++) {\n      options.push(i);\n    }\n\n    console.log(listOfSingleArtwork, 'aws2332323');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artworkInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title artistname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artistName : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: this.state.condition ? 'followed' : 'ifollow',\n      color: \"transparent\",\n      floating: true,\n      rounded: true,\n      title: this.state.isToggleOn ? 'Follow' : 'Unfollow',\n      onClick: () => this.handleClick(followArtist(listofArtistInfo._id)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, this.state.isToggleOn ? /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }) : 'Following')), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"arttitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artName : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }), \",\\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artworkDateCreated : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artworkImg : /*#__PURE__*/React.createElement(Skeleton, {\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }\n      }),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), listOfSingleArtwork[0] !== undefined ? /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"artOpt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, ' ', /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }\n    }, \"Add to List\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ViewRoom, {\n      img: listOfSingleArtwork[0].artworkImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 27\n      }\n    }, \"Share\")), ' ') : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"abtArtist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, \"About the Artist\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artistName : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), \", b.\", listofArtistInfo.accBday, \".\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, listofArtistInfo.accDescription), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      className: \"seemore\",\n      onClick: () => {\n        this.props.history.push({\n          pathname: `/Artist/${listOfSingleArtwork[0].artistName}`,\n          state: {\n            artistName: listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artistName : '' // \"accImg\": listofArtistInfo.artistImg,\n            // \"artistDescription\": listofArtistInfo.accDescription,\n            // \"accBday\": listofArtistInfo.accBday,\n            // \"accFollowers\": listofArtistInfo.accFollowers\n\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, \"Visit artist profile\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Customize your \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 34\n      }\n    }), \" order.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"inlinep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Can't Decide? \", /*#__PURE__*/React.createElement(MDBNavLink, {\n      to: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"We can help.\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"regform uploadform custform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, \"Material\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: artworkMaterial => cart.setProperty('artworkMaterial', artworkMaterial.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 23\n      }\n    }, \"Choose Material\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cold Press Paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, \"Cold Press Paper\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }, \"Canvas\")), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bluelink\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"What material is the best for you?\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, \"Size\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: artworkSize => cart.setProperty('artworkSize', artworkSize.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, \"Choose Size\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"30.48 cm x 45.72 cm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }, \"30.48 cm x 45.72 cm\")), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bluelink\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, \"Which size best fits your needs?\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, \"Framing Options\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: artworkFramingOptions => cart.setProperty('artworkFramingOptions', artworkFramingOptions.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 23\n      }\n    }, \"Choose Framing Options\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Rustic Barnwood Distressed Wood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, \"Rustic Barnwood Distressed Wood\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"TEST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, \"TEST 1\")), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bluelink\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, \"Which framing option is best for you?\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, \"Quantity\"), listOfSingleArtwork.artType === 'Original' ? /*#__PURE__*/React.createElement(\"select\", {\n      onChange: artworkQuantity => cart.setProperty('artworkQuantity', artworkQuantity.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, \"Choose Quantity\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, \"1\")) : /*#__PURE__*/React.createElement(\"select\", {\n      onChange: artworkQuantity => cart.setProperty('artworkQuantity', artworkQuantity.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 23\n      }\n    }, options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 27\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"blacklink\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, \"This is part of a limited edition set of 12.\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    }, \"Your total is\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nopad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, \"PHP\", ' ', Number(parseFloat(listOfSingleArtwork[0] !== undefined ? parseFloat(listOfSingleArtwork[0].artPrice) * parseFloat(cart.artworkQuantity) : '0.00')).toLocaleString('en')), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bluelink\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, \"How long will your order arrive?\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddToBag, {\n      cartData: listOfSingleArtwork[0],\n      disable: cart.artworkFramingOptions !== '' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(ViewCart, {\n      cartData: listOfSingleArtwork[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 23\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"relcat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, \"Other Works by\", ' ', listOfSingleArtwork[0] !== undefined ? listOfSingleArtwork[0].artistName : /*#__PURE__*/React.createElement(Skeleton, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"seemore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col3img clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, listOfSingleArtwork[0] !== undefined ? listofArtistArtwork.reverse().slice(0, 3).map(art => {\n      if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"\",\n          className: \"artlink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artlabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 31\n          }\n        }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 31\n          }\n        }, \"HOT\")), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/Art/${art.artworkID}/${art.artistName}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: art.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistinfo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }\n        }, listOfSingleArtwork[0] !== undefined ? art.artName : /*#__PURE__*/React.createElement(Skeleton, {\n          active: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 33\n          }\n        }))));\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"relcat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }\n    }, \"Related Works by Category\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"seemore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col3img clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, listRelatedWorkByCategory[0] !== undefined && listOfSingleArtwork[0] !== undefined ? listRelatedWorkByCategory.reverse().slice(0, 3).map(art => {\n      if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"\",\n          className: \"artlink\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artlabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 31\n          }\n        }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 31\n          }\n        }, \"HOT\")), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/Art/${art.artworkID}/${art.artistName}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: art.artworkImg,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"artistinfo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }\n        }, listOfSingleArtwork[0] !== undefined ? art.artName : /*#__PURE__*/React.createElement(Skeleton, {\n          active: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 33\n          }\n        }))));\n      }\n    }) : /*#__PURE__*/React.createElement(Skeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"relartist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, \"Related Artist\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"seemore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }\n    }, \"See More \\xA0\", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col3img clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, \"NEW\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"hot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }\n    }, \"HOT\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: art,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 19\n      }\n    }, \"Rene Gagnon\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"ifollow\",\n      color: \"transparent\",\n      floating: true,\n      rounded: true,\n      onClick: () => followArtist(listofArtistInfo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 19\n      }\n    }, \"Eelus\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"ifollow\",\n      color: \"transparent\",\n      floating: true,\n      rounded: true,\n      onClick: () => followArtist(listofArtistInfo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: art,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"artistinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 19\n      }\n    }, \"Banksy\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"ifollow\",\n      color: \"transparent\",\n      floating: true,\n      rounded: true,\n      onClick: () => followArtist(listofArtistInfo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }\n    }))))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default inject('startingStore')(observer(SingleArt));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/SingleArt.js"],"names":["Skeleton","MDBIcon","MDBNavLink","MDBBtn","inject","observer","React","Component","Link","message","AddToBag","Footer","Navbar","ViewCart","ViewRoom","art","SingleArt","constructor","props","checkFollower","follower","undefined","length","followArtist","loading","content","setTimeout","success","duration","state","img","id","artistImg","artistInfoList","artistData","accBday","accDescription","accFollowers","artworkInfo","artworkList","artworkName","isMounted","condition","isToggleOn","handleClick","bind","setState","prevState","componentDidMount","startingStore","getArtistArtwork","getSingleArtists","getSingleArtworkInfo","getToCart","match","params","name","render","cart","listOfSingleArtwork","listofArtistInfo","listofArtistArtwork","listRelatedWorkByCategory","options","i","push","console","log","artistName","_id","artName","artworkDateCreated","artworkImg","history","pathname","submitHandler","artworkMaterial","setProperty","target","value","artworkSize","artworkFramingOptions","artType","artworkQuantity","map","option","Number","parseFloat","artPrice","toLocaleString","float","reverse","slice","artworkID"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {Skeleton} from 'antd';\r\nimport {MDBIcon, MDBNavLink, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {message} from 'antd';\r\nimport AddToBag from '../components/AddToBag';\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar';\r\nimport ViewCart from '../components/ViewCart';\r\nimport ViewRoom from '../components/ViewRoom';\r\nimport art from '../images/artworks/art1.png';\r\n\r\nclass SingleArt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      accBday: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n      condition: false,\r\n      isToggleOn: true,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(function (prevState) {\r\n      return {\r\n        isToggleOn: !prevState.isToggleOn,\r\n        condition: !this.state.condition,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {\r\n        getArtistArtwork,\r\n        getSingleArtists,\r\n        getSingleArtworkInfo,\r\n        getToCart,\r\n      },\r\n    } = this.props;\r\n    getSingleArtworkInfo(this.props.match.params.id);\r\n    getSingleArtists(this.props.match.params.name);\r\n    getArtistArtwork(this.props.match.params.name);\r\n    getToCart();\r\n\r\n    //   .then(response => {\r\n\r\n    //  })\r\n    // getToCart();\r\n  }\r\n\r\n  checkFollower = (follower) => {\r\n    if (follower !== undefined && follower[0] !== '') {\r\n      return follower.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  followArtist = () => {\r\n    message.loading({content: 'Loading...'});\r\n    setTimeout(() => {\r\n      message.success({content: 'Loaded!', duration: 2});\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {\r\n        cart,\r\n        listOfSingleArtwork,\r\n        listofArtistInfo,\r\n        listofArtistArtwork,\r\n        followArtist,\r\n        listRelatedWorkByCategory,\r\n      },\r\n    } = this.props;\r\n\r\n    const options = [];\r\n    for (let i = 1; i <= 50; i++) {\r\n      options.push(i);\r\n    }\r\n\r\n    console.log(listOfSingleArtwork, 'aws2332323');\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con'>\r\n          <div className='artcon'>\r\n            <div className='clearfix'>\r\n              <div className='left'>\r\n                <div className='artworkInfo'>\r\n                  <h2 className='title artistname'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artistName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    <MDBBtn\r\n                      className={this.state.condition ? 'followed' : 'ifollow'}\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      title={this.state.isToggleOn ? 'Follow' : 'Unfollow'}\r\n                      onClick={() =>\r\n                        this.handleClick(followArtist(listofArtistInfo._id))\r\n                      }\r\n                    >\r\n                      {this.state.isToggleOn ? (\r\n                        <MDBIcon icon='plus' />\r\n                      ) : (\r\n                        'Following'\r\n                      )}\r\n                    </MDBBtn>\r\n                  </h2>\r\n                  <span className='arttitle'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artName\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                    ,&nbsp;\r\n                  </span>\r\n                  <span className='year'>\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      listOfSingleArtwork[0].artworkDateCreated\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </span>\r\n                  <div className='artImg'>\r\n                    <img\r\n                      src={\r\n                        listOfSingleArtwork[0] !== undefined ? (\r\n                          listOfSingleArtwork[0].artworkImg\r\n                        ) : (\r\n                          <Skeleton active />\r\n                        )\r\n                      }\r\n                      alt=''\r\n                    />\r\n\r\n                    {listOfSingleArtwork[0] !== undefined ? (\r\n                      <ul className='artOpt'>\r\n                        {' '}\r\n                        <li>\r\n                          <a href=''>Add to List</a>\r\n                        </li>\r\n                        <li>\r\n                          <ViewRoom img={listOfSingleArtwork[0].artworkImg} />\r\n                        </li>\r\n                        <li>\r\n                          <a href=''>Share</a>\r\n                        </li>{' '}\r\n                      </ul>\r\n                    ) : (\r\n                      <Skeleton active />\r\n                    )}\r\n                  </div>\r\n                  <div className='abtArtist'>\r\n                    <h4>About the Artist</h4>\r\n                    <span>\r\n                      {listOfSingleArtwork[0] !== undefined ? (\r\n                        listOfSingleArtwork[0].artistName\r\n                      ) : (\r\n                        <Skeleton active />\r\n                      )}\r\n                      , b.\r\n                      {listofArtistInfo.accBday}.\r\n                    </span>\r\n                    <p>{listofArtistInfo.accDescription}</p>\r\n\r\n                    <a\r\n                      href=''\r\n                      className='seemore'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${listOfSingleArtwork[0].artistName}`,\r\n                          state: {\r\n                            artistName:\r\n                              listOfSingleArtwork[0] !== undefined\r\n                                ? listOfSingleArtwork[0].artistName\r\n                                : '',\r\n                            // \"accImg\": listofArtistInfo.artistImg,\r\n                            // \"artistDescription\": listofArtistInfo.accDescription,\r\n                            // \"accBday\": listofArtistInfo.accBday,\r\n                            // \"accFollowers\": listofArtistInfo.accFollowers\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      Visit artist profile\r\n                      <MDBIcon icon='caret-right' />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='right'>\r\n                <h2>\r\n                  Customize your <br /> order.\r\n                </h2>\r\n                <p className='inlinep'>\r\n                  Can't Decide? <MDBNavLink to='#!'>We can help.</MDBNavLink>\r\n                </p>\r\n                <form\r\n                  onSubmit={this.submitHandler}\r\n                  className='regform uploadform custform'\r\n                >\r\n                  <div>\r\n                    <span>Material</span>\r\n                    <select\r\n                      onChange={(artworkMaterial) =>\r\n                        cart.setProperty(\r\n                          'artworkMaterial',\r\n                          artworkMaterial.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Material\r\n                      </option>\r\n                      <option value='Cold Press Paper'>Cold Press Paper</option>\r\n                      <option value='Canvas'>Canvas</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      What material is the best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Size</span>\r\n                    <select\r\n                      onChange={(artworkSize) =>\r\n                        cart.setProperty(\r\n                          'artworkSize',\r\n                          artworkSize.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Size\r\n                      </option>\r\n                      <option value='30.48 cm x 45.72 cm'>\r\n                        30.48 cm x 45.72 cm\r\n                      </option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which size best fits your needs?\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Framing Options</span>\r\n                    <select\r\n                      onChange={(artworkFramingOptions) =>\r\n                        cart.setProperty(\r\n                          'artworkFramingOptions',\r\n                          artworkFramingOptions.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <option selected value=''>\r\n                        Choose Framing Options\r\n                      </option>\r\n                      <option value='Rustic Barnwood Distressed Wood'>\r\n                        Rustic Barnwood Distressed Wood\r\n                      </option>\r\n                      <option value='TEST'>TEST 1</option>\r\n                    </select>\r\n                    <a className='bluelink' href=''>\r\n                      Which framing option is best for you?\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Quantity</span>\r\n                    {listOfSingleArtwork.artType === 'Original' ? (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        <option selected value=''>\r\n                          Choose Quantity\r\n                        </option>\r\n                        <option value='1'>1</option>\r\n                      </select>\r\n                    ) : (\r\n                      <select\r\n                        onChange={(artworkQuantity) =>\r\n                          cart.setProperty(\r\n                            'artworkQuantity',\r\n                            artworkQuantity.target.value\r\n                          )\r\n                        }\r\n                      >\r\n                        {options.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    )}\r\n                    <a className='blacklink' href=''>\r\n                      This is part of a limited edition set of 12.\r\n                    </a>\r\n                  </div>\r\n                  <div>\r\n                    <span>Your total is</span>\r\n                    <span className='nopad'>\r\n                      PHP{' '}\r\n                      {Number(\r\n                        parseFloat(\r\n                          listOfSingleArtwork[0] !== undefined\r\n                            ? parseFloat(listOfSingleArtwork[0].artPrice) *\r\n                                parseFloat(cart.artworkQuantity)\r\n                            : '0.00'\r\n                        )\r\n                      ).toLocaleString('en')}\r\n                    </span>\r\n                    <a className='bluelink' href=''>\r\n                      How long will your order arrive?\r\n                    </a>\r\n                    <div style={{float: 'right'}}>\r\n                      <AddToBag\r\n                        cartData={listOfSingleArtwork[0]}\r\n                        disable={\r\n                          cart.artworkFramingOptions !== '' ? true : false\r\n                        }\r\n                      />\r\n                      <ViewCart cartData={listOfSingleArtwork[0]} />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className='relcat'>\r\n            <h3>\r\n              Other Works by{' '}\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listOfSingleArtwork[0].artistName\r\n              ) : (\r\n                <Skeleton active />\r\n              )}\r\n            </h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listOfSingleArtwork[0] !== undefined ? (\r\n                listofArtistArtwork\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relcat'>\r\n            <h3>Related Works by Category</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              {listRelatedWorkByCategory[0] !== undefined && listOfSingleArtwork[0] !== undefined ? (\r\n                listRelatedWorkByCategory\r\n                  .reverse()\r\n                  .slice(0, 3)\r\n                  .map((art) => {\r\n                    if (art.artworkID !== listOfSingleArtwork[0].artworkID) {\r\n                      return (\r\n                        <li>\r\n                          <a href='' className='artlink'>\r\n                            <div className='artlabel'>\r\n                              <span className='new'>NEW</span>\r\n                              <span className='hot'>HOT</span>\r\n                            </div>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/Art/${art.artworkID}/${art.artistName}`,\r\n                              }}\r\n                            >\r\n                              <img src={art.artworkImg} alt='' />\r\n                            </Link>\r\n                          </a>\r\n                          <div className='artistinfo'>\r\n                            <p>\r\n                              {listOfSingleArtwork[0] !== undefined ? (\r\n                                art.artName\r\n                              ) : (\r\n                                <Skeleton active />\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                  })\r\n              ) : (\r\n                <Skeleton />\r\n              )}\r\n            </ul>\r\n          </section>\r\n          <section className='relartist'>\r\n            <h3>Related Artist</h3>\r\n            <a href='#!' className='seemore'>\r\n              See More &nbsp;\r\n              <MDBIcon icon='caret-right' />\r\n            </a>\r\n            <ul className='col3img clearfix'>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <div className='artlabel'>\r\n                    <span className='new'>NEW</span>\r\n                    <span className='hot'>HOT</span>\r\n                  </div>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Rene Gagnon</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Eelus</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <a href='' className='artlink'>\r\n                  <img src={art} alt='' />\r\n                </a>\r\n                <div className='artistinfo'>\r\n                  <p>Banksy</p>\r\n                  <MDBBtn\r\n                    className='ifollow'\r\n                    color='transparent'\r\n                    floating\r\n                    rounded\r\n                    onClick={() => followArtist(listofArtistInfo._id)}\r\n                  >\r\n                    <MDBIcon icon='plus' />\r\n                  </MDBBtn>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </section>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(SingleArt));\r\n"]},"metadata":{},"sourceType":"module"}