{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alqui\\\\Desktop\\\\Art Basically AWS\\\\artfrontend\\\\src\\\\pages\\\\Artists\\\\index.js\";\nimport { BackTop, Pagination } from 'antd';\nimport { MDBIcon, MDBBtn } from 'mdbreact';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport Footer from '../../components/Footer';\nimport Navbar from '../../components/Navbar';\nexport class Artists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: [],\n      id: '',\n      artistImg: '',\n      artistInfoList: [],\n      artistData: [],\n      birthYear: '',\n      accDescription: '',\n      accFollowers: '',\n      artworkInfo: [],\n      artworkList: [],\n      artworkName: '',\n      isMounted: false\n    };\n  }\n\n  arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach(b => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  }\n\n  componentDidMount() {\n    let {\n      startingStore: {\n        getAccounts\n      }\n    } = this.props;\n    getAccounts();\n  }\n\n  executeOnClick(isExpanded) {\n    console.log(isExpanded);\n  }\n\n  render() {\n    let {\n      startingStore: {\n        listOfUsers,\n        followArtist,\n        listofArtistInfo\n      }\n    } = this.props;\n    let listOfArtists = listOfUsers.filter(artist => {\n      if (artist.accessType === 'Artist') {\n        return artist;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maincon con artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center',\n        padding: '20px 20px 50px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"All Artists\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col3img colartists clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, listOfArtists.map(image => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artlink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: image.accImg,\n      onClick: () => {\n        this.props.history.push({\n          pathname: `/Artist/${image.accFname} ${image.accLname}`,\n          state: {\n            artistName: `${image.accFname} ${image.accLname}`,\n            accImg: this.state.artistImg,\n            artistDescription: this.state.accDescription,\n            birthYear: this.state.birthYear,\n            accFollowers: this.state.accFollowers\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"artistinfo clearfix pad10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, image.accFname, \" \", image.accLname), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      className: \"seeworks\",\n      onClick: () => {\n        this.props.history.push({\n          pathname: `/Artist/${image.accFname} ${image.accLname}`,\n          state: {\n            artistName: `${image.accFname} ${image.accLname}`,\n            accImg: this.state.artistImg,\n            artistDescription: this.state.accDescription,\n            birthYear: this.state.birthYear,\n            accFollowers: this.state.accFollowers\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"See Works \\u2192\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      className: \"ifollow\",\n      color: \"transparent\",\n      floating: true,\n      rounded: true,\n      onClick: () => followArtist(listofArtistInfo._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }))))))), /*#__PURE__*/React.createElement(Pagination, {\n      dataSource: listOfArtists,\n      total: listOfArtists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bttop clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BackTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, ' ', /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"Back to Top \", /*#__PURE__*/React.createElement(MDBIcon, {\n      icon: \"caret-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }), ' '), ' '))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default inject('startingStore')(observer(Artists));","map":{"version":3,"sources":["C:/Users/alqui/Desktop/Art Basically AWS/artfrontend/src/pages/Artists/index.js"],"names":["BackTop","Pagination","MDBIcon","MDBBtn","inject","observer","React","Component","Footer","Navbar","Artists","constructor","props","state","img","id","artistImg","artistInfoList","artistData","birthYear","accDescription","accFollowers","artworkInfo","artworkList","artworkName","isMounted","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","componentDidMount","startingStore","getAccounts","executeOnClick","isExpanded","console","log","render","listOfUsers","followArtist","listofArtistInfo","listOfArtists","filter","artist","accessType","textAlign","padding","map","image","accImg","history","push","pathname","accFname","accLname","artistName","artistDescription","_id"],"mappings":"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","sourcesContent":["import {BackTop, Pagination} from 'antd';\r\nimport {MDBIcon, MDBBtn} from 'mdbreact';\r\nimport {inject, observer} from 'mobx-react';\r\nimport React, {Component} from 'react';\r\nimport Footer from '../../components/Footer';\r\nimport Navbar from '../../components/Navbar';\r\n\r\nexport class Artists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img: [],\r\n      id: '',\r\n      artistImg: '',\r\n      artistInfoList: [],\r\n      artistData: [],\r\n      birthYear: '',\r\n      accDescription: '',\r\n      accFollowers: '',\r\n      artworkInfo: [],\r\n      artworkList: [],\r\n      artworkName: '',\r\n      isMounted: false,\r\n    };\r\n  }\r\n  arrayBufferToBase64(buffer) {\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let {\r\n      startingStore: {getAccounts},\r\n    } = this.props;\r\n    getAccounts();\r\n  }\r\n\r\n  executeOnClick(isExpanded) {\r\n    console.log(isExpanded);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      startingStore: {listOfUsers, followArtist, listofArtistInfo},\r\n    } = this.props;\r\n    let listOfArtists = listOfUsers.filter((artist) => {\r\n      if (artist.accessType === 'Artist') {\r\n        return artist;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Navbar />\r\n        <div className='maincon con artists'>\r\n          <section className='latest'>\r\n            <h3 style={{textAlign: 'center', padding: '20px 20px 50px 20px'}}>\r\n              All Artists\r\n            </h3>\r\n            <ul className='col3img colartists clearfix'>\r\n              {listOfArtists.map((image) => (\r\n                <li>\r\n                  <a href='#!' className='artlink'>\r\n                    <img\r\n                      alt=''\r\n                      src={image.accImg}\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  </a>\r\n                  <a href='#!' className='artistinfo clearfix pad10'>\r\n                    <p>\r\n                      {image.accFname} {image.accLname}\r\n                    </p>\r\n                    {/* <a href=\"\" className=\"seeworks\"\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: '/Artist',\r\n                          state: {\r\n                            \"artistName\": this.state.artworkInfo[0] !== undefined ? this.state.artworkInfo[0].artistName : \"\",\r\n                            \"accImg\": this.state.artistImg,\r\n                            \"artistDescription\": this.state.accDescription,\r\n                            \"birthYear\": this.state.birthYear,\r\n                            \"accFollowers\": this.state.accFollowers\r\n                          }\r\n                        })\r\n                      }}\r\n                  > See Works &rarr; </a> */}\r\n                    <a\r\n                      href='#!'\r\n                      className='seeworks'\r\n                      onClick={() => {\r\n                        this.props.history.push({\r\n                          pathname: `/Artist/${image.accFname} ${image.accLname}`,\r\n                          state: {\r\n                            artistName: `${image.accFname} ${image.accLname}`,\r\n                            accImg: this.state.artistImg,\r\n                            artistDescription: this.state.accDescription,\r\n                            birthYear: this.state.birthYear,\r\n                            accFollowers: this.state.accFollowers,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      See Works &rarr;\r\n                    </a>\r\n                    <MDBBtn\r\n                      className='ifollow'\r\n                      color='transparent'\r\n                      floating\r\n                      rounded\r\n                      onClick={() => followArtist(listofArtistInfo._id)}\r\n                    >\r\n                      <MDBIcon icon='plus' />\r\n                    </MDBBtn>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n              {/* <li>\r\n                <a href=\"\" className=\"artlink\">\r\n                  <img src={artist} />\r\n                </a>\r\n                <a className=\"artistinfo clearfix pad10\">\r\n                  <p>Jane Doe</p>\r\n                  <MDBNavLink to=\"#!\" className=\"seeworks\"> See Works &rarr; </MDBNavLink>\r\n                  <MDBNavLink to=\"#!\" className=\"ifollow\"></MDBNavLink>\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </section>\r\n\r\n          <Pagination dataSource={listOfArtists} total={listOfArtists} />\r\n\r\n          <div className='bttop clearfix'>\r\n            {/* <MDBNavLink to=\"/Upload\" className=\"btnYellow\">Add Yours</MDBNavLink> */}\r\n            <BackTop>\r\n              {' '}\r\n              <a href='#!'>\r\n                Back to Top <MDBIcon icon='caret-right' />{' '}\r\n              </a>{' '}\r\n            </BackTop>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject('startingStore')(observer(Artists));\r\n"]},"metadata":{},"sourceType":"module"}